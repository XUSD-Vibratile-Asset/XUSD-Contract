{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "AlreadyProposed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NotAllowedAccess",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "newContractClass",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "approval",
						"type": "bool"
					}
				],
				"name": "whitelistedClassContractFeeChange",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "newFromClass",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "approval",
						"type": "bool"
					}
				],
				"name": "whitelistedClassFromFeeChange",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "newToClass",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "approval",
						"type": "bool"
					}
				],
				"name": "whitelistedClassToFeeChange",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "dom",
						"type": "address"
					},
					{
						"internalType": "enum AccessRegistry.AccessType",
						"name": "class",
						"type": "uint8"
					}
				],
				"name": "AccessIsClass",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "AccessRegistryCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "BATCH_SIZE",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "dom",
						"type": "address"
					}
				],
				"name": "GetAccess",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "Address",
								"type": "address"
							},
							{
								"internalType": "enum AccessRegistry.AccessType",
								"name": "Class",
								"type": "uint8"
							},
							{
								"internalType": "address",
								"name": "Domain",
								"type": "address"
							}
						],
						"internalType": "struct AccessRegistry.Accessor",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "i",
						"type": "uint256"
					}
				],
				"name": "GetAccessByIndex",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "Address",
								"type": "address"
							},
							{
								"internalType": "enum AccessRegistry.AccessType",
								"name": "Class",
								"type": "uint8"
							},
							{
								"internalType": "address",
								"name": "Domain",
								"type": "address"
							}
						],
						"internalType": "struct AccessRegistry.Accessor",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "enum AccessRegistry.AccessType",
						"name": "min",
						"type": "uint8"
					},
					{
						"internalType": "address",
						"name": "dom",
						"type": "address"
					}
				],
				"name": "HasAccess",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "MasterMap",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					},
					{
						"internalType": "enum AccessRegistry.AccessType",
						"name": "class",
						"type": "uint8"
					},
					{
						"internalType": "address",
						"name": "dom",
						"type": "address"
					}
				],
				"name": "RegisterAccess",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "dom",
						"type": "address"
					}
				],
				"name": "RemoveAccess",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "addressList",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "basisCaller",
				"outputs": [
					{
						"internalType": "int256",
						"name": "",
						"type": "int256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "basisFrom",
				"outputs": [
					{
						"internalType": "int256",
						"name": "",
						"type": "int256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "basisTo",
				"outputs": [
					{
						"internalType": "int256",
						"name": "",
						"type": "int256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "origin",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "int256",
						"name": "amount",
						"type": "int256"
					}
				],
				"name": "calculateAndSumBasis",
				"outputs": [
					{
						"internalType": "int256",
						"name": "",
						"type": "int256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "noeTrader",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "basisFrom",
						"type": "uint256"
					},
					{
						"internalType": "int256",
						"name": "basisTo",
						"type": "int256"
					},
					{
						"internalType": "int256",
						"name": "basisCaller",
						"type": "int256"
					},
					{
						"internalType": "int256",
						"name": "basissneder",
						"type": "int256"
					},
					{
						"internalType": "int256",
						"name": "amount",
						"type": "int256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "previousBatchIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum ClassRegistry.TradeType",
						"name": "tradem",
						"type": "uint8"
					},
					{
						"internalType": "address",
						"name": "class",
						"type": "address"
					}
				],
				"name": "saveVibes",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "sumBasis",
				"outputs": [
					{
						"internalType": "int256",
						"name": "",
						"type": "int256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "trade",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "This contract is to store the Whitlisted Tax Classes, 3 different types, and the logic to call them and determine the ussers basis points",
			"errors": {
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"title": "ClassRegistry",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/ClassRegistry.sol": "ClassRegistry"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 100
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"contracts/AccessRegistry.sol": {
			"keccak256": "0xfe743b78e18db3ddb43f42da4f76b4741ff330c2f8f94f2dea7d4ee09e111fd7",
			"license": "Sharia",
			"urls": [
				"bzz-raw://67d9bf12767ec742201f0ed94834039fb0ebf87e49acd82db8916b5c4d49cf28",
				"dweb:/ipfs/Qmai4QZqZTwc3wT1nC3d1owGer8wXEWhddxVwySxT5obAM"
			]
		},
		"contracts/Address.sol": {
			"keccak256": "0x63743094396d249833b433fb315f8ab49475bf2cd1f3888e97c9cb313ca403d8",
			"license": "MIT",
			"urls": [
				"bzz-raw://c105a0df1aef5e7a1a2c58f6bb499a74b3e1b770df51daeaaa95f17ca76fcf2b",
				"dweb:/ipfs/QmeJcH1gWBkFdafsXxLoVfjgusXAUBoBWBHEbcU1q3xLh2"
			]
		},
		"contracts/ClassRegistry.sol": {
			"keccak256": "0x3f3916fce5d0f690cf429a7b4bdc8984af239284c258bc795025336b73869819",
			"license": "Sharia",
			"urls": [
				"bzz-raw://2a984c1a5b4d2a3ed05399929a67fdfee2a0b1dbb6bd97dba224b397ff2b2334",
				"dweb:/ipfs/QmQjXr74scgoUqW5uY5qpSj8ACseSdBuigABQoMrwpdjva"
			]
		},
		"contracts/Classes/IClassBase.sol": {
			"keccak256": "0x20bb2f74b01f2a77bc153d2aa3239db4681cf9ae1d78b97eb25844e7b4776c83",
			"license": "MIT",
			"urls": [
				"bzz-raw://ac41f44562ac2e2be7ca8ad4a51535e39ade902243f1f7e46340f1c3941500ab",
				"dweb:/ipfs/QmXt1mSJZPV4V7Eztif8Ytek4GFAcfS8puFTH5TKgdRxoo"
			]
		},
		"contracts/Classes/ITaxCalculator.sol": {
			"keccak256": "0xebff49a797874bab7523651f5744e0982d24fda46f3d713cb9448d644a67d641",
			"license": "MIT",
			"urls": [
				"bzz-raw://484daf0b775891a54498b2c416793e7625566637366219ed4e7329fd0e8a51c4",
				"dweb:/ipfs/QmXMLJvDYQqrw5P98aDrsw7qzQ6NMNGNr7Gbv2jVerYwS4"
			]
		},
		"contracts/Classes/ITaxCalculatorContract.sol": {
			"keccak256": "0x223f4a790bb645780de846d894617ac7aacf9600ff9f2c855510d2006e27c888",
			"license": "MIT",
			"urls": [
				"bzz-raw://16b1334b48a0854a7c9c29647d47095baaea33945379b03cda8357accf4213de",
				"dweb:/ipfs/QmWYEyuSmaKVYvUHUCicH83PFRWfvVEPS19RBcBTYp499c"
			]
		},
		"contracts/TUSDRegistry.sol": {
			"keccak256": "0x167aa29f9a22bc6dcdc6afd645578f5401f33c4d93b26bdb67c0a666212d3270",
			"license": "Sharia",
			"urls": [
				"bzz-raw://af992e44c484d88bcd99c7d445b1df0ad573a21e882da749c27fc53c9a9a5b2d",
				"dweb:/ipfs/QmYvhaYtoaQ2DucSuh2agQJtEdQEniBzPP9ctKL6wfbmur"
			]
		},
		"contracts/atropamath.sol": {
			"keccak256": "0x40c04fc6e6870caa6d91fefd2d7f5f1f9fe1d3d60d585e3afd1cc8d892e28291",
			"license": "Sharia",
			"urls": [
				"bzz-raw://3569ae5182334276c9cea393ccc32adc0a51db01e7cf9d20ca1273b7e9d790de",
				"dweb:/ipfs/QmX8NMKWmbYW71qAn1dc2WVqGYDc8rgBTefrBqv84xvX4Y"
			]
		},
		"contracts/registry.sol": {
			"keccak256": "0x2de243fc397b804f42152434e979ab88e432744d228ada062511445c5f18d173",
			"license": "Sharia",
			"urls": [
				"bzz-raw://e791dcd3795c5b9d75f987e9381823be6b580a7aa8223f51709a7791ba420ca6",
				"dweb:/ipfs/QmQ78wzcrtorMPUEjTRxPEFjx8uMPEQveNr7RfbzbvxfHr"
			]
		},
		"hardhat/console.sol": {
			"keccak256": "0x7434453e6d3b7d0e5d0eb7846ffdbc27f0ccf3b163591263739b628074dc103a",
			"license": "MIT",
			"urls": [
				"bzz-raw://49355f780520494d1d5a0f01858385e51bb5280ce0ecfb960f16995065dca395",
				"dweb:/ipfs/QmSwJ6C5QLz6xKeQZS8wbwjU1KxRFTYfwbGmtzisd5sRW4"
			]
		}
	},
	"version": 1
}