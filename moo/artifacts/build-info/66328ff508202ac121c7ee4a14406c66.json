{
	"id": "66328ff508202ac121c7ee4a14406c66",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/registry.sol": {
				"content": "// SPDX-License-Identifier: Sharia\npragma solidity ^0.8.21;\nimport \"./HashMathStorage.sol\";\n\nlibrary LibRegistry {\n    struct Registry {\n        uint256[] keys;\n        mapping(uint256 => uint256) indexOf;\n        mapping(uint256 => bool) inserted;\n    }\n\n    function GetHashByIndex(Registry storage _registry, uint256 index) public view returns(uint256) {\n        return _registry.keys[index];\n    }\n\n    function Count(Registry  storage _registry) public view returns(uint256) {\n        return _registry.keys.length;\n    }\n\n    function Contains(Registry storage _registry, uint256 key) public view returns(bool) {\n        return _registry.inserted[key];\n    }\n\n    function Register(Registry storage _registry, uint256 key) public {\n        if(!_registry.inserted[key])\n        {\n            _registry.inserted[key] = true;\n            _registry.indexOf[key] = _registry.keys.length;\n            _registry.keys.push(key);\n        }\n    }\n\n    function Remove(Registry storage _registry, uint256 key) public {\n        if(!_registry.inserted[key]) return;\n        delete _registry.inserted[key];\n        uint256 index = _registry.indexOf[key];\n        uint256 lastKey = _registry.keys[_registry.keys.length - 1];\n        _registry.indexOf[lastKey] = index;\n        delete _registry.indexOf[key];\n        _registry.keys[index] = lastKey;\n        _registry.keys.pop();\n    }\n}"
			},
			"contracts/HashMathStorage.sol": {
				"content": "// // SPDX-License-Identifier: Sharia\n// pragma solidity ^0.8.21;\n// import \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n// import \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\n// import \"@openzeppelin/contracts/access/Ownable.sol\";\n// import \"addresses.sol\";\n\n// interface RNG {\n//     function Random() external returns(uint64);\n// }\n\n// contract HashMathStorage is ERC20, ERC20Burnable, Ownable {\n//     uint64 constant public MotzkinPrime = 953467954114363;\n\n//     RNG private RandomNumberGeneratorToken;\n\n//     ERC20 private DaiToken;\n//     ERC20 private USDCToken;\n//     ERC20 private USDTToken;\n//     ERC20 private G5Token;\n//     ERC20 private PIToken;\n\n//     constructor() ERC20(/*name short=*/ unicode\"libAtropaMath v1.2\", /*symbol long=*/ unicode\"MATH\") Ownable(msg.sender) {\n//         DaiToken = ERC20(dai);\n//         USDCToken = ERC20(usdc);\n//         USDTToken = ERC20(usdt);\n//         G5Token = ERC20(G5Contract);\n//         PIToken = ERC20(PIContract);\n\n//         //RandomNumberGeneratorToken = RNG(0xa96BcbeD7F01de6CEEd14fC86d90F21a36dE2143);\n//         RandomNumberGeneratorToken = RNG(0x659b4cE17Ea8eb6138c2fdd8508b5F0fd7b11bc2);\n\n//         _mint(address(this), 1 * 10 ** decimals());\n//     }\n\n//     function Random() public returns(uint64) {\n//         if(totalSupply() <= (1111111111 * 10 ** decimals()))\n//             _mint(address(this), 1 * 10 ** decimals());\n//         return RandomNumberGeneratorToken.Random();\n//     }\n\n//     function hashWith(bytes32 a, address b) public pure returns (bytes32) {        \n//         return keccak256(abi.encodePacked(a, b));\n//         //return modExp(uint256(uint160(a)), uint256(uint160(b)), MotzkinPrime);\n//     }\n\n\n//     function classHas(bytes32 a, address b) public pure returns (bytes32) {        \n//         return keccak256(abi.encodePacked(a, b));\n//         //return modExp(uint256(uint160(a)), uint256(uint160(b)), MotzkinPrime);\n//     }\n\n//     function modExp64(uint64 _b, uint64 _e, uint64 _m) public returns(uint64 result) {\n//         uint256 B = _b;\n//         uint256 E = _e;\n//         uint256 M = _m;\n//         uint64 R = uint64(modExp(B, E, M) % 18446744073709551615);\n//         return R;\n//     }\n\n//     function modExp(uint256 _b, uint256 _e, uint256 _m) public returns (uint256 result) {\n//         assembly {\n//             // Free memory pointer\n//             let pointer := mload(0x40)\n\n//             // Define length of base, exponent and modulus. 0x20 == 32 bytes\n//             mstore(pointer, 0x20)\n//             mstore(add(pointer, 0x20), 0x20)\n//             mstore(add(pointer, 0x40), 0x20)\n\n//             // Define variables base, exponent and modulus\n//             mstore(add(pointer, 0x60), _b)\n//             mstore(add(pointer, 0x80), _e)\n//             mstore(add(pointer, 0xa0), _m)\n\n//             // Store the result\n//             let value := mload(0xc0)\n\n//             // Call the precompiled contract 0x05 = bigModExp\n//             if iszero(call(not(0), 0x05, 0, pointer, 0xc0, value, 0x20)) {\n//                 revert(0, 0)\n//             }\n\n//             result := mload(value)\n//         }\n//     }\n// }"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 100
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/registry.sol": {
				"LibRegistry": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/registry.sol\":93:1376  library LibRegistry {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/registry.sol\":93:1376  library LibRegistry {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x253472ca\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8b584f4d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x9047f6de\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x9ba54d2d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xcfe6aa63\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/registry.sol\":531:663  function Contains(Registry storage _registry, uint256 key) public view returns(bool) {... */\n    tag_2:\n      tag_7\n      tag_8\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      mload(0x40)\n        /* \"#utility.yul\":511:525   */\n      swap1\n      iszero\n        /* \"#utility.yul\":504:526   */\n      iszero\n        /* \"#utility.yul\":486:527   */\n      dup2\n      mstore\n        /* \"#utility.yul\":474:476   */\n      0x20\n        /* \"#utility.yul\":459:477   */\n      add\n        /* \"contracts/registry.sol\":531:663  function Contains(Registry storage _registry, uint256 key) public view returns(bool) {... */\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/registry.sol\":669:941  function Register(Registry storage _registry, uint256 key) public {... */\n    tag_3:\n      dup2\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      tag_14\n      tag_15\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_15:\n      tag_16\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/registry.sol\":947:1374  function Remove(Registry storage _registry, uint256 key) public {... */\n    tag_4:\n      dup2\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_14\n      tag_19\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_19:\n      tag_20\n      jump\t// in\n        /* \"contracts/registry.sol\":407:525  function Count(Registry  storage _registry) public view returns(uint256) {... */\n    tag_5:\n      tag_21\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n        /* \"contracts/registry.sol\":497:518  _registry.keys.length */\n      sload\n      swap1\n        /* \"contracts/registry.sol\":407:525  function Count(Registry  storage _registry) public view returns(uint256) {... */\n      jump\n    tag_21:\n      mload(0x40)\n        /* \"#utility.yul\":948:973   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":936:938   */\n      0x20\n        /* \"#utility.yul\":921:939   */\n      add\n        /* \"contracts/registry.sol\":407:525  function Count(Registry  storage _registry) public view returns(uint256) {... */\n      tag_11\n        /* \"#utility.yul\":794:979   */\n      jump\n        /* \"contracts/registry.sol\":260:401  function GetHashByIndex(Registry storage _registry, uint256 index) public view returns(uint256) {... */\n    tag_6:\n      tag_21\n      tag_28\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_28:\n      tag_29\n      jump\t// in\n        /* \"contracts/registry.sol\":531:663  function Contains(Registry storage _registry, uint256 key) public view returns(bool) {... */\n    tag_10:\n        /* \"contracts/registry.sol\":610:614  bool */\n      0x00\n        /* \"contracts/registry.sol\":633:656  _registry.inserted[key] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/registry.sol\":633:651  _registry.inserted */\n      0x02\n      dup4\n      add\n        /* \"contracts/registry.sol\":633:656  _registry.inserted[key] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/registry.sol\":531:663  function Contains(Registry storage _registry, uint256 key) public view returns(bool) {... */\n    tag_31:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/registry.sol\":669:941  function Register(Registry storage _registry, uint256 key) public {... */\n    tag_16:\n        /* \"contracts/registry.sol\":749:772  _registry.inserted[key] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/registry.sol\":749:767  _registry.inserted */\n      0x02\n      dup4\n      add\n        /* \"contracts/registry.sol\":749:772  _registry.inserted[key] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/registry.sol\":745:935  if(!_registry.inserted[key])... */\n      tag_33\n      jumpi\n        /* \"contracts/registry.sol\":796:819  _registry.inserted[key] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/registry.sol\":796:814  _registry.inserted */\n      0x02\n      dup4\n      add\n        /* \"contracts/registry.sol\":796:819  _registry.inserted[key] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/registry.sol\":796:826  _registry.inserted[key] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/registry.sol\":822:826  true */\n      0x01\n        /* \"contracts/registry.sol\":796:826  _registry.inserted[key] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/registry.sol\":865:886  _registry.keys.length */\n      dup6\n      sload\n        /* \"contracts/registry.sol\":840:857  _registry.indexOf */\n      dup7\n      dup3\n      add\n        /* \"contracts/registry.sol\":840:862  _registry.indexOf[key] */\n      dup5\n      mstore\n      swap2\n      dup5\n      keccak256\n        /* \"contracts/registry.sol\":840:886  _registry.indexOf[key] = _registry.keys.length */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/registry.sol\":900:924  _registry.keys.push(key) */\n      dup2\n      add\n      dup6\n      sstore\n      dup5\n      dup4\n      mstore\n      swap2\n      keccak256\n      add\n      dup2\n      swap1\n      sstore\n        /* \"contracts/registry.sol\":745:935  if(!_registry.inserted[key])... */\n    tag_33:\n        /* \"contracts/registry.sol\":669:941  function Register(Registry storage _registry, uint256 key) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/registry.sol\":947:1374  function Remove(Registry storage _registry, uint256 key) public {... */\n    tag_20:\n        /* \"contracts/registry.sol\":1025:1048  _registry.inserted[key] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/registry.sol\":1025:1043  _registry.inserted */\n      0x02\n      dup4\n      add\n        /* \"contracts/registry.sol\":1025:1048  _registry.inserted[key] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/registry.sol\":1021:1057  if(!_registry.inserted[key]) return; */\n      tag_36\n      jumpi\n        /* \"contracts/registry.sol\":947:1374  function Remove(Registry storage _registry, uint256 key) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/registry.sol\":1021:1057  if(!_registry.inserted[key]) return; */\n    tag_36:\n        /* \"contracts/registry.sol\":1073:1096  _registry.inserted[key] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/registry.sol\":1073:1091  _registry.inserted */\n      0x02\n      dup4\n      add\n        /* \"contracts/registry.sol\":1073:1096  _registry.inserted[key] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/registry.sol\":1066:1096  delete _registry.inserted[key] */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n      0x01\n        /* \"contracts/registry.sol\":1122:1139  _registry.indexOf */\n      dup1\n      dup7\n      add\n        /* \"contracts/registry.sol\":1122:1144  _registry.indexOf[key] */\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n      sload\n        /* \"contracts/registry.sol\":1187:1208  _registry.keys.length */\n      dup5\n      sload\n        /* \"contracts/registry.sol\":1122:1144  _registry.indexOf[key] */\n      swap1\n      swap3\n        /* \"contracts/registry.sol\":1073:1096  _registry.inserted[key] */\n      swap2\n        /* \"contracts/registry.sol\":1073:1082  _registry */\n      dup6\n      swap2\n        /* \"contracts/registry.sol\":1187:1212  _registry.keys.length - 1 */\n      tag_37\n      swap2\n        /* \"contracts/registry.sol\":1066:1096  delete _registry.inserted[key] */\n      swap1\n        /* \"contracts/registry.sol\":1187:1212  _registry.keys.length - 1 */\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"contracts/registry.sol\":1172:1213  _registry.keys[_registry.keys.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_40\n      jumpi\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/registry.sol\":1223:1249  _registry.indexOf[lastKey] */\n      dup1\n      dup4\n      mstore\n        /* \"contracts/registry.sol\":1223:1240  _registry.indexOf */\n      0x01\n      dup8\n      add\n        /* \"contracts/registry.sol\":1223:1249  _registry.indexOf[lastKey] */\n      swap1\n      swap2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/registry.sol\":1223:1257  _registry.indexOf[lastKey] = index */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/registry.sol\":1274:1296  _registry.indexOf[key] */\n      dup6\n      dup4\n      mstore\n      dup3\n      keccak256\n        /* \"contracts/registry.sol\":1267:1296  delete _registry.indexOf[key] */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/registry.sol\":1306:1327  _registry.keys[index] */\n      dup5\n      sload\n        /* \"contracts/registry.sol\":1172:1213  _registry.keys[_registry.keys.length - 1] */\n      swap1\n      swap2\n      pop\n      dup2\n      swap1\n        /* \"contracts/registry.sol\":1223:1232  _registry */\n      dup6\n      swap1\n        /* \"contracts/registry.sol\":1252:1257  index */\n      dup5\n      swap1\n        /* \"contracts/registry.sol\":1306:1327  _registry.keys[index] */\n      dup2\n      lt\n      tag_44\n      jumpi\n      tag_44\n      tag_41\n      jump\t// in\n    tag_44:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n        /* \"contracts/registry.sol\":1306:1337  _registry.keys[index] = lastKey */\n      sstore\n        /* \"contracts/registry.sol\":1347:1367  _registry.keys.pop() */\n      dup4\n      sload\n        /* \"contracts/registry.sol\":1347:1356  _registry */\n      dup5\n      swap1\n        /* \"contracts/registry.sol\":1347:1367  _registry.keys.pop() */\n      dup1\n      tag_47\n      jumpi\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"contracts/registry.sol\":1011:1374  {... */\n      pop\n      pop\n        /* \"contracts/registry.sol\":947:1374  function Remove(Registry storage _registry, uint256 key) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/registry.sol\":260:401  function GetHashByIndex(Registry storage _registry, uint256 index) public view returns(uint256) {... */\n    tag_29:\n        /* \"contracts/registry.sol\":347:354  uint256 */\n      0x00\n        /* \"contracts/registry.sol\":373:382  _registry */\n      dup3\n        /* \"contracts/registry.sol\":373:387  _registry.keys */\n      0x00\n      add\n        /* \"contracts/registry.sol\":388:393  index */\n      dup3\n        /* \"contracts/registry.sol\":373:394  _registry.keys[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_53\n      jumpi\n      tag_53\n      tag_41\n      jump\t// in\n    tag_53:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/registry.sol\":366:394  return _registry.keys[index] */\n      swap1\n      pop\n        /* \"contracts/registry.sol\":260:401  function GetHashByIndex(Registry storage _registry, uint256 index) public view returns(uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:333   */\n    tag_9:\n        /* \"#utility.yul\":107:113   */\n      0x00\n        /* \"#utility.yul\":115:121   */\n      dup1\n        /* \"#utility.yul\":168:170   */\n      0x40\n        /* \"#utility.yul\":156:165   */\n      dup4\n        /* \"#utility.yul\":147:154   */\n      dup6\n        /* \"#utility.yul\":143:166   */\n      sub\n        /* \"#utility.yul\":139:171   */\n      slt\n        /* \"#utility.yul\":136:188   */\n      iszero\n      tag_57\n      jumpi\n        /* \"#utility.yul\":184:185   */\n      0x00\n        /* \"#utility.yul\":181:182   */\n      dup1\n        /* \"#utility.yul\":174:186   */\n      revert\n        /* \"#utility.yul\":136:188   */\n    tag_57:\n      pop\n      pop\n        /* \"#utility.yul\":229:252   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":323:325   */\n      0x20\n        /* \"#utility.yul\":308:326   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":295:327   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":14:333   */\n      jump\t// out\n        /* \"#utility.yul\":538:789   */\n    tag_23:\n        /* \"#utility.yul\":622:628   */\n      0x00\n        /* \"#utility.yul\":675:677   */\n      0x20\n        /* \"#utility.yul\":663:672   */\n      dup3\n        /* \"#utility.yul\":654:661   */\n      dup5\n        /* \"#utility.yul\":650:673   */\n      sub\n        /* \"#utility.yul\":646:678   */\n      slt\n        /* \"#utility.yul\":643:695   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":691:692   */\n      0x00\n        /* \"#utility.yul\":688:689   */\n      dup1\n        /* \"#utility.yul\":681:693   */\n      revert\n        /* \"#utility.yul\":643:695   */\n    tag_60:\n      pop\n        /* \"#utility.yul\":736:759   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":538:789   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":984:1209   */\n    tag_38:\n        /* \"#utility.yul\":1051:1060   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":1072:1083   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":1069:1203   */\n      iszero\n      tag_31\n      jumpi\n        /* \"#utility.yul\":1125:1135   */\n      0x4e487b71\n        /* \"#utility.yul\":1120:1123   */\n      0xe0\n        /* \"#utility.yul\":1116:1136   */\n      shl\n        /* \"#utility.yul\":1113:1114   */\n      0x00\n        /* \"#utility.yul\":1106:1137   */\n      mstore\n        /* \"#utility.yul\":1160:1164   */\n      0x11\n        /* \"#utility.yul\":1157:1158   */\n      0x04\n        /* \"#utility.yul\":1150:1165   */\n      mstore\n        /* \"#utility.yul\":1188:1192   */\n      0x24\n        /* \"#utility.yul\":1185:1186   */\n      0x00\n        /* \"#utility.yul\":1178:1193   */\n      revert\n        /* \"#utility.yul\":1214:1341   */\n    tag_41:\n        /* \"#utility.yul\":1275:1285   */\n      0x4e487b71\n        /* \"#utility.yul\":1270:1273   */\n      0xe0\n        /* \"#utility.yul\":1266:1286   */\n      shl\n        /* \"#utility.yul\":1263:1264   */\n      0x00\n        /* \"#utility.yul\":1256:1287   */\n      mstore\n        /* \"#utility.yul\":1306:1310   */\n      0x32\n        /* \"#utility.yul\":1303:1304   */\n      0x04\n        /* \"#utility.yul\":1296:1311   */\n      mstore\n        /* \"#utility.yul\":1330:1334   */\n      0x24\n        /* \"#utility.yul\":1327:1328   */\n      0x00\n        /* \"#utility.yul\":1320:1335   */\n      revert\n        /* \"#utility.yul\":1346:1473   */\n    tag_48:\n        /* \"#utility.yul\":1407:1417   */\n      0x4e487b71\n        /* \"#utility.yul\":1402:1405   */\n      0xe0\n        /* \"#utility.yul\":1398:1418   */\n      shl\n        /* \"#utility.yul\":1395:1396   */\n      0x00\n        /* \"#utility.yul\":1388:1419   */\n      mstore\n        /* \"#utility.yul\":1438:1442   */\n      0x31\n        /* \"#utility.yul\":1435:1436   */\n      0x04\n        /* \"#utility.yul\":1428:1443   */\n      mstore\n        /* \"#utility.yul\":1462:1466   */\n      0x24\n        /* \"#utility.yul\":1459:1460   */\n      0x00\n        /* \"#utility.yul\":1452:1467   */\n      revert\n\n    auxdata: 0xa2646970667358221220f95473ab43212068f35d2a1f41ac63177782a2b6df1183d7c068d0da019cd27664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "610320610034600b8282823980515f1a607314602857634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610610060575f3560e01c8063253472ca146100645780638b584f4d1461008c5780639047f6de146100ad5780639ba54d2d146100cc578063cfe6aa63146100ec575b5f80fd5b61007761007236600461026c565b6100ff565b60405190151581526020015b60405180910390f35b818015610097575f80fd5b506100ab6100a636600461026c565b610119565b005b8180156100b8575f80fd5b506100ab6100c736600461026c565b61016f565b6100de6100da36600461028c565b5490565b604051908152602001610083565b6100de6100fa36600461026c565b610246565b5f81815260028301602052604090205460ff165b92915050565b5f81815260028301602052604090205460ff1661016b575f8181526002830160209081526040808320805460ff1916600190811790915585548682018452918420829055810185558483529120018190555b5050565b5f81815260028301602052604090205460ff1661018a575050565b5f8181526002830160209081526040808320805460ff191690556001808601909252822054845490929185916101c091906102a3565b815481106101d0576101d06102c2565b5f91825260208083209091015480835260018701909152604080832085905585835282209190915584549091508190859084908110610211576102116102c2565b5f91825260209091200155835484908061022d5761022d6102d6565b600190038181905f5260205f20015f9055905550505050565b5f825f01828154811061025b5761025b6102c2565b905f5260205f200154905092915050565b5f806040838503121561027d575f80fd5b50508035926020909101359150565b5f6020828403121561029c575f80fd5b5035919050565b8181038181111561011357634e487b7160e01b5f52601160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52603160045260245ffdfea2646970667358221220f95473ab43212068f35d2a1f41ac63177782a2b6df1183d7c068d0da019cd27664736f6c634300081a0033",
							"opcodes": "PUSH2 0x320 PUSH2 0x34 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x28 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x253472CA EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x8B584F4D EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x9047F6DE EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x9BA54D2D EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0xCFE6AA63 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x77 PUSH2 0x72 CALLDATASIZE PUSH1 0x4 PUSH2 0x26C JUMP JUMPDEST PUSH2 0xFF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x97 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x26C JUMP JUMPDEST PUSH2 0x119 JUMP JUMPDEST STOP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0x26C JUMP JUMPDEST PUSH2 0x16F JUMP JUMPDEST PUSH2 0xDE PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x28C JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x83 JUMP JUMPDEST PUSH2 0xDE PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x26C JUMP JUMPDEST PUSH2 0x246 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x16B JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP6 SLOAD DUP7 DUP3 ADD DUP5 MSTORE SWAP2 DUP5 KECCAK256 DUP3 SWAP1 SSTORE DUP2 ADD DUP6 SSTORE DUP5 DUP4 MSTORE SWAP2 KECCAK256 ADD DUP2 SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x18A JUMPI POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 DUP1 DUP7 ADD SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD DUP5 SLOAD SWAP1 SWAP3 SWAP2 DUP6 SWAP2 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x2A3 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1D0 JUMPI PUSH2 0x1D0 PUSH2 0x2C2 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP1 DUP4 MSTORE PUSH1 0x1 DUP8 ADD SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE DUP6 DUP4 MSTORE DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP5 SLOAD SWAP1 SWAP2 POP DUP2 SWAP1 DUP6 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x211 JUMPI PUSH2 0x211 PUSH2 0x2C2 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE DUP4 SLOAD DUP5 SWAP1 DUP1 PUSH2 0x22D JUMPI PUSH2 0x22D PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x25B JUMPI PUSH2 0x25B PUSH2 0x2C2 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x113 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 SLOAD PUSH20 0xAB43212068F35D2A1F41AC63177782A2B6DF1183 0xD7 0xC0 PUSH9 0xD0DA019CD27664736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "93:1283:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;93:1283:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Contains_60": {
									"entryPoint": 255,
									"id": 60,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@Count_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@GetHashByIndex_31": {
									"entryPoint": 582,
									"id": 31,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@Register_102": {
									"entryPoint": 281,
									"id": 102,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@Remove_171": {
									"entryPoint": 367,
									"id": 171,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_struct$_Registry_$15_storage_ptr": {
									"entryPoint": 652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_Registry_$15_storage_ptrt_uint256": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x31": {
									"entryPoint": 726,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 706,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1475:2",
										"nodeType": "YulBlock",
										"src": "0:1475:2",
										"statements": [
											{
												"nativeSrc": "6:3:2",
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "126:207:2",
													"nodeType": "YulBlock",
													"src": "126:207:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "172:16:2",
																"nodeType": "YulBlock",
																"src": "172:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:2",
																					"nodeType": "YulLiteral",
																					"src": "181:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "184:1:2",
																					"nodeType": "YulLiteral",
																					"src": "184:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "174:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "174:6:2"
																			},
																			"nativeSrc": "174:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "174:12:2"
																		},
																		"nativeSrc": "174:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "174:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "147:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "147:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "156:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "156:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "143:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "143:3:2"
																		},
																		"nativeSrc": "143:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "143:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "168:2:2",
																		"nodeType": "YulLiteral",
																		"src": "168:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "139:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "139:3:2"
																},
																"nativeSrc": "139:32:2",
																"nodeType": "YulFunctionCall",
																"src": "139:32:2"
															},
															"nativeSrc": "136:52:2",
															"nodeType": "YulIf",
															"src": "136:52:2"
														},
														{
															"nativeSrc": "197:14:2",
															"nodeType": "YulVariableDeclaration",
															"src": "197:14:2",
															"value": {
																"kind": "number",
																"nativeSrc": "210:1:2",
																"nodeType": "YulLiteral",
																"src": "210:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "201:5:2",
																	"nodeType": "YulTypedName",
																	"src": "201:5:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "220:32:2",
															"nodeType": "YulAssignment",
															"src": "220:32:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "242:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "242:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "229:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "229:12:2"
																},
																"nativeSrc": "229:23:2",
																"nodeType": "YulFunctionCall",
																"src": "229:23:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "220:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "220:5:2"
																}
															]
														},
														{
															"nativeSrc": "261:15:2",
															"nodeType": "YulAssignment",
															"src": "261:15:2",
															"value": {
																"name": "value",
																"nativeSrc": "271:5:2",
																"nodeType": "YulIdentifier",
																"src": "271:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "261:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "261:6:2"
																}
															]
														},
														{
															"nativeSrc": "285:42:2",
															"nodeType": "YulAssignment",
															"src": "285:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "312:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "312:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "323:2:2",
																				"nodeType": "YulLiteral",
																				"src": "323:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "308:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "308:3:2"
																		},
																		"nativeSrc": "308:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "308:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "295:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "295:12:2"
																},
																"nativeSrc": "295:32:2",
																"nodeType": "YulFunctionCall",
																"src": "295:32:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "285:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "285:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_Registry_$15_storage_ptrt_uint256",
												"nativeSrc": "14:319:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:2",
														"nodeType": "YulTypedName",
														"src": "84:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "95:7:2",
														"nodeType": "YulTypedName",
														"src": "95:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "107:6:2",
														"nodeType": "YulTypedName",
														"src": "107:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "115:6:2",
														"nodeType": "YulTypedName",
														"src": "115:6:2",
														"type": ""
													}
												],
												"src": "14:319:2"
											},
											{
												"body": {
													"nativeSrc": "441:92:2",
													"nodeType": "YulBlock",
													"src": "441:92:2",
													"statements": [
														{
															"nativeSrc": "451:26:2",
															"nodeType": "YulAssignment",
															"src": "451:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "463:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "463:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "474:2:2",
																		"nodeType": "YulLiteral",
																		"src": "474:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "459:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "459:3:2"
																},
																"nativeSrc": "459:18:2",
																"nodeType": "YulFunctionCall",
																"src": "459:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "451:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "451:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "493:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "493:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "518:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "518:6:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "511:6:2",
																					"nodeType": "YulIdentifier",
																					"src": "511:6:2"
																				},
																				"nativeSrc": "511:14:2",
																				"nodeType": "YulFunctionCall",
																				"src": "511:14:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "504:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "504:6:2"
																		},
																		"nativeSrc": "504:22:2",
																		"nodeType": "YulFunctionCall",
																		"src": "504:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "486:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "486:6:2"
																},
																"nativeSrc": "486:41:2",
																"nodeType": "YulFunctionCall",
																"src": "486:41:2"
															},
															"nativeSrc": "486:41:2",
															"nodeType": "YulExpressionStatement",
															"src": "486:41:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed",
												"nativeSrc": "338:195:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "410:9:2",
														"nodeType": "YulTypedName",
														"src": "410:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "421:6:2",
														"nodeType": "YulTypedName",
														"src": "421:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "432:4:2",
														"nodeType": "YulTypedName",
														"src": "432:4:2",
														"type": ""
													}
												],
												"src": "338:195:2"
											},
											{
												"body": {
													"nativeSrc": "633:156:2",
													"nodeType": "YulBlock",
													"src": "633:156:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "679:16:2",
																"nodeType": "YulBlock",
																"src": "679:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "688:1:2",
																					"nodeType": "YulLiteral",
																					"src": "688:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "691:1:2",
																					"nodeType": "YulLiteral",
																					"src": "691:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "681:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "681:6:2"
																			},
																			"nativeSrc": "681:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "681:12:2"
																		},
																		"nativeSrc": "681:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "681:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "654:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "654:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "663:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "663:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "650:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "650:3:2"
																		},
																		"nativeSrc": "650:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "650:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "675:2:2",
																		"nodeType": "YulLiteral",
																		"src": "675:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "646:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "646:3:2"
																},
																"nativeSrc": "646:32:2",
																"nodeType": "YulFunctionCall",
																"src": "646:32:2"
															},
															"nativeSrc": "643:52:2",
															"nodeType": "YulIf",
															"src": "643:52:2"
														},
														{
															"nativeSrc": "704:14:2",
															"nodeType": "YulVariableDeclaration",
															"src": "704:14:2",
															"value": {
																"kind": "number",
																"nativeSrc": "717:1:2",
																"nodeType": "YulLiteral",
																"src": "717:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "708:5:2",
																	"nodeType": "YulTypedName",
																	"src": "708:5:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "727:32:2",
															"nodeType": "YulAssignment",
															"src": "727:32:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "749:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "749:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "736:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "736:12:2"
																},
																"nativeSrc": "736:23:2",
																"nodeType": "YulFunctionCall",
																"src": "736:23:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "727:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "727:5:2"
																}
															]
														},
														{
															"nativeSrc": "768:15:2",
															"nodeType": "YulAssignment",
															"src": "768:15:2",
															"value": {
																"name": "value",
																"nativeSrc": "778:5:2",
																"nodeType": "YulIdentifier",
																"src": "778:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "768:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "768:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_Registry_$15_storage_ptr",
												"nativeSrc": "538:251:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "599:9:2",
														"nodeType": "YulTypedName",
														"src": "599:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "610:7:2",
														"nodeType": "YulTypedName",
														"src": "610:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "622:6:2",
														"nodeType": "YulTypedName",
														"src": "622:6:2",
														"type": ""
													}
												],
												"src": "538:251:2"
											},
											{
												"body": {
													"nativeSrc": "903:76:2",
													"nodeType": "YulBlock",
													"src": "903:76:2",
													"statements": [
														{
															"nativeSrc": "913:26:2",
															"nodeType": "YulAssignment",
															"src": "913:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "925:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "925:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "936:2:2",
																		"nodeType": "YulLiteral",
																		"src": "936:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "921:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "921:3:2"
																},
																"nativeSrc": "921:18:2",
																"nodeType": "YulFunctionCall",
																"src": "921:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "913:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "913:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "955:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "955:9:2"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "966:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "966:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "948:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "948:6:2"
																},
																"nativeSrc": "948:25:2",
																"nodeType": "YulFunctionCall",
																"src": "948:25:2"
															},
															"nativeSrc": "948:25:2",
															"nodeType": "YulExpressionStatement",
															"src": "948:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed",
												"nativeSrc": "794:185:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "872:9:2",
														"nodeType": "YulTypedName",
														"src": "872:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "883:6:2",
														"nodeType": "YulTypedName",
														"src": "883:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "894:4:2",
														"nodeType": "YulTypedName",
														"src": "894:4:2",
														"type": ""
													}
												],
												"src": "794:185:2"
											},
											{
												"body": {
													"nativeSrc": "1033:176:2",
													"nodeType": "YulBlock",
													"src": "1033:176:2",
													"statements": [
														{
															"nativeSrc": "1043:17:2",
															"nodeType": "YulAssignment",
															"src": "1043:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1055:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "1055:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1058:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "1058:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1051:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1051:3:2"
																},
																"nativeSrc": "1051:9:2",
																"nodeType": "YulFunctionCall",
																"src": "1051:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "1043:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1043:4:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1092:111:2",
																"nodeType": "YulBlock",
																"src": "1092:111:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1113:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1113:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1120:3:2",
																							"nodeType": "YulLiteral",
																							"src": "1120:3:2",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1125:10:2",
																							"nodeType": "YulLiteral",
																							"src": "1125:10:2",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1116:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "1116:3:2"
																					},
																					"nativeSrc": "1116:20:2",
																					"nodeType": "YulFunctionCall",
																					"src": "1116:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1106:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1106:6:2"
																			},
																			"nativeSrc": "1106:31:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1106:31:2"
																		},
																		"nativeSrc": "1106:31:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1106:31:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1157:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1157:1:2",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1160:4:2",
																					"nodeType": "YulLiteral",
																					"src": "1160:4:2",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1150:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1150:6:2"
																			},
																			"nativeSrc": "1150:15:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1150:15:2"
																		},
																		"nativeSrc": "1150:15:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1150:15:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1185:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1185:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1188:4:2",
																					"nodeType": "YulLiteral",
																					"src": "1188:4:2",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1178:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1178:6:2"
																			},
																			"nativeSrc": "1178:15:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1178:15:2"
																		},
																		"nativeSrc": "1178:15:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1178:15:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "1075:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "1075:4:2"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "1081:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "1081:1:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1072:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "1072:2:2"
																},
																"nativeSrc": "1072:11:2",
																"nodeType": "YulFunctionCall",
																"src": "1072:11:2"
															},
															"nativeSrc": "1069:134:2",
															"nodeType": "YulIf",
															"src": "1069:134:2"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "984:225:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1015:1:2",
														"nodeType": "YulTypedName",
														"src": "1015:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1018:1:2",
														"nodeType": "YulTypedName",
														"src": "1018:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "1024:4:2",
														"nodeType": "YulTypedName",
														"src": "1024:4:2",
														"type": ""
													}
												],
												"src": "984:225:2"
											},
											{
												"body": {
													"nativeSrc": "1246:95:2",
													"nodeType": "YulBlock",
													"src": "1246:95:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1263:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1263:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1270:3:2",
																				"nodeType": "YulLiteral",
																				"src": "1270:3:2",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1275:10:2",
																				"nodeType": "YulLiteral",
																				"src": "1275:10:2",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1266:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1266:3:2"
																		},
																		"nativeSrc": "1266:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1266:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:2"
																},
																"nativeSrc": "1256:31:2",
																"nodeType": "YulFunctionCall",
																"src": "1256:31:2"
															},
															"nativeSrc": "1256:31:2",
															"nodeType": "YulExpressionStatement",
															"src": "1256:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1303:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1303:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1306:4:2",
																		"nodeType": "YulLiteral",
																		"src": "1306:4:2",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1296:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1296:6:2"
																},
																"nativeSrc": "1296:15:2",
																"nodeType": "YulFunctionCall",
																"src": "1296:15:2"
															},
															"nativeSrc": "1296:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "1296:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1327:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1327:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1330:4:2",
																		"nodeType": "YulLiteral",
																		"src": "1330:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1320:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1320:6:2"
																},
																"nativeSrc": "1320:15:2",
																"nodeType": "YulFunctionCall",
																"src": "1320:15:2"
															},
															"nativeSrc": "1320:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "1320:15:2"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "1214:127:2",
												"nodeType": "YulFunctionDefinition",
												"src": "1214:127:2"
											},
											{
												"body": {
													"nativeSrc": "1378:95:2",
													"nodeType": "YulBlock",
													"src": "1378:95:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1395:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1395:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1402:3:2",
																				"nodeType": "YulLiteral",
																				"src": "1402:3:2",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1407:10:2",
																				"nodeType": "YulLiteral",
																				"src": "1407:10:2",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1398:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1398:3:2"
																		},
																		"nativeSrc": "1398:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1398:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1388:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1388:6:2"
																},
																"nativeSrc": "1388:31:2",
																"nodeType": "YulFunctionCall",
																"src": "1388:31:2"
															},
															"nativeSrc": "1388:31:2",
															"nodeType": "YulExpressionStatement",
															"src": "1388:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1435:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1435:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1438:4:2",
																		"nodeType": "YulLiteral",
																		"src": "1438:4:2",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1428:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1428:6:2"
																},
																"nativeSrc": "1428:15:2",
																"nodeType": "YulFunctionCall",
																"src": "1428:15:2"
															},
															"nativeSrc": "1428:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "1428:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1459:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1459:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1462:4:2",
																		"nodeType": "YulLiteral",
																		"src": "1462:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1452:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1452:6:2"
																},
																"nativeSrc": "1452:15:2",
																"nodeType": "YulFunctionCall",
																"src": "1452:15:2"
															},
															"nativeSrc": "1452:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "1452:15:2"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "1346:127:2",
												"nodeType": "YulFunctionDefinition",
												"src": "1346:127:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_struct$_Registry_$15_storage_ptrt_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_struct$_Registry_$15_storage_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "7300000000000000000000000000000000000000003014608060405260043610610060575f3560e01c8063253472ca146100645780638b584f4d1461008c5780639047f6de146100ad5780639ba54d2d146100cc578063cfe6aa63146100ec575b5f80fd5b61007761007236600461026c565b6100ff565b60405190151581526020015b60405180910390f35b818015610097575f80fd5b506100ab6100a636600461026c565b610119565b005b8180156100b8575f80fd5b506100ab6100c736600461026c565b61016f565b6100de6100da36600461028c565b5490565b604051908152602001610083565b6100de6100fa36600461026c565b610246565b5f81815260028301602052604090205460ff165b92915050565b5f81815260028301602052604090205460ff1661016b575f8181526002830160209081526040808320805460ff1916600190811790915585548682018452918420829055810185558483529120018190555b5050565b5f81815260028301602052604090205460ff1661018a575050565b5f8181526002830160209081526040808320805460ff191690556001808601909252822054845490929185916101c091906102a3565b815481106101d0576101d06102c2565b5f91825260208083209091015480835260018701909152604080832085905585835282209190915584549091508190859084908110610211576102116102c2565b5f91825260209091200155835484908061022d5761022d6102d6565b600190038181905f5260205f20015f9055905550505050565b5f825f01828154811061025b5761025b6102c2565b905f5260205f200154905092915050565b5f806040838503121561027d575f80fd5b50508035926020909101359150565b5f6020828403121561029c575f80fd5b5035919050565b8181038181111561011357634e487b7160e01b5f52601160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52603160045260245ffdfea2646970667358221220f95473ab43212068f35d2a1f41ac63177782a2b6df1183d7c068d0da019cd27664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x253472CA EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x8B584F4D EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x9047F6DE EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x9BA54D2D EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0xCFE6AA63 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x77 PUSH2 0x72 CALLDATASIZE PUSH1 0x4 PUSH2 0x26C JUMP JUMPDEST PUSH2 0xFF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x97 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x26C JUMP JUMPDEST PUSH2 0x119 JUMP JUMPDEST STOP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0x26C JUMP JUMPDEST PUSH2 0x16F JUMP JUMPDEST PUSH2 0xDE PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x28C JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x83 JUMP JUMPDEST PUSH2 0xDE PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x26C JUMP JUMPDEST PUSH2 0x246 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x16B JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP6 SLOAD DUP7 DUP3 ADD DUP5 MSTORE SWAP2 DUP5 KECCAK256 DUP3 SWAP1 SSTORE DUP2 ADD DUP6 SSTORE DUP5 DUP4 MSTORE SWAP2 KECCAK256 ADD DUP2 SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x18A JUMPI POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 DUP1 DUP7 ADD SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD DUP5 SLOAD SWAP1 SWAP3 SWAP2 DUP6 SWAP2 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x2A3 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1D0 JUMPI PUSH2 0x1D0 PUSH2 0x2C2 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP1 DUP4 MSTORE PUSH1 0x1 DUP8 ADD SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE DUP6 DUP4 MSTORE DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP5 SLOAD SWAP1 SWAP2 POP DUP2 SWAP1 DUP6 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x211 JUMPI PUSH2 0x211 PUSH2 0x2C2 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE DUP4 SLOAD DUP5 SWAP1 DUP1 PUSH2 0x22D JUMPI PUSH2 0x22D PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x25B JUMPI PUSH2 0x25B PUSH2 0x2C2 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x113 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 SLOAD PUSH20 0xAB43212068F35D2A1F41AC63177782A2B6DF1183 0xD7 0xC0 PUSH9 0xD0DA019CD27664736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "93:1283:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;531:132;;;;;;:::i;:::-;;:::i;:::-;;;511:14:2;;504:22;486:41;;474:2;459:18;531:132:1;;;;;;;;669:272;;;;;;;;;;-1:-1:-1;669:272:1;;;;;:::i;:::-;;:::i;:::-;;947:427;;;;;;;;;;-1:-1:-1;947:427:1;;;;;:::i;:::-;;:::i;407:118::-;;;;;;:::i;:::-;497:21;;407:118;;;;948:25:2;;;936:2;921:18;407:118:1;794:185:2;260:141:1;;;;;;:::i;:::-;;:::i;531:132::-;610:4;633:23;;;:18;;;:23;;;;;;;;531:132;;;;;:::o;669:272::-;749:23;;;;:18;;;:23;;;;;;;;745:190;;796:23;;;;:18;;;:23;;;;;;;;:30;;-1:-1:-1;;796:30:1;822:4;796:30;;;;;;865:21;;840:17;;;:22;;;;;:46;;;900:24;;;;;;;;;;;;;745:190;669:272;;:::o;947:427::-;1025:23;;;;:18;;;:23;;;;;;;;1021:36;;947:427;;:::o;1021:36::-;1073:23;;;;:18;;;:23;;;;;;;;1066:30;;-1:-1:-1;;1066:30:1;;;;1122:17;;;:22;;;;;;1187:21;;1122:22;;1073:23;:9;;1187:25;;1066:30;1187:25;:::i;:::-;1172:41;;;;;;;;:::i;:::-;;;;;;;;;;;;;1223:26;;;:17;;;:26;;;;;;;:34;;;1274:22;;;;;1267:29;;;;1306:21;;1172:41;;-1:-1:-1;1172:41:1;;1223:9;;1252:5;;1306:21;;;;;;:::i;:::-;;;;;;;;;;:31;1347:20;;:9;;:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1011:363;;947:427;;:::o;260:141::-;347:7;373:9;:14;;388:5;373:21;;;;;;;;:::i;:::-;;;;;;;;;366:28;;260:141;;;;:::o;14:319:2:-;107:6;115;168:2;156:9;147:7;143:23;139:32;136:52;;;184:1;181;174:12;136:52;-1:-1:-1;;229:23:2;;;323:2;308:18;;;295:32;;-1:-1:-1;14:319:2:o;538:251::-;622:6;675:2;663:9;654:7;650:23;646:32;643:52;;;691:1;688;681:12;643:52;-1:-1:-1;736:23:2;;538:251;-1:-1:-1;538:251:2:o;984:225::-;1051:9;;;1072:11;;;1069:134;;;1125:10;1120:3;1116:20;1113:1;1106:31;1160:4;1157:1;1150:15;1188:4;1185:1;1178:15;1214:127;1275:10;1270:3;1266:20;1263:1;1256:31;1306:4;1303:1;1296:15;1330:4;1327:1;1320:15;1346:127;1407:10;1402:3;1398:20;1395:1;1388:31;1438:4;1435:1;1428:15;1462:4;1459:1;1452:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "160000",
								"executionCost": "232",
								"totalCost": "160232"
							},
							"external": {
								"Contains(LibRegistry.Registry storage,uint256)": "2447",
								"Count(LibRegistry.Registry storage)": "2395",
								"GetHashByIndex(LibRegistry.Registry storage,uint256)": "4652",
								"Register(LibRegistry.Registry storage,uint256)": "95300",
								"Remove(LibRegistry.Registry storage,uint256)": "116276"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 93,
									"end": 1376,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 93,
									"end": 1376,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f95473ab43212068f35d2a1f41ac63177782a2b6df1183d7c068d0da019cd27664736f6c634300081a0033",
									".code": [
										{
											"begin": 93,
											"end": 1376,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "PUSH",
											"source": 1,
											"value": "253472CA"
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "PUSH",
											"source": 1,
											"value": "8B584F4D"
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "PUSH",
											"source": 1,
											"value": "9047F6DE"
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "PUSH",
											"source": 1,
											"value": "9BA54D2D"
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "PUSH",
											"source": 1,
											"value": "CFE6AA63"
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1376,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 531,
											"end": 663,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 531,
											"end": 663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 531,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 531,
											"end": 663,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 531,
											"end": 663,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 531,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 531,
											"end": 663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 531,
											"end": 663,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 531,
											"end": 663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 531,
											"end": 663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 531,
											"end": 663,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 531,
											"end": 663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 663,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 663,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 511,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 511,
											"end": 525,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 504,
											"end": 526,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 486,
											"end": 527,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 486,
											"end": 527,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 474,
											"end": 476,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 459,
											"end": 477,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 531,
											"end": 663,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 531,
											"end": 663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 663,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 663,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 531,
											"end": 663,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 663,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 531,
											"end": 663,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 531,
											"end": 663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 663,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 669,
											"end": 941,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 669,
											"end": 941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 669,
											"end": 941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 669,
											"end": 941,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 669,
											"end": 941,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 669,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 669,
											"end": 941,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 669,
											"end": 941,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 669,
											"end": 941,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 669,
											"end": 941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 669,
											"end": 941,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 669,
											"end": 941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 669,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 669,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 669,
											"end": 941,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 669,
											"end": 941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 669,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 669,
											"end": 941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 669,
											"end": 941,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 669,
											"end": 941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 669,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 669,
											"end": 941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 669,
											"end": 941,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 669,
											"end": 941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 669,
											"end": 941,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 947,
											"end": 1374,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 947,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 947,
											"end": 1374,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 947,
											"end": 1374,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 947,
											"end": 1374,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 947,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 947,
											"end": 1374,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 947,
											"end": 1374,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 947,
											"end": 1374,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 947,
											"end": 1374,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 947,
											"end": 1374,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 947,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 947,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 947,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 947,
											"end": 1374,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 947,
											"end": 1374,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 947,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 947,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 947,
											"end": 1374,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 947,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 947,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 947,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 407,
											"end": 525,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 407,
											"end": 525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 407,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 407,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 407,
											"end": 525,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 407,
											"end": 525,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 407,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 407,
											"end": 525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 407,
											"end": 525,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 407,
											"end": 525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 497,
											"end": 518,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 497,
											"end": 518,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 407,
											"end": 525,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 407,
											"end": 525,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 407,
											"end": 525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 407,
											"end": 525,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 407,
											"end": 525,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 948,
											"end": 973,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 948,
											"end": 973,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 948,
											"end": 973,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 936,
											"end": 938,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 921,
											"end": 939,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 407,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 794,
											"end": 979,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 260,
											"end": 401,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 260,
											"end": 401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 260,
											"end": 401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 260,
											"end": 401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 260,
											"end": 401,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 260,
											"end": 401,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 260,
											"end": 401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 260,
											"end": 401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 260,
											"end": 401,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 260,
											"end": 401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 260,
											"end": 401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 260,
											"end": 401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 531,
											"end": 663,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 531,
											"end": 663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 610,
											"end": 614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 633,
											"end": 656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 633,
											"end": 656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 633,
											"end": 651,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 633,
											"end": 651,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 633,
											"end": 651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 633,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 633,
											"end": 656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 633,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 633,
											"end": 656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 633,
											"end": 656,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 633,
											"end": 656,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 633,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 633,
											"end": 656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 531,
											"end": 663,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 531,
											"end": 663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 663,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 531,
											"end": 663,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 531,
											"end": 663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 531,
											"end": 663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 531,
											"end": 663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 669,
											"end": 941,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 669,
											"end": 941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 772,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 749,
											"end": 772,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 749,
											"end": 772,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 749,
											"end": 772,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 749,
											"end": 767,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 749,
											"end": 767,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 749,
											"end": 767,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 749,
											"end": 772,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 749,
											"end": 772,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 749,
											"end": 772,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 749,
											"end": 772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 749,
											"end": 772,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 749,
											"end": 772,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 749,
											"end": 772,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 749,
											"end": 772,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 745,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 745,
											"end": 935,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 796,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 796,
											"end": 819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 819,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 796,
											"end": 814,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 796,
											"end": 814,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 796,
											"end": 814,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 796,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 796,
											"end": 819,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 796,
											"end": 819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 819,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 796,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 796,
											"end": 819,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 796,
											"end": 819,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 796,
											"end": 819,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 796,
											"end": 826,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 796,
											"end": 826,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 796,
											"end": 826,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 822,
											"end": 826,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 796,
											"end": 826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 796,
											"end": 826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 826,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 796,
											"end": 826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 796,
											"end": 826,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 826,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 865,
											"end": 886,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 865,
											"end": 886,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 840,
											"end": 857,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 840,
											"end": 857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 840,
											"end": 857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 840,
											"end": 862,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 840,
											"end": 862,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 840,
											"end": 862,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 840,
											"end": 862,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 840,
											"end": 862,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 840,
											"end": 886,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 840,
											"end": 886,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 840,
											"end": 886,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 900,
											"end": 924,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 900,
											"end": 924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 900,
											"end": 924,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 900,
											"end": 924,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 900,
											"end": 924,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 900,
											"end": 924,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 900,
											"end": 924,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 900,
											"end": 924,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 900,
											"end": 924,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 900,
											"end": 924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 900,
											"end": 924,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 900,
											"end": 924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 900,
											"end": 924,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 745,
											"end": 935,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 745,
											"end": 935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 669,
											"end": 941,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 669,
											"end": 941,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 669,
											"end": 941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 947,
											"end": 1374,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 947,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1043,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1025,
											"end": 1043,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1048,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1048,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1048,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1025,
											"end": 1048,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1021,
											"end": 1057,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 947,
											"end": 1374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 947,
											"end": 1374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 947,
											"end": 1374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1057,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1021,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1091,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1073,
											"end": 1091,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1122,
											"end": 1139,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1122,
											"end": 1139,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1122,
											"end": 1139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1122,
											"end": 1144,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1122,
											"end": 1144,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1122,
											"end": 1144,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1122,
											"end": 1144,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1122,
											"end": 1144,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1122,
											"end": 1144,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1208,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1208,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1122,
											"end": 1144,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1122,
											"end": 1144,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1187,
											"end": 1212,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1187,
											"end": 1212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1212,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1187,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1172,
											"end": 1213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1240,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1223,
											"end": 1240,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1249,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 1249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1249,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1257,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1257,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1296,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1296,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1296,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1296,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1296,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1267,
											"end": 1296,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1267,
											"end": 1296,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1267,
											"end": 1296,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1267,
											"end": 1296,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1327,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1327,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1232,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1327,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1306,
											"end": 1327,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1306,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1306,
											"end": 1327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1327,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1306,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1306,
											"end": 1327,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1327,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1306,
											"end": 1327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1327,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1327,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1337,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1367,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1367,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1356,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1356,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1367,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1347,
											"end": 1367,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1347,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1347,
											"end": 1367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1367,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1347,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1367,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1347,
											"end": 1367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1367,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1367,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1347,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1367,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1347,
											"end": 1367,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1347,
											"end": 1367,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1367,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1367,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1347,
											"end": 1367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1367,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1367,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1011,
											"end": 1374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1011,
											"end": 1374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 947,
											"end": 1374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 947,
											"end": 1374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 947,
											"end": 1374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 260,
											"end": 401,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 260,
											"end": 401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 347,
											"end": 354,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 373,
											"end": 387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 387,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 393,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 373,
											"end": 394,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 373,
											"end": 394,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 373,
											"end": 394,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 373,
											"end": 394,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 373,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 373,
											"end": 394,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 373,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 373,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 373,
											"end": 394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 373,
											"end": 394,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 373,
											"end": 394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 373,
											"end": 394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 373,
											"end": 394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 394,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 373,
											"end": 394,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 373,
											"end": 394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 394,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 373,
											"end": 394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 373,
											"end": 394,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 366,
											"end": 394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 366,
											"end": 394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 260,
											"end": 401,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 260,
											"end": 401,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 260,
											"end": 401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 260,
											"end": 401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 260,
											"end": 401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 333,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 14,
											"end": 333,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 107,
											"end": 113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 121,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 170,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 156,
											"end": 165,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 147,
											"end": 154,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 143,
											"end": 166,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 139,
											"end": 171,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 136,
											"end": 188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 136,
											"end": 188,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 136,
											"end": 188,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 185,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 182,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 174,
											"end": 186,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 136,
											"end": 188,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 136,
											"end": 188,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 229,
											"end": 252,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 229,
											"end": 252,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 229,
											"end": 252,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 323,
											"end": 325,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 308,
											"end": 326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 308,
											"end": 326,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 308,
											"end": 326,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 295,
											"end": 327,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 295,
											"end": 327,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 538,
											"end": 789,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 538,
											"end": 789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 622,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 677,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 663,
											"end": 672,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 654,
											"end": 661,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 650,
											"end": 673,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 646,
											"end": 678,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 643,
											"end": 695,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 643,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 643,
											"end": 695,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 691,
											"end": 692,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 688,
											"end": 689,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 681,
											"end": 693,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 643,
											"end": 695,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 643,
											"end": 695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 736,
											"end": 759,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 736,
											"end": 759,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 538,
											"end": 789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 538,
											"end": 789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 984,
											"end": 1209,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 984,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1060,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1060,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1060,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1072,
											"end": 1083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1072,
											"end": 1083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1072,
											"end": 1083,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1069,
											"end": 1203,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1069,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1069,
											"end": 1203,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1125,
											"end": 1135,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 1120,
											"end": 1123,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1116,
											"end": 1136,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1106,
											"end": 1137,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1164,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1157,
											"end": 1158,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1150,
											"end": 1165,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1188,
											"end": 1192,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1185,
											"end": 1186,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1178,
											"end": 1193,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1214,
											"end": 1341,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1214,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1285,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 1270,
											"end": 1273,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1266,
											"end": 1286,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1263,
											"end": 1264,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 1287,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1306,
											"end": 1310,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1303,
											"end": 1304,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1296,
											"end": 1311,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1330,
											"end": 1334,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1327,
											"end": 1328,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1320,
											"end": 1335,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1346,
											"end": 1473,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1346,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1417,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 1402,
											"end": 1405,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1398,
											"end": 1418,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1396,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1419,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1438,
											"end": 1442,
											"name": "PUSH",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1435,
											"end": 1436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1428,
											"end": 1443,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1459,
											"end": 1460,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1467,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/HashMathStorage.sol",
								"contracts/registry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Contains(LibRegistry.Registry storage,uint256)": "253472ca",
							"Count(LibRegistry.Registry storage)": "9ba54d2d",
							"GetHashByIndex(LibRegistry.Registry storage,uint256)": "cfe6aa63",
							"Register(LibRegistry.Registry storage,uint256)": "8b584f4d",
							"Remove(LibRegistry.Registry storage,uint256)": "9047f6de"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/registry.sol\":\"LibRegistry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/HashMathStorage.sol\":{\"keccak256\":\"0x5173992c254d065cdd24327d2948a323e250880a8aba9f7e99e11bc8c6fe25e8\",\"license\":\"Sharia\",\"urls\":[\"bzz-raw://100e560415d24c1c6f27c6d200d9247003cef45f37392f0253e6dc6ea98570da\",\"dweb:/ipfs/QmQVxKyAE6dnbD9Qre1hdSUCLVbiJykLUehqqGLTHwWN58\"]},\"contracts/registry.sol\":{\"keccak256\":\"0xb219ec831eba3aa1ab1c9ce08dc2f67acd1d5d1debd6b0a546ea40d4fef3711b\",\"license\":\"Sharia\",\"urls\":[\"bzz-raw://8f0f843281b78a2580a155488bca469f471d47fa5033544a200c92df42d7e007\",\"dweb:/ipfs/QmUdfUCytNxak6W9JoGV5UWB4F8ctsqEoXrq9ZFAsWPMZ3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.26;\"\n--> contracts/HashMathStorage.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.26;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/HashMathStorage.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/HashMathStorage.sol": {
				"ast": {
					"absolutePath": "contracts/HashMathStorage.sol",
					"exportedSymbols": {},
					"id": 1,
					"license": "Sharia",
					"nodeType": "SourceUnit",
					"nodes": [],
					"src": "3175:0:0"
				},
				"id": 0
			},
			"contracts/registry.sol": {
				"ast": {
					"absolutePath": "contracts/registry.sol",
					"exportedSymbols": {
						"LibRegistry": [
							172
						]
					},
					"id": 173,
					"license": "Sharia",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:1"
						},
						{
							"absolutePath": "contracts/HashMathStorage.sol",
							"file": "./HashMathStorage.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 173,
							"sourceUnit": 1,
							"src": "60:31:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LibRegistry",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 172,
							"linearizedBaseContracts": [
								172
							],
							"name": "LibRegistry",
							"nameLocation": "101:11:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "LibRegistry.Registry",
									"id": 15,
									"members": [
										{
											"constant": false,
											"id": 6,
											"mutability": "mutable",
											"name": "keys",
											"nameLocation": "155:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 15,
											"src": "145:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "145:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 5,
												"nodeType": "ArrayTypeName",
												"src": "145:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 10,
											"mutability": "mutable",
											"name": "indexOf",
											"nameLocation": "197:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 15,
											"src": "169:35:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"typeName": {
												"id": 9,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "177:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "169:27:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
													"typeString": "mapping(uint256 => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "188:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 14,
											"mutability": "mutable",
											"name": "inserted",
											"nameLocation": "239:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 15,
											"src": "214:33:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"typeName": {
												"id": 13,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "222:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "214:24:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
													"typeString": "mapping(uint256 => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 12,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "233:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Registry",
									"nameLocation": "126:8:1",
									"nodeType": "StructDefinition",
									"scope": 172,
									"src": "119:135:1",
									"visibility": "public"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "356:45:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 25,
															"name": "_registry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "373:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Registry_$15_storage_ptr",
																"typeString": "struct LibRegistry.Registry storage pointer"
															}
														},
														"id": 26,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "383:4:1",
														"memberName": "keys",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "373:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 28,
													"indexExpression": {
														"id": 27,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "388:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "373:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 24,
												"id": 29,
												"nodeType": "Return",
												"src": "366:28:1"
											}
										]
									},
									"functionSelector": "cfe6aa63",
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "GetHashByIndex",
									"nameLocation": "269:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_registry",
												"nameLocation": "301:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "284:26:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Registry_$15_storage_ptr",
													"typeString": "struct LibRegistry.Registry"
												},
												"typeName": {
													"id": 17,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 16,
														"name": "Registry",
														"nameLocations": [
															"284:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 15,
														"src": "284:8:1"
													},
													"referencedDeclaration": 15,
													"src": "284:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Registry_$15_storage_ptr",
														"typeString": "struct LibRegistry.Registry"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "320:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "312:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "312:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "283:43:1"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "347:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "346:9:1"
									},
									"scope": 172,
									"src": "260:141:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "480:45:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 39,
															"name": "_registry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "497:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Registry_$15_storage_ptr",
																"typeString": "struct LibRegistry.Registry storage pointer"
															}
														},
														"id": 40,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "507:4:1",
														"memberName": "keys",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "497:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "512:6:1",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "497:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 38,
												"id": 42,
												"nodeType": "Return",
												"src": "490:28:1"
											}
										]
									},
									"functionSelector": "9ba54d2d",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Count",
									"nameLocation": "416:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "_registry",
												"nameLocation": "440:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "422:27:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Registry_$15_storage_ptr",
													"typeString": "struct LibRegistry.Registry"
												},
												"typeName": {
													"id": 33,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 32,
														"name": "Registry",
														"nameLocations": [
															"422:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 15,
														"src": "422:8:1"
													},
													"referencedDeclaration": 15,
													"src": "422:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Registry_$15_storage_ptr",
														"typeString": "struct LibRegistry.Registry"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "421:29:1"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "471:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:1"
									},
									"scope": 172,
									"src": "407:118:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "616:47:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 54,
															"name": "_registry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "633:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Registry_$15_storage_ptr",
																"typeString": "struct LibRegistry.Registry storage pointer"
															}
														},
														"id": 55,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "643:8:1",
														"memberName": "inserted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 14,
														"src": "633:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
															"typeString": "mapping(uint256 => bool)"
														}
													},
													"id": 57,
													"indexExpression": {
														"id": 56,
														"name": "key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "652:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "633:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 53,
												"id": 58,
												"nodeType": "Return",
												"src": "626:30:1"
											}
										]
									},
									"functionSelector": "253472ca",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Contains",
									"nameLocation": "540:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "_registry",
												"nameLocation": "566:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "549:26:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Registry_$15_storage_ptr",
													"typeString": "struct LibRegistry.Registry"
												},
												"typeName": {
													"id": 46,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 45,
														"name": "Registry",
														"nameLocations": [
															"549:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 15,
														"src": "549:8:1"
													},
													"referencedDeclaration": 15,
													"src": "549:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Registry_$15_storage_ptr",
														"typeString": "struct LibRegistry.Registry"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "585:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "577:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "577:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "548:41:1"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "610:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 51,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "610:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "609:6:1"
									},
									"scope": 172,
									"src": "531:132:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "735:206:1",
										"statements": [
											{
												"condition": {
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "748:24:1",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"id": 68,
																"name": "_registry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "749:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Registry_$15_storage_ptr",
																	"typeString": "struct LibRegistry.Registry storage pointer"
																}
															},
															"id": 69,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "759:8:1",
															"memberName": "inserted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 14,
															"src": "749:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 71,
														"indexExpression": {
															"id": 70,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 65,
															"src": "768:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "749:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 100,
												"nodeType": "IfStatement",
												"src": "745:190:1",
												"trueBody": {
													"id": 99,
													"nodeType": "Block",
													"src": "782:153:1",
													"statements": [
														{
															"expression": {
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 73,
																			"name": "_registry",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 63,
																			"src": "796:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Registry_$15_storage_ptr",
																				"typeString": "struct LibRegistry.Registry storage pointer"
																			}
																		},
																		"id": 76,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "806:8:1",
																		"memberName": "inserted",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 14,
																		"src": "796:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																			"typeString": "mapping(uint256 => bool)"
																		}
																	},
																	"id": 77,
																	"indexExpression": {
																		"id": 75,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 65,
																		"src": "815:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "796:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 78,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "822:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "796:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 80,
															"nodeType": "ExpressionStatement",
															"src": "796:30:1"
														},
														{
															"expression": {
																"id": 89,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 81,
																			"name": "_registry",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 63,
																			"src": "840:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Registry_$15_storage_ptr",
																				"typeString": "struct LibRegistry.Registry storage pointer"
																			}
																		},
																		"id": 84,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "850:7:1",
																		"memberName": "indexOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 10,
																		"src": "840:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 85,
																	"indexExpression": {
																		"id": 83,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 65,
																		"src": "858:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "840:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 86,
																			"name": "_registry",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 63,
																			"src": "865:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Registry_$15_storage_ptr",
																				"typeString": "struct LibRegistry.Registry storage pointer"
																			}
																		},
																		"id": 87,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "875:4:1",
																		"memberName": "keys",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 6,
																		"src": "865:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 88,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "880:6:1",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "865:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "840:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 90,
															"nodeType": "ExpressionStatement",
															"src": "840:46:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 96,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 65,
																		"src": "920:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 91,
																			"name": "_registry",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 63,
																			"src": "900:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Registry_$15_storage_ptr",
																				"typeString": "struct LibRegistry.Registry storage pointer"
																			}
																		},
																		"id": 94,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "910:4:1",
																		"memberName": "keys",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 6,
																		"src": "900:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 95,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "915:4:1",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "900:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256)"
																	}
																},
																"id": 97,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "900:24:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 98,
															"nodeType": "ExpressionStatement",
															"src": "900:24:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "8b584f4d",
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Register",
									"nameLocation": "678:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "_registry",
												"nameLocation": "704:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "687:26:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Registry_$15_storage_ptr",
													"typeString": "struct LibRegistry.Registry"
												},
												"typeName": {
													"id": 62,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 61,
														"name": "Registry",
														"nameLocations": [
															"687:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 15,
														"src": "687:8:1"
													},
													"referencedDeclaration": 15,
													"src": "687:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Registry_$15_storage_ptr",
														"typeString": "struct LibRegistry.Registry"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "723:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "715:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:41:1"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "735:0:1"
									},
									"scope": 172,
									"src": "669:272:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "1011:363:1",
										"statements": [
											{
												"condition": {
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1024:24:1",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"id": 110,
																"name": "_registry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "1025:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Registry_$15_storage_ptr",
																	"typeString": "struct LibRegistry.Registry storage pointer"
																}
															},
															"id": 111,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1035:8:1",
															"memberName": "inserted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 14,
															"src": "1025:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 113,
														"indexExpression": {
															"id": 112,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "1044:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1025:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 116,
												"nodeType": "IfStatement",
												"src": "1021:36:1",
												"trueBody": {
													"functionReturnParameters": 109,
													"id": 115,
													"nodeType": "Return",
													"src": "1050:7:1"
												}
											},
											{
												"expression": {
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1066:30:1",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"id": 117,
																"name": "_registry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "1073:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Registry_$15_storage_ptr",
																	"typeString": "struct LibRegistry.Registry storage pointer"
																}
															},
															"id": 118,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1083:8:1",
															"memberName": "inserted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 14,
															"src": "1073:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 120,
														"indexExpression": {
															"id": 119,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "1092:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1073:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "1066:30:1"
											},
											{
												"assignments": [
													124
												],
												"declarations": [
													{
														"constant": false,
														"id": 124,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "1114:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 170,
														"src": "1106:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 123,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1106:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 129,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 125,
															"name": "_registry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "1122:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Registry_$15_storage_ptr",
																"typeString": "struct LibRegistry.Registry storage pointer"
															}
														},
														"id": 126,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1132:7:1",
														"memberName": "indexOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "1122:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 128,
													"indexExpression": {
														"id": 127,
														"name": "key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "1140:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1122:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1106:38:1"
											},
											{
												"assignments": [
													131
												],
												"declarations": [
													{
														"constant": false,
														"id": 131,
														"mutability": "mutable",
														"name": "lastKey",
														"nameLocation": "1162:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 170,
														"src": "1154:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 130,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1154:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 140,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 132,
															"name": "_registry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "1172:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Registry_$15_storage_ptr",
																"typeString": "struct LibRegistry.Registry storage pointer"
															}
														},
														"id": 133,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1182:4:1",
														"memberName": "keys",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "1172:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 139,
													"indexExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"id": 134,
																	"name": "_registry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "1187:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Registry_$15_storage_ptr",
																		"typeString": "struct LibRegistry.Registry storage pointer"
																	}
																},
																"id": 135,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1197:4:1",
																"memberName": "keys",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 6,
																"src": "1187:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																	"typeString": "uint256[] storage ref"
																}
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1202:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1187:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1211:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1187:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1172:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1154:59:1"
											},
											{
												"expression": {
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 141,
																"name": "_registry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "1223:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Registry_$15_storage_ptr",
																	"typeString": "struct LibRegistry.Registry storage pointer"
																}
															},
															"id": 144,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1233:7:1",
															"memberName": "indexOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 10,
															"src": "1223:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 145,
														"indexExpression": {
															"id": 143,
															"name": "lastKey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "1241:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1223:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 146,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "1252:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1223:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "1223:34:1"
											},
											{
												"expression": {
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1267:29:1",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"id": 149,
																"name": "_registry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "1274:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Registry_$15_storage_ptr",
																	"typeString": "struct LibRegistry.Registry storage pointer"
																}
															},
															"id": 150,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1284:7:1",
															"memberName": "indexOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 10,
															"src": "1274:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 152,
														"indexExpression": {
															"id": 151,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "1292:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1274:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "1267:29:1"
											},
											{
												"expression": {
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 155,
																"name": "_registry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "1306:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Registry_$15_storage_ptr",
																	"typeString": "struct LibRegistry.Registry storage pointer"
																}
															},
															"id": 158,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1316:4:1",
															"memberName": "keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 6,
															"src": "1306:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 159,
														"indexExpression": {
															"id": 157,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "1321:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1306:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 160,
														"name": "lastKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "1330:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1306:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "1306:31:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"expression": {
																"id": 163,
																"name": "_registry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "1347:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Registry_$15_storage_ptr",
																	"typeString": "struct LibRegistry.Registry storage pointer"
																}
															},
															"id": 166,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1357:4:1",
															"memberName": "keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 6,
															"src": "1347:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1362:3:1",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "1347:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer)"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1347:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "1347:20:1"
											}
										]
									},
									"functionSelector": "9047f6de",
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Remove",
									"nameLocation": "956:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "_registry",
												"nameLocation": "980:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "963:26:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Registry_$15_storage_ptr",
													"typeString": "struct LibRegistry.Registry"
												},
												"typeName": {
													"id": 104,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 103,
														"name": "Registry",
														"nameLocations": [
															"963:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 15,
														"src": "963:8:1"
													},
													"referencedDeclaration": 15,
													"src": "963:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Registry_$15_storage_ptr",
														"typeString": "struct LibRegistry.Registry"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "999:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "991:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "962:41:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1011:0:1"
									},
									"scope": 172,
									"src": "947:427:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 173,
							"src": "93:1283:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "35:1341:1"
				},
				"id": 1
			}
		}
	}
}