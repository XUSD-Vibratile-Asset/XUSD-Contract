{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "AlreadyProposed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ArrayLengthMismatch",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "FeeAboveMaxLimit",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NotAllowedAccess",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "feeId",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "classContract",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "bytes4",
						"name": "functionSig",
						"type": "bytes4"
					},
					{
						"indexed": false,
						"internalType": "int256",
						"name": "fee",
						"type": "int256"
					}
				],
				"name": "ClassFeeRegistered",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "int256",
						"name": "fee",
						"type": "int256"
					}
				],
				"name": "TotalFee",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "enum AccessGovernanceLibrary.AccessType",
						"name": "class",
						"type": "uint8"
					}
				],
				"name": "AccessIsClass",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "AccessRegistryCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "dom",
						"type": "address"
					}
				],
				"name": "ClassProposedValid",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ClassRegistryCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "dom",
						"type": "address"
					}
				],
				"name": "ClassValid",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "i",
						"type": "uint256"
					}
				],
				"name": "GetAccessByIndex",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "Address",
								"type": "address"
							},
							{
								"internalType": "enum AccessGovernanceLibrary.AccessType",
								"name": "Class",
								"type": "uint8"
							},
							{
								"internalType": "string[]",
								"name": "Notes",
								"type": "string[]"
							},
							{
								"internalType": "uint256",
								"name": "burnAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "litPass",
								"type": "uint256"
							}
						],
						"internalType": "struct AccessGovernanceLibrary.Accessor",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "i",
						"type": "uint256"
					}
				],
				"name": "GetClassByIndex",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "classAddress",
								"type": "address"
							},
							{
								"internalType": "int256",
								"name": "basisFee",
								"type": "int256"
							}
						],
						"internalType": "struct ClassRegistry.Class",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "i",
						"type": "uint256"
					}
				],
				"name": "GetProspectClassByIndex",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "classAddress",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "votes",
								"type": "uint256"
							}
						],
						"internalType": "struct ClassRegistry.ProposedClass",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "i",
						"type": "uint256"
					}
				],
				"name": "GetUserByIndex",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "userAddress",
								"type": "address"
							},
							{
								"internalType": "bool",
								"name": "active",
								"type": "bool"
							},
							{
								"components": [
									{
										"internalType": "address",
										"name": "classAddress",
										"type": "address"
									},
									{
										"internalType": "int256",
										"name": "basisFee",
										"type": "int256"
									}
								],
								"internalType": "struct UserClassRegistry.Class1",
								"name": "class",
								"type": "tuple"
							}
						],
						"internalType": "struct UserClassRegistry.UserWithClass",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "dom",
						"type": "address"
					}
				],
				"name": "GetUserClass",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "userAddress",
								"type": "address"
							},
							{
								"internalType": "bool",
								"name": "active",
								"type": "bool"
							},
							{
								"components": [
									{
										"internalType": "address",
										"name": "classAddress",
										"type": "address"
									},
									{
										"internalType": "int256",
										"name": "basisFee",
										"type": "int256"
									}
								],
								"internalType": "struct UserClassRegistry.Class1",
								"name": "class",
								"type": "tuple"
							}
						],
						"internalType": "struct UserClassRegistry.UserWithClass",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "dom",
						"type": "address"
					}
				],
				"name": "HasUserClass",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "Lit",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "dom",
						"type": "address"
					}
				],
				"name": "ProposeClass",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ProposedClassRegistryCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "dom",
						"type": "address"
					}
				],
				"name": "RegisterClass",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					},
					{
						"internalType": "enum AccessGovernanceLibrary.AccessType",
						"name": "class",
						"type": "uint8"
					}
				],
				"name": "RegisterGovAccess",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "dom",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "active",
						"type": "bool"
					}
				],
				"name": "RegisterUserClass",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "RemoveAccess",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "UserRegistryCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "dom",
						"type": "address"
					}
				],
				"name": "VoteClass",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_class",
						"type": "address"
					}
				],
				"name": "addClass",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "applyForKing",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "burn",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "dom",
						"type": "address"
					}
				],
				"name": "getBasis",
				"outputs": [
					{
						"internalType": "int256",
						"name": "",
						"type": "int256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "dom",
						"type": "address"
					}
				],
				"name": "getClass",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "classAddress",
								"type": "address"
							},
							{
								"internalType": "int256",
								"name": "basisFee",
								"type": "int256"
							}
						],
						"internalType": "struct ClassRegistry.Class",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "dom",
						"type": "address"
					}
				],
				"name": "getProposed",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "classAddress",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "votes",
								"type": "uint256"
							}
						],
						"internalType": "struct ClassRegistry.ProposedClass",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "getUserClasses",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "minBurnBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "participantAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "caller",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "bytes4",
						"name": "selector",
						"type": "bytes4"
					},
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "processTransaction",
				"outputs": [
					{
						"internalType": "int256",
						"name": "",
						"type": "int256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_lit",
						"type": "address"
					}
				],
				"name": "setLit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "setLitpass",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "setMinBurnBalance",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_userAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_participantAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_soldierAmount",
						"type": "uint256"
					}
				],
				"name": "setRankingAmounts",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_xusd",
						"type": "address"
					}
				],
				"name": "setXusd",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "soldierAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "updateUser",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "updateUserBurns",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "userAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "userIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "userList",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "xusd",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "This contract manages fee structures for different classes and their functions, allowing for user and class registration, as well as fee retrieval and updates.",
			"errors": {
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"ClassRegistryCount()": {
					"returns": {
						"_0": "The total count of registered classes."
					}
				},
				"ClassValid(address)": {
					"params": {
						"dom": "The address of the class."
					},
					"returns": {
						"_0": "True if the class is valid, false otherwise."
					}
				},
				"GetClassByIndex(uint256)": {
					"params": {
						"i": "The index of the class."
					},
					"returns": {
						"_0": "The class details."
					}
				},
				"GetUserByIndex(uint256)": {
					"params": {
						"i": "The index of the user."
					},
					"returns": {
						"_0": "The user's class details."
					}
				},
				"GetUserClass(address,address)": {
					"params": {
						"dom": "The address of the class.",
						"user": "The address of the user."
					},
					"returns": {
						"_0": "The user's class details."
					}
				},
				"HasUserClass(address,address)": {
					"params": {
						"dom": "The address of the class.",
						"user": "The address of the user."
					},
					"returns": {
						"_0": "True if the user has the active class, false otherwise."
					}
				},
				"RegisterClass(address)": {
					"params": {
						"dom": "The address of the class."
					}
				},
				"UserRegistryCount()": {
					"returns": {
						"_0": "The total count of registered users."
					}
				},
				"getClass(address)": {
					"params": {
						"dom": "The address of the class."
					},
					"returns": {
						"_0": "The class details."
					}
				},
				"getUserClasses(address)": {
					"params": {
						"user": "The address of the user."
					},
					"returns": {
						"_0": "An array of class addresses."
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"processTransaction(address,address,address,bytes4,address,uint256)": {
					"params": {
						"caller": "The address of the caller.",
						"from": "The sender address.",
						"selector": "The function selector.",
						"sender": "The sender address.",
						"to": "The recipient address."
					},
					"returns": {
						"_0": "The total basis fee or a default fee if no fee is applicable."
					}
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"title": "TUSDRegistry",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"ClassRegistryCount()": {
					"notice": "Gets the total count of registered classes."
				},
				"ClassValid(address)": {
					"notice": "Checks if a given class is valid."
				},
				"GetClassByIndex(uint256)": {
					"notice": "Gets the details of a class by index."
				},
				"GetUserByIndex(uint256)": {
					"notice": "Gets the details of a user by index."
				},
				"GetUserClass(address,address)": {
					"notice": "Gets the details of a user's class."
				},
				"HasUserClass(address,address)": {
					"notice": "Checks if a user has an active specific class."
				},
				"RegisterClass(address)": {
					"notice": "Registers a class."
				},
				"UserRegistryCount()": {
					"notice": "Gets the total count of registered users."
				},
				"burn()": {
					"notice": "Address used for burning"
				},
				"getClass(address)": {
					"notice": "Retrieves class details for a given address."
				},
				"getUserClasses(address)": {
					"notice": "Gets the classes associated with a user."
				},
				"processTransaction(address,address,address,bytes4,address,uint256)": {
					"notice": "Processes a transaction and calculates the total basis fee."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/TUSDRegistry.sol": "TUSDRegistry"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 100
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
			"keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
			"license": "MIT",
			"urls": [
				"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
				"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
			]
		},
		"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
			"keccak256": "0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f",
			"license": "MIT",
			"urls": [
				"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040",
				"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
			"keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
			"license": "MIT",
			"urls": [
				"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
				"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
			]
		},
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
			"keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
			"license": "MIT",
			"urls": [
				"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
				"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
			"license": "MIT",
			"urls": [
				"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
				"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
			]
		},
		"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
			"keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
			"license": "MIT",
			"urls": [
				"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
				"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"contracts/AccessGovernanceLibrary.sol": {
			"keccak256": "0xed38ae4626010e7f48e33239211cabd57ea5bb459dd651be97c95008a4467f1c",
			"license": "Sharia",
			"urls": [
				"bzz-raw://969f7f345a85c23a2e9b8833026b75cde904d99e2ddd5c04eaf5949e47a17add",
				"dweb:/ipfs/QmUbuZErjxt3JTmBU1iF8weWBaaPgLV1uBHsmBUiBC8s5F"
			]
		},
		"contracts/Address.sol": {
			"keccak256": "0x63743094396d249833b433fb315f8ab49475bf2cd1f3888e97c9cb313ca403d8",
			"license": "MIT",
			"urls": [
				"bzz-raw://c105a0df1aef5e7a1a2c58f6bb499a74b3e1b770df51daeaaa95f17ca76fcf2b",
				"dweb:/ipfs/QmeJcH1gWBkFdafsXxLoVfjgusXAUBoBWBHEbcU1q3xLh2"
			]
		},
		"contracts/ClassRegistry.sol": {
			"keccak256": "0x507b1b6dfd6d36a3aa94b1a1a97b78f0dbcdd790644a4a947c1643b2c71f575e",
			"license": "Sharia",
			"urls": [
				"bzz-raw://b07c08b2dd92bdd5544a87ff9e8a3bbf42c95644f31a53376423cc9de04a3c3d",
				"dweb:/ipfs/QmbP7R8RD9P1Z5k62Rk1gG1z7deMMHE3KiuTotvEJSw7sd"
			]
		},
		"contracts/Classes/IClassBase.sol": {
			"keccak256": "0x284ac05fd57a1290776c1669ffda0392019087332920a7a2c117d08d17d593f5",
			"license": "MIT",
			"urls": [
				"bzz-raw://4d5bf02036ef8f7cc5b9ae796f5f4dc1abe077eae78a76ea28186e876fd32541",
				"dweb:/ipfs/QmPTfQnVy1WQ6wiwAUSkz18HbvarjKRc7gpvA2Gf4Yk2Y6"
			]
		},
		"contracts/GovAccessRegistry.sol": {
			"keccak256": "0x078eb2285fbdc29918069ef4cb8228e9503896bbc1bcb4b0f4367964a873b47c",
			"license": "Sharia",
			"urls": [
				"bzz-raw://7586039cba8b6ee21d274376895bb52f366cbea862d5f633a3a4cbfbc1d29725",
				"dweb:/ipfs/QmUmec8jJnzisJuDncTfKQNiL58axnHi3mn1E1DZQ9Fqfs"
			]
		},
		"contracts/ILitPass.sol": {
			"keccak256": "0x64f975947b794d2834cca6ae7cb8fdc86b84ffabbb63600fa5a0746da45be4f2",
			"license": "MIT",
			"urls": [
				"bzz-raw://34170fca073cf7bdca0dc5e75cf9d5be1e0bb6ccc8091ab1ad023536a92feefe",
				"dweb:/ipfs/QmdqnKZYsP5xq5LD2hxuFcHJkCsJuqTPRb7je7wYqhfxLM"
			]
		},
		"contracts/TUSDRegistry.sol": {
			"keccak256": "0xa2d9c85e506884c0814c033097b53cd32fd6dfee5558ac61f5cebd52292c75cf",
			"license": "Sharia",
			"urls": [
				"bzz-raw://4e2f80f80b967cb590a37805503ff6de88a67a1eaa8cb942a4b671a7be1f7ad4",
				"dweb:/ipfs/QmaYcSRjdghQNWEBuEnsskk13zgTMbwSyWD4ENAHhipG4S"
			]
		},
		"contracts/UserClassRegistry.sol": {
			"keccak256": "0x2440321b8c574839a0aed5a5df6d28a53db6f6f1d231774d6c3cc23c97cb9393",
			"license": "Sharia",
			"urls": [
				"bzz-raw://e82734f9ed53cd8dd986dd84fce33631019ec45108d92d0d715cc718ebfc5bec",
				"dweb:/ipfs/QmUt4e6KQC9AACob1Gi14pK6JLuKRxqKGN4qYGFuDbzcTh"
			]
		},
		"contracts/Vote.sol": {
			"keccak256": "0xabad252928a97d7ffc332b0b7f453dc819e4fb21a10cebd12b23a3498b1b688c",
			"urls": [
				"bzz-raw://88c746a94eb558668e42998f44aa59156b6524109f86cf54446b8cecafb05995",
				"dweb:/ipfs/QmYQpfkv7AL4h6hyZGuMfreFqZQfhsFm99UsPHZTKXiYCm"
			]
		},
		"contracts/atropamath.sol": {
			"keccak256": "0x2f164139048fa255999c4681b15459422328abd78487355ea4486fc80ab264cf",
			"license": "Sharia",
			"urls": [
				"bzz-raw://a9b0eb43ad70d1527ed532fee14b4166869dcb4909124bf5ae8a2bdc6272c44e",
				"dweb:/ipfs/QmUbAmSJGicYX1ucEK4MDA3ASBvr1sc34pSqbuQmNdqB1j"
			]
		},
		"contracts/registry.sol": {
			"keccak256": "0x2de243fc397b804f42152434e979ab88e432744d228ada062511445c5f18d173",
			"license": "Sharia",
			"urls": [
				"bzz-raw://e791dcd3795c5b9d75f987e9381823be6b580a7aa8223f51709a7791ba420ca6",
				"dweb:/ipfs/QmQ78wzcrtorMPUEjTRxPEFjx8uMPEQveNr7RfbzbvxfHr"
			]
		},
		"hardhat/console.sol": {
			"keccak256": "0x7434453e6d3b7d0e5d0eb7846ffdbc27f0ccf3b163591263739b628074dc103a",
			"license": "MIT",
			"urls": [
				"bzz-raw://49355f780520494d1d5a0f01858385e51bb5280ce0ecfb960f16995065dca395",
				"dweb:/ipfs/QmSwJ6C5QLz6xKeQZS8wbwjU1KxRFTYfwbGmtzisd5sRW4"
			]
		}
	},
	"version": 1
}