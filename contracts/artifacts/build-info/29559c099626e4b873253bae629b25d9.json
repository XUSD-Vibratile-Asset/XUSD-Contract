{
	"id": "29559c099626e4b873253bae629b25d9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/AccessRegistry.sol": {
				"content": "// SPDX-License-Identifier: Sharia\npragma solidity ^0.8.21;\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./registry.sol\";\nimport \"./atropamath.sol\";\n\n\nabstract contract AccessRegistry is Ownable {\n    using LibRegistry for LibRegistry.Registry;\n    using AtropaMath for address;\n\n \n\n    enum AccessType {\n        PRESEDENT,\n        CONGRESS,\n        KING,\n        SOLDIER,\n        PARTICIPANT,\n        CONTRACT,\n        USER\n    }\n\n\n    struct Accessor {\n        address Address;\n        AccessType Class;\n        address Domain;\n       \n  \n    }\n   \n    LibRegistry.Registry private Registry;\n    mapping(uint256 => Accessor) internal Accessors;\n\n\n  \n\n\n\n\n\n    function _hasAccess(address user, AccessType min, address dom) private view returns (bool) {    \n        if(user == owner()) return true;    \n        uint256 hash = user.hashWith(dom);\n        if(Registry.Contains(hash)) {\n     \n            if(Accessors[hash].Class <= min && (Accessors[hash].Domain == address(this) || Accessors[hash].Domain == dom)) return true;\n        }\n        return false;\n    }\n\n    function _hasAccess(uint256 hash, AccessType min, address dom) private view returns (bool) {    \n   \n        if(Accessors[hash].Class <= min && (Accessors[hash].Domain == address(this) || Accessors[hash].Domain == dom)) return true;\n        return false;\n    }\n\n    function HasAccess(address user, AccessType min, address dom) public view returns (bool) {                \n        if(user == owner()) return true;\n        assert(_hasAccess(msg.sender, AccessType.CONTRACT, user));\n        uint256 hash = user.hashWith(dom);\n        if(Registry.Contains(hash)) {\n            assert(_hasAccess(msg.sender, Accessors[hash].Class, user));\n            return _hasAccess(hash, min, dom);\n        }\n        return false;\n    }\n\n    function RegisterAccess(address addr, AccessType class, address dom) public {\n        assert(HasAccess(msg.sender, AccessType.CONGRESS, address(this)));\n       \n        uint256 hash = addr.hashWith(dom);\n        if(Registry.Contains(hash)) {\n            assert(HasAccess(msg.sender, Accessors[hash].Class, addr));\n            assert(HasAccess(msg.sender, class, dom));\n        \n               \n        }\n        SetAccess(addr, class, dom);\n    }\n\n    function GetAccess(address user, address dom) public view returns (Accessor memory) {\n        assert(HasAccess(msg.sender, AccessType.CONTRACT, user));\n        uint256 hash = user.hashWith(dom);\n        return Accessors[hash];\n    }\n\n\n    function AccessIsClass(address user, address dom, AccessType class) public view returns(bool) {\n        assert(HasAccess(msg.sender, AccessType.CONTRACT, user));\n        uint256 hash = user.hashWith(dom);\n        return Accessors[hash].Class == class;\n    }\n\n    function AccessRegistryCount() public view returns(uint256) {\n        assert(HasAccess(msg.sender, AccessType.SOLDIER, address(this)));\n        return Registry.Count();\n    }\n\n    function GetAccessByIndex(uint256 i) public view returns(Accessor memory) {\n        uint256 hash = Registry.GetHashByIndex(i);\n        assert(HasAccess(msg.sender, AccessType.SOLDIER, address(this)));\n        return Accessors[hash];\n    }\n\n    function SetAccess(address user, AccessType Class, address dom) internal {\n        uint256 hash = user.hashWith(dom);\n        Registry.Register(hash);\n        Accessors[hash].Address = user;\n        Accessors[hash].Class = Class;\n        Accessors[hash].Domain = dom;\n\n    }\n\n    function RemoveAccess(address user, address dom) public {\n        Accessor memory A = GetAccess(user, dom);\n        assert(HasAccess(msg.sender, AccessType.PRESEDENT, A.Domain));\n        uint256 hash = user.hashWith(dom);\n        Registry.Remove(hash);\n        delete Accessors[hash];\n    }\n}"
			},
			"contracts/atropamath.sol": {
				"content": "// SPDX-License-Identifier: Sharia\npragma solidity ^0.8.26;\n\n\n\ninterface RNG {\n    function Random() external returns(uint64);\n}\n\nlibrary AtropaMath  {\n    uint64 constant public MotzkinPrime = 953467954114363;\n\n   // RNG private RandomNumberGeneratorToken;\n\n    // ERC20 private DaiToken;\n    // ERC20 private USDCToken;\n    // ERC20 private USDTToken;\n    // ERC20 private G5Token;\n    // ERC20 private PIToken;\n\n  //  constructor() {}\n\n    // function Random() public returns(uint64) {\n    //     if(totalSupply() <= (1111111111 * 10 ** decimals()))\n    //         _mint(address(this), 1 * 10 ** decimals());\n    //     return RandomNumberGeneratorToken.Random();\n    // }\n    function hashWithD(address a, address b, address c, address g) public pure returns (uint256 hash) {        \n        hash = 0;\n    \n        uint160 _b = uint160(b) / 15;\n        unchecked {\n            while(hash == 0) {\n                hash = (hashWith(a,b)**hashWith(c,g))%MotzkinPrime;\n                _b = _b/2;\n            }\n        }\n        //return modExp(uint256(uint160(a)), uint256(uint160(b)), MotzkinPrime);\n    }\n    function hashWith(address a, address b) public pure returns (uint256 hash) {        \n        hash = 0;\n        uint160 _a = uint160(a);\n        uint160 _b = uint160(b) / 15;\n        unchecked {\n            while(hash == 0) {\n                hash = (_a**_b)%MotzkinPrime;\n                _b = _b/2;\n            }\n        }\n        //return modExp(uint256(uint160(a)), uint256(uint160(b)), MotzkinPrime);\n    }\n\n\n    function hashWithHash(address a, uint b) public pure returns (uint256 hash) {        \n        hash = 0;\n        uint160 _a = uint160(a);\n        uint160 _b = uint160(b) / 15;\n        unchecked {\n            while(hash == 0) {\n                hash = (_a**_b)%MotzkinPrime;\n                _b = _b/2;\n            }\n        }\n        //return modExp(uint256(uint160(a)), uint256(uint160(b)), MotzkinPrime);\n    }\n\n   \n\n    function modExp64(uint64 _b, uint64 _e, uint64 _m) public returns(uint64 result) {\n        uint256 B = _b;\n        uint256 E = _e;\n        uint256 M = _m;\n        uint64 R = uint64(modExp(B, E, M) % 18446744073709551615);\n        return R;\n    }\n\n    function modExp(uint256 _b, uint256 _e, uint256 _m) public returns (uint256 result) {\n        assembly {\n            // Free memory pointer\n            let pointer := mload(0x40)\n\n            // Define length of base, exponent and modulus. 0x20 == 32 bytes\n            mstore(pointer, 0x20)\n            mstore(add(pointer, 0x20), 0x20)\n            mstore(add(pointer, 0x40), 0x20)\n\n            // Define variables base, exponent and modulus\n            mstore(add(pointer, 0x60), _b)\n            mstore(add(pointer, 0x80), _e)\n            mstore(add(pointer, 0xa0), _m)\n\n            // Store the result\n            let value := mload(0xc0)\n\n            // Call the precompiled contract 0x05 = bigModExp\n            if iszero(call(not(0), 0x05, 0, pointer, 0xc0, value, 0x20)) {\n                revert(0, 0)\n            }\n\n            result := mload(value)\n        }\n    }\n\n\n\n\n\n    function sortThree(uint64 a, uint64 b, uint64 c) public pure returns (uint64, uint64, uint64) {\n        // Check if all three are equal\n        if (a == b && b == c) {\n            return (0, 0, a); // All are equal\n        }\n\n        // Handling pairs of equal values\n        if (a == b) {\n            return (0, a, c > a ? c : a); // a == b\n        }\n        if (a == c) {\n            return (0, a, b > a ? b : a); // a == c\n        }\n        if (b == c) {\n            return (0, b, a > b ? a : b); // b == c\n        }\n\n        // All values are distinct\n        if (a <= b && a <= c) {\n            if (b <= c) {\n                return (a, b, c); // a < b < c\n            } else {\n                return (a, c, b); // a < c < b\n            }\n        } else if (b <= a && b <= c) {\n            if (a <= c) {\n                return (b, a, c); // b < a < c\n            } else {\n                return (b, c, a); // b < c < a\n            }\n        } else {\n            if (a <= b) {\n                return (c, a, b); // c < a < b\n            } else {\n                return (c, b, a); // c < b < a\n            }\n        }\n    }\n\n\n\n\n\n}"
			},
			"contracts/registry.sol": {
				"content": "// SPDX-License-Identifier: Sharia\npragma solidity ^0.8.24;\n\n\nlibrary LibRegistry {\n    struct Registry {\n        uint256[] keys;\n        mapping(uint256 => uint256) indexOf;\n        mapping(uint256 => bool) inserted;\n    }\n\n    function GetHashByIndex(Registry storage _registry, uint256 index) public view returns(uint256) {\n        return _registry.keys[index];\n    }\n\n    function Count(Registry  storage _registry) public view returns(uint256) {\n        return _registry.keys.length;\n    }\n\n    function Contains(Registry storage _registry, uint256 key) public view returns(bool) {\n        return _registry.inserted[key];\n    }\n\n    function Register(Registry storage _registry, uint256 key) public {\n        if(!_registry.inserted[key])\n        {\n            _registry.inserted[key] = true;\n            _registry.indexOf[key] = _registry.keys.length;\n            _registry.keys.push(key);\n        }\n    }\n\n    function Remove(Registry storage _registry, uint256 key) public {\n        if(!_registry.inserted[key]) return;\n        delete _registry.inserted[key];\n        uint256 index = _registry.indexOf[key];\n        uint256 lastKey = _registry.keys[_registry.keys.length - 1];\n        _registry.indexOf[lastKey] = index;\n        delete _registry.indexOf[key];\n        _registry.keys[index] = lastKey;\n        _registry.keys.pop();\n    }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 100
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/AccessRegistry.sol": {
				"AccessRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "dom",
									"type": "address"
								},
								{
									"internalType": "enum AccessRegistry.AccessType",
									"name": "class",
									"type": "uint8"
								}
							],
							"name": "AccessIsClass",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "AccessRegistryCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "dom",
									"type": "address"
								}
							],
							"name": "GetAccess",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "Address",
											"type": "address"
										},
										{
											"internalType": "enum AccessRegistry.AccessType",
											"name": "Class",
											"type": "uint8"
										},
										{
											"internalType": "address",
											"name": "Domain",
											"type": "address"
										}
									],
									"internalType": "struct AccessRegistry.Accessor",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "i",
									"type": "uint256"
								}
							],
							"name": "GetAccessByIndex",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "Address",
											"type": "address"
										},
										{
											"internalType": "enum AccessRegistry.AccessType",
											"name": "Class",
											"type": "uint8"
										},
										{
											"internalType": "address",
											"name": "Domain",
											"type": "address"
										}
									],
									"internalType": "struct AccessRegistry.Accessor",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "enum AccessRegistry.AccessType",
									"name": "min",
									"type": "uint8"
								},
								{
									"internalType": "address",
									"name": "dom",
									"type": "address"
								}
							],
							"name": "HasAccess",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								},
								{
									"internalType": "enum AccessRegistry.AccessType",
									"name": "class",
									"type": "uint8"
								},
								{
									"internalType": "address",
									"name": "dom",
									"type": "address"
								}
							],
							"name": "RegisterAccess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "dom",
									"type": "address"
								}
							],
							"name": "RemoveAccess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"AccessIsClass(address,address,uint8)": "ccf61fc3",
							"AccessRegistryCount()": "0e10d955",
							"GetAccess(address,address)": "2457ed42",
							"GetAccessByIndex(uint256)": "1a2eff27",
							"HasAccess(address,uint8,address)": "f29a1bdd",
							"RegisterAccess(address,uint8,address)": "7981fb07",
							"RemoveAccess(address,address)": "4a78e1e3",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dom\",\"type\":\"address\"},{\"internalType\":\"enum AccessRegistry.AccessType\",\"name\":\"class\",\"type\":\"uint8\"}],\"name\":\"AccessIsClass\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AccessRegistryCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dom\",\"type\":\"address\"}],\"name\":\"GetAccess\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"Address\",\"type\":\"address\"},{\"internalType\":\"enum AccessRegistry.AccessType\",\"name\":\"Class\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"Domain\",\"type\":\"address\"}],\"internalType\":\"struct AccessRegistry.Accessor\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"GetAccessByIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"Address\",\"type\":\"address\"},{\"internalType\":\"enum AccessRegistry.AccessType\",\"name\":\"Class\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"Domain\",\"type\":\"address\"}],\"internalType\":\"struct AccessRegistry.Accessor\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"enum AccessRegistry.AccessType\",\"name\":\"min\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"dom\",\"type\":\"address\"}],\"name\":\"HasAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum AccessRegistry.AccessType\",\"name\":\"class\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"dom\",\"type\":\"address\"}],\"name\":\"RegisterAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dom\",\"type\":\"address\"}],\"name\":\"RemoveAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AccessRegistry.sol\":\"AccessRegistry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/AccessRegistry.sol\":{\"keccak256\":\"0xfe743b78e18db3ddb43f42da4f76b4741ff330c2f8f94f2dea7d4ee09e111fd7\",\"license\":\"Sharia\",\"urls\":[\"bzz-raw://67d9bf12767ec742201f0ed94834039fb0ebf87e49acd82db8916b5c4d49cf28\",\"dweb:/ipfs/Qmai4QZqZTwc3wT1nC3d1owGer8wXEWhddxVwySxT5obAM\"]},\"contracts/atropamath.sol\":{\"keccak256\":\"0x40c04fc6e6870caa6d91fefd2d7f5f1f9fe1d3d60d585e3afd1cc8d892e28291\",\"license\":\"Sharia\",\"urls\":[\"bzz-raw://3569ae5182334276c9cea393ccc32adc0a51db01e7cf9d20ca1273b7e9d790de\",\"dweb:/ipfs/QmX8NMKWmbYW71qAn1dc2WVqGYDc8rgBTefrBqv84xvX4Y\"]},\"contracts/registry.sol\":{\"keccak256\":\"0x2de243fc397b804f42152434e979ab88e432744d228ada062511445c5f18d173\",\"license\":\"Sharia\",\"urls\":[\"bzz-raw://e791dcd3795c5b9d75f987e9381823be6b580a7aa8223f51709a7791ba420ca6\",\"dweb:/ipfs/QmQ78wzcrtorMPUEjTRxPEFjx8uMPEQveNr7RfbzbvxfHr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/AccessRegistry.sol:AccessRegistry",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 210,
								"contract": "contracts/AccessRegistry.sol:AccessRegistry",
								"label": "Registry",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(Registry)1038_storage"
							},
							{
								"astId": 215,
								"contract": "contracts/AccessRegistry.sol:AccessRegistry",
								"label": "Accessors",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_struct(Accessor)207_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_enum(AccessType)199": {
								"encoding": "inplace",
								"label": "enum AccessRegistry.AccessType",
								"numberOfBytes": "1"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_struct(Accessor)207_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct AccessRegistry.Accessor)",
								"numberOfBytes": "32",
								"value": "t_struct(Accessor)207_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Accessor)207_storage": {
								"encoding": "inplace",
								"label": "struct AccessRegistry.Accessor",
								"members": [
									{
										"astId": 201,
										"contract": "contracts/AccessRegistry.sol:AccessRegistry",
										"label": "Address",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 204,
										"contract": "contracts/AccessRegistry.sol:AccessRegistry",
										"label": "Class",
										"offset": 20,
										"slot": "0",
										"type": "t_enum(AccessType)199"
									},
									{
										"astId": 206,
										"contract": "contracts/AccessRegistry.sol:AccessRegistry",
										"label": "Domain",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Registry)1038_storage": {
								"encoding": "inplace",
								"label": "struct LibRegistry.Registry",
								"members": [
									{
										"astId": 1029,
										"contract": "contracts/AccessRegistry.sol:AccessRegistry",
										"label": "keys",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_uint256)dyn_storage"
									},
									{
										"astId": 1033,
										"contract": "contracts/AccessRegistry.sol:AccessRegistry",
										"label": "indexOf",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_uint256,t_uint256)"
									},
									{
										"astId": 1037,
										"contract": "contracts/AccessRegistry.sol:AccessRegistry",
										"label": "inserted",
										"offset": 0,
										"slot": "2",
										"type": "t_mapping(t_uint256,t_bool)"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/atropamath.sol": {
				"AtropaMath": {
					"abi": [
						{
							"inputs": [],
							"name": "MotzkinPrime",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "a",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "b",
									"type": "address"
								}
							],
							"name": "hashWith",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "hash",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "a",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "b",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "c",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "g",
									"type": "address"
								}
							],
							"name": "hashWithD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "hash",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "a",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "b",
									"type": "uint256"
								}
							],
							"name": "hashWithHash",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "hash",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "a",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "b",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "c",
									"type": "uint64"
								}
							],
							"name": "sortThree",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/atropamath.sol\":130:4209  library AtropaMath  {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/atropamath.sol\":130:4209  library AtropaMath  {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3148f14f\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x53df6e35\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6592f007\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x6e27811b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x98fdcdd6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xd3dc2a0f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfa6bcfec\n      eq\n      tag_8\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/atropamath.sol\":2196:3068  function modExp(uint256 _b, uint256 _e, uint256 _m) public returns (uint256 result) {... */\n    tag_2:\n      dup2\n      dup1\n      iszero\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      pop\n      tag_10\n      tag_11\n      calldatasize\n      0x04\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      mload(0x40)\n        /* \"#utility.yul\":639:664   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":627:629   */\n      0x20\n        /* \"#utility.yul\":612:630   */\n      add\n        /* \"contracts/atropamath.sol\":2196:3068  function modExp(uint256 _b, uint256 _e, uint256 _m) public returns (uint256 result) {... */\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/atropamath.sol\":1945:2190  function modExp64(uint64 _b, uint64 _e, uint64 _m) public returns(uint64 result) {... */\n    tag_3:\n      dup2\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1354:1385   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1336:1386   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1324:1326   */\n      0x20\n        /* \"#utility.yul\":1309:1327   */\n      add\n        /* \"contracts/atropamath.sol\":1945:2190  function modExp64(uint64 _b, uint64 _e, uint64 _m) public returns(uint64 result) {... */\n      tag_14\n        /* \"#utility.yul\":1184:1392   */\n      jump\n        /* \"contracts/atropamath.sol\":1525:1934  function hashWithHash(address a, uint b) public pure returns (uint256 hash) {        ... */\n    tag_4:\n      tag_10\n      tag_24\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n        /* \"contracts/atropamath.sol\":680:1105  function hashWithD(address a, address b, address c, address g) public pure returns (uint256 hash) {        ... */\n    tag_5:\n      tag_10\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n        /* \"contracts/atropamath.sol\":3078:4202  function sortThree(uint64 a, uint64 b, uint64 c) public pure returns (uint64, uint64, uint64) {... */\n    tag_6:\n      tag_33\n      tag_34\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_34:\n      tag_35\n      jump\t// in\n    tag_33:\n      0x40\n      dup1\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":2516:2547   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":2498:2548   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2584:2615   */\n      swap3\n      dup5\n      and\n        /* \"#utility.yul\":2579:2581   */\n      0x20\n        /* \"#utility.yul\":2564:2582   */\n      dup5\n      add\n        /* \"#utility.yul\":2557:2616   */\n      mstore\n        /* \"#utility.yul\":2652:2683   */\n      swap3\n      and\n        /* \"#utility.yul\":2632:2650   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":2625:2684   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2486:2488   */\n      0x60\n        /* \"#utility.yul\":2471:2489   */\n      add\n        /* \"contracts/atropamath.sol\":3078:4202  function sortThree(uint64 a, uint64 b, uint64 c) public pure returns (uint64, uint64, uint64) {... */\n      tag_14\n        /* \"#utility.yul\":2294:2690   */\n      jump\n        /* \"contracts/atropamath.sol\":156:209  uint64 constant public MotzkinPrime = 953467954114363 */\n    tag_7:\n      tag_17\n        /* \"contracts/atropamath.sol\":194:209  953467954114363 */\n      0x03632c8eb5af3b\n        /* \"contracts/atropamath.sol\":156:209  uint64 constant public MotzkinPrime = 953467954114363 */\n      dup2\n      jump\n        /* \"contracts/atropamath.sol\":1110:1518  function hashWith(address a, address b) public pure returns (uint256 hash) {        ... */\n    tag_8:\n      tag_10\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n        /* \"contracts/atropamath.sol\":2196:3068  function modExp(uint256 _b, uint256 _e, uint256 _m) public returns (uint256 result) {... */\n    tag_13:\n        /* \"contracts/atropamath.sol\":2264:2278  uint256 result */\n      0x00\n        /* \"contracts/atropamath.sol\":2369:2373  0x40 */\n      0x40\n        /* \"contracts/atropamath.sol\":2363:2374  mload(0x40) */\n      mload\n        /* \"contracts/atropamath.sol\":2481:2485  0x20 */\n      0x20\n        /* \"contracts/atropamath.sol\":2472:2479  pointer */\n      dup2\n        /* \"contracts/atropamath.sol\":2465:2486  mstore(pointer, 0x20) */\n      mstore\n        /* \"contracts/atropamath.sol\":2526:2530  0x20 */\n      0x20\n        /* \"contracts/atropamath.sol\":2519:2523  0x20 */\n      dup1\n        /* \"contracts/atropamath.sol\":2510:2517  pointer */\n      dup3\n        /* \"contracts/atropamath.sol\":2506:2524  add(pointer, 0x20) */\n      add\n        /* \"contracts/atropamath.sol\":2499:2531  mstore(add(pointer, 0x20), 0x20) */\n      mstore\n        /* \"contracts/atropamath.sol\":2571:2575  0x20 */\n      0x20\n        /* \"contracts/atropamath.sol\":2564:2568  0x40 */\n      0x40\n        /* \"contracts/atropamath.sol\":2555:2562  pointer */\n      dup3\n        /* \"contracts/atropamath.sol\":2551:2569  add(pointer, 0x40) */\n      add\n        /* \"contracts/atropamath.sol\":2544:2576  mstore(add(pointer, 0x40), 0x20) */\n      mstore\n        /* \"contracts/atropamath.sol\":2676:2678  _b */\n      dup5\n        /* \"contracts/atropamath.sol\":2669:2673  0x60 */\n      0x60\n        /* \"contracts/atropamath.sol\":2660:2667  pointer */\n      dup3\n        /* \"contracts/atropamath.sol\":2656:2674  add(pointer, 0x60) */\n      add\n        /* \"contracts/atropamath.sol\":2649:2679  mstore(add(pointer, 0x60), _b) */\n      mstore\n        /* \"contracts/atropamath.sol\":2719:2721  _e */\n      dup4\n        /* \"contracts/atropamath.sol\":2712:2716  0x80 */\n      0x80\n        /* \"contracts/atropamath.sol\":2703:2710  pointer */\n      dup3\n        /* \"contracts/atropamath.sol\":2699:2717  add(pointer, 0x80) */\n      add\n        /* \"contracts/atropamath.sol\":2692:2722  mstore(add(pointer, 0x80), _e) */\n      mstore\n        /* \"contracts/atropamath.sol\":2762:2764  _m */\n      dup3\n        /* \"contracts/atropamath.sol\":2755:2759  0xa0 */\n      0xa0\n        /* \"contracts/atropamath.sol\":2746:2753  pointer */\n      dup3\n        /* \"contracts/atropamath.sol\":2742:2760  add(pointer, 0xa0) */\n      add\n        /* \"contracts/atropamath.sol\":2735:2765  mstore(add(pointer, 0xa0), _m) */\n      mstore\n        /* \"contracts/atropamath.sol\":2830:2834  0xc0 */\n      0xc0\n        /* \"contracts/atropamath.sol\":2824:2835  mload(0xc0) */\n      mload\n        /* \"contracts/atropamath.sol\":2965:2969  0x20 */\n      0x20\n        /* \"contracts/atropamath.sol\":2958:2963  value */\n      dup2\n        /* \"contracts/atropamath.sol\":2952:2956  0xc0 */\n      0xc0\n        /* \"contracts/atropamath.sol\":2943:2950  pointer */\n      dup5\n        /* \"contracts/atropamath.sol\":2940:2941  0 */\n      0x00\n        /* \"contracts/atropamath.sol\":2934:2938  0x05 */\n      0x05\n        /* \"contracts/atropamath.sol\":2930:2931  0 */\n      0x00\n        /* \"contracts/atropamath.sol\":2926:2932  not(0) */\n      not\n        /* \"contracts/atropamath.sol\":2921:2970  call(not(0), 0x05, 0, pointer, 0xc0, value, 0x20) */\n      call\n        /* \"contracts/atropamath.sol\":2911:3016  if iszero(call(not(0), 0x05, 0, pointer, 0xc0, value, 0x20)) {... */\n      tag_47\n      jumpi\n        /* \"contracts/atropamath.sol\":3000:3001  0 */\n      0x00\n        /* \"contracts/atropamath.sol\":2997:2998  0 */\n      dup1\n        /* \"contracts/atropamath.sol\":2990:3002  revert(0, 0) */\n      revert\n        /* \"contracts/atropamath.sol\":2911:3016  if iszero(call(not(0), 0x05, 0, pointer, 0xc0, value, 0x20)) {... */\n    tag_47:\n        /* \"contracts/atropamath.sol\":3040:3052  mload(value) */\n      mload\n      swap6\n        /* \"contracts/atropamath.sol\":2196:3068  function modExp(uint256 _b, uint256 _e, uint256 _m) public returns (uint256 result) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/atropamath.sol\":1945:2190  function modExp64(uint64 _b, uint64 _e, uint64 _m) public returns(uint64 result) {... */\n    tag_20:\n        /* \"contracts/atropamath.sol\":2011:2024  uint64 result */\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":2036:2050  uint256 B = _b */\n      dup1\n      dup6\n      and\n      swap1\n        /* \"contracts/atropamath.sol\":2060:2074  uint256 E = _e */\n      dup5\n      dup2\n      and\n      swap1\n        /* \"contracts/atropamath.sol\":2084:2098  uint256 M = _m */\n      dup5\n      dup2\n      and\n      swap1\n        /* \"contracts/atropamath.sol\":2011:2024  uint64 result */\n      dup5\n      swap1\n        /* \"contracts/atropamath.sol\":2126:2141  modExp(B, E, M) */\n      tag_49\n        /* \"contracts/atropamath.sol\":2036:2050  uint256 B = _b */\n      dup6\n        /* \"contracts/atropamath.sol\":2060:2074  uint256 E = _e */\n      dup6\n        /* \"contracts/atropamath.sol\":2084:2098  uint256 M = _m */\n      dup6\n        /* \"contracts/atropamath.sol\":2126:2132  modExp */\n      tag_13\n        /* \"contracts/atropamath.sol\":2126:2141  modExp(B, E, M) */\n      jump\t// in\n    tag_49:\n        /* \"contracts/atropamath.sol\":2126:2164  modExp(B, E, M) % 18446744073709551615 */\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"contracts/atropamath.sol\":2108:2165  uint64 R = uint64(modExp(B, E, M) % 18446744073709551615) */\n      swap9\n        /* \"contracts/atropamath.sol\":1945:2190  function modExp64(uint64 _b, uint64 _e, uint64 _m) public returns(uint64 result) {... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/atropamath.sol\":1525:1934  function hashWithHash(address a, uint b) public pure returns (uint256 hash) {        ... */\n    tag_26:\n        /* \"contracts/atropamath.sol\":1587:1599  uint256 hash */\n      0x00\n        /* \"contracts/atropamath.sol\":1658:1659  a */\n      dup3\n        /* \"contracts/atropamath.sol\":1587:1599  uint256 hash */\n      dup2\n        /* \"contracts/atropamath.sol\":1683:1698  uint160(b) / 15 */\n      tag_53\n        /* \"contracts/atropamath.sol\":1696:1698  15 */\n      0x0f\n        /* \"contracts/atropamath.sol\":1691:1692  b */\n      dup6\n        /* \"contracts/atropamath.sol\":1683:1698  uint160(b) / 15 */\n      tag_54\n      jump\t// in\n    tag_53:\n        /* \"contracts/atropamath.sol\":1670:1698  uint160 _b = uint160(b) / 15 */\n      swap1\n      pop\n        /* \"contracts/atropamath.sol\":1732:1837  while(hash == 0) {... */\n    tag_55:\n        /* \"contracts/atropamath.sol\":1738:1742  hash */\n      dup3\n        /* \"contracts/atropamath.sol\":1746:1747  0 */\n      0x00\n        /* \"contracts/atropamath.sol\":1738:1747  hash == 0 */\n      sub\n        /* \"contracts/atropamath.sol\":1732:1837  while(hash == 0) {... */\n      tag_56\n      jumpi\n        /* \"contracts/atropamath.sol\":194:209  953467954114363 */\n      0x03632c8eb5af3b\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":1775:1781  _a**_b */\n      dup1\n      dup4\n      and\n      dup5\n      dup3\n      and\n      exp\n        /* \"contracts/atropamath.sol\":1774:1795  (_a**_b)%MotzkinPrime */\n      and\n      mod\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":1767:1795  hash = (_a**_b)%MotzkinPrime */\n      and\n      swap3\n      pop\n        /* \"contracts/atropamath.sol\":1821:1822  2 */\n      0x02\n        /* \"contracts/atropamath.sol\":1818:1820  _b */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":1818:1822  _b/2 */\n      and\n      dup2\n      tag_61\n      jumpi\n      tag_61\n      tag_59\n      jump\t// in\n    tag_61:\n      div\n        /* \"contracts/atropamath.sol\":1813:1822  _b = _b/2 */\n      swap1\n      pop\n        /* \"contracts/atropamath.sol\":1732:1837  while(hash == 0) {... */\n      jump(tag_55)\n    tag_56:\n        /* \"contracts/atropamath.sol\":1601:1934  {        ... */\n      pop\n      pop\n        /* \"contracts/atropamath.sol\":1525:1934  function hashWithHash(address a, uint b) public pure returns (uint256 hash) {        ... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/atropamath.sol\":680:1105  function hashWithD(address a, address b, address c, address g) public pure returns (uint256 hash) {        ... */\n    tag_31:\n        /* \"contracts/atropamath.sol\":764:776  uint256 hash */\n      0x00\n      dup1\n        /* \"contracts/atropamath.sol\":832:847  uint160(b) / 15 */\n      tag_63\n        /* \"contracts/atropamath.sol\":845:847  15 */\n      0x0f\n        /* \"contracts/atropamath.sol\":840:841  b */\n      dup7\n        /* \"contracts/atropamath.sol\":832:847  uint160(b) / 15 */\n      tag_54\n      jump\t// in\n    tag_63:\n        /* \"contracts/atropamath.sol\":819:847  uint160 _b = uint160(b) / 15 */\n      swap1\n      pop\n        /* \"contracts/atropamath.sol\":881:1008  while(hash == 0) {... */\n    tag_64:\n        /* \"contracts/atropamath.sol\":887:891  hash */\n      dup2\n        /* \"contracts/atropamath.sol\":895:896  0 */\n      0x00\n        /* \"contracts/atropamath.sol\":887:896  hash == 0 */\n      sub\n        /* \"contracts/atropamath.sol\":881:1008  while(hash == 0) {... */\n      tag_65\n      jumpi\n        /* \"contracts/atropamath.sol\":194:209  953467954114363 */\n      0x03632c8eb5af3b\n        /* \"contracts/atropamath.sol\":939:952  hashWith(c,g) */\n      tag_66\n        /* \"contracts/atropamath.sol\":948:949  c */\n      dup6\n        /* \"contracts/atropamath.sol\":950:951  g */\n      dup6\n        /* \"contracts/atropamath.sol\":939:947  hashWith */\n      tag_44\n        /* \"contracts/atropamath.sol\":939:952  hashWith(c,g) */\n      jump\t// in\n    tag_66:\n        /* \"contracts/atropamath.sol\":924:937  hashWith(a,b) */\n      tag_67\n        /* \"contracts/atropamath.sol\":933:934  a */\n      dup9\n        /* \"contracts/atropamath.sol\":935:936  b */\n      dup9\n        /* \"contracts/atropamath.sol\":924:932  hashWith */\n      tag_44\n        /* \"contracts/atropamath.sol\":924:937  hashWith(a,b) */\n      jump\t// in\n    tag_67:\n        /* \"contracts/atropamath.sol\":924:952  hashWith(a,b)**hashWith(c,g) */\n      exp\n        /* \"contracts/atropamath.sol\":923:966  (hashWith(a,b)**hashWith(c,g))%MotzkinPrime */\n      dup2\n      tag_69\n      jumpi\n      tag_69\n      tag_59\n      jump\t// in\n    tag_69:\n      mod\n      swap2\n      pop\n        /* \"contracts/atropamath.sol\":992:993  2 */\n      0x02\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":989:993  _b/2 */\n      dup3\n      and\n      div\n        /* \"contracts/atropamath.sol\":984:993  _b = _b/2 */\n      swap1\n      pop\n        /* \"contracts/atropamath.sol\":881:1008  while(hash == 0) {... */\n      jump(tag_64)\n    tag_65:\n        /* \"contracts/atropamath.sol\":778:1105  {        ... */\n      pop\n        /* \"contracts/atropamath.sol\":680:1105  function hashWithD(address a, address b, address c, address g) public pure returns (uint256 hash) {        ... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/atropamath.sol\":3078:4202  function sortThree(uint64 a, uint64 b, uint64 c) public pure returns (uint64, uint64, uint64) {... */\n    tag_35:\n        /* \"contracts/atropamath.sol\":3148:3154  uint64 */\n      0x00\n        /* \"contracts/atropamath.sol\":3156:3162  uint64 */\n      dup1\n        /* \"contracts/atropamath.sol\":3164:3170  uint64 */\n      0x00\n        /* \"contracts/atropamath.sol\":3231:3232  b */\n      dup5\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":3226:3232  a == b */\n      and\n        /* \"contracts/atropamath.sol\":3226:3227  a */\n      dup7\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":3226:3232  a == b */\n      and\n      eq\n        /* \"contracts/atropamath.sol\":3226:3242  a == b && b == c */\n      dup1\n      iszero\n      tag_73\n      jumpi\n      pop\n        /* \"contracts/atropamath.sol\":3241:3242  c */\n      dup4\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":3236:3242  b == c */\n      and\n        /* \"contracts/atropamath.sol\":3236:3237  b */\n      dup6\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":3236:3242  b == c */\n      and\n      eq\n        /* \"contracts/atropamath.sol\":3226:3242  a == b && b == c */\n    tag_73:\n        /* \"contracts/atropamath.sol\":3222:3302  if (a == b && b == c) {... */\n      iszero\n      tag_74\n      jumpi\n      pop\n        /* \"contracts/atropamath.sol\":3266:3267  0 */\n      0x00\n      swap2\n      pop\n      dup2\n      swap1\n      pop\n        /* \"contracts/atropamath.sol\":3272:3273  a */\n      dup5\n        /* \"contracts/atropamath.sol\":3258:3274  return (0, 0, a) */\n      jump(tag_95)\n        /* \"contracts/atropamath.sol\":3222:3302  if (a == b && b == c) {... */\n    tag_74:\n        /* \"contracts/atropamath.sol\":3363:3364  b */\n      dup5\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":3358:3364  a == b */\n      and\n        /* \"contracts/atropamath.sol\":3358:3359  a */\n      dup7\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":3358:3364  a == b */\n      and\n      sub\n        /* \"contracts/atropamath.sol\":3354:3429  if (a == b) {... */\n      tag_75\n      jumpi\n        /* \"contracts/atropamath.sol\":3388:3389  0 */\n      0x00\n        /* \"contracts/atropamath.sol\":3391:3392  a */\n      dup7\n        /* \"contracts/atropamath.sol\":3398:3399  a */\n      dup8\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":3394:3399  c > a */\n      and\n        /* \"contracts/atropamath.sol\":3394:3395  c */\n      dup7\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":3394:3399  c > a */\n      and\n      gt\n        /* \"contracts/atropamath.sol\":3394:3407  c > a ? c : a */\n      tag_76\n      jumpi\n        /* \"contracts/atropamath.sol\":3406:3407  a */\n      dup8\n        /* \"contracts/atropamath.sol\":3394:3407  c > a ? c : a */\n      jump(tag_77)\n    tag_76:\n        /* \"contracts/atropamath.sol\":3402:3403  c */\n      dup6\n        /* \"contracts/atropamath.sol\":3394:3407  c > a ? c : a */\n    tag_77:\n        /* \"contracts/atropamath.sol\":3380:3408  return (0, a, c > a ? c : a) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      jump(tag_95)\n        /* \"contracts/atropamath.sol\":3354:3429  if (a == b) {... */\n    tag_75:\n        /* \"contracts/atropamath.sol\":3447:3448  c */\n      dup4\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":3442:3448  a == c */\n      and\n        /* \"contracts/atropamath.sol\":3442:3443  a */\n      dup7\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":3442:3448  a == c */\n      and\n      sub\n        /* \"contracts/atropamath.sol\":3438:3513  if (a == c) {... */\n      tag_78\n      jumpi\n        /* \"contracts/atropamath.sol\":3472:3473  0 */\n      0x00\n        /* \"contracts/atropamath.sol\":3475:3476  a */\n      dup7\n        /* \"contracts/atropamath.sol\":3482:3483  a */\n      dup8\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":3478:3483  b > a */\n      and\n        /* \"contracts/atropamath.sol\":3478:3479  b */\n      dup8\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":3478:3483  b > a */\n      and\n      gt\n        /* \"contracts/atropamath.sol\":3478:3491  b > a ? b : a */\n      tag_79\n      jumpi\n        /* \"contracts/atropamath.sol\":3490:3491  a */\n      dup8\n        /* \"contracts/atropamath.sol\":3478:3491  b > a ? b : a */\n      jump(tag_77)\n    tag_79:\n        /* \"contracts/atropamath.sol\":3486:3487  b */\n      dup7\n        /* \"contracts/atropamath.sol\":3464:3492  return (0, a, b > a ? b : a) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      jump(tag_95)\n        /* \"contracts/atropamath.sol\":3438:3513  if (a == c) {... */\n    tag_78:\n        /* \"contracts/atropamath.sol\":3531:3532  c */\n      dup4\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":3526:3532  b == c */\n      and\n        /* \"contracts/atropamath.sol\":3526:3527  b */\n      dup6\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":3526:3532  b == c */\n      and\n      sub\n        /* \"contracts/atropamath.sol\":3522:3597  if (b == c) {... */\n      tag_81\n      jumpi\n        /* \"contracts/atropamath.sol\":3556:3557  0 */\n      0x00\n        /* \"contracts/atropamath.sol\":3559:3560  b */\n      dup6\n        /* \"contracts/atropamath.sol\":3566:3567  b */\n      dup7\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":3562:3567  a > b */\n      and\n        /* \"contracts/atropamath.sol\":3562:3563  a */\n      dup9\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":3562:3567  a > b */\n      and\n      gt\n        /* \"contracts/atropamath.sol\":3562:3575  a > b ? a : b */\n      tag_82\n      jumpi\n        /* \"contracts/atropamath.sol\":3574:3575  b */\n      dup7\n        /* \"contracts/atropamath.sol\":3562:3575  a > b ? a : b */\n      jump(tag_77)\n    tag_82:\n        /* \"contracts/atropamath.sol\":3570:3571  a */\n      dup8\n        /* \"contracts/atropamath.sol\":3548:3576  return (0, b, a > b ? a : b) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      jump(tag_95)\n        /* \"contracts/atropamath.sol\":3522:3597  if (b == c) {... */\n    tag_81:\n        /* \"contracts/atropamath.sol\":3651:3652  b */\n      dup5\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":3646:3652  a <= b */\n      and\n        /* \"contracts/atropamath.sol\":3646:3647  a */\n      dup7\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":3646:3652  a <= b */\n      and\n      gt\n      iszero\n        /* \"contracts/atropamath.sol\":3646:3662  a <= b && a <= c */\n      dup1\n      iszero\n      tag_84\n      jumpi\n      pop\n        /* \"contracts/atropamath.sol\":3661:3662  c */\n      dup4\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":3656:3662  a <= c */\n      and\n        /* \"contracts/atropamath.sol\":3656:3657  a */\n      dup7\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":3656:3662  a <= c */\n      and\n      gt\n      iszero\n        /* \"contracts/atropamath.sol\":3646:3662  a <= b && a <= c */\n    tag_84:\n        /* \"contracts/atropamath.sol\":3642:4196  if (a <= b && a <= c) {... */\n      iszero\n      tag_85\n      jumpi\n        /* \"contracts/atropamath.sol\":3687:3688  c */\n      dup4\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":3682:3688  b <= c */\n      and\n        /* \"contracts/atropamath.sol\":3682:3683  b */\n      dup6\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":3682:3688  b <= c */\n      and\n      gt\n        /* \"contracts/atropamath.sol\":3678:3820  if (b <= c) {... */\n      tag_86\n      jumpi\n      pop\n        /* \"contracts/atropamath.sol\":3716:3717  a */\n      dup5\n      swap2\n      pop\n        /* \"contracts/atropamath.sol\":3719:3720  b */\n      dup4\n      swap1\n      pop\n        /* \"contracts/atropamath.sol\":3722:3723  c */\n      dup3\n        /* \"contracts/atropamath.sol\":3708:3724  return (a, b, c) */\n      jump(tag_95)\n        /* \"contracts/atropamath.sol\":3678:3820  if (b <= c) {... */\n    tag_86:\n      pop\n        /* \"contracts/atropamath.sol\":3784:3785  a */\n      dup5\n      swap2\n      pop\n        /* \"contracts/atropamath.sol\":3787:3788  c */\n      dup3\n      swap1\n      pop\n        /* \"contracts/atropamath.sol\":3790:3791  b */\n      dup4\n        /* \"contracts/atropamath.sol\":3776:3792  return (a, c, b) */\n      jump(tag_95)\n        /* \"contracts/atropamath.sol\":3642:4196  if (a <= b && a <= c) {... */\n    tag_85:\n        /* \"contracts/atropamath.sol\":3845:3846  a */\n      dup6\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":3840:3846  b <= a */\n      and\n        /* \"contracts/atropamath.sol\":3840:3841  b */\n      dup6\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":3840:3846  b <= a */\n      and\n      gt\n      iszero\n        /* \"contracts/atropamath.sol\":3840:3856  b <= a && b <= c */\n      dup1\n      iszero\n      tag_89\n      jumpi\n      pop\n        /* \"contracts/atropamath.sol\":3855:3856  c */\n      dup4\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":3850:3856  b <= c */\n      and\n        /* \"contracts/atropamath.sol\":3850:3851  b */\n      dup6\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":3850:3856  b <= c */\n      and\n      gt\n      iszero\n        /* \"contracts/atropamath.sol\":3840:3856  b <= a && b <= c */\n    tag_89:\n        /* \"contracts/atropamath.sol\":3836:4196  if (b <= a && b <= c) {... */\n      iszero\n      tag_90\n      jumpi\n        /* \"contracts/atropamath.sol\":3881:3882  c */\n      dup4\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":3876:3882  a <= c */\n      and\n        /* \"contracts/atropamath.sol\":3876:3877  a */\n      dup7\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":3876:3882  a <= c */\n      and\n      gt\n        /* \"contracts/atropamath.sol\":3872:4014  if (a <= c) {... */\n      tag_91\n      jumpi\n      pop\n        /* \"contracts/atropamath.sol\":3910:3911  b */\n      dup4\n      swap2\n      pop\n        /* \"contracts/atropamath.sol\":3913:3914  a */\n      dup5\n      swap1\n      pop\n        /* \"contracts/atropamath.sol\":3916:3917  c */\n      dup3\n        /* \"contracts/atropamath.sol\":3902:3918  return (b, a, c) */\n      jump(tag_95)\n        /* \"contracts/atropamath.sol\":3872:4014  if (a <= c) {... */\n    tag_91:\n      pop\n        /* \"contracts/atropamath.sol\":3978:3979  b */\n      dup4\n      swap2\n      pop\n        /* \"contracts/atropamath.sol\":3981:3982  c */\n      dup3\n      swap1\n      pop\n        /* \"contracts/atropamath.sol\":3984:3985  a */\n      dup5\n        /* \"contracts/atropamath.sol\":3970:3986  return (b, c, a) */\n      jump(tag_95)\n        /* \"contracts/atropamath.sol\":3836:4196  if (b <= a && b <= c) {... */\n    tag_90:\n        /* \"contracts/atropamath.sol\":4053:4054  b */\n      dup5\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":4048:4054  a <= b */\n      and\n        /* \"contracts/atropamath.sol\":4048:4049  a */\n      dup7\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":4048:4054  a <= b */\n      and\n      gt\n        /* \"contracts/atropamath.sol\":4044:4186  if (a <= b) {... */\n      tag_94\n      jumpi\n      pop\n        /* \"contracts/atropamath.sol\":4082:4083  c */\n      dup3\n      swap2\n      pop\n        /* \"contracts/atropamath.sol\":4085:4086  a */\n      dup5\n      swap1\n      pop\n        /* \"contracts/atropamath.sol\":4088:4089  b */\n      dup4\n        /* \"contracts/atropamath.sol\":4074:4090  return (c, a, b) */\n      jump(tag_95)\n        /* \"contracts/atropamath.sol\":4044:4186  if (a <= b) {... */\n    tag_94:\n      pop\n        /* \"contracts/atropamath.sol\":4150:4151  c */\n      dup3\n      swap2\n      pop\n        /* \"contracts/atropamath.sol\":4153:4154  b */\n      dup4\n      swap1\n      pop\n        /* \"contracts/atropamath.sol\":4156:4157  a */\n      dup5\n        /* \"contracts/atropamath.sol\":4044:4186  if (a <= b) {... */\n    tag_95:\n        /* \"contracts/atropamath.sol\":3078:4202  function sortThree(uint64 a, uint64 b, uint64 c) public pure returns (uint64, uint64, uint64) {... */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/atropamath.sol\":1110:1518  function hashWith(address a, address b) public pure returns (uint256 hash) {        ... */\n    tag_44:\n        /* \"contracts/atropamath.sol\":1171:1183  uint256 hash */\n      0x00\n        /* \"contracts/atropamath.sol\":1242:1243  a */\n      dup3\n        /* \"contracts/atropamath.sol\":1171:1183  uint256 hash */\n      dup2\n        /* \"contracts/atropamath.sol\":1267:1282  uint160(b) / 15 */\n      tag_97\n        /* \"contracts/atropamath.sol\":1280:1282  15 */\n      0x0f\n        /* \"contracts/atropamath.sol\":1275:1276  b */\n      dup6\n        /* \"contracts/atropamath.sol\":1267:1282  uint160(b) / 15 */\n      tag_54\n      jump\t// in\n    tag_97:\n        /* \"contracts/atropamath.sol\":1254:1282  uint160 _b = uint160(b) / 15 */\n      swap1\n      pop\n        /* \"contracts/atropamath.sol\":1316:1421  while(hash == 0) {... */\n    tag_98:\n        /* \"contracts/atropamath.sol\":1322:1326  hash */\n      dup3\n        /* \"contracts/atropamath.sol\":1330:1331  0 */\n      0x00\n        /* \"contracts/atropamath.sol\":1322:1331  hash == 0 */\n      sub\n        /* \"contracts/atropamath.sol\":1316:1421  while(hash == 0) {... */\n      tag_56\n      jumpi\n        /* \"contracts/atropamath.sol\":194:209  953467954114363 */\n      0x03632c8eb5af3b\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":1359:1365  _a**_b */\n      dup1\n      dup4\n      and\n      dup5\n      dup3\n      and\n      exp\n        /* \"contracts/atropamath.sol\":1358:1379  (_a**_b)%MotzkinPrime */\n      and\n      mod\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":1351:1379  hash = (_a**_b)%MotzkinPrime */\n      and\n      swap3\n      pop\n        /* \"contracts/atropamath.sol\":1405:1406  2 */\n      0x02\n        /* \"contracts/atropamath.sol\":1402:1404  _b */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":1402:1406  _b/2 */\n      and\n      dup2\n      tag_103\n      jumpi\n      tag_103\n      tag_59\n      jump\t// in\n    tag_103:\n      div\n        /* \"contracts/atropamath.sol\":1397:1406  _b = _b/2 */\n      swap1\n      pop\n        /* \"contracts/atropamath.sol\":1316:1421  while(hash == 0) {... */\n      jump(tag_98)\n        /* \"#utility.yul\":14:480   */\n    tag_12:\n        /* \"#utility.yul\":91:97   */\n      0x00\n        /* \"#utility.yul\":99:105   */\n      dup1\n        /* \"#utility.yul\":107:113   */\n      0x00\n        /* \"#utility.yul\":160:162   */\n      0x60\n        /* \"#utility.yul\":148:157   */\n      dup5\n        /* \"#utility.yul\":139:146   */\n      dup7\n        /* \"#utility.yul\":135:158   */\n      sub\n        /* \"#utility.yul\":131:163   */\n      slt\n        /* \"#utility.yul\":128:180   */\n      iszero\n      tag_108\n      jumpi\n        /* \"#utility.yul\":176:177   */\n      0x00\n        /* \"#utility.yul\":173:174   */\n      dup1\n        /* \"#utility.yul\":166:178   */\n      revert\n        /* \"#utility.yul\":128:180   */\n    tag_108:\n      pop\n      pop\n        /* \"#utility.yul\":221:244   */\n      dup2\n      calldataload\n      swap4\n        /* \"#utility.yul\":341:343   */\n      0x20\n        /* \"#utility.yul\":326:344   */\n      dup4\n      add\n        /* \"#utility.yul\":313:345   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":444:446   */\n      0x40\n        /* \"#utility.yul\":429:447   */\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":416:448   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:480   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":675:846   */\n    tag_104:\n        /* \"#utility.yul\":742:762   */\n      dup1\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":791:821   */\n      dup2\n      and\n        /* \"#utility.yul\":781:822   */\n      dup2\n      eq\n        /* \"#utility.yul\":771:840   */\n      tag_111\n      jumpi\n        /* \"#utility.yul\":836:837   */\n      0x00\n        /* \"#utility.yul\":833:834   */\n      dup1\n        /* \"#utility.yul\":826:838   */\n      revert\n        /* \"#utility.yul\":771:840   */\n    tag_111:\n        /* \"#utility.yul\":675:846   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":851:1179   */\n    tag_19:\n        /* \"#utility.yul\":925:931   */\n      0x00\n        /* \"#utility.yul\":933:939   */\n      dup1\n        /* \"#utility.yul\":941:947   */\n      0x00\n        /* \"#utility.yul\":994:996   */\n      0x60\n        /* \"#utility.yul\":982:991   */\n      dup5\n        /* \"#utility.yul\":973:980   */\n      dup7\n        /* \"#utility.yul\":969:992   */\n      sub\n        /* \"#utility.yul\":965:997   */\n      slt\n        /* \"#utility.yul\":962:1014   */\n      iszero\n      tag_113\n      jumpi\n        /* \"#utility.yul\":1010:1011   */\n      0x00\n        /* \"#utility.yul\":1007:1008   */\n      dup1\n        /* \"#utility.yul\":1000:1012   */\n      revert\n        /* \"#utility.yul\":962:1014   */\n    tag_113:\n        /* \"#utility.yul\":1033:1061   */\n      tag_114\n        /* \"#utility.yul\":1051:1060   */\n      dup5\n        /* \"#utility.yul\":1033:1061   */\n      tag_104\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":1023:1061   */\n      swap3\n      pop\n        /* \"#utility.yul\":1080:1117   */\n      tag_115\n        /* \"#utility.yul\":1113:1115   */\n      0x20\n        /* \"#utility.yul\":1102:1111   */\n      dup6\n        /* \"#utility.yul\":1098:1116   */\n      add\n        /* \"#utility.yul\":1080:1117   */\n      tag_104\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":1070:1117   */\n      swap2\n      pop\n        /* \"#utility.yul\":1136:1173   */\n      tag_116\n        /* \"#utility.yul\":1169:1171   */\n      0x40\n        /* \"#utility.yul\":1158:1167   */\n      dup6\n        /* \"#utility.yul\":1154:1172   */\n      add\n        /* \"#utility.yul\":1136:1173   */\n      tag_104\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":1126:1173   */\n      swap1\n      pop\n        /* \"#utility.yul\":851:1179   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1397:1570   */\n    tag_105:\n        /* \"#utility.yul\":1465:1485   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1514:1545   */\n      dup2\n      and\n        /* \"#utility.yul\":1504:1546   */\n      dup2\n      eq\n        /* \"#utility.yul\":1494:1564   */\n      tag_111\n      jumpi\n        /* \"#utility.yul\":1560:1561   */\n      0x00\n        /* \"#utility.yul\":1557:1558   */\n      dup1\n        /* \"#utility.yul\":1550:1562   */\n      revert\n        /* \"#utility.yul\":1575:1875   */\n    tag_25:\n        /* \"#utility.yul\":1643:1649   */\n      0x00\n        /* \"#utility.yul\":1651:1657   */\n      dup1\n        /* \"#utility.yul\":1704:1706   */\n      0x40\n        /* \"#utility.yul\":1692:1701   */\n      dup4\n        /* \"#utility.yul\":1683:1690   */\n      dup6\n        /* \"#utility.yul\":1679:1702   */\n      sub\n        /* \"#utility.yul\":1675:1707   */\n      slt\n        /* \"#utility.yul\":1672:1724   */\n      iszero\n      tag_121\n      jumpi\n        /* \"#utility.yul\":1720:1721   */\n      0x00\n        /* \"#utility.yul\":1717:1718   */\n      dup1\n        /* \"#utility.yul\":1710:1722   */\n      revert\n        /* \"#utility.yul\":1672:1724   */\n    tag_121:\n        /* \"#utility.yul\":1743:1772   */\n      tag_122\n        /* \"#utility.yul\":1762:1771   */\n      dup4\n        /* \"#utility.yul\":1743:1772   */\n      tag_105\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":1733:1772   */\n      swap5\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1813:1845   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1575:1875   */\n      jump\t// out\n        /* \"#utility.yul\":1880:2289   */\n    tag_30:\n        /* \"#utility.yul\":1966:1972   */\n      0x00\n        /* \"#utility.yul\":1974:1980   */\n      dup1\n        /* \"#utility.yul\":1982:1988   */\n      0x00\n        /* \"#utility.yul\":1990:1996   */\n      dup1\n        /* \"#utility.yul\":2043:2046   */\n      0x80\n        /* \"#utility.yul\":2031:2040   */\n      dup6\n        /* \"#utility.yul\":2022:2029   */\n      dup8\n        /* \"#utility.yul\":2018:2041   */\n      sub\n        /* \"#utility.yul\":2014:2047   */\n      slt\n        /* \"#utility.yul\":2011:2064   */\n      iszero\n      tag_124\n      jumpi\n        /* \"#utility.yul\":2060:2061   */\n      0x00\n        /* \"#utility.yul\":2057:2058   */\n      dup1\n        /* \"#utility.yul\":2050:2062   */\n      revert\n        /* \"#utility.yul\":2011:2064   */\n    tag_124:\n        /* \"#utility.yul\":2083:2112   */\n      tag_125\n        /* \"#utility.yul\":2102:2111   */\n      dup6\n        /* \"#utility.yul\":2083:2112   */\n      tag_105\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":2073:2112   */\n      swap4\n      pop\n        /* \"#utility.yul\":2131:2169   */\n      tag_126\n        /* \"#utility.yul\":2165:2167   */\n      0x20\n        /* \"#utility.yul\":2154:2163   */\n      dup7\n        /* \"#utility.yul\":2150:2168   */\n      add\n        /* \"#utility.yul\":2131:2169   */\n      tag_105\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":2121:2169   */\n      swap3\n      pop\n        /* \"#utility.yul\":2188:2226   */\n      tag_127\n        /* \"#utility.yul\":2222:2224   */\n      0x40\n        /* \"#utility.yul\":2211:2220   */\n      dup7\n        /* \"#utility.yul\":2207:2225   */\n      add\n        /* \"#utility.yul\":2188:2226   */\n      tag_105\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":2178:2226   */\n      swap2\n      pop\n        /* \"#utility.yul\":2245:2283   */\n      tag_128\n        /* \"#utility.yul\":2279:2281   */\n      0x60\n        /* \"#utility.yul\":2268:2277   */\n      dup7\n        /* \"#utility.yul\":2264:2282   */\n      add\n        /* \"#utility.yul\":2245:2283   */\n      tag_105\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":2235:2283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1880:2289   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2695:2955   */\n    tag_43:\n        /* \"#utility.yul\":2763:2769   */\n      0x00\n        /* \"#utility.yul\":2771:2777   */\n      dup1\n        /* \"#utility.yul\":2824:2826   */\n      0x40\n        /* \"#utility.yul\":2812:2821   */\n      dup4\n        /* \"#utility.yul\":2803:2810   */\n      dup6\n        /* \"#utility.yul\":2799:2822   */\n      sub\n        /* \"#utility.yul\":2795:2827   */\n      slt\n        /* \"#utility.yul\":2792:2844   */\n      iszero\n      tag_131\n      jumpi\n        /* \"#utility.yul\":2840:2841   */\n      0x00\n        /* \"#utility.yul\":2837:2838   */\n      dup1\n        /* \"#utility.yul\":2830:2842   */\n      revert\n        /* \"#utility.yul\":2792:2844   */\n    tag_131:\n        /* \"#utility.yul\":2863:2892   */\n      tag_132\n        /* \"#utility.yul\":2882:2891   */\n      dup4\n        /* \"#utility.yul\":2863:2892   */\n      tag_105\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":2853:2892   */\n      swap2\n      pop\n        /* \"#utility.yul\":2911:2949   */\n      tag_133\n        /* \"#utility.yul\":2945:2947   */\n      0x20\n        /* \"#utility.yul\":2934:2943   */\n      dup5\n        /* \"#utility.yul\":2930:2948   */\n      add\n        /* \"#utility.yul\":2911:2949   */\n      tag_105\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":2901:2949   */\n      swap1\n      pop\n        /* \"#utility.yul\":2695:2955   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2960:3087   */\n    tag_59:\n        /* \"#utility.yul\":3021:3031   */\n      0x4e487b71\n        /* \"#utility.yul\":3016:3019   */\n      0xe0\n        /* \"#utility.yul\":3012:3032   */\n      shl\n        /* \"#utility.yul\":3009:3010   */\n      0x00\n        /* \"#utility.yul\":3002:3033   */\n      mstore\n        /* \"#utility.yul\":3052:3056   */\n      0x12\n        /* \"#utility.yul\":3049:3050   */\n      0x04\n        /* \"#utility.yul\":3042:3057   */\n      mstore\n        /* \"#utility.yul\":3076:3080   */\n      0x24\n        /* \"#utility.yul\":3073:3074   */\n      0x00\n        /* \"#utility.yul\":3066:3081   */\n      revert\n        /* \"#utility.yul\":3092:3204   */\n    tag_51:\n        /* \"#utility.yul\":3124:3125   */\n      0x00\n        /* \"#utility.yul\":3150:3151   */\n      dup3\n        /* \"#utility.yul\":3140:3175   */\n      tag_137\n      jumpi\n        /* \"#utility.yul\":3155:3173   */\n      tag_137\n      tag_59\n      jump\t// in\n    tag_137:\n      pop\n        /* \"#utility.yul\":3189:3198   */\n      mod\n      swap1\n        /* \"#utility.yul\":3092:3204   */\n      jump\t// out\n        /* \"#utility.yul\":3209:3406   */\n    tag_54:\n        /* \"#utility.yul\":3249:3250   */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3276:3303   */\n      dup4\n      and\n      dup1\n        /* \"#utility.yul\":3312:3349   */\n      tag_140\n      jumpi\n        /* \"#utility.yul\":3329:3347   */\n      tag_140\n      tag_59\n      jump\t// in\n    tag_140:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3367:3394   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":3363:3400   */\n      swap2\n      swap1\n      swap2\n      div\n      swap3\n        /* \"#utility.yul\":3209:3406   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200bb49fe34d71c742fb1bf17054219323be48bd312d185c66905e1415055b3ca664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "610703610034600b8282823980515f1a607314602857634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610610076575f3560e01c80633148f14f1461007a57806353df6e35146100ac5780636592f007146100e35780636e27811b146100f657806398fdcdd614610109578063d3dc2a0f14610146578063fa6bcfec14610154575b5f80fd5b818015610085575f80fd5b50610099610094366004610534565b610167565b6040519081526020015b60405180910390f35b8180156100b7575f80fd5b506100cb6100c6366004610578565b6101af565b6040516001600160401b0390911681526020016100a3565b6100996100f13660046105ce565b6101e7565b6100996101043660046105f6565b61024c565b61011c610117366004610578565b6102ad565b604080516001600160401b03948516815292841660208401529216918101919091526060016100a3565b6100cb6603632c8eb5af3b81565b610099610162366004610647565b6104d7565b5f60405160208152602080820152602060408201528460608201528360808201528260a082015260c05160208160c0845f60055f19f16101a5575f80fd5b5195945050505050565b5f6001600160401b0380851690848116908481169084906101d1858585610167565b6101db919061068c565b98975050505050505050565b5f82816101f5600f8561069f565b90505b825f03610244576603632c8eb5af3b6001600160a01b038083168482160a16066001600160a01b031692506002816001600160a01b03168161023c5761023c610678565b0490506101f8565b505092915050565b5f80610259600f8661069f565b90505b815f036102a4576603632c8eb5af3b61027585856104d7565b61027f88886104d7565b0a8161028d5761028d610678565b06915060026001600160a01b03821604905061025c565b50949350505050565b5f805f846001600160401b0316866001600160401b03161480156102e25750836001600160401b0316856001600160401b0316145b156102f457505f9150819050846104ce565b846001600160401b0316866001600160401b03160361033b575f86876001600160401b0316866001600160401b03161161032e5787610330565b855b9250925092506104ce565b836001600160401b0316866001600160401b031603610381575f86876001600160401b0316876001600160401b0316116103755787610330565b869250925092506104ce565b836001600160401b0316856001600160401b0316036103c7575f85866001600160401b0316886001600160401b0316116103bb5786610330565b879250925092506104ce565b846001600160401b0316866001600160401b0316111580156103fb5750836001600160401b0316866001600160401b031611155b1561043357836001600160401b0316856001600160401b0316116104265750849150839050826104ce565b50849150829050836104ce565b856001600160401b0316856001600160401b0316111580156104675750836001600160401b0316856001600160401b031611155b1561049f57836001600160401b0316866001600160401b0316116104925750839150849050826104ce565b50839150829050846104ce565b846001600160401b0316866001600160401b0316116104c55750829150849050836104ce565b50829150839050845b93509350939050565b5f82816104e5600f8561069f565b90505b825f03610244576603632c8eb5af3b6001600160a01b038083168482160a16066001600160a01b031692506002816001600160a01b03168161052c5761052c610678565b0490506104e8565b5f805f60608486031215610546575f80fd5b505081359360208301359350604090920135919050565b80356001600160401b0381168114610573575f80fd5b919050565b5f805f6060848603121561058a575f80fd5b6105938461055d565b92506105a16020850161055d565b91506105af6040850161055d565b90509250925092565b80356001600160a01b0381168114610573575f80fd5b5f80604083850312156105df575f80fd5b6105e8836105b8565b946020939093013593505050565b5f805f8060808587031215610609575f80fd5b610612856105b8565b9350610620602086016105b8565b925061062e604086016105b8565b915061063c606086016105b8565b905092959194509250565b5f8060408385031215610658575f80fd5b610661836105b8565b915061066f602084016105b8565b90509250929050565b634e487b7160e01b5f52601260045260245ffd5b5f8261069a5761069a610678565b500690565b5f6001600160a01b038316806106b7576106b7610678565b6001600160a01b0392909216919091049291505056fea26469706673582212200bb49fe34d71c742fb1bf17054219323be48bd312d185c66905e1415055b3ca664736f6c634300081a0033",
							"opcodes": "PUSH2 0x703 PUSH2 0x34 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x28 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x76 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3148F14F EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x53DF6E35 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x6592F007 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x6E27811B EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x98FDCDD6 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0xD3DC2A0F EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0xFA6BCFEC EQ PUSH2 0x154 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x85 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x99 PUSH2 0x94 CALLDATASIZE PUSH1 0x4 PUSH2 0x534 JUMP JUMPDEST PUSH2 0x167 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0x578 JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA3 JUMP JUMPDEST PUSH2 0x99 PUSH2 0xF1 CALLDATASIZE PUSH1 0x4 PUSH2 0x5CE JUMP JUMPDEST PUSH2 0x1E7 JUMP JUMPDEST PUSH2 0x99 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x5F6 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH2 0x11C PUSH2 0x117 CALLDATASIZE PUSH1 0x4 PUSH2 0x578 JUMP JUMPDEST PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD PUSH2 0xA3 JUMP JUMPDEST PUSH2 0xCB PUSH7 0x3632C8EB5AF3B DUP2 JUMP JUMPDEST PUSH2 0x99 PUSH2 0x162 CALLDATASIZE PUSH1 0x4 PUSH2 0x647 JUMP JUMPDEST PUSH2 0x4D7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x60 DUP3 ADD MSTORE DUP4 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 MLOAD PUSH1 0x20 DUP2 PUSH1 0xC0 DUP5 PUSH0 PUSH1 0x5 PUSH0 NOT CALL PUSH2 0x1A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST MLOAD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP6 AND SWAP1 DUP5 DUP2 AND SWAP1 DUP5 DUP2 AND SWAP1 DUP5 SWAP1 PUSH2 0x1D1 DUP6 DUP6 DUP6 PUSH2 0x167 JUMP JUMPDEST PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x68C JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 PUSH2 0x1F5 PUSH1 0xF DUP6 PUSH2 0x69F JUMP JUMPDEST SWAP1 POP JUMPDEST DUP3 PUSH0 SUB PUSH2 0x244 JUMPI PUSH7 0x3632C8EB5AF3B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND DUP5 DUP3 AND EXP AND MOD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP PUSH1 0x2 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH2 0x23C JUMPI PUSH2 0x23C PUSH2 0x678 JUMP JUMPDEST DIV SWAP1 POP PUSH2 0x1F8 JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x259 PUSH1 0xF DUP7 PUSH2 0x69F JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 PUSH0 SUB PUSH2 0x2A4 JUMPI PUSH7 0x3632C8EB5AF3B PUSH2 0x275 DUP6 DUP6 PUSH2 0x4D7 JUMP JUMPDEST PUSH2 0x27F DUP9 DUP9 PUSH2 0x4D7 JUMP JUMPDEST EXP DUP2 PUSH2 0x28D JUMPI PUSH2 0x28D PUSH2 0x678 JUMP JUMPDEST MOD SWAP2 POP PUSH1 0x2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DIV SWAP1 POP PUSH2 0x25C JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x2E2 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND EQ JUMPDEST ISZERO PUSH2 0x2F4 JUMPI POP PUSH0 SWAP2 POP DUP2 SWAP1 POP DUP5 PUSH2 0x4CE JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SUB PUSH2 0x33B JUMPI PUSH0 DUP7 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x32E JUMPI DUP8 PUSH2 0x330 JUMP JUMPDEST DUP6 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x4CE JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SUB PUSH2 0x381 JUMPI PUSH0 DUP7 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x375 JUMPI DUP8 PUSH2 0x330 JUMP JUMPDEST DUP7 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x4CE JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SUB PUSH2 0x3C7 JUMPI PUSH0 DUP6 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x3BB JUMPI DUP7 PUSH2 0x330 JUMP JUMPDEST DUP8 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x4CE JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT ISZERO DUP1 ISZERO PUSH2 0x3FB JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT ISZERO JUMPDEST ISZERO PUSH2 0x433 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x426 JUMPI POP DUP5 SWAP2 POP DUP4 SWAP1 POP DUP3 PUSH2 0x4CE JUMP JUMPDEST POP DUP5 SWAP2 POP DUP3 SWAP1 POP DUP4 PUSH2 0x4CE JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT ISZERO DUP1 ISZERO PUSH2 0x467 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT ISZERO JUMPDEST ISZERO PUSH2 0x49F JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x492 JUMPI POP DUP4 SWAP2 POP DUP5 SWAP1 POP DUP3 PUSH2 0x4CE JUMP JUMPDEST POP DUP4 SWAP2 POP DUP3 SWAP1 POP DUP5 PUSH2 0x4CE JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x4C5 JUMPI POP DUP3 SWAP2 POP DUP5 SWAP1 POP DUP4 PUSH2 0x4CE JUMP JUMPDEST POP DUP3 SWAP2 POP DUP4 SWAP1 POP DUP5 JUMPDEST SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP2 PUSH2 0x4E5 PUSH1 0xF DUP6 PUSH2 0x69F JUMP JUMPDEST SWAP1 POP JUMPDEST DUP3 PUSH0 SUB PUSH2 0x244 JUMPI PUSH7 0x3632C8EB5AF3B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND DUP5 DUP3 AND EXP AND MOD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP PUSH1 0x2 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH2 0x52C JUMPI PUSH2 0x52C PUSH2 0x678 JUMP JUMPDEST DIV SWAP1 POP PUSH2 0x4E8 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x546 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x573 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x58A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x593 DUP5 PUSH2 0x55D JUMP JUMPDEST SWAP3 POP PUSH2 0x5A1 PUSH1 0x20 DUP6 ADD PUSH2 0x55D JUMP JUMPDEST SWAP2 POP PUSH2 0x5AF PUSH1 0x40 DUP6 ADD PUSH2 0x55D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x573 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5DF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5E8 DUP4 PUSH2 0x5B8 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x609 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x612 DUP6 PUSH2 0x5B8 JUMP JUMPDEST SWAP4 POP PUSH2 0x620 PUSH1 0x20 DUP7 ADD PUSH2 0x5B8 JUMP JUMPDEST SWAP3 POP PUSH2 0x62E PUSH1 0x40 DUP7 ADD PUSH2 0x5B8 JUMP JUMPDEST SWAP2 POP PUSH2 0x63C PUSH1 0x60 DUP7 ADD PUSH2 0x5B8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x658 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x661 DUP4 PUSH2 0x5B8 JUMP JUMPDEST SWAP2 POP PUSH2 0x66F PUSH1 0x20 DUP5 ADD PUSH2 0x5B8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x69A JUMPI PUSH2 0x69A PUSH2 0x678 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 PUSH2 0x6B7 JUMPI PUSH2 0x6B7 PUSH2 0x678 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND 0xB4 SWAP16 0xE3 0x4D PUSH18 0xC742FB1BF17054219323BE48BD312D185C66 SWAP1 MCOPY EQ ISZERO SDIV JUMPDEST EXTCODECOPY 0xA6 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "130:4079:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;130:4079:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MotzkinPrime_673": {
									"entryPoint": null,
									"id": 673,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@hashWithD_727": {
									"entryPoint": 588,
									"id": 727,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@hashWithHash_829": {
									"entryPoint": 487,
									"id": 829,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@hashWith_778": {
									"entryPoint": 1239,
									"id": 778,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@modExp64_868": {
									"entryPoint": 431,
									"id": 868,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@modExp_881": {
									"entryPoint": 359,
									"id": 881,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@sortThree_1023": {
									"entryPoint": 685,
									"id": 1023,
									"parameterSlots": 3,
									"returnSlots": 3
								},
								"abi_decode_address": {
									"entryPoint": 1464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_address": {
									"entryPoint": 1526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 1332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint64t_uint64t_uint64": {
									"entryPoint": 1400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_uint64": {
									"entryPoint": 1373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64_t_uint64_t_uint64__to_t_uint64_t_uint64_t_uint64__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_div_t_uint160": {
									"entryPoint": 1695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 1676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x12": {
									"entryPoint": 1656,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3408:5",
										"nodeType": "YulBlock",
										"src": "0:3408:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "118:362:5",
													"nodeType": "YulBlock",
													"src": "118:362:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "164:16:5",
																"nodeType": "YulBlock",
																"src": "164:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "173:1:5",
																					"nodeType": "YulLiteral",
																					"src": "173:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "176:1:5",
																					"nodeType": "YulLiteral",
																					"src": "176:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "166:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "166:6:5"
																			},
																			"nativeSrc": "166:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "166:12:5"
																		},
																		"nativeSrc": "166:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "166:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "139:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "139:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "148:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "148:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "135:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "135:3:5"
																		},
																		"nativeSrc": "135:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "135:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:2:5",
																		"nodeType": "YulLiteral",
																		"src": "160:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "131:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "131:3:5"
																},
																"nativeSrc": "131:32:5",
																"nodeType": "YulFunctionCall",
																"src": "131:32:5"
															},
															"nativeSrc": "128:52:5",
															"nodeType": "YulIf",
															"src": "128:52:5"
														},
														{
															"nativeSrc": "189:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "189:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "202:1:5",
																"nodeType": "YulLiteral",
																"src": "202:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "193:5:5",
																	"nodeType": "YulTypedName",
																	"src": "193:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "212:32:5",
															"nodeType": "YulAssignment",
															"src": "212:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "234:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "234:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "221:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "221:12:5"
																},
																"nativeSrc": "221:23:5",
																"nodeType": "YulFunctionCall",
																"src": "221:23:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "212:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "212:5:5"
																}
															]
														},
														{
															"nativeSrc": "253:15:5",
															"nodeType": "YulAssignment",
															"src": "253:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "263:5:5",
																"nodeType": "YulIdentifier",
																"src": "263:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "253:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "253:6:5"
																}
															]
														},
														{
															"nativeSrc": "277:16:5",
															"nodeType": "YulVariableDeclaration",
															"src": "277:16:5",
															"value": {
																"kind": "number",
																"nativeSrc": "292:1:5",
																"nodeType": "YulLiteral",
																"src": "292:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "281:7:5",
																	"nodeType": "YulTypedName",
																	"src": "281:7:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "302:43:5",
															"nodeType": "YulAssignment",
															"src": "302:43:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "330:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "330:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "341:2:5",
																				"nodeType": "YulLiteral",
																				"src": "341:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "326:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "326:3:5"
																		},
																		"nativeSrc": "326:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "326:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "313:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "313:12:5"
																},
																"nativeSrc": "313:32:5",
																"nodeType": "YulFunctionCall",
																"src": "313:32:5"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "302:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "302:7:5"
																}
															]
														},
														{
															"nativeSrc": "354:17:5",
															"nodeType": "YulAssignment",
															"src": "354:17:5",
															"value": {
																"name": "value_1",
																"nativeSrc": "364:7:5",
																"nodeType": "YulIdentifier",
																"src": "364:7:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "354:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "354:6:5"
																}
															]
														},
														{
															"nativeSrc": "380:16:5",
															"nodeType": "YulVariableDeclaration",
															"src": "380:16:5",
															"value": {
																"kind": "number",
																"nativeSrc": "395:1:5",
																"nodeType": "YulLiteral",
																"src": "395:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "384:7:5",
																	"nodeType": "YulTypedName",
																	"src": "384:7:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "405:43:5",
															"nodeType": "YulAssignment",
															"src": "405:43:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "433:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "433:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "444:2:5",
																				"nodeType": "YulLiteral",
																				"src": "444:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "429:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "429:3:5"
																		},
																		"nativeSrc": "429:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "429:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "416:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "416:12:5"
																},
																"nativeSrc": "416:32:5",
																"nodeType": "YulFunctionCall",
																"src": "416:32:5"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "405:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "405:7:5"
																}
															]
														},
														{
															"nativeSrc": "457:17:5",
															"nodeType": "YulAssignment",
															"src": "457:17:5",
															"value": {
																"name": "value_2",
																"nativeSrc": "467:7:5",
																"nodeType": "YulIdentifier",
																"src": "467:7:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "457:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nativeSrc": "14:466:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "68:9:5",
														"nodeType": "YulTypedName",
														"src": "68:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "79:7:5",
														"nodeType": "YulTypedName",
														"src": "79:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "91:6:5",
														"nodeType": "YulTypedName",
														"src": "91:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "99:6:5",
														"nodeType": "YulTypedName",
														"src": "99:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "107:6:5",
														"nodeType": "YulTypedName",
														"src": "107:6:5",
														"type": ""
													}
												],
												"src": "14:466:5"
											},
											{
												"body": {
													"nativeSrc": "594:76:5",
													"nodeType": "YulBlock",
													"src": "594:76:5",
													"statements": [
														{
															"nativeSrc": "604:26:5",
															"nodeType": "YulAssignment",
															"src": "604:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "616:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "616:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "627:2:5",
																		"nodeType": "YulLiteral",
																		"src": "627:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "612:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "612:3:5"
																},
																"nativeSrc": "612:18:5",
																"nodeType": "YulFunctionCall",
																"src": "612:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "604:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "604:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "646:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "646:9:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "657:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "657:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "639:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "639:6:5"
																},
																"nativeSrc": "639:25:5",
																"nodeType": "YulFunctionCall",
																"src": "639:25:5"
															},
															"nativeSrc": "639:25:5",
															"nodeType": "YulExpressionStatement",
															"src": "639:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed",
												"nativeSrc": "485:185:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "563:9:5",
														"nodeType": "YulTypedName",
														"src": "563:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "574:6:5",
														"nodeType": "YulTypedName",
														"src": "574:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "585:4:5",
														"nodeType": "YulTypedName",
														"src": "585:4:5",
														"type": ""
													}
												],
												"src": "485:185:5"
											},
											{
												"body": {
													"nativeSrc": "723:123:5",
													"nodeType": "YulBlock",
													"src": "723:123:5",
													"statements": [
														{
															"nativeSrc": "733:29:5",
															"nodeType": "YulAssignment",
															"src": "733:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "755:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "755:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "742:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "742:12:5"
																},
																"nativeSrc": "742:20:5",
																"nodeType": "YulFunctionCall",
																"src": "742:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "733:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "733:5:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "824:16:5",
																"nodeType": "YulBlock",
																"src": "824:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "833:1:5",
																					"nodeType": "YulLiteral",
																					"src": "833:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:5",
																					"nodeType": "YulLiteral",
																					"src": "836:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "826:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "826:6:5"
																			},
																			"nativeSrc": "826:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "826:12:5"
																		},
																		"nativeSrc": "826:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "826:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "784:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "784:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "795:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "795:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "802:18:5",
																						"nodeType": "YulLiteral",
																						"src": "802:18:5",
																						"type": "",
																						"value": "0xffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "791:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "791:3:5"
																				},
																				"nativeSrc": "791:30:5",
																				"nodeType": "YulFunctionCall",
																				"src": "791:30:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "781:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "781:2:5"
																		},
																		"nativeSrc": "781:41:5",
																		"nodeType": "YulFunctionCall",
																		"src": "781:41:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "774:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "774:6:5"
																},
																"nativeSrc": "774:49:5",
																"nodeType": "YulFunctionCall",
																"src": "774:49:5"
															},
															"nativeSrc": "771:69:5",
															"nodeType": "YulIf",
															"src": "771:69:5"
														}
													]
												},
												"name": "abi_decode_uint64",
												"nativeSrc": "675:171:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "702:6:5",
														"nodeType": "YulTypedName",
														"src": "702:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "713:5:5",
														"nodeType": "YulTypedName",
														"src": "713:5:5",
														"type": ""
													}
												],
												"src": "675:171:5"
											},
											{
												"body": {
													"nativeSrc": "952:227:5",
													"nodeType": "YulBlock",
													"src": "952:227:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "998:16:5",
																"nodeType": "YulBlock",
																"src": "998:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1007:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1007:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1010:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1010:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1000:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1000:6:5"
																			},
																			"nativeSrc": "1000:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1000:12:5"
																		},
																		"nativeSrc": "1000:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1000:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "973:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "973:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "982:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "982:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "969:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "969:3:5"
																		},
																		"nativeSrc": "969:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "969:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "994:2:5",
																		"nodeType": "YulLiteral",
																		"src": "994:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "965:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "965:3:5"
																},
																"nativeSrc": "965:32:5",
																"nodeType": "YulFunctionCall",
																"src": "965:32:5"
															},
															"nativeSrc": "962:52:5",
															"nodeType": "YulIf",
															"src": "962:52:5"
														},
														{
															"nativeSrc": "1023:38:5",
															"nodeType": "YulAssignment",
															"src": "1023:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1051:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1051:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint64",
																	"nativeSrc": "1033:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "1033:17:5"
																},
																"nativeSrc": "1033:28:5",
																"nodeType": "YulFunctionCall",
																"src": "1033:28:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1023:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1023:6:5"
																}
															]
														},
														{
															"nativeSrc": "1070:47:5",
															"nodeType": "YulAssignment",
															"src": "1070:47:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1102:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1102:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1113:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1113:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1098:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1098:3:5"
																		},
																		"nativeSrc": "1098:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1098:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint64",
																	"nativeSrc": "1080:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "1080:17:5"
																},
																"nativeSrc": "1080:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1080:37:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1070:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1070:6:5"
																}
															]
														},
														{
															"nativeSrc": "1126:47:5",
															"nodeType": "YulAssignment",
															"src": "1126:47:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1158:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1158:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1169:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1169:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1154:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1154:3:5"
																		},
																		"nativeSrc": "1154:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1154:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint64",
																	"nativeSrc": "1136:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "1136:17:5"
																},
																"nativeSrc": "1136:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1136:37:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1126:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1126:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint64t_uint64t_uint64",
												"nativeSrc": "851:328:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "902:9:5",
														"nodeType": "YulTypedName",
														"src": "902:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "913:7:5",
														"nodeType": "YulTypedName",
														"src": "913:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "925:6:5",
														"nodeType": "YulTypedName",
														"src": "925:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "933:6:5",
														"nodeType": "YulTypedName",
														"src": "933:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "941:6:5",
														"nodeType": "YulTypedName",
														"src": "941:6:5",
														"type": ""
													}
												],
												"src": "851:328:5"
											},
											{
												"body": {
													"nativeSrc": "1291:101:5",
													"nodeType": "YulBlock",
													"src": "1291:101:5",
													"statements": [
														{
															"nativeSrc": "1301:26:5",
															"nodeType": "YulAssignment",
															"src": "1301:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1313:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1313:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1324:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1324:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1309:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1309:3:5"
																},
																"nativeSrc": "1309:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1309:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1301:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1301:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1343:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1343:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1358:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1358:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1366:18:5",
																				"nodeType": "YulLiteral",
																				"src": "1366:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1354:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1354:3:5"
																		},
																		"nativeSrc": "1354:31:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1354:31:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1336:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1336:6:5"
																},
																"nativeSrc": "1336:50:5",
																"nodeType": "YulFunctionCall",
																"src": "1336:50:5"
															},
															"nativeSrc": "1336:50:5",
															"nodeType": "YulExpressionStatement",
															"src": "1336:50:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_library_reversed",
												"nativeSrc": "1184:208:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1260:9:5",
														"nodeType": "YulTypedName",
														"src": "1260:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1271:6:5",
														"nodeType": "YulTypedName",
														"src": "1271:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1282:4:5",
														"nodeType": "YulTypedName",
														"src": "1282:4:5",
														"type": ""
													}
												],
												"src": "1184:208:5"
											},
											{
												"body": {
													"nativeSrc": "1446:124:5",
													"nodeType": "YulBlock",
													"src": "1446:124:5",
													"statements": [
														{
															"nativeSrc": "1456:29:5",
															"nodeType": "YulAssignment",
															"src": "1456:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1478:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1465:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1465:12:5"
																},
																"nativeSrc": "1465:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1465:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1456:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1456:5:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1548:16:5",
																"nodeType": "YulBlock",
																"src": "1548:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1557:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1557:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1560:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1560:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1550:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1550:6:5"
																			},
																			"nativeSrc": "1550:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1550:12:5"
																		},
																		"nativeSrc": "1550:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1550:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1507:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1507:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1518:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1518:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1533:3:5",
																										"nodeType": "YulLiteral",
																										"src": "1533:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1538:1:5",
																										"nodeType": "YulLiteral",
																										"src": "1538:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1529:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "1529:3:5"
																								},
																								"nativeSrc": "1529:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "1529:11:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1542:1:5",
																								"nodeType": "YulLiteral",
																								"src": "1542:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1525:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1525:3:5"
																						},
																						"nativeSrc": "1525:19:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1525:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1514:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1514:3:5"
																				},
																				"nativeSrc": "1514:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1514:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1504:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1504:2:5"
																		},
																		"nativeSrc": "1504:42:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1504:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1497:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1497:6:5"
																},
																"nativeSrc": "1497:50:5",
																"nodeType": "YulFunctionCall",
																"src": "1497:50:5"
															},
															"nativeSrc": "1494:70:5",
															"nodeType": "YulIf",
															"src": "1494:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1397:173:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1425:6:5",
														"nodeType": "YulTypedName",
														"src": "1425:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1436:5:5",
														"nodeType": "YulTypedName",
														"src": "1436:5:5",
														"type": ""
													}
												],
												"src": "1397:173:5"
											},
											{
												"body": {
													"nativeSrc": "1662:213:5",
													"nodeType": "YulBlock",
													"src": "1662:213:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1708:16:5",
																"nodeType": "YulBlock",
																"src": "1708:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1717:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1717:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1710:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1710:6:5"
																			},
																			"nativeSrc": "1710:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1710:12:5"
																		},
																		"nativeSrc": "1710:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1710:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1683:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1683:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1692:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1692:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1679:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:5"
																		},
																		"nativeSrc": "1679:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1679:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1704:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1704:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1675:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1675:3:5"
																},
																"nativeSrc": "1675:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1675:32:5"
															},
															"nativeSrc": "1672:52:5",
															"nodeType": "YulIf",
															"src": "1672:52:5"
														},
														{
															"nativeSrc": "1733:39:5",
															"nodeType": "YulAssignment",
															"src": "1733:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1762:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1762:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1743:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "1743:18:5"
																},
																"nativeSrc": "1743:29:5",
																"nodeType": "YulFunctionCall",
																"src": "1743:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1733:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1733:6:5"
																}
															]
														},
														{
															"nativeSrc": "1781:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1781:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "1794:1:5",
																"nodeType": "YulLiteral",
																"src": "1794:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1785:5:5",
																	"nodeType": "YulTypedName",
																	"src": "1785:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1804:41:5",
															"nodeType": "YulAssignment",
															"src": "1804:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1830:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1830:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1841:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1841:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1826:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1826:3:5"
																		},
																		"nativeSrc": "1826:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1826:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1813:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1813:12:5"
																},
																"nativeSrc": "1813:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1813:32:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1804:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1804:5:5"
																}
															]
														},
														{
															"nativeSrc": "1854:15:5",
															"nodeType": "YulAssignment",
															"src": "1854:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "1864:5:5",
																"nodeType": "YulIdentifier",
																"src": "1864:5:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1854:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1854:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1575:300:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1620:9:5",
														"nodeType": "YulTypedName",
														"src": "1620:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1631:7:5",
														"nodeType": "YulTypedName",
														"src": "1631:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1643:6:5",
														"nodeType": "YulTypedName",
														"src": "1643:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1651:6:5",
														"nodeType": "YulTypedName",
														"src": "1651:6:5",
														"type": ""
													}
												],
												"src": "1575:300:5"
											},
											{
												"body": {
													"nativeSrc": "2001:288:5",
													"nodeType": "YulBlock",
													"src": "2001:288:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2048:16:5",
																"nodeType": "YulBlock",
																"src": "2048:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2057:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2057:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2060:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2060:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2050:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2050:6:5"
																			},
																			"nativeSrc": "2050:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2050:12:5"
																		},
																		"nativeSrc": "2050:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2050:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2022:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2022:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2031:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2031:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2018:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:5"
																		},
																		"nativeSrc": "2018:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2043:3:5",
																		"nodeType": "YulLiteral",
																		"src": "2043:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2014:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2014:3:5"
																},
																"nativeSrc": "2014:33:5",
																"nodeType": "YulFunctionCall",
																"src": "2014:33:5"
															},
															"nativeSrc": "2011:53:5",
															"nodeType": "YulIf",
															"src": "2011:53:5"
														},
														{
															"nativeSrc": "2073:39:5",
															"nodeType": "YulAssignment",
															"src": "2073:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2102:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2102:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2083:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2083:18:5"
																},
																"nativeSrc": "2083:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2083:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2073:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2073:6:5"
																}
															]
														},
														{
															"nativeSrc": "2121:48:5",
															"nodeType": "YulAssignment",
															"src": "2121:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2154:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2154:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2165:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2165:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2150:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2150:3:5"
																		},
																		"nativeSrc": "2150:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2150:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2131:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2131:18:5"
																},
																"nativeSrc": "2131:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2131:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2121:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2121:6:5"
																}
															]
														},
														{
															"nativeSrc": "2178:48:5",
															"nodeType": "YulAssignment",
															"src": "2178:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2211:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2211:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2222:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2222:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2207:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2207:3:5"
																		},
																		"nativeSrc": "2207:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2207:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2188:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2188:18:5"
																},
																"nativeSrc": "2188:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2188:38:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2178:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2178:6:5"
																}
															]
														},
														{
															"nativeSrc": "2235:48:5",
															"nodeType": "YulAssignment",
															"src": "2235:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2268:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2268:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2279:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2279:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2264:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2264:3:5"
																		},
																		"nativeSrc": "2264:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2264:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2245:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2245:18:5"
																},
																"nativeSrc": "2245:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2245:38:5"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "2235:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2235:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_address",
												"nativeSrc": "1880:409:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1943:9:5",
														"nodeType": "YulTypedName",
														"src": "1943:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1954:7:5",
														"nodeType": "YulTypedName",
														"src": "1954:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1966:6:5",
														"nodeType": "YulTypedName",
														"src": "1966:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1974:6:5",
														"nodeType": "YulTypedName",
														"src": "1974:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1982:6:5",
														"nodeType": "YulTypedName",
														"src": "1982:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1990:6:5",
														"nodeType": "YulTypedName",
														"src": "1990:6:5",
														"type": ""
													}
												],
												"src": "1880:409:5"
											},
											{
												"body": {
													"nativeSrc": "2453:237:5",
													"nodeType": "YulBlock",
													"src": "2453:237:5",
													"statements": [
														{
															"nativeSrc": "2463:26:5",
															"nodeType": "YulAssignment",
															"src": "2463:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2475:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2475:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2486:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2486:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2471:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2471:3:5"
																},
																"nativeSrc": "2471:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2471:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2463:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2463:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2505:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2505:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2520:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2520:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2528:18:5",
																				"nodeType": "YulLiteral",
																				"src": "2528:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2516:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2516:3:5"
																		},
																		"nativeSrc": "2516:31:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2516:31:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2498:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2498:6:5"
																},
																"nativeSrc": "2498:50:5",
																"nodeType": "YulFunctionCall",
																"src": "2498:50:5"
															},
															"nativeSrc": "2498:50:5",
															"nodeType": "YulExpressionStatement",
															"src": "2498:50:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2568:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2568:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2579:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2579:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2564:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2564:3:5"
																		},
																		"nativeSrc": "2564:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2564:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "2588:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2588:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2596:18:5",
																				"nodeType": "YulLiteral",
																				"src": "2596:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2584:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2584:3:5"
																		},
																		"nativeSrc": "2584:31:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2584:31:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2557:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2557:6:5"
																},
																"nativeSrc": "2557:59:5",
																"nodeType": "YulFunctionCall",
																"src": "2557:59:5"
															},
															"nativeSrc": "2557:59:5",
															"nodeType": "YulExpressionStatement",
															"src": "2557:59:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2636:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2636:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2647:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2647:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2632:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2632:3:5"
																		},
																		"nativeSrc": "2632:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2632:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "2656:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2656:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2664:18:5",
																				"nodeType": "YulLiteral",
																				"src": "2664:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2652:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2652:3:5"
																		},
																		"nativeSrc": "2652:31:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2652:31:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2625:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2625:6:5"
																},
																"nativeSrc": "2625:59:5",
																"nodeType": "YulFunctionCall",
																"src": "2625:59:5"
															},
															"nativeSrc": "2625:59:5",
															"nodeType": "YulExpressionStatement",
															"src": "2625:59:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64_t_uint64_t_uint64__to_t_uint64_t_uint64_t_uint64__fromStack_library_reversed",
												"nativeSrc": "2294:396:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2406:9:5",
														"nodeType": "YulTypedName",
														"src": "2406:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2417:6:5",
														"nodeType": "YulTypedName",
														"src": "2417:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2425:6:5",
														"nodeType": "YulTypedName",
														"src": "2425:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2433:6:5",
														"nodeType": "YulTypedName",
														"src": "2433:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2444:4:5",
														"nodeType": "YulTypedName",
														"src": "2444:4:5",
														"type": ""
													}
												],
												"src": "2294:396:5"
											},
											{
												"body": {
													"nativeSrc": "2782:173:5",
													"nodeType": "YulBlock",
													"src": "2782:173:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2828:16:5",
																"nodeType": "YulBlock",
																"src": "2828:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2837:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2837:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2840:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2840:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2830:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2830:6:5"
																			},
																			"nativeSrc": "2830:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2830:12:5"
																		},
																		"nativeSrc": "2830:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2830:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2803:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2803:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2812:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2812:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2799:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2799:3:5"
																		},
																		"nativeSrc": "2799:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2799:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2824:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2824:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2795:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2795:3:5"
																},
																"nativeSrc": "2795:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2795:32:5"
															},
															"nativeSrc": "2792:52:5",
															"nodeType": "YulIf",
															"src": "2792:52:5"
														},
														{
															"nativeSrc": "2853:39:5",
															"nodeType": "YulAssignment",
															"src": "2853:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2882:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2882:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2863:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2863:18:5"
																},
																"nativeSrc": "2863:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2863:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2853:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2853:6:5"
																}
															]
														},
														{
															"nativeSrc": "2901:48:5",
															"nodeType": "YulAssignment",
															"src": "2901:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2934:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2934:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2945:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2945:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2930:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2930:3:5"
																		},
																		"nativeSrc": "2930:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2930:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2911:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2911:18:5"
																},
																"nativeSrc": "2911:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2911:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2901:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2901:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2695:260:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2740:9:5",
														"nodeType": "YulTypedName",
														"src": "2740:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2751:7:5",
														"nodeType": "YulTypedName",
														"src": "2751:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2763:6:5",
														"nodeType": "YulTypedName",
														"src": "2763:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2771:6:5",
														"nodeType": "YulTypedName",
														"src": "2771:6:5",
														"type": ""
													}
												],
												"src": "2695:260:5"
											},
											{
												"body": {
													"nativeSrc": "2992:95:5",
													"nodeType": "YulBlock",
													"src": "2992:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3009:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3009:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3016:3:5",
																				"nodeType": "YulLiteral",
																				"src": "3016:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3021:10:5",
																				"nodeType": "YulLiteral",
																				"src": "3021:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3012:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3012:3:5"
																		},
																		"nativeSrc": "3012:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3012:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3002:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3002:6:5"
																},
																"nativeSrc": "3002:31:5",
																"nodeType": "YulFunctionCall",
																"src": "3002:31:5"
															},
															"nativeSrc": "3002:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "3002:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3049:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3049:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3052:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3052:4:5",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3042:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3042:6:5"
																},
																"nativeSrc": "3042:15:5",
																"nodeType": "YulFunctionCall",
																"src": "3042:15:5"
															},
															"nativeSrc": "3042:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "3042:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3073:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3073:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3076:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3076:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3066:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3066:6:5"
																},
																"nativeSrc": "3066:15:5",
																"nodeType": "YulFunctionCall",
																"src": "3066:15:5"
															},
															"nativeSrc": "3066:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "3066:15:5"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "2960:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "2960:127:5"
											},
											{
												"body": {
													"nativeSrc": "3130:74:5",
													"nodeType": "YulBlock",
													"src": "3130:74:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3153:22:5",
																"nodeType": "YulBlock",
																"src": "3153:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "3155:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "3155:16:5"
																			},
																			"nativeSrc": "3155:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3155:18:5"
																		},
																		"nativeSrc": "3155:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3155:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3150:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "3150:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3143:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3143:6:5"
																},
																"nativeSrc": "3143:9:5",
																"nodeType": "YulFunctionCall",
																"src": "3143:9:5"
															},
															"nativeSrc": "3140:35:5",
															"nodeType": "YulIf",
															"src": "3140:35:5"
														},
														{
															"nativeSrc": "3184:14:5",
															"nodeType": "YulAssignment",
															"src": "3184:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3193:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "3193:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3196:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "3196:1:5"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "3189:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3189:3:5"
																},
																"nativeSrc": "3189:9:5",
																"nodeType": "YulFunctionCall",
																"src": "3189:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "3184:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "3184:1:5"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "3092:112:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3115:1:5",
														"nodeType": "YulTypedName",
														"src": "3115:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3118:1:5",
														"nodeType": "YulTypedName",
														"src": "3118:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "3124:1:5",
														"nodeType": "YulTypedName",
														"src": "3124:1:5",
														"type": ""
													}
												],
												"src": "3092:112:5"
											},
											{
												"body": {
													"nativeSrc": "3255:151:5",
													"nodeType": "YulBlock",
													"src": "3255:151:5",
													"statements": [
														{
															"nativeSrc": "3265:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3265:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3280:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "3280:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3291:3:5",
																						"nodeType": "YulLiteral",
																						"src": "3291:3:5",
																						"type": "",
																						"value": "160"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3296:1:5",
																						"nodeType": "YulLiteral",
																						"src": "3296:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3287:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3287:3:5"
																				},
																				"nativeSrc": "3287:11:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3287:11:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3300:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3300:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3283:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3283:3:5"
																		},
																		"nativeSrc": "3283:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3283:19:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3276:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3276:3:5"
																},
																"nativeSrc": "3276:27:5",
																"nodeType": "YulFunctionCall",
																"src": "3276:27:5"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nativeSrc": "3269:3:5",
																	"nodeType": "YulTypedName",
																	"src": "3269:3:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3327:22:5",
																"nodeType": "YulBlock",
																"src": "3327:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "3329:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "3329:16:5"
																			},
																			"nativeSrc": "3329:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3329:18:5"
																		},
																		"nativeSrc": "3329:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3329:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y_1",
																		"nativeSrc": "3322:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3322:3:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3315:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3315:6:5"
																},
																"nativeSrc": "3315:11:5",
																"nodeType": "YulFunctionCall",
																"src": "3315:11:5"
															},
															"nativeSrc": "3312:37:5",
															"nodeType": "YulIf",
															"src": "3312:37:5"
														},
														{
															"nativeSrc": "3358:42:5",
															"nodeType": "YulAssignment",
															"src": "3358:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "3371:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "3371:1:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3382:3:5",
																								"nodeType": "YulLiteral",
																								"src": "3382:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3387:1:5",
																								"nodeType": "YulLiteral",
																								"src": "3387:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3378:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "3378:3:5"
																						},
																						"nativeSrc": "3378:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "3378:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3391:1:5",
																						"nodeType": "YulLiteral",
																						"src": "3391:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3374:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3374:3:5"
																				},
																				"nativeSrc": "3374:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3374:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3367:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3367:3:5"
																		},
																		"nativeSrc": "3367:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3367:27:5"
																	},
																	{
																		"name": "y_1",
																		"nativeSrc": "3396:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3396:3:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3363:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3363:3:5"
																},
																"nativeSrc": "3363:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3363:37:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "3358:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "3358:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint160",
												"nativeSrc": "3209:197:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3240:1:5",
														"nodeType": "YulTypedName",
														"src": "3240:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3243:1:5",
														"nodeType": "YulTypedName",
														"src": "3243:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "3249:1:5",
														"nodeType": "YulTypedName",
														"src": "3249:1:5",
														"type": ""
													}
												],
												"src": "3209:197:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_uint64(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint64t_uint64t_uint64(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_uint64(headStart)\n        value1 := abi_decode_uint64(add(headStart, 32))\n        value2 := abi_decode_uint64(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := abi_decode_address(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_uint64_t_uint64_t_uint64__to_t_uint64_t_uint64_t_uint64__fromStack_library_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffff))\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function checked_div_t_uint160(x, y) -> r\n    {\n        let y_1 := and(y, sub(shl(160, 1), 1))\n        if iszero(y_1) { panic_error_0x12() }\n        r := div(and(x, sub(shl(160, 1), 1)), y_1)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "7300000000000000000000000000000000000000003014608060405260043610610076575f3560e01c80633148f14f1461007a57806353df6e35146100ac5780636592f007146100e35780636e27811b146100f657806398fdcdd614610109578063d3dc2a0f14610146578063fa6bcfec14610154575b5f80fd5b818015610085575f80fd5b50610099610094366004610534565b610167565b6040519081526020015b60405180910390f35b8180156100b7575f80fd5b506100cb6100c6366004610578565b6101af565b6040516001600160401b0390911681526020016100a3565b6100996100f13660046105ce565b6101e7565b6100996101043660046105f6565b61024c565b61011c610117366004610578565b6102ad565b604080516001600160401b03948516815292841660208401529216918101919091526060016100a3565b6100cb6603632c8eb5af3b81565b610099610162366004610647565b6104d7565b5f60405160208152602080820152602060408201528460608201528360808201528260a082015260c05160208160c0845f60055f19f16101a5575f80fd5b5195945050505050565b5f6001600160401b0380851690848116908481169084906101d1858585610167565b6101db919061068c565b98975050505050505050565b5f82816101f5600f8561069f565b90505b825f03610244576603632c8eb5af3b6001600160a01b038083168482160a16066001600160a01b031692506002816001600160a01b03168161023c5761023c610678565b0490506101f8565b505092915050565b5f80610259600f8661069f565b90505b815f036102a4576603632c8eb5af3b61027585856104d7565b61027f88886104d7565b0a8161028d5761028d610678565b06915060026001600160a01b03821604905061025c565b50949350505050565b5f805f846001600160401b0316866001600160401b03161480156102e25750836001600160401b0316856001600160401b0316145b156102f457505f9150819050846104ce565b846001600160401b0316866001600160401b03160361033b575f86876001600160401b0316866001600160401b03161161032e5787610330565b855b9250925092506104ce565b836001600160401b0316866001600160401b031603610381575f86876001600160401b0316876001600160401b0316116103755787610330565b869250925092506104ce565b836001600160401b0316856001600160401b0316036103c7575f85866001600160401b0316886001600160401b0316116103bb5786610330565b879250925092506104ce565b846001600160401b0316866001600160401b0316111580156103fb5750836001600160401b0316866001600160401b031611155b1561043357836001600160401b0316856001600160401b0316116104265750849150839050826104ce565b50849150829050836104ce565b856001600160401b0316856001600160401b0316111580156104675750836001600160401b0316856001600160401b031611155b1561049f57836001600160401b0316866001600160401b0316116104925750839150849050826104ce565b50839150829050846104ce565b846001600160401b0316866001600160401b0316116104c55750829150849050836104ce565b50829150839050845b93509350939050565b5f82816104e5600f8561069f565b90505b825f03610244576603632c8eb5af3b6001600160a01b038083168482160a16066001600160a01b031692506002816001600160a01b03168161052c5761052c610678565b0490506104e8565b5f805f60608486031215610546575f80fd5b505081359360208301359350604090920135919050565b80356001600160401b0381168114610573575f80fd5b919050565b5f805f6060848603121561058a575f80fd5b6105938461055d565b92506105a16020850161055d565b91506105af6040850161055d565b90509250925092565b80356001600160a01b0381168114610573575f80fd5b5f80604083850312156105df575f80fd5b6105e8836105b8565b946020939093013593505050565b5f805f8060808587031215610609575f80fd5b610612856105b8565b9350610620602086016105b8565b925061062e604086016105b8565b915061063c606086016105b8565b905092959194509250565b5f8060408385031215610658575f80fd5b610661836105b8565b915061066f602084016105b8565b90509250929050565b634e487b7160e01b5f52601260045260245ffd5b5f8261069a5761069a610678565b500690565b5f6001600160a01b038316806106b7576106b7610678565b6001600160a01b0392909216919091049291505056fea26469706673582212200bb49fe34d71c742fb1bf17054219323be48bd312d185c66905e1415055b3ca664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x76 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3148F14F EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x53DF6E35 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x6592F007 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x6E27811B EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x98FDCDD6 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0xD3DC2A0F EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0xFA6BCFEC EQ PUSH2 0x154 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x85 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x99 PUSH2 0x94 CALLDATASIZE PUSH1 0x4 PUSH2 0x534 JUMP JUMPDEST PUSH2 0x167 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0x578 JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA3 JUMP JUMPDEST PUSH2 0x99 PUSH2 0xF1 CALLDATASIZE PUSH1 0x4 PUSH2 0x5CE JUMP JUMPDEST PUSH2 0x1E7 JUMP JUMPDEST PUSH2 0x99 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x5F6 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH2 0x11C PUSH2 0x117 CALLDATASIZE PUSH1 0x4 PUSH2 0x578 JUMP JUMPDEST PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD PUSH2 0xA3 JUMP JUMPDEST PUSH2 0xCB PUSH7 0x3632C8EB5AF3B DUP2 JUMP JUMPDEST PUSH2 0x99 PUSH2 0x162 CALLDATASIZE PUSH1 0x4 PUSH2 0x647 JUMP JUMPDEST PUSH2 0x4D7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x60 DUP3 ADD MSTORE DUP4 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 MLOAD PUSH1 0x20 DUP2 PUSH1 0xC0 DUP5 PUSH0 PUSH1 0x5 PUSH0 NOT CALL PUSH2 0x1A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST MLOAD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP6 AND SWAP1 DUP5 DUP2 AND SWAP1 DUP5 DUP2 AND SWAP1 DUP5 SWAP1 PUSH2 0x1D1 DUP6 DUP6 DUP6 PUSH2 0x167 JUMP JUMPDEST PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x68C JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 PUSH2 0x1F5 PUSH1 0xF DUP6 PUSH2 0x69F JUMP JUMPDEST SWAP1 POP JUMPDEST DUP3 PUSH0 SUB PUSH2 0x244 JUMPI PUSH7 0x3632C8EB5AF3B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND DUP5 DUP3 AND EXP AND MOD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP PUSH1 0x2 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH2 0x23C JUMPI PUSH2 0x23C PUSH2 0x678 JUMP JUMPDEST DIV SWAP1 POP PUSH2 0x1F8 JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x259 PUSH1 0xF DUP7 PUSH2 0x69F JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 PUSH0 SUB PUSH2 0x2A4 JUMPI PUSH7 0x3632C8EB5AF3B PUSH2 0x275 DUP6 DUP6 PUSH2 0x4D7 JUMP JUMPDEST PUSH2 0x27F DUP9 DUP9 PUSH2 0x4D7 JUMP JUMPDEST EXP DUP2 PUSH2 0x28D JUMPI PUSH2 0x28D PUSH2 0x678 JUMP JUMPDEST MOD SWAP2 POP PUSH1 0x2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DIV SWAP1 POP PUSH2 0x25C JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x2E2 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND EQ JUMPDEST ISZERO PUSH2 0x2F4 JUMPI POP PUSH0 SWAP2 POP DUP2 SWAP1 POP DUP5 PUSH2 0x4CE JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SUB PUSH2 0x33B JUMPI PUSH0 DUP7 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x32E JUMPI DUP8 PUSH2 0x330 JUMP JUMPDEST DUP6 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x4CE JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SUB PUSH2 0x381 JUMPI PUSH0 DUP7 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x375 JUMPI DUP8 PUSH2 0x330 JUMP JUMPDEST DUP7 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x4CE JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SUB PUSH2 0x3C7 JUMPI PUSH0 DUP6 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x3BB JUMPI DUP7 PUSH2 0x330 JUMP JUMPDEST DUP8 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x4CE JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT ISZERO DUP1 ISZERO PUSH2 0x3FB JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT ISZERO JUMPDEST ISZERO PUSH2 0x433 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x426 JUMPI POP DUP5 SWAP2 POP DUP4 SWAP1 POP DUP3 PUSH2 0x4CE JUMP JUMPDEST POP DUP5 SWAP2 POP DUP3 SWAP1 POP DUP4 PUSH2 0x4CE JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT ISZERO DUP1 ISZERO PUSH2 0x467 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT ISZERO JUMPDEST ISZERO PUSH2 0x49F JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x492 JUMPI POP DUP4 SWAP2 POP DUP5 SWAP1 POP DUP3 PUSH2 0x4CE JUMP JUMPDEST POP DUP4 SWAP2 POP DUP3 SWAP1 POP DUP5 PUSH2 0x4CE JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x4C5 JUMPI POP DUP3 SWAP2 POP DUP5 SWAP1 POP DUP4 PUSH2 0x4CE JUMP JUMPDEST POP DUP3 SWAP2 POP DUP4 SWAP1 POP DUP5 JUMPDEST SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP2 PUSH2 0x4E5 PUSH1 0xF DUP6 PUSH2 0x69F JUMP JUMPDEST SWAP1 POP JUMPDEST DUP3 PUSH0 SUB PUSH2 0x244 JUMPI PUSH7 0x3632C8EB5AF3B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND DUP5 DUP3 AND EXP AND MOD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP PUSH1 0x2 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH2 0x52C JUMPI PUSH2 0x52C PUSH2 0x678 JUMP JUMPDEST DIV SWAP1 POP PUSH2 0x4E8 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x546 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x573 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x58A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x593 DUP5 PUSH2 0x55D JUMP JUMPDEST SWAP3 POP PUSH2 0x5A1 PUSH1 0x20 DUP6 ADD PUSH2 0x55D JUMP JUMPDEST SWAP2 POP PUSH2 0x5AF PUSH1 0x40 DUP6 ADD PUSH2 0x55D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x573 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5DF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5E8 DUP4 PUSH2 0x5B8 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x609 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x612 DUP6 PUSH2 0x5B8 JUMP JUMPDEST SWAP4 POP PUSH2 0x620 PUSH1 0x20 DUP7 ADD PUSH2 0x5B8 JUMP JUMPDEST SWAP3 POP PUSH2 0x62E PUSH1 0x40 DUP7 ADD PUSH2 0x5B8 JUMP JUMPDEST SWAP2 POP PUSH2 0x63C PUSH1 0x60 DUP7 ADD PUSH2 0x5B8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x658 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x661 DUP4 PUSH2 0x5B8 JUMP JUMPDEST SWAP2 POP PUSH2 0x66F PUSH1 0x20 DUP5 ADD PUSH2 0x5B8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x69A JUMPI PUSH2 0x69A PUSH2 0x678 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 PUSH2 0x6B7 JUMPI PUSH2 0x6B7 PUSH2 0x678 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND 0xB4 SWAP16 0xE3 0x4D PUSH18 0xC742FB1BF17054219323BE48BD312D185C66 SWAP1 MCOPY EQ ISZERO SDIV JUMPDEST EXTCODECOPY 0xA6 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "130:4079:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2196:872;;;;;;;;;;-1:-1:-1;2196:872:3;;;;;:::i;:::-;;:::i;:::-;;;639:25:5;;;627:2;612:18;2196:872:3;;;;;;;;1945:245;;;;;;;;;;-1:-1:-1;1945:245:3;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1354:31:5;;;1336:50;;1324:2;1309:18;1945:245:3;1184:208:5;1525:409:3;;;;;;:::i;:::-;;:::i;680:425::-;;;;;;:::i;:::-;;:::i;3078:1124::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;2516:31:5;;;2498:50;;2584:31;;;2579:2;2564:18;;2557:59;2652:31;;2632:18;;;2625:59;;;;2486:2;2471:18;3078:1124:3;2294:396:5;156:53:3;;194:15;156:53;;1110:408;;;;;;:::i;:::-;;:::i;2196:872::-;2264:14;2369:4;2363:11;2481:4;2472:7;2465:21;2526:4;2519;2510:7;2506:18;2499:32;2571:4;2564;2555:7;2551:18;2544:32;2676:2;2669:4;2660:7;2656:18;2649:30;2719:2;2712:4;2703:7;2699:18;2692:30;2762:2;2755:4;2746:7;2742:18;2735:30;2830:4;2824:11;2965:4;2958:5;2952:4;2943:7;2940:1;2934:4;2930:1;2926:6;2921:49;2911:105;;3000:1;2997;2990:12;2911:105;3040:12;;2196:872;-1:-1:-1;;;;;2196:872:3:o;1945:245::-;2011:13;-1:-1:-1;;;;;2036:14:3;;;;2060;;;;2084;;;;2011:13;;2126:15;2036:14;2060;2084;2126:6;:15::i;:::-;:38;;;;:::i;:::-;2108:57;1945:245;-1:-1:-1;;;;;;;;1945:245:3:o;1525:409::-;1587:12;1658:1;1587:12;1683:15;1696:2;1691:1;1683:15;:::i;:::-;1670:28;;1732:105;1738:4;1746:1;1738:9;1732:105;;194:15;-1:-1:-1;;;;;1775:6:3;;;;;;;1774:21;;-1:-1:-1;;;;;1767:28:3;;;1821:1;1818:2;-1:-1:-1;;;;;1818:4:3;;;;;;:::i;:::-;;1813:9;;1732:105;;;1601:333;;1525:409;;;;:::o;680:425::-;764:12;;832:15;845:2;840:1;832:15;:::i;:::-;819:28;;881:127;887:4;895:1;887:9;881:127;;194:15;939:13;948:1;950;939:8;:13::i;:::-;924;933:1;935;924:8;:13::i;:::-;:28;923:43;;;;;:::i;:::-;;;-1:-1:-1;992:1:3;-1:-1:-1;;;;;989:4:3;;;984:9;;881:127;;;778:327;680:425;;;;;;:::o;3078:1124::-;3148:6;3156;3164;3231:1;-1:-1:-1;;;;;3226:6:3;:1;-1:-1:-1;;;;;3226:6:3;;:16;;;;;3241:1;-1:-1:-1;;;;;3236:6:3;:1;-1:-1:-1;;;;;3236:6:3;;3226:16;3222:80;;;-1:-1:-1;3266:1:3;;-1:-1:-1;3266:1:3;;-1:-1:-1;3272:1:3;3258:16;;3222:80;3363:1;-1:-1:-1;;;;;3358:6:3;:1;-1:-1:-1;;;;;3358:6:3;;3354:75;;3388:1;3391;3398;-1:-1:-1;;;;;3394:5:3;:1;-1:-1:-1;;;;;3394:5:3;;:13;;3406:1;3394:13;;;3402:1;3394:13;3380:28;;;;;;;;3354:75;3447:1;-1:-1:-1;;;;;3442:6:3;:1;-1:-1:-1;;;;;3442:6:3;;3438:75;;3472:1;3475;3482;-1:-1:-1;;;;;3478:5:3;:1;-1:-1:-1;;;;;3478:5:3;;:13;;3490:1;3478:13;;;3486:1;3464:28;;;;;;;;3438:75;3531:1;-1:-1:-1;;;;;3526:6:3;:1;-1:-1:-1;;;;;3526:6:3;;3522:75;;3556:1;3559;3566;-1:-1:-1;;;;;3562:5:3;:1;-1:-1:-1;;;;;3562:5:3;;:13;;3574:1;3562:13;;;3570:1;3548:28;;;;;;;;3522:75;3651:1;-1:-1:-1;;;;;3646:6:3;:1;-1:-1:-1;;;;;3646:6:3;;;:16;;;;;3661:1;-1:-1:-1;;;;;3656:6:3;:1;-1:-1:-1;;;;;3656:6:3;;;3646:16;3642:554;;;3687:1;-1:-1:-1;;;;;3682:6:3;:1;-1:-1:-1;;;;;3682:6:3;;3678:142;;-1:-1:-1;3716:1:3;;-1:-1:-1;3719:1:3;;-1:-1:-1;3722:1:3;3708:16;;3678:142;-1:-1:-1;3784:1:3;;-1:-1:-1;3787:1:3;;-1:-1:-1;3790:1:3;3776:16;;3642:554;3845:1;-1:-1:-1;;;;;3840:6:3;:1;-1:-1:-1;;;;;3840:6:3;;;:16;;;;;3855:1;-1:-1:-1;;;;;3850:6:3;:1;-1:-1:-1;;;;;3850:6:3;;;3840:16;3836:360;;;3881:1;-1:-1:-1;;;;;3876:6:3;:1;-1:-1:-1;;;;;3876:6:3;;3872:142;;-1:-1:-1;3910:1:3;;-1:-1:-1;3913:1:3;;-1:-1:-1;3916:1:3;3902:16;;3872:142;-1:-1:-1;3978:1:3;;-1:-1:-1;3981:1:3;;-1:-1:-1;3984:1:3;3970:16;;3836:360;4053:1;-1:-1:-1;;;;;4048:6:3;:1;-1:-1:-1;;;;;4048:6:3;;4044:142;;-1:-1:-1;4082:1:3;;-1:-1:-1;4085:1:3;;-1:-1:-1;4088:1:3;4074:16;;4044:142;-1:-1:-1;4150:1:3;;-1:-1:-1;4153:1:3;;-1:-1:-1;4156:1:3;4044:142;3078:1124;;;;;;;:::o;1110:408::-;1171:12;1242:1;1171:12;1267:15;1280:2;1275:1;1267:15;:::i;:::-;1254:28;;1316:105;1322:4;1330:1;1322:9;1316:105;;194:15;-1:-1:-1;;;;;1359:6:3;;;;;;;1358:21;;-1:-1:-1;;;;;1351:28:3;;;1405:1;1402:2;-1:-1:-1;;;;;1402:4:3;;;;;;:::i;:::-;;1397:9;;1316:105;;14:466:5;91:6;99;107;160:2;148:9;139:7;135:23;131:32;128:52;;;176:1;173;166:12;128:52;-1:-1:-1;;221:23:5;;;341:2;326:18;;313:32;;-1:-1:-1;444:2:5;429:18;;;416:32;;14:466;-1:-1:-1;14:466:5:o;675:171::-;742:20;;-1:-1:-1;;;;;791:30:5;;781:41;;771:69;;836:1;833;826:12;771:69;675:171;;;:::o;851:328::-;925:6;933;941;994:2;982:9;973:7;969:23;965:32;962:52;;;1010:1;1007;1000:12;962:52;1033:28;1051:9;1033:28;:::i;:::-;1023:38;;1080:37;1113:2;1102:9;1098:18;1080:37;:::i;:::-;1070:47;;1136:37;1169:2;1158:9;1154:18;1136:37;:::i;:::-;1126:47;;851:328;;;;;:::o;1397:173::-;1465:20;;-1:-1:-1;;;;;1514:31:5;;1504:42;;1494:70;;1560:1;1557;1550:12;1575:300;1643:6;1651;1704:2;1692:9;1683:7;1679:23;1675:32;1672:52;;;1720:1;1717;1710:12;1672:52;1743:29;1762:9;1743:29;:::i;:::-;1733:39;1841:2;1826:18;;;;1813:32;;-1:-1:-1;;;1575:300:5:o;1880:409::-;1966:6;1974;1982;1990;2043:3;2031:9;2022:7;2018:23;2014:33;2011:53;;;2060:1;2057;2050:12;2011:53;2083:29;2102:9;2083:29;:::i;:::-;2073:39;;2131:38;2165:2;2154:9;2150:18;2131:38;:::i;:::-;2121:48;;2188:38;2222:2;2211:9;2207:18;2188:38;:::i;:::-;2178:48;;2245:38;2279:2;2268:9;2264:18;2245:38;:::i;:::-;2235:48;;1880:409;;;;;;;:::o;2695:260::-;2763:6;2771;2824:2;2812:9;2803:7;2799:23;2795:32;2792:52;;;2840:1;2837;2830:12;2792:52;2863:29;2882:9;2863:29;:::i;:::-;2853:39;;2911:38;2945:2;2934:9;2930:18;2911:38;:::i;:::-;2901:48;;2695:260;;;;;:::o;2960:127::-;3021:10;3016:3;3012:20;3009:1;3002:31;3052:4;3049:1;3042:15;3076:4;3073:1;3066:15;3092:112;3124:1;3150;3140:35;;3155:18;;:::i;:::-;-1:-1:-1;3189:9:5;;3092:112::o;3209:197::-;3249:1;-1:-1:-1;;;;;3276:27:5;;;3312:37;;3329:18;;:::i;:::-;-1:-1:-1;;;;;3367:27:5;;;;3363:37;;;;;3209:197;-1:-1:-1;;3209:197:5:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "359000",
								"executionCost": "426",
								"totalCost": "359426"
							},
							"external": {
								"MotzkinPrime()": "287",
								"hashWith(address,address)": "infinite",
								"hashWithD(address,address,address,address)": "infinite",
								"hashWithHash(address,uint256)": "infinite",
								"modExp(uint256,uint256,uint256)": "infinite",
								"modExp64(uint64,uint64,uint64)": "infinite",
								"sortThree(uint64,uint64,uint64)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 130,
									"end": 4209,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 130,
									"end": 4209,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200bb49fe34d71c742fb1bf17054219323be48bd312d185c66905e1415055b3ca664736f6c634300081a0033",
									".code": [
										{
											"begin": 130,
											"end": 4209,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "PUSH",
											"source": 3,
											"value": "3148F14F"
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "PUSH",
											"source": 3,
											"value": "53DF6E35"
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "PUSH",
											"source": 3,
											"value": "6592F007"
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "PUSH",
											"source": 3,
											"value": "6E27811B"
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "PUSH",
											"source": 3,
											"value": "98FDCDD6"
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "PUSH",
											"source": 3,
											"value": "D3DC2A0F"
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "PUSH",
											"source": 3,
											"value": "FA6BCFEC"
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 130,
											"end": 4209,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2196,
											"end": 3068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2196,
											"end": 3068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 639,
											"end": 664,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 639,
											"end": 664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 639,
											"end": 664,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 627,
											"end": 629,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 630,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2190,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1945,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2190,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2190,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2190,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1945,
											"end": 2190,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2190,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 2190,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2190,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2190,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1945,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1945,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1945,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1945,
											"end": 2190,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2190,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1945,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1945,
											"end": 2190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2190,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1945,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1945,
											"end": 2190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2190,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1945,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2190,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 2190,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1354,
											"end": 1385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1354,
											"end": 1385,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1354,
											"end": 1385,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1336,
											"end": 1386,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1336,
											"end": 1386,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1326,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1309,
											"end": 1327,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1184,
											"end": 1392,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1525,
											"end": 1934,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1525,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1525,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1525,
											"end": 1934,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1934,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1525,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1525,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1934,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1525,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1525,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1105,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 680,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 680,
											"end": 1105,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1105,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 680,
											"end": 1105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1105,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 680,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 680,
											"end": 1105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3078,
											"end": 4202,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3078,
											"end": 4202,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3078,
											"end": 4202,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3078,
											"end": 4202,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3078,
											"end": 4202,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3078,
											"end": 4202,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3078,
											"end": 4202,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 3078,
											"end": 4202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3078,
											"end": 4202,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3078,
											"end": 4202,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3078,
											"end": 4202,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3078,
											"end": 4202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3078,
											"end": 4202,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3078,
											"end": 4202,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3078,
											"end": 4202,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3078,
											"end": 4202,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3078,
											"end": 4202,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2516,
											"end": 2547,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2547,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2547,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2498,
											"end": 2548,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2498,
											"end": 2548,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2584,
											"end": 2615,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2584,
											"end": 2615,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2584,
											"end": 2615,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2579,
											"end": 2581,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2564,
											"end": 2582,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2564,
											"end": 2582,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2616,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2683,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2683,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2632,
											"end": 2650,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2632,
											"end": 2650,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2632,
											"end": 2650,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2625,
											"end": 2684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2625,
											"end": 2684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2625,
											"end": 2684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2625,
											"end": 2684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2486,
											"end": 2488,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2471,
											"end": 2489,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3078,
											"end": 4202,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2294,
											"end": 2690,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 156,
											"end": 209,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 156,
											"end": 209,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 156,
											"end": 209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 194,
											"end": 209,
											"name": "PUSH",
											"source": 3,
											"value": "3632C8EB5AF3B"
										},
										{
											"begin": 156,
											"end": 209,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 156,
											"end": 209,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1110,
											"end": 1518,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1110,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1110,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1110,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1110,
											"end": 1518,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1110,
											"end": 1518,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1110,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1110,
											"end": 1518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1110,
											"end": 1518,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1110,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1110,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1110,
											"end": 1518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2278,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2373,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2363,
											"end": 2374,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2485,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2472,
											"end": 2479,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2465,
											"end": 2486,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2526,
											"end": 2530,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2519,
											"end": 2523,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2524,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2531,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2571,
											"end": 2575,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2564,
											"end": 2568,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2555,
											"end": 2562,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2551,
											"end": 2569,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2544,
											"end": 2576,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2676,
											"end": 2678,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2669,
											"end": 2673,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2660,
											"end": 2667,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2656,
											"end": 2674,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2649,
											"end": 2679,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2721,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2712,
											"end": 2716,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2703,
											"end": 2710,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 2722,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2762,
											"end": 2764,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2759,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 2746,
											"end": 2753,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2760,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2735,
											"end": 2765,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 2824,
											"end": 2835,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2965,
											"end": 2969,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2958,
											"end": 2963,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2952,
											"end": 2956,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 2943,
											"end": 2950,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2941,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2934,
											"end": 2938,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2930,
											"end": 2931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2932,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2921,
											"end": 2970,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2911,
											"end": 3016,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3000,
											"end": 3001,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2997,
											"end": 2998,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2990,
											"end": 3002,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 3016,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2911,
											"end": 3016,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3040,
											"end": 3052,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3040,
											"end": 3052,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 3068,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2196,
											"end": 3068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2190,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1945,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2036,
											"end": 2050,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2050,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2050,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2050,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2060,
											"end": 2074,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2060,
											"end": 2074,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2060,
											"end": 2074,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2060,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2098,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2098,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2098,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2098,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2024,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2036,
											"end": 2050,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2060,
											"end": 2074,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2098,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2126,
											"end": 2141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2141,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2126,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2126,
											"end": 2164,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2164,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2126,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2164,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2126,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2108,
											"end": 2165,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2190,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1945,
											"end": 2190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1934,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1525,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1587,
											"end": 1599,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1659,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1587,
											"end": 1599,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1683,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 1691,
											"end": 1692,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1683,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1683,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1683,
											"end": 1698,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1683,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1698,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1698,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1732,
											"end": 1837,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1732,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1742,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1746,
											"end": 1747,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1747,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1732,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1732,
											"end": 1837,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 194,
											"end": 209,
											"name": "PUSH",
											"source": 3,
											"value": "3632C8EB5AF3B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1775,
											"end": 1781,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1775,
											"end": 1781,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1775,
											"end": 1781,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1775,
											"end": 1781,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1775,
											"end": 1781,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1775,
											"end": 1781,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1775,
											"end": 1781,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1774,
											"end": 1795,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1774,
											"end": 1795,
											"name": "MOD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1767,
											"end": 1795,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1767,
											"end": 1795,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1767,
											"end": 1795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1821,
											"end": 1822,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1818,
											"end": 1820,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1818,
											"end": 1822,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1822,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1818,
											"end": 1822,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1818,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1818,
											"end": 1822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1822,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1818,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1822,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1813,
											"end": 1822,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1813,
											"end": 1822,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1732,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1732,
											"end": 1837,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1732,
											"end": 1837,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1732,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1601,
											"end": 1934,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1601,
											"end": 1934,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1934,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1934,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1934,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1934,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1105,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 680,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 764,
											"end": 776,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 776,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 832,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 845,
											"end": 847,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 840,
											"end": 841,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 832,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 832,
											"end": 847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 832,
											"end": 847,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 832,
											"end": 847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 819,
											"end": 847,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 819,
											"end": 847,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 881,
											"end": 1008,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 881,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 887,
											"end": 891,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 896,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 896,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 881,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 881,
											"end": 1008,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 194,
											"end": 209,
											"name": "PUSH",
											"source": 3,
											"value": "3632C8EB5AF3B"
										},
										{
											"begin": 939,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 948,
											"end": 949,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 950,
											"end": 951,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 939,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 939,
											"end": 952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 939,
											"end": 952,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 939,
											"end": 952,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 924,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 933,
											"end": 934,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 935,
											"end": 936,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 924,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 924,
											"end": 937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 937,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 924,
											"end": 937,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 924,
											"end": 952,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 923,
											"end": 966,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 923,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 923,
											"end": 966,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 923,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 923,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 923,
											"end": 966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 923,
											"end": 966,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 923,
											"end": 966,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 923,
											"end": 966,
											"name": "MOD",
											"source": 3
										},
										{
											"begin": 923,
											"end": 966,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 992,
											"end": 993,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 989,
											"end": 993,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 989,
											"end": 993,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 989,
											"end": 993,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 984,
											"end": 993,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 984,
											"end": 993,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 881,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 881,
											"end": 1008,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 881,
											"end": 1008,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 881,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 778,
											"end": 1105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1105,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1105,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3078,
											"end": 4202,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3078,
											"end": 4202,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3148,
											"end": 3154,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3156,
											"end": 3162,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3164,
											"end": 3170,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3231,
											"end": 3232,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3226,
											"end": 3232,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3226,
											"end": 3227,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3226,
											"end": 3232,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3226,
											"end": 3232,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3226,
											"end": 3242,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3226,
											"end": 3242,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3226,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3226,
											"end": 3242,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3226,
											"end": 3242,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3241,
											"end": 3242,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3236,
											"end": 3242,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3236,
											"end": 3237,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3236,
											"end": 3242,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3236,
											"end": 3242,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3226,
											"end": 3242,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3226,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3222,
											"end": 3302,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3222,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3222,
											"end": 3302,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3266,
											"end": 3267,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3266,
											"end": 3267,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3266,
											"end": 3267,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3266,
											"end": 3267,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3272,
											"end": 3273,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3258,
											"end": 3274,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3222,
											"end": 3302,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3222,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3363,
											"end": 3364,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3358,
											"end": 3364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3358,
											"end": 3359,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3358,
											"end": 3364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3358,
											"end": 3364,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3354,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 3354,
											"end": 3429,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3388,
											"end": 3389,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3391,
											"end": 3392,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3398,
											"end": 3399,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3394,
											"end": 3399,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3395,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3394,
											"end": 3399,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3399,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 3394,
											"end": 3407,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3406,
											"end": 3407,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3394,
											"end": 3407,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3407,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 3394,
											"end": 3407,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3402,
											"end": 3403,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3407,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3394,
											"end": 3407,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3380,
											"end": 3408,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3380,
											"end": 3408,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3380,
											"end": 3408,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3380,
											"end": 3408,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3380,
											"end": 3408,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3380,
											"end": 3408,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3380,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3380,
											"end": 3408,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3354,
											"end": 3429,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 3354,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3447,
											"end": 3448,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3442,
											"end": 3448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3443,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3442,
											"end": 3448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3448,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3438,
											"end": 3513,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3472,
											"end": 3473,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3476,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3482,
											"end": 3483,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3478,
											"end": 3483,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3478,
											"end": 3479,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3478,
											"end": 3483,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3478,
											"end": 3483,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3478,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3478,
											"end": 3491,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3490,
											"end": 3491,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3478,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3478,
											"end": 3491,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3478,
											"end": 3491,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3478,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3486,
											"end": 3487,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3464,
											"end": 3492,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3464,
											"end": 3492,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3464,
											"end": 3492,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3464,
											"end": 3492,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3464,
											"end": 3492,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3464,
											"end": 3492,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3464,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3464,
											"end": 3492,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3513,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3438,
											"end": 3513,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3531,
											"end": 3532,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3526,
											"end": 3532,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3526,
											"end": 3527,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3526,
											"end": 3532,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3526,
											"end": 3532,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3522,
											"end": 3597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3522,
											"end": 3597,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3556,
											"end": 3557,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3560,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3566,
											"end": 3567,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3562,
											"end": 3567,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3562,
											"end": 3563,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3562,
											"end": 3567,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3562,
											"end": 3567,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3562,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3562,
											"end": 3575,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3574,
											"end": 3575,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3562,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3562,
											"end": 3575,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3562,
											"end": 3575,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3562,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3570,
											"end": 3571,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3522,
											"end": 3597,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3522,
											"end": 3597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3651,
											"end": 3652,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3646,
											"end": 3652,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3646,
											"end": 3647,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3646,
											"end": 3652,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3646,
											"end": 3652,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3646,
											"end": 3652,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3646,
											"end": 3662,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3646,
											"end": 3662,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3646,
											"end": 3662,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3646,
											"end": 3662,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3646,
											"end": 3662,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3661,
											"end": 3662,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3656,
											"end": 3662,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3656,
											"end": 3657,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3656,
											"end": 3662,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3656,
											"end": 3662,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3656,
											"end": 3662,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3646,
											"end": 3662,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3646,
											"end": 3662,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3642,
											"end": 4196,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3642,
											"end": 4196,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3642,
											"end": 4196,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3687,
											"end": 3688,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3682,
											"end": 3688,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3682,
											"end": 3683,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3682,
											"end": 3688,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3682,
											"end": 3688,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3678,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3678,
											"end": 3820,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3716,
											"end": 3717,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3716,
											"end": 3717,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3719,
											"end": 3720,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3719,
											"end": 3720,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3722,
											"end": 3723,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3708,
											"end": 3724,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3678,
											"end": 3820,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3678,
											"end": 3820,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3784,
											"end": 3785,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3784,
											"end": 3785,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3787,
											"end": 3788,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3787,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3790,
											"end": 3791,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3776,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3776,
											"end": 3792,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3642,
											"end": 4196,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3642,
											"end": 4196,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3845,
											"end": 3846,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3840,
											"end": 3846,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3840,
											"end": 3841,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3840,
											"end": 3846,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3840,
											"end": 3846,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3840,
											"end": 3846,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3840,
											"end": 3856,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3840,
											"end": 3856,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3840,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3840,
											"end": 3856,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3840,
											"end": 3856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3855,
											"end": 3856,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3850,
											"end": 3856,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3851,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3850,
											"end": 3856,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3856,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3856,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3840,
											"end": 3856,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3840,
											"end": 3856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 4196,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 4196,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 3836,
											"end": 4196,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3881,
											"end": 3882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3876,
											"end": 3877,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3872,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 3872,
											"end": 4014,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3910,
											"end": 3911,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3910,
											"end": 3911,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3913,
											"end": 3914,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3913,
											"end": 3914,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3916,
											"end": 3917,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3902,
											"end": 3918,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3872,
											"end": 4014,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 3872,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3978,
											"end": 3979,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3978,
											"end": 3979,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3981,
											"end": 3982,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3981,
											"end": 3982,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3984,
											"end": 3985,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3970,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3970,
											"end": 3986,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 4196,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 3836,
											"end": 4196,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4053,
											"end": 4054,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4048,
											"end": 4054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4048,
											"end": 4049,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4048,
											"end": 4054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4048,
											"end": 4054,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4044,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 4044,
											"end": 4186,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4082,
											"end": 4083,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4082,
											"end": 4083,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4085,
											"end": 4086,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4085,
											"end": 4086,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4088,
											"end": 4089,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4074,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4074,
											"end": 4090,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4044,
											"end": 4186,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 4044,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4150,
											"end": 4151,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4150,
											"end": 4151,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4153,
											"end": 4154,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4153,
											"end": 4154,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4156,
											"end": 4157,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4044,
											"end": 4186,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4044,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3078,
											"end": 4202,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3078,
											"end": 4202,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3078,
											"end": 4202,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3078,
											"end": 4202,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3078,
											"end": 4202,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3078,
											"end": 4202,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3078,
											"end": 4202,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3078,
											"end": 4202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1110,
											"end": 1518,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1110,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1183,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1243,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1183,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1267,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 1275,
											"end": 1276,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1267,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1267,
											"end": 1282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1267,
											"end": 1282,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1267,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1282,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1316,
											"end": 1421,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1316,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1322,
											"end": 1326,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1330,
											"end": 1331,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1331,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1316,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1316,
											"end": 1421,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 194,
											"end": 209,
											"name": "PUSH",
											"source": 3,
											"value": "3632C8EB5AF3B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1379,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1379,
											"name": "MOD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1351,
											"end": 1379,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1379,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1379,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1406,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1402,
											"end": 1404,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1402,
											"end": 1406,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1402,
											"end": 1406,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1402,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1402,
											"end": 1406,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1402,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1402,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1402,
											"end": 1406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1402,
											"end": 1406,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1402,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1402,
											"end": 1406,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1406,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1406,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1316,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1316,
											"end": 1421,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 480,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 14,
											"end": 480,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 91,
											"end": 97,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 99,
											"end": 105,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 107,
											"end": 113,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 160,
											"end": 162,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 148,
											"end": 157,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 139,
											"end": 146,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 135,
											"end": 158,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 131,
											"end": 163,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 128,
											"end": 180,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 128,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 128,
											"end": 180,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 176,
											"end": 177,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 174,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 166,
											"end": 178,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 128,
											"end": 180,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 128,
											"end": 180,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 221,
											"end": 244,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 221,
											"end": 244,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 221,
											"end": 244,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 341,
											"end": 343,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 326,
											"end": 344,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 326,
											"end": 344,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 313,
											"end": 345,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 313,
											"end": 345,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 444,
											"end": 446,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 429,
											"end": 447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 429,
											"end": 447,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 429,
											"end": 447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 416,
											"end": 448,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 416,
											"end": 448,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14,
											"end": 480,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 675,
											"end": 846,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 675,
											"end": 846,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 742,
											"end": 762,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 742,
											"end": 762,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 791,
											"end": 821,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 791,
											"end": 821,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 781,
											"end": 822,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 781,
											"end": 822,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 771,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 771,
											"end": 840,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 836,
											"end": 837,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 833,
											"end": 834,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 826,
											"end": 838,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 771,
											"end": 840,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 771,
											"end": 840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 675,
											"end": 846,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 675,
											"end": 846,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 675,
											"end": 846,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 675,
											"end": 846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 851,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 851,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 925,
											"end": 931,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 933,
											"end": 939,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 941,
											"end": 947,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 994,
											"end": 996,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 982,
											"end": 991,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 973,
											"end": 980,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 969,
											"end": 992,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 965,
											"end": 997,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 962,
											"end": 1014,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 962,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 962,
											"end": 1014,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1010,
											"end": 1011,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1008,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1012,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 962,
											"end": 1014,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 962,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1051,
											"end": 1060,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1033,
											"end": 1061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1061,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1033,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1061,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1061,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1080,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1113,
											"end": 1115,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1102,
											"end": 1111,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1080,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1080,
											"end": 1117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1080,
											"end": 1117,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1080,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1117,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1117,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1169,
											"end": 1171,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1158,
											"end": 1167,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1154,
											"end": 1172,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1136,
											"end": 1173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1173,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1136,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1126,
											"end": 1173,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1126,
											"end": 1173,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 851,
											"end": 1179,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 851,
											"end": 1179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 851,
											"end": 1179,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 851,
											"end": 1179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 851,
											"end": 1179,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 851,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1397,
											"end": 1570,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1397,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1485,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1485,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1545,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1514,
											"end": 1545,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1546,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1546,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1494,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1494,
											"end": 1564,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1560,
											"end": 1561,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1557,
											"end": 1558,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1875,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1575,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1643,
											"end": 1649,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1651,
											"end": 1657,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1704,
											"end": 1706,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1690,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1702,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1675,
											"end": 1707,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1672,
											"end": 1724,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1672,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1672,
											"end": 1724,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1717,
											"end": 1718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1722,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1672,
											"end": 1724,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1672,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1743,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1762,
											"end": 1771,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1743,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1743,
											"end": 1772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1743,
											"end": 1772,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1743,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1733,
											"end": 1772,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1813,
											"end": 1845,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1813,
											"end": 1845,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1575,
											"end": 1875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1880,
											"end": 2289,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1880,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1966,
											"end": 1972,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1980,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1982,
											"end": 1988,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 1996,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2043,
											"end": 2046,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2031,
											"end": 2040,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2022,
											"end": 2029,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2041,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2047,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2064,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2011,
											"end": 2064,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2060,
											"end": 2061,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2057,
											"end": 2058,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2050,
											"end": 2062,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2064,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2011,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2102,
											"end": 2111,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 2083,
											"end": 2112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2112,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2083,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2073,
											"end": 2112,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2073,
											"end": 2112,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2165,
											"end": 2167,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2163,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2168,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 2131,
											"end": 2169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2169,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2131,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2169,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2169,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2188,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2222,
											"end": 2224,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2211,
											"end": 2220,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2207,
											"end": 2225,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2188,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 2188,
											"end": 2226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2188,
											"end": 2226,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2188,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2226,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2226,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2279,
											"end": 2281,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2268,
											"end": 2277,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2264,
											"end": 2282,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 2245,
											"end": 2283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2283,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2245,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2235,
											"end": 2283,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2235,
											"end": 2283,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1880,
											"end": 2289,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1880,
											"end": 2289,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1880,
											"end": 2289,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1880,
											"end": 2289,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1880,
											"end": 2289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1880,
											"end": 2289,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1880,
											"end": 2289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1880,
											"end": 2289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2695,
											"end": 2955,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2695,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2763,
											"end": 2769,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2771,
											"end": 2777,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2824,
											"end": 2826,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2812,
											"end": 2821,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2810,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2822,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2795,
											"end": 2827,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2792,
											"end": 2844,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2792,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2792,
											"end": 2844,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2840,
											"end": 2841,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2837,
											"end": 2838,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2842,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2792,
											"end": 2844,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2792,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2863,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2882,
											"end": 2891,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2863,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 2863,
											"end": 2892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2863,
											"end": 2892,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2863,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2853,
											"end": 2892,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2853,
											"end": 2892,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2911,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2945,
											"end": 2947,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2934,
											"end": 2943,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2930,
											"end": 2948,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2911,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 2911,
											"end": 2949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2911,
											"end": 2949,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2911,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 2949,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 2949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2695,
											"end": 2955,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2695,
											"end": 2955,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2695,
											"end": 2955,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2695,
											"end": 2955,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2695,
											"end": 2955,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2695,
											"end": 2955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2960,
											"end": 3087,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 2960,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3021,
											"end": 3031,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 3016,
											"end": 3019,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3012,
											"end": 3032,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3009,
											"end": 3010,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3033,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3052,
											"end": 3056,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 3049,
											"end": 3050,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3042,
											"end": 3057,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3076,
											"end": 3080,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3073,
											"end": 3074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3092,
											"end": 3204,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 3092,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3124,
											"end": 3125,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3150,
											"end": 3151,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3140,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 3140,
											"end": 3175,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3155,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 3155,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 3155,
											"end": 3173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3155,
											"end": 3173,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 3155,
											"end": 3173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3189,
											"end": 3198,
											"name": "MOD",
											"source": 5
										},
										{
											"begin": 3189,
											"end": 3198,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3092,
											"end": 3204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3209,
											"end": 3406,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3209,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3249,
											"end": 3250,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3276,
											"end": 3303,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3276,
											"end": 3303,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3276,
											"end": 3303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3312,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 3312,
											"end": 3349,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3329,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 3329,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 3329,
											"end": 3347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3329,
											"end": 3347,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 3329,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3363,
											"end": 3400,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3363,
											"end": 3400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3363,
											"end": 3400,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3363,
											"end": 3400,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3363,
											"end": 3400,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3209,
											"end": 3406,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3209,
											"end": 3406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/AccessRegistry.sol",
								"contracts/atropamath.sol",
								"contracts/registry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"MotzkinPrime()": "d3dc2a0f",
							"hashWith(address,address)": "fa6bcfec",
							"hashWithD(address,address,address,address)": "6e27811b",
							"hashWithHash(address,uint256)": "6592f007",
							"modExp(uint256,uint256,uint256)": "3148f14f",
							"modExp64(uint64,uint64,uint64)": "53df6e35",
							"sortThree(uint64,uint64,uint64)": "98fdcdd6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MotzkinPrime\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"b\",\"type\":\"address\"}],\"name\":\"hashWith\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"hash\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"b\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"c\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"g\",\"type\":\"address\"}],\"name\":\"hashWithD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"hash\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"hashWithHash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"hash\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"a\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"b\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"c\",\"type\":\"uint64\"}],\"name\":\"sortThree\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/atropamath.sol\":\"AtropaMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/atropamath.sol\":{\"keccak256\":\"0x40c04fc6e6870caa6d91fefd2d7f5f1f9fe1d3d60d585e3afd1cc8d892e28291\",\"license\":\"Sharia\",\"urls\":[\"bzz-raw://3569ae5182334276c9cea393ccc32adc0a51db01e7cf9d20ca1273b7e9d790de\",\"dweb:/ipfs/QmX8NMKWmbYW71qAn1dc2WVqGYDc8rgBTefrBqv84xvX4Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"RNG": {
					"abi": [
						{
							"inputs": [],
							"name": "Random",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"Random()": "604a6fa9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Random\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/atropamath.sol\":\"RNG\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/atropamath.sol\":{\"keccak256\":\"0x40c04fc6e6870caa6d91fefd2d7f5f1f9fe1d3d60d585e3afd1cc8d892e28291\",\"license\":\"Sharia\",\"urls\":[\"bzz-raw://3569ae5182334276c9cea393ccc32adc0a51db01e7cf9d20ca1273b7e9d790de\",\"dweb:/ipfs/QmX8NMKWmbYW71qAn1dc2WVqGYDc8rgBTefrBqv84xvX4Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/registry.sol": {
				"LibRegistry": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/registry.sol\":62:1345  library LibRegistry {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/registry.sol\":62:1345  library LibRegistry {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x253472ca\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8b584f4d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x9047f6de\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x9ba54d2d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xcfe6aa63\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/registry.sol\":500:632  function Contains(Registry storage _registry, uint256 key) public view returns(bool) {... */\n    tag_2:\n      tag_7\n      tag_8\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      mload(0x40)\n        /* \"#utility.yul\":513:527   */\n      swap1\n      iszero\n        /* \"#utility.yul\":506:528   */\n      iszero\n        /* \"#utility.yul\":488:529   */\n      dup2\n      mstore\n        /* \"#utility.yul\":476:478   */\n      0x20\n        /* \"#utility.yul\":461:479   */\n      add\n        /* \"contracts/registry.sol\":500:632  function Contains(Registry storage _registry, uint256 key) public view returns(bool) {... */\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/registry.sol\":638:910  function Register(Registry storage _registry, uint256 key) public {... */\n    tag_3:\n      dup2\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      tag_14\n      tag_15\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_15:\n      tag_16\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/registry.sol\":916:1343  function Remove(Registry storage _registry, uint256 key) public {... */\n    tag_4:\n      dup2\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_14\n      tag_19\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_19:\n      tag_20\n      jump\t// in\n        /* \"contracts/registry.sol\":376:494  function Count(Registry  storage _registry) public view returns(uint256) {... */\n    tag_5:\n      tag_21\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n        /* \"contracts/registry.sol\":466:487  _registry.keys.length */\n      sload\n      swap1\n        /* \"contracts/registry.sol\":376:494  function Count(Registry  storage _registry) public view returns(uint256) {... */\n      jump\n    tag_21:\n      mload(0x40)\n        /* \"#utility.yul\":952:977   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":940:942   */\n      0x20\n        /* \"#utility.yul\":925:943   */\n      add\n        /* \"contracts/registry.sol\":376:494  function Count(Registry  storage _registry) public view returns(uint256) {... */\n      tag_11\n        /* \"#utility.yul\":798:983   */\n      jump\n        /* \"contracts/registry.sol\":229:370  function GetHashByIndex(Registry storage _registry, uint256 index) public view returns(uint256) {... */\n    tag_6:\n      tag_21\n      tag_28\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_28:\n      tag_29\n      jump\t// in\n        /* \"contracts/registry.sol\":500:632  function Contains(Registry storage _registry, uint256 key) public view returns(bool) {... */\n    tag_10:\n        /* \"contracts/registry.sol\":579:583  bool */\n      0x00\n        /* \"contracts/registry.sol\":602:625  _registry.inserted[key] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/registry.sol\":602:620  _registry.inserted */\n      0x02\n      dup4\n      add\n        /* \"contracts/registry.sol\":602:625  _registry.inserted[key] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/registry.sol\":500:632  function Contains(Registry storage _registry, uint256 key) public view returns(bool) {... */\n    tag_31:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/registry.sol\":638:910  function Register(Registry storage _registry, uint256 key) public {... */\n    tag_16:\n        /* \"contracts/registry.sol\":718:741  _registry.inserted[key] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/registry.sol\":718:736  _registry.inserted */\n      0x02\n      dup4\n      add\n        /* \"contracts/registry.sol\":718:741  _registry.inserted[key] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/registry.sol\":714:904  if(!_registry.inserted[key])... */\n      tag_33\n      jumpi\n        /* \"contracts/registry.sol\":765:788  _registry.inserted[key] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/registry.sol\":765:783  _registry.inserted */\n      0x02\n      dup4\n      add\n        /* \"contracts/registry.sol\":765:788  _registry.inserted[key] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/registry.sol\":765:795  _registry.inserted[key] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/registry.sol\":791:795  true */\n      0x01\n        /* \"contracts/registry.sol\":765:795  _registry.inserted[key] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/registry.sol\":834:855  _registry.keys.length */\n      dup6\n      sload\n        /* \"contracts/registry.sol\":809:826  _registry.indexOf */\n      dup7\n      dup3\n      add\n        /* \"contracts/registry.sol\":809:831  _registry.indexOf[key] */\n      dup5\n      mstore\n      swap2\n      dup5\n      keccak256\n        /* \"contracts/registry.sol\":809:855  _registry.indexOf[key] = _registry.keys.length */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/registry.sol\":869:893  _registry.keys.push(key) */\n      dup2\n      add\n      dup6\n      sstore\n      dup5\n      dup4\n      mstore\n      swap2\n      keccak256\n      add\n      dup2\n      swap1\n      sstore\n        /* \"contracts/registry.sol\":714:904  if(!_registry.inserted[key])... */\n    tag_33:\n        /* \"contracts/registry.sol\":638:910  function Register(Registry storage _registry, uint256 key) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/registry.sol\":916:1343  function Remove(Registry storage _registry, uint256 key) public {... */\n    tag_20:\n        /* \"contracts/registry.sol\":994:1017  _registry.inserted[key] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/registry.sol\":994:1012  _registry.inserted */\n      0x02\n      dup4\n      add\n        /* \"contracts/registry.sol\":994:1017  _registry.inserted[key] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/registry.sol\":990:1026  if(!_registry.inserted[key]) return; */\n      tag_36\n      jumpi\n        /* \"contracts/registry.sol\":916:1343  function Remove(Registry storage _registry, uint256 key) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/registry.sol\":990:1026  if(!_registry.inserted[key]) return; */\n    tag_36:\n        /* \"contracts/registry.sol\":1042:1065  _registry.inserted[key] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/registry.sol\":1042:1060  _registry.inserted */\n      0x02\n      dup4\n      add\n        /* \"contracts/registry.sol\":1042:1065  _registry.inserted[key] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/registry.sol\":1035:1065  delete _registry.inserted[key] */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n      0x01\n        /* \"contracts/registry.sol\":1091:1108  _registry.indexOf */\n      dup1\n      dup7\n      add\n        /* \"contracts/registry.sol\":1091:1113  _registry.indexOf[key] */\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n      sload\n        /* \"contracts/registry.sol\":1156:1177  _registry.keys.length */\n      dup5\n      sload\n        /* \"contracts/registry.sol\":1091:1113  _registry.indexOf[key] */\n      swap1\n      swap3\n        /* \"contracts/registry.sol\":1042:1065  _registry.inserted[key] */\n      swap2\n        /* \"contracts/registry.sol\":1042:1051  _registry */\n      dup6\n      swap2\n        /* \"contracts/registry.sol\":1156:1181  _registry.keys.length - 1 */\n      tag_37\n      swap2\n        /* \"contracts/registry.sol\":1035:1065  delete _registry.inserted[key] */\n      swap1\n        /* \"contracts/registry.sol\":1156:1181  _registry.keys.length - 1 */\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"contracts/registry.sol\":1141:1182  _registry.keys[_registry.keys.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_40\n      jumpi\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/registry.sol\":1192:1218  _registry.indexOf[lastKey] */\n      dup1\n      dup4\n      mstore\n        /* \"contracts/registry.sol\":1192:1209  _registry.indexOf */\n      0x01\n      dup8\n      add\n        /* \"contracts/registry.sol\":1192:1218  _registry.indexOf[lastKey] */\n      swap1\n      swap2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/registry.sol\":1192:1226  _registry.indexOf[lastKey] = index */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/registry.sol\":1243:1265  _registry.indexOf[key] */\n      dup6\n      dup4\n      mstore\n      dup3\n      keccak256\n        /* \"contracts/registry.sol\":1236:1265  delete _registry.indexOf[key] */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/registry.sol\":1275:1296  _registry.keys[index] */\n      dup5\n      sload\n        /* \"contracts/registry.sol\":1141:1182  _registry.keys[_registry.keys.length - 1] */\n      swap1\n      swap2\n      pop\n      dup2\n      swap1\n        /* \"contracts/registry.sol\":1192:1201  _registry */\n      dup6\n      swap1\n        /* \"contracts/registry.sol\":1221:1226  index */\n      dup5\n      swap1\n        /* \"contracts/registry.sol\":1275:1296  _registry.keys[index] */\n      dup2\n      lt\n      tag_44\n      jumpi\n      tag_44\n      tag_41\n      jump\t// in\n    tag_44:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n        /* \"contracts/registry.sol\":1275:1306  _registry.keys[index] = lastKey */\n      sstore\n        /* \"contracts/registry.sol\":1316:1336  _registry.keys.pop() */\n      dup4\n      sload\n        /* \"contracts/registry.sol\":1316:1325  _registry */\n      dup5\n      swap1\n        /* \"contracts/registry.sol\":1316:1336  _registry.keys.pop() */\n      dup1\n      tag_47\n      jumpi\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"contracts/registry.sol\":980:1343  {... */\n      pop\n      pop\n        /* \"contracts/registry.sol\":916:1343  function Remove(Registry storage _registry, uint256 key) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/registry.sol\":229:370  function GetHashByIndex(Registry storage _registry, uint256 index) public view returns(uint256) {... */\n    tag_29:\n        /* \"contracts/registry.sol\":316:323  uint256 */\n      0x00\n        /* \"contracts/registry.sol\":342:351  _registry */\n      dup3\n        /* \"contracts/registry.sol\":342:356  _registry.keys */\n      0x00\n      add\n        /* \"contracts/registry.sol\":357:362  index */\n      dup3\n        /* \"contracts/registry.sol\":342:363  _registry.keys[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_53\n      jumpi\n      tag_53\n      tag_41\n      jump\t// in\n    tag_53:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/registry.sol\":335:363  return _registry.keys[index] */\n      swap1\n      pop\n        /* \"contracts/registry.sol\":229:370  function GetHashByIndex(Registry storage _registry, uint256 index) public view returns(uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:335   */\n    tag_9:\n        /* \"#utility.yul\":109:115   */\n      0x00\n        /* \"#utility.yul\":117:123   */\n      dup1\n        /* \"#utility.yul\":170:172   */\n      0x40\n        /* \"#utility.yul\":158:167   */\n      dup4\n        /* \"#utility.yul\":149:156   */\n      dup6\n        /* \"#utility.yul\":145:168   */\n      sub\n        /* \"#utility.yul\":141:173   */\n      slt\n        /* \"#utility.yul\":138:190   */\n      iszero\n      tag_57\n      jumpi\n        /* \"#utility.yul\":186:187   */\n      0x00\n        /* \"#utility.yul\":183:184   */\n      dup1\n        /* \"#utility.yul\":176:188   */\n      revert\n        /* \"#utility.yul\":138:190   */\n    tag_57:\n      pop\n      pop\n        /* \"#utility.yul\":231:254   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":325:327   */\n      0x20\n        /* \"#utility.yul\":310:328   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":297:329   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":14:335   */\n      jump\t// out\n        /* \"#utility.yul\":540:793   */\n    tag_23:\n        /* \"#utility.yul\":626:632   */\n      0x00\n        /* \"#utility.yul\":679:681   */\n      0x20\n        /* \"#utility.yul\":667:676   */\n      dup3\n        /* \"#utility.yul\":658:665   */\n      dup5\n        /* \"#utility.yul\":654:677   */\n      sub\n        /* \"#utility.yul\":650:682   */\n      slt\n        /* \"#utility.yul\":647:699   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":695:696   */\n      0x00\n        /* \"#utility.yul\":692:693   */\n      dup1\n        /* \"#utility.yul\":685:697   */\n      revert\n        /* \"#utility.yul\":647:699   */\n    tag_60:\n      pop\n        /* \"#utility.yul\":740:763   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":540:793   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":988:1213   */\n    tag_38:\n        /* \"#utility.yul\":1055:1064   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":1076:1087   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":1073:1207   */\n      iszero\n      tag_31\n      jumpi\n        /* \"#utility.yul\":1129:1139   */\n      0x4e487b71\n        /* \"#utility.yul\":1124:1127   */\n      0xe0\n        /* \"#utility.yul\":1120:1140   */\n      shl\n        /* \"#utility.yul\":1117:1118   */\n      0x00\n        /* \"#utility.yul\":1110:1141   */\n      mstore\n        /* \"#utility.yul\":1164:1168   */\n      0x11\n        /* \"#utility.yul\":1161:1162   */\n      0x04\n        /* \"#utility.yul\":1154:1169   */\n      mstore\n        /* \"#utility.yul\":1192:1196   */\n      0x24\n        /* \"#utility.yul\":1189:1190   */\n      0x00\n        /* \"#utility.yul\":1182:1197   */\n      revert\n        /* \"#utility.yul\":1218:1345   */\n    tag_41:\n        /* \"#utility.yul\":1279:1289   */\n      0x4e487b71\n        /* \"#utility.yul\":1274:1277   */\n      0xe0\n        /* \"#utility.yul\":1270:1290   */\n      shl\n        /* \"#utility.yul\":1267:1268   */\n      0x00\n        /* \"#utility.yul\":1260:1291   */\n      mstore\n        /* \"#utility.yul\":1310:1314   */\n      0x32\n        /* \"#utility.yul\":1307:1308   */\n      0x04\n        /* \"#utility.yul\":1300:1315   */\n      mstore\n        /* \"#utility.yul\":1334:1338   */\n      0x24\n        /* \"#utility.yul\":1331:1332   */\n      0x00\n        /* \"#utility.yul\":1324:1339   */\n      revert\n        /* \"#utility.yul\":1350:1477   */\n    tag_48:\n        /* \"#utility.yul\":1411:1421   */\n      0x4e487b71\n        /* \"#utility.yul\":1406:1409   */\n      0xe0\n        /* \"#utility.yul\":1402:1422   */\n      shl\n        /* \"#utility.yul\":1399:1400   */\n      0x00\n        /* \"#utility.yul\":1392:1423   */\n      mstore\n        /* \"#utility.yul\":1442:1446   */\n      0x31\n        /* \"#utility.yul\":1439:1440   */\n      0x04\n        /* \"#utility.yul\":1432:1447   */\n      mstore\n        /* \"#utility.yul\":1466:1470   */\n      0x24\n        /* \"#utility.yul\":1463:1464   */\n      0x00\n        /* \"#utility.yul\":1456:1471   */\n      revert\n\n    auxdata: 0xa2646970667358221220fbd4f7b0e548706804c7e7d5916d0f8b7efbacfee3528957e19b4b4efc09dd5264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "610320610034600b8282823980515f1a607314602857634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610610060575f3560e01c8063253472ca146100645780638b584f4d1461008c5780639047f6de146100ad5780639ba54d2d146100cc578063cfe6aa63146100ec575b5f80fd5b61007761007236600461026c565b6100ff565b60405190151581526020015b60405180910390f35b818015610097575f80fd5b506100ab6100a636600461026c565b610119565b005b8180156100b8575f80fd5b506100ab6100c736600461026c565b61016f565b6100de6100da36600461028c565b5490565b604051908152602001610083565b6100de6100fa36600461026c565b610246565b5f81815260028301602052604090205460ff165b92915050565b5f81815260028301602052604090205460ff1661016b575f8181526002830160209081526040808320805460ff1916600190811790915585548682018452918420829055810185558483529120018190555b5050565b5f81815260028301602052604090205460ff1661018a575050565b5f8181526002830160209081526040808320805460ff191690556001808601909252822054845490929185916101c091906102a3565b815481106101d0576101d06102c2565b5f91825260208083209091015480835260018701909152604080832085905585835282209190915584549091508190859084908110610211576102116102c2565b5f91825260209091200155835484908061022d5761022d6102d6565b600190038181905f5260205f20015f9055905550505050565b5f825f01828154811061025b5761025b6102c2565b905f5260205f200154905092915050565b5f806040838503121561027d575f80fd5b50508035926020909101359150565b5f6020828403121561029c575f80fd5b5035919050565b8181038181111561011357634e487b7160e01b5f52601160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52603160045260245ffdfea2646970667358221220fbd4f7b0e548706804c7e7d5916d0f8b7efbacfee3528957e19b4b4efc09dd5264736f6c634300081a0033",
							"opcodes": "PUSH2 0x320 PUSH2 0x34 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x28 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x253472CA EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x8B584F4D EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x9047F6DE EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x9BA54D2D EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0xCFE6AA63 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x77 PUSH2 0x72 CALLDATASIZE PUSH1 0x4 PUSH2 0x26C JUMP JUMPDEST PUSH2 0xFF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x97 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x26C JUMP JUMPDEST PUSH2 0x119 JUMP JUMPDEST STOP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0x26C JUMP JUMPDEST PUSH2 0x16F JUMP JUMPDEST PUSH2 0xDE PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x28C JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x83 JUMP JUMPDEST PUSH2 0xDE PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x26C JUMP JUMPDEST PUSH2 0x246 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x16B JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP6 SLOAD DUP7 DUP3 ADD DUP5 MSTORE SWAP2 DUP5 KECCAK256 DUP3 SWAP1 SSTORE DUP2 ADD DUP6 SSTORE DUP5 DUP4 MSTORE SWAP2 KECCAK256 ADD DUP2 SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x18A JUMPI POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 DUP1 DUP7 ADD SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD DUP5 SLOAD SWAP1 SWAP3 SWAP2 DUP6 SWAP2 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x2A3 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1D0 JUMPI PUSH2 0x1D0 PUSH2 0x2C2 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP1 DUP4 MSTORE PUSH1 0x1 DUP8 ADD SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE DUP6 DUP4 MSTORE DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP5 SLOAD SWAP1 SWAP2 POP DUP2 SWAP1 DUP6 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x211 JUMPI PUSH2 0x211 PUSH2 0x2C2 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE DUP4 SLOAD DUP5 SWAP1 DUP1 PUSH2 0x22D JUMPI PUSH2 0x22D PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x25B JUMPI PUSH2 0x25B PUSH2 0x2C2 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x113 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB 0xD4 0xF7 0xB0 0xE5 BASEFEE PUSH17 0x6804C7E7D5916D0F8B7EFBACFEE3528957 0xE1 SWAP12 0x4B 0x4E 0xFC MULMOD 0xDD MSTORE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "62:1283:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;62:1283:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Contains_1083": {
									"entryPoint": 255,
									"id": 1083,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@Count_1067": {
									"entryPoint": null,
									"id": 1067,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@GetHashByIndex_1054": {
									"entryPoint": 582,
									"id": 1054,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@Register_1125": {
									"entryPoint": 281,
									"id": 1125,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@Remove_1194": {
									"entryPoint": 367,
									"id": 1194,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_struct$_Registry_$1038_storage_ptr": {
									"entryPoint": 652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_Registry_$1038_storage_ptrt_uint256": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x31": {
									"entryPoint": 726,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 706,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1479:5",
										"nodeType": "YulBlock",
										"src": "0:1479:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "128:207:5",
													"nodeType": "YulBlock",
													"src": "128:207:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "174:16:5",
																"nodeType": "YulBlock",
																"src": "174:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "183:1:5",
																					"nodeType": "YulLiteral",
																					"src": "183:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "186:1:5",
																					"nodeType": "YulLiteral",
																					"src": "186:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "176:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "176:6:5"
																			},
																			"nativeSrc": "176:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "176:12:5"
																		},
																		"nativeSrc": "176:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "176:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "149:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "149:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "158:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "158:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "145:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "145:3:5"
																		},
																		"nativeSrc": "145:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "145:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "170:2:5",
																		"nodeType": "YulLiteral",
																		"src": "170:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "141:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "141:3:5"
																},
																"nativeSrc": "141:32:5",
																"nodeType": "YulFunctionCall",
																"src": "141:32:5"
															},
															"nativeSrc": "138:52:5",
															"nodeType": "YulIf",
															"src": "138:52:5"
														},
														{
															"nativeSrc": "199:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "199:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "212:1:5",
																"nodeType": "YulLiteral",
																"src": "212:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "203:5:5",
																	"nodeType": "YulTypedName",
																	"src": "203:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "222:32:5",
															"nodeType": "YulAssignment",
															"src": "222:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "244:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "244:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "231:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "231:12:5"
																},
																"nativeSrc": "231:23:5",
																"nodeType": "YulFunctionCall",
																"src": "231:23:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "222:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:5"
																}
															]
														},
														{
															"nativeSrc": "263:15:5",
															"nodeType": "YulAssignment",
															"src": "263:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "273:5:5",
																"nodeType": "YulIdentifier",
																"src": "273:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "263:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "263:6:5"
																}
															]
														},
														{
															"nativeSrc": "287:42:5",
															"nodeType": "YulAssignment",
															"src": "287:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "314:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "314:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "325:2:5",
																				"nodeType": "YulLiteral",
																				"src": "325:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "310:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "310:3:5"
																		},
																		"nativeSrc": "310:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "310:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "297:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "297:12:5"
																},
																"nativeSrc": "297:32:5",
																"nodeType": "YulFunctionCall",
																"src": "297:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "287:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "287:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_Registry_$1038_storage_ptrt_uint256",
												"nativeSrc": "14:321:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "86:9:5",
														"nodeType": "YulTypedName",
														"src": "86:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "97:7:5",
														"nodeType": "YulTypedName",
														"src": "97:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "109:6:5",
														"nodeType": "YulTypedName",
														"src": "109:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "117:6:5",
														"nodeType": "YulTypedName",
														"src": "117:6:5",
														"type": ""
													}
												],
												"src": "14:321:5"
											},
											{
												"body": {
													"nativeSrc": "443:92:5",
													"nodeType": "YulBlock",
													"src": "443:92:5",
													"statements": [
														{
															"nativeSrc": "453:26:5",
															"nodeType": "YulAssignment",
															"src": "453:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "465:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "465:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "476:2:5",
																		"nodeType": "YulLiteral",
																		"src": "476:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "461:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "461:3:5"
																},
																"nativeSrc": "461:18:5",
																"nodeType": "YulFunctionCall",
																"src": "461:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "453:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "453:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "495:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "495:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "520:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "520:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "513:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "513:6:5"
																				},
																				"nativeSrc": "513:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "513:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "506:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "506:6:5"
																		},
																		"nativeSrc": "506:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "506:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "488:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "488:6:5"
																},
																"nativeSrc": "488:41:5",
																"nodeType": "YulFunctionCall",
																"src": "488:41:5"
															},
															"nativeSrc": "488:41:5",
															"nodeType": "YulExpressionStatement",
															"src": "488:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed",
												"nativeSrc": "340:195:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "412:9:5",
														"nodeType": "YulTypedName",
														"src": "412:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "423:6:5",
														"nodeType": "YulTypedName",
														"src": "423:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "434:4:5",
														"nodeType": "YulTypedName",
														"src": "434:4:5",
														"type": ""
													}
												],
												"src": "340:195:5"
											},
											{
												"body": {
													"nativeSrc": "637:156:5",
													"nodeType": "YulBlock",
													"src": "637:156:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "683:16:5",
																"nodeType": "YulBlock",
																"src": "683:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "692:1:5",
																					"nodeType": "YulLiteral",
																					"src": "692:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "695:1:5",
																					"nodeType": "YulLiteral",
																					"src": "695:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "685:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "685:6:5"
																			},
																			"nativeSrc": "685:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "685:12:5"
																		},
																		"nativeSrc": "685:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "685:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "658:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "658:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "667:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "667:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "654:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "654:3:5"
																		},
																		"nativeSrc": "654:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "654:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "679:2:5",
																		"nodeType": "YulLiteral",
																		"src": "679:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "650:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "650:3:5"
																},
																"nativeSrc": "650:32:5",
																"nodeType": "YulFunctionCall",
																"src": "650:32:5"
															},
															"nativeSrc": "647:52:5",
															"nodeType": "YulIf",
															"src": "647:52:5"
														},
														{
															"nativeSrc": "708:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "708:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "721:1:5",
																"nodeType": "YulLiteral",
																"src": "721:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "712:5:5",
																	"nodeType": "YulTypedName",
																	"src": "712:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "731:32:5",
															"nodeType": "YulAssignment",
															"src": "731:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "753:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "753:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "740:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "740:12:5"
																},
																"nativeSrc": "740:23:5",
																"nodeType": "YulFunctionCall",
																"src": "740:23:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "731:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "731:5:5"
																}
															]
														},
														{
															"nativeSrc": "772:15:5",
															"nodeType": "YulAssignment",
															"src": "772:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "782:5:5",
																"nodeType": "YulIdentifier",
																"src": "782:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "772:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "772:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_Registry_$1038_storage_ptr",
												"nativeSrc": "540:253:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "603:9:5",
														"nodeType": "YulTypedName",
														"src": "603:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "614:7:5",
														"nodeType": "YulTypedName",
														"src": "614:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "626:6:5",
														"nodeType": "YulTypedName",
														"src": "626:6:5",
														"type": ""
													}
												],
												"src": "540:253:5"
											},
											{
												"body": {
													"nativeSrc": "907:76:5",
													"nodeType": "YulBlock",
													"src": "907:76:5",
													"statements": [
														{
															"nativeSrc": "917:26:5",
															"nodeType": "YulAssignment",
															"src": "917:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "929:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "929:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "940:2:5",
																		"nodeType": "YulLiteral",
																		"src": "940:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "925:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "925:3:5"
																},
																"nativeSrc": "925:18:5",
																"nodeType": "YulFunctionCall",
																"src": "925:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "917:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "917:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "959:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "959:9:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "970:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "970:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "952:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:5"
																},
																"nativeSrc": "952:25:5",
																"nodeType": "YulFunctionCall",
																"src": "952:25:5"
															},
															"nativeSrc": "952:25:5",
															"nodeType": "YulExpressionStatement",
															"src": "952:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed",
												"nativeSrc": "798:185:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "876:9:5",
														"nodeType": "YulTypedName",
														"src": "876:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "887:6:5",
														"nodeType": "YulTypedName",
														"src": "887:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "898:4:5",
														"nodeType": "YulTypedName",
														"src": "898:4:5",
														"type": ""
													}
												],
												"src": "798:185:5"
											},
											{
												"body": {
													"nativeSrc": "1037:176:5",
													"nodeType": "YulBlock",
													"src": "1037:176:5",
													"statements": [
														{
															"nativeSrc": "1047:17:5",
															"nodeType": "YulAssignment",
															"src": "1047:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1059:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "1059:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1062:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "1062:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1055:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1055:3:5"
																},
																"nativeSrc": "1055:9:5",
																"nodeType": "YulFunctionCall",
																"src": "1055:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "1047:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1047:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:111:5",
																"nodeType": "YulBlock",
																"src": "1096:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1117:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1117:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1124:3:5",
																							"nodeType": "YulLiteral",
																							"src": "1124:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1129:10:5",
																							"nodeType": "YulLiteral",
																							"src": "1129:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1120:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "1120:3:5"
																					},
																					"nativeSrc": "1120:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1120:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1110:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1110:6:5"
																			},
																			"nativeSrc": "1110:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1110:31:5"
																		},
																		"nativeSrc": "1110:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1110:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1161:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1161:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1164:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1164:4:5",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1154:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1154:6:5"
																			},
																			"nativeSrc": "1154:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1154:15:5"
																		},
																		"nativeSrc": "1154:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1154:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1189:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1189:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1192:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1192:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1182:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1182:6:5"
																			},
																			"nativeSrc": "1182:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1182:15:5"
																		},
																		"nativeSrc": "1182:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1182:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "1079:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1079:4:5"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "1085:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "1085:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1076:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1076:2:5"
																},
																"nativeSrc": "1076:11:5",
																"nodeType": "YulFunctionCall",
																"src": "1076:11:5"
															},
															"nativeSrc": "1073:134:5",
															"nodeType": "YulIf",
															"src": "1073:134:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "988:225:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1019:1:5",
														"nodeType": "YulTypedName",
														"src": "1019:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1022:1:5",
														"nodeType": "YulTypedName",
														"src": "1022:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "1028:4:5",
														"nodeType": "YulTypedName",
														"src": "1028:4:5",
														"type": ""
													}
												],
												"src": "988:225:5"
											},
											{
												"body": {
													"nativeSrc": "1250:95:5",
													"nodeType": "YulBlock",
													"src": "1250:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1267:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1267:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1274:3:5",
																				"nodeType": "YulLiteral",
																				"src": "1274:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1279:10:5",
																				"nodeType": "YulLiteral",
																				"src": "1279:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1270:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1270:3:5"
																		},
																		"nativeSrc": "1270:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1270:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1260:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1260:6:5"
																},
																"nativeSrc": "1260:31:5",
																"nodeType": "YulFunctionCall",
																"src": "1260:31:5"
															},
															"nativeSrc": "1260:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "1260:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1307:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1307:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1310:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1310:4:5",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1300:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1300:6:5"
																},
																"nativeSrc": "1300:15:5",
																"nodeType": "YulFunctionCall",
																"src": "1300:15:5"
															},
															"nativeSrc": "1300:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "1300:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1331:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1331:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1334:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1334:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1324:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1324:6:5"
																},
																"nativeSrc": "1324:15:5",
																"nodeType": "YulFunctionCall",
																"src": "1324:15:5"
															},
															"nativeSrc": "1324:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "1324:15:5"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "1218:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1218:127:5"
											},
											{
												"body": {
													"nativeSrc": "1382:95:5",
													"nodeType": "YulBlock",
													"src": "1382:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1399:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1399:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1406:3:5",
																				"nodeType": "YulLiteral",
																				"src": "1406:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1411:10:5",
																				"nodeType": "YulLiteral",
																				"src": "1411:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1402:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1402:3:5"
																		},
																		"nativeSrc": "1402:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1402:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1392:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1392:6:5"
																},
																"nativeSrc": "1392:31:5",
																"nodeType": "YulFunctionCall",
																"src": "1392:31:5"
															},
															"nativeSrc": "1392:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "1392:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1439:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1439:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1442:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1442:4:5",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1432:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1432:6:5"
																},
																"nativeSrc": "1432:15:5",
																"nodeType": "YulFunctionCall",
																"src": "1432:15:5"
															},
															"nativeSrc": "1432:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "1432:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1463:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1463:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1466:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1466:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1456:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1456:6:5"
																},
																"nativeSrc": "1456:15:5",
																"nodeType": "YulFunctionCall",
																"src": "1456:15:5"
															},
															"nativeSrc": "1456:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "1456:15:5"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "1350:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1350:127:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_struct$_Registry_$1038_storage_ptrt_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_struct$_Registry_$1038_storage_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "7300000000000000000000000000000000000000003014608060405260043610610060575f3560e01c8063253472ca146100645780638b584f4d1461008c5780639047f6de146100ad5780639ba54d2d146100cc578063cfe6aa63146100ec575b5f80fd5b61007761007236600461026c565b6100ff565b60405190151581526020015b60405180910390f35b818015610097575f80fd5b506100ab6100a636600461026c565b610119565b005b8180156100b8575f80fd5b506100ab6100c736600461026c565b61016f565b6100de6100da36600461028c565b5490565b604051908152602001610083565b6100de6100fa36600461026c565b610246565b5f81815260028301602052604090205460ff165b92915050565b5f81815260028301602052604090205460ff1661016b575f8181526002830160209081526040808320805460ff1916600190811790915585548682018452918420829055810185558483529120018190555b5050565b5f81815260028301602052604090205460ff1661018a575050565b5f8181526002830160209081526040808320805460ff191690556001808601909252822054845490929185916101c091906102a3565b815481106101d0576101d06102c2565b5f91825260208083209091015480835260018701909152604080832085905585835282209190915584549091508190859084908110610211576102116102c2565b5f91825260209091200155835484908061022d5761022d6102d6565b600190038181905f5260205f20015f9055905550505050565b5f825f01828154811061025b5761025b6102c2565b905f5260205f200154905092915050565b5f806040838503121561027d575f80fd5b50508035926020909101359150565b5f6020828403121561029c575f80fd5b5035919050565b8181038181111561011357634e487b7160e01b5f52601160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52603160045260245ffdfea2646970667358221220fbd4f7b0e548706804c7e7d5916d0f8b7efbacfee3528957e19b4b4efc09dd5264736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x253472CA EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x8B584F4D EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x9047F6DE EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x9BA54D2D EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0xCFE6AA63 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x77 PUSH2 0x72 CALLDATASIZE PUSH1 0x4 PUSH2 0x26C JUMP JUMPDEST PUSH2 0xFF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x97 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x26C JUMP JUMPDEST PUSH2 0x119 JUMP JUMPDEST STOP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0x26C JUMP JUMPDEST PUSH2 0x16F JUMP JUMPDEST PUSH2 0xDE PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x28C JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x83 JUMP JUMPDEST PUSH2 0xDE PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x26C JUMP JUMPDEST PUSH2 0x246 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x16B JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP6 SLOAD DUP7 DUP3 ADD DUP5 MSTORE SWAP2 DUP5 KECCAK256 DUP3 SWAP1 SSTORE DUP2 ADD DUP6 SSTORE DUP5 DUP4 MSTORE SWAP2 KECCAK256 ADD DUP2 SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x18A JUMPI POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 DUP1 DUP7 ADD SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD DUP5 SLOAD SWAP1 SWAP3 SWAP2 DUP6 SWAP2 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x2A3 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1D0 JUMPI PUSH2 0x1D0 PUSH2 0x2C2 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP1 DUP4 MSTORE PUSH1 0x1 DUP8 ADD SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE DUP6 DUP4 MSTORE DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP5 SLOAD SWAP1 SWAP2 POP DUP2 SWAP1 DUP6 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x211 JUMPI PUSH2 0x211 PUSH2 0x2C2 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE DUP4 SLOAD DUP5 SWAP1 DUP1 PUSH2 0x22D JUMPI PUSH2 0x22D PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x25B JUMPI PUSH2 0x25B PUSH2 0x2C2 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x113 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB 0xD4 0xF7 0xB0 0xE5 BASEFEE PUSH17 0x6804C7E7D5916D0F8B7EFBACFEE3528957 0xE1 SWAP12 0x4B 0x4E 0xFC MULMOD 0xDD MSTORE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "62:1283:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;500:132;;;;;;:::i;:::-;;:::i;:::-;;;513:14:5;;506:22;488:41;;476:2;461:18;500:132:4;;;;;;;;638:272;;;;;;;;;;-1:-1:-1;638:272:4;;;;;:::i;:::-;;:::i;:::-;;916:427;;;;;;;;;;-1:-1:-1;916:427:4;;;;;:::i;:::-;;:::i;376:118::-;;;;;;:::i;:::-;466:21;;376:118;;;;952:25:5;;;940:2;925:18;376:118:4;798:185:5;229:141:4;;;;;;:::i;:::-;;:::i;500:132::-;579:4;602:23;;;:18;;;:23;;;;;;;;500:132;;;;;:::o;638:272::-;718:23;;;;:18;;;:23;;;;;;;;714:190;;765:23;;;;:18;;;:23;;;;;;;;:30;;-1:-1:-1;;765:30:4;791:4;765:30;;;;;;834:21;;809:17;;;:22;;;;;:46;;;869:24;;;;;;;;;;;;;714:190;638:272;;:::o;916:427::-;994:23;;;;:18;;;:23;;;;;;;;990:36;;916:427;;:::o;990:36::-;1042:23;;;;:18;;;:23;;;;;;;;1035:30;;-1:-1:-1;;1035:30:4;;;;1091:17;;;:22;;;;;;1156:21;;1091:22;;1042:23;:9;;1156:25;;1035:30;1156:25;:::i;:::-;1141:41;;;;;;;;:::i;:::-;;;;;;;;;;;;;1192:26;;;:17;;;:26;;;;;;;:34;;;1243:22;;;;;1236:29;;;;1275:21;;1141:41;;-1:-1:-1;1141:41:4;;1192:9;;1221:5;;1275:21;;;;;;:::i;:::-;;;;;;;;;;:31;1316:20;;:9;;:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;980:363;;916:427;;:::o;229:141::-;316:7;342:9;:14;;357:5;342:21;;;;;;;;:::i;:::-;;;;;;;;;335:28;;229:141;;;;:::o;14:321:5:-;109:6;117;170:2;158:9;149:7;145:23;141:32;138:52;;;186:1;183;176:12;138:52;-1:-1:-1;;231:23:5;;;325:2;310:18;;;297:32;;-1:-1:-1;14:321:5:o;540:253::-;626:6;679:2;667:9;658:7;654:23;650:32;647:52;;;695:1;692;685:12;647:52;-1:-1:-1;740:23:5;;540:253;-1:-1:-1;540:253:5:o;988:225::-;1055:9;;;1076:11;;;1073:134;;;1129:10;1124:3;1120:20;1117:1;1110:31;1164:4;1161:1;1154:15;1192:4;1189:1;1182:15;1218:127;1279:10;1274:3;1270:20;1267:1;1260:31;1310:4;1307:1;1300:15;1334:4;1331:1;1324:15;1350:127;1411:10;1406:3;1402:20;1399:1;1392:31;1442:4;1439:1;1432:15;1466:4;1463:1;1456:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "160000",
								"executionCost": "232",
								"totalCost": "160232"
							},
							"external": {
								"Contains(LibRegistry.Registry storage,uint256)": "2447",
								"Count(LibRegistry.Registry storage)": "2395",
								"GetHashByIndex(LibRegistry.Registry storage,uint256)": "4652",
								"Register(LibRegistry.Registry storage,uint256)": "95300",
								"Remove(LibRegistry.Registry storage,uint256)": "116276"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 62,
									"end": 1345,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 62,
									"end": 1345,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fbd4f7b0e548706804c7e7d5916d0f8b7efbacfee3528957e19b4b4efc09dd5264736f6c634300081a0033",
									".code": [
										{
											"begin": 62,
											"end": 1345,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "PUSH",
											"source": 4,
											"value": "253472CA"
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "PUSH",
											"source": 4,
											"value": "8B584F4D"
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "PUSH",
											"source": 4,
											"value": "9047F6DE"
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "PUSH",
											"source": 4,
											"value": "9BA54D2D"
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "PUSH",
											"source": 4,
											"value": "CFE6AA63"
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 62,
											"end": 1345,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 500,
											"end": 632,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 500,
											"end": 632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 500,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 500,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 500,
											"end": 632,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 500,
											"end": 632,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 500,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 500,
											"end": 632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 500,
											"end": 632,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 500,
											"end": 632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 500,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 500,
											"end": 632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 500,
											"end": 632,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 500,
											"end": 632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 500,
											"end": 632,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 632,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 513,
											"end": 527,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 513,
											"end": 527,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 506,
											"end": 528,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 488,
											"end": 529,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 488,
											"end": 529,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 476,
											"end": 478,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 461,
											"end": 479,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 500,
											"end": 632,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 500,
											"end": 632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 500,
											"end": 632,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 632,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 500,
											"end": 632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 500,
											"end": 632,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 500,
											"end": 632,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 500,
											"end": 632,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 500,
											"end": 632,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 638,
											"end": 910,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 638,
											"end": 910,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 638,
											"end": 910,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 638,
											"end": 910,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 638,
											"end": 910,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 638,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 638,
											"end": 910,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 638,
											"end": 910,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 910,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 638,
											"end": 910,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 638,
											"end": 910,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 638,
											"end": 910,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 638,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 638,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 638,
											"end": 910,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 638,
											"end": 910,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 638,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 638,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 638,
											"end": 910,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 638,
											"end": 910,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 638,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 638,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 638,
											"end": 910,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 638,
											"end": 910,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 638,
											"end": 910,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 916,
											"end": 1343,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 916,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 916,
											"end": 1343,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 916,
											"end": 1343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 916,
											"end": 1343,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 916,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 916,
											"end": 1343,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 916,
											"end": 1343,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 916,
											"end": 1343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 916,
											"end": 1343,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 916,
											"end": 1343,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 916,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 916,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 916,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 916,
											"end": 1343,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 916,
											"end": 1343,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 916,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 916,
											"end": 1343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 916,
											"end": 1343,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 916,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 916,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 916,
											"end": 1343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 376,
											"end": 494,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 376,
											"end": 494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 376,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 376,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 376,
											"end": 494,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 376,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 376,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 376,
											"end": 494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 376,
											"end": 494,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 376,
											"end": 494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 487,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 487,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 376,
											"end": 494,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 376,
											"end": 494,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 376,
											"end": 494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 376,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 376,
											"end": 494,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 952,
											"end": 977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 952,
											"end": 977,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 952,
											"end": 977,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 940,
											"end": 942,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 925,
											"end": 943,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 376,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 798,
											"end": 983,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 229,
											"end": 370,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 229,
											"end": 370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 229,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 229,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 229,
											"end": 370,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 229,
											"end": 370,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 229,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 229,
											"end": 370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 229,
											"end": 370,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 229,
											"end": 370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 229,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 229,
											"end": 370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 500,
											"end": 632,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 500,
											"end": 632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 579,
											"end": 583,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 602,
											"end": 625,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 602,
											"end": 625,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 602,
											"end": 625,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 602,
											"end": 620,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 602,
											"end": 620,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 602,
											"end": 620,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 602,
											"end": 625,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 602,
											"end": 625,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 602,
											"end": 625,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 602,
											"end": 625,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 602,
											"end": 625,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 602,
											"end": 625,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 602,
											"end": 625,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 602,
											"end": 625,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 500,
											"end": 632,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 500,
											"end": 632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 500,
											"end": 632,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 500,
											"end": 632,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 500,
											"end": 632,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 500,
											"end": 632,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 500,
											"end": 632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 638,
											"end": 910,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 638,
											"end": 910,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 718,
											"end": 741,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 718,
											"end": 741,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 718,
											"end": 741,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 718,
											"end": 741,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 718,
											"end": 736,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 718,
											"end": 736,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 718,
											"end": 736,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 718,
											"end": 741,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 718,
											"end": 741,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 718,
											"end": 741,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 718,
											"end": 741,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 718,
											"end": 741,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 718,
											"end": 741,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 718,
											"end": 741,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 718,
											"end": 741,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 714,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 714,
											"end": 904,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 765,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 765,
											"end": 788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 765,
											"end": 788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 765,
											"end": 788,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 765,
											"end": 783,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 765,
											"end": 783,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 765,
											"end": 783,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 765,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 765,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 765,
											"end": 788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 765,
											"end": 788,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 765,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 765,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 765,
											"end": 788,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 765,
											"end": 788,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 765,
											"end": 795,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 765,
											"end": 795,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 765,
											"end": 795,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 791,
											"end": 795,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 765,
											"end": 795,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 765,
											"end": 795,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 765,
											"end": 795,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 765,
											"end": 795,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 765,
											"end": 795,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 765,
											"end": 795,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 834,
											"end": 855,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 834,
											"end": 855,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 809,
											"end": 826,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 809,
											"end": 826,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 809,
											"end": 826,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 809,
											"end": 831,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 809,
											"end": 831,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 809,
											"end": 831,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 809,
											"end": 831,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 809,
											"end": 831,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 809,
											"end": 855,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 809,
											"end": 855,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 809,
											"end": 855,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 869,
											"end": 893,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 869,
											"end": 893,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 869,
											"end": 893,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 869,
											"end": 893,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 869,
											"end": 893,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 869,
											"end": 893,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 869,
											"end": 893,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 869,
											"end": 893,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 869,
											"end": 893,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 869,
											"end": 893,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 869,
											"end": 893,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 869,
											"end": 893,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 869,
											"end": 893,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 714,
											"end": 904,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 714,
											"end": 904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 638,
											"end": 910,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 638,
											"end": 910,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 638,
											"end": 910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 916,
											"end": 1343,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 916,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 994,
											"end": 1012,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 994,
											"end": 1012,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 994,
											"end": 1012,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 990,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 990,
											"end": 1026,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 916,
											"end": 1343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 916,
											"end": 1343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 916,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 990,
											"end": 1026,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 990,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1065,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1065,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1065,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1065,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1060,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1042,
											"end": 1060,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1060,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1065,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1065,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1065,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1065,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1065,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1065,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1065,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1065,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1065,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1065,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1035,
											"end": 1065,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1065,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1065,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1065,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1091,
											"end": 1108,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1108,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1108,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1113,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1113,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1113,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1113,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1177,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1177,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1113,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1065,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1051,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1051,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1156,
											"end": 1181,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1065,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1156,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1181,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1156,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1182,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1182,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1182,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1182,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1141,
											"end": 1182,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1141,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1141,
											"end": 1182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1182,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1141,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1182,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1182,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1182,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1182,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1182,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1141,
											"end": 1182,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1182,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1182,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1182,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1182,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1182,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1182,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1192,
											"end": 1218,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1192,
											"end": 1218,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1192,
											"end": 1218,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1192,
											"end": 1209,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1192,
											"end": 1209,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1192,
											"end": 1209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1192,
											"end": 1218,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1192,
											"end": 1218,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1192,
											"end": 1218,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1192,
											"end": 1218,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1192,
											"end": 1218,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1192,
											"end": 1218,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1192,
											"end": 1218,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1192,
											"end": 1226,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1192,
											"end": 1226,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1192,
											"end": 1226,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1265,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1265,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1265,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1265,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1265,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1236,
											"end": 1265,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1236,
											"end": 1265,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1236,
											"end": 1265,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1236,
											"end": 1265,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1296,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1296,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1182,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1182,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1141,
											"end": 1182,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1182,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1192,
											"end": 1201,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1192,
											"end": 1201,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1221,
											"end": 1226,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1221,
											"end": 1226,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1296,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1296,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1275,
											"end": 1296,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1275,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1275,
											"end": 1296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1296,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1275,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1296,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1275,
											"end": 1296,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1296,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1296,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1296,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1275,
											"end": 1296,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1296,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1296,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1296,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1316,
											"end": 1325,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1316,
											"end": 1325,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1316,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 980,
											"end": 1343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 980,
											"end": 1343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 916,
											"end": 1343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 916,
											"end": 1343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 916,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 229,
											"end": 370,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 229,
											"end": 370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 316,
											"end": 323,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 342,
											"end": 351,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 342,
											"end": 356,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 342,
											"end": 356,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 357,
											"end": 362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 342,
											"end": 363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 342,
											"end": 363,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 342,
											"end": 363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 342,
											"end": 363,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 342,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 342,
											"end": 363,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 342,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 342,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 342,
											"end": 363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 342,
											"end": 363,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 342,
											"end": 363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 342,
											"end": 363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 342,
											"end": 363,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 342,
											"end": 363,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 342,
											"end": 363,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 342,
											"end": 363,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 342,
											"end": 363,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 342,
											"end": 363,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 342,
											"end": 363,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 335,
											"end": 363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 335,
											"end": 363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 229,
											"end": 370,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 229,
											"end": 370,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 229,
											"end": 370,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 229,
											"end": 370,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 229,
											"end": 370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 335,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 14,
											"end": 335,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 109,
											"end": 115,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 123,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 170,
											"end": 172,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 158,
											"end": 167,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 149,
											"end": 156,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 141,
											"end": 173,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 138,
											"end": 190,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 138,
											"end": 190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 138,
											"end": 190,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 186,
											"end": 187,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 184,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 176,
											"end": 188,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 138,
											"end": 190,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 138,
											"end": 190,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 231,
											"end": 254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 231,
											"end": 254,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 231,
											"end": 254,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 325,
											"end": 327,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 310,
											"end": 328,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 310,
											"end": 328,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 310,
											"end": 328,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 297,
											"end": 329,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 297,
											"end": 329,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 540,
											"end": 793,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 540,
											"end": 793,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 626,
											"end": 632,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 679,
											"end": 681,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 667,
											"end": 676,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 658,
											"end": 665,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 654,
											"end": 677,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 650,
											"end": 682,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 647,
											"end": 699,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 647,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 647,
											"end": 699,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 695,
											"end": 696,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 692,
											"end": 693,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 685,
											"end": 697,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 647,
											"end": 699,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 647,
											"end": 699,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 740,
											"end": 763,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 740,
											"end": 763,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 540,
											"end": 793,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 540,
											"end": 793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1213,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 988,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1055,
											"end": 1064,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1055,
											"end": 1064,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1055,
											"end": 1064,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1076,
											"end": 1087,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1076,
											"end": 1087,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1076,
											"end": 1087,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1073,
											"end": 1207,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1073,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1073,
											"end": 1207,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1129,
											"end": 1139,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 1124,
											"end": 1127,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1117,
											"end": 1118,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1141,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1164,
											"end": 1168,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1161,
											"end": 1162,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1154,
											"end": 1169,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1192,
											"end": 1196,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1189,
											"end": 1190,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1182,
											"end": 1197,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1345,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1218,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1279,
											"end": 1289,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 1274,
											"end": 1277,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1270,
											"end": 1290,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1267,
											"end": 1268,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1291,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1310,
											"end": 1314,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1307,
											"end": 1308,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1300,
											"end": 1315,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1338,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1331,
											"end": 1332,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1339,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1477,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1350,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1421,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 1406,
											"end": 1409,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1402,
											"end": 1422,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1400,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1442,
											"end": 1446,
											"name": "PUSH",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1439,
											"end": 1440,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1432,
											"end": 1447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1466,
											"end": 1470,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1463,
											"end": 1464,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1471,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/AccessRegistry.sol",
								"contracts/atropamath.sol",
								"contracts/registry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Contains(LibRegistry.Registry storage,uint256)": "253472ca",
							"Count(LibRegistry.Registry storage)": "9ba54d2d",
							"GetHashByIndex(LibRegistry.Registry storage,uint256)": "cfe6aa63",
							"Register(LibRegistry.Registry storage,uint256)": "8b584f4d",
							"Remove(LibRegistry.Registry storage,uint256)": "9047f6de"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/registry.sol\":\"LibRegistry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/registry.sol\":{\"keccak256\":\"0x2de243fc397b804f42152434e979ab88e432744d228ada062511445c5f18d173\",\"license\":\"Sharia\",\"urls\":[\"bzz-raw://e791dcd3795c5b9d75f987e9381823be6b580a7aa8223f51709a7791ba420ca6\",\"dweb:/ipfs/QmQ78wzcrtorMPUEjTRxPEFjx8uMPEQveNr7RfbzbvxfHr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"contracts/AccessRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/AccessRegistry.sol",
					"exportedSymbols": {
						"AccessRegistry": [
							662
						],
						"AtropaMath": [
							1024
						],
						"Context": [
							177
						],
						"LibRegistry": [
							1195
						],
						"Ownable": [
							147
						],
						"RNG": [
							670
						]
					},
					"id": 663,
					"license": "Sharia",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 663,
							"sourceUnit": 148,
							"src": "60:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/registry.sol",
							"file": "./registry.sol",
							"id": 181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 663,
							"sourceUnit": 1196,
							"src": "113:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/atropamath.sol",
							"file": "./atropamath.sol",
							"id": 182,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 663,
							"sourceUnit": 1025,
							"src": "138:26:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 183,
										"name": "Ownable",
										"nameLocations": [
											"203:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "203:7:2"
									},
									"id": 184,
									"nodeType": "InheritanceSpecifier",
									"src": "203:7:2"
								}
							],
							"canonicalName": "AccessRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 662,
							"linearizedBaseContracts": [
								662,
								147,
								177
							],
							"name": "AccessRegistry",
							"nameLocation": "185:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 188,
									"libraryName": {
										"id": 185,
										"name": "LibRegistry",
										"nameLocations": [
											"223:11:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1195,
										"src": "223:11:2"
									},
									"nodeType": "UsingForDirective",
									"src": "217:43:2",
									"typeName": {
										"id": 187,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 186,
											"name": "LibRegistry.Registry",
											"nameLocations": [
												"239:11:2",
												"251:8:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1038,
											"src": "239:20:2"
										},
										"referencedDeclaration": 1038,
										"src": "239:20:2",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Registry_$1038_storage_ptr",
											"typeString": "struct LibRegistry.Registry"
										}
									}
								},
								{
									"global": false,
									"id": 191,
									"libraryName": {
										"id": 189,
										"name": "AtropaMath",
										"nameLocations": [
											"271:10:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1024,
										"src": "271:10:2"
									},
									"nodeType": "UsingForDirective",
									"src": "265:29:2",
									"typeName": {
										"id": 190,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "286:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"canonicalName": "AccessRegistry.AccessType",
									"id": 199,
									"members": [
										{
											"id": 192,
											"name": "PRESEDENT",
											"nameLocation": "329:9:2",
											"nodeType": "EnumValue",
											"src": "329:9:2"
										},
										{
											"id": 193,
											"name": "CONGRESS",
											"nameLocation": "348:8:2",
											"nodeType": "EnumValue",
											"src": "348:8:2"
										},
										{
											"id": 194,
											"name": "KING",
											"nameLocation": "366:4:2",
											"nodeType": "EnumValue",
											"src": "366:4:2"
										},
										{
											"id": 195,
											"name": "SOLDIER",
											"nameLocation": "380:7:2",
											"nodeType": "EnumValue",
											"src": "380:7:2"
										},
										{
											"id": 196,
											"name": "PARTICIPANT",
											"nameLocation": "397:11:2",
											"nodeType": "EnumValue",
											"src": "397:11:2"
										},
										{
											"id": 197,
											"name": "CONTRACT",
											"nameLocation": "418:8:2",
											"nodeType": "EnumValue",
											"src": "418:8:2"
										},
										{
											"id": 198,
											"name": "USER",
											"nameLocation": "436:4:2",
											"nodeType": "EnumValue",
											"src": "436:4:2"
										}
									],
									"name": "AccessType",
									"nameLocation": "308:10:2",
									"nodeType": "EnumDefinition",
									"src": "303:143:2"
								},
								{
									"canonicalName": "AccessRegistry.Accessor",
									"id": 207,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "Address",
											"nameLocation": "487:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 207,
											"src": "479:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 200,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "479:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "Class",
											"nameLocation": "515:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 207,
											"src": "504:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_AccessType_$199",
												"typeString": "enum AccessRegistry.AccessType"
											},
											"typeName": {
												"id": 203,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 202,
													"name": "AccessType",
													"nameLocations": [
														"504:10:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 199,
													"src": "504:10:2"
												},
												"referencedDeclaration": 199,
												"src": "504:10:2",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_AccessType_$199",
													"typeString": "enum AccessRegistry.AccessType"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 206,
											"mutability": "mutable",
											"name": "Domain",
											"nameLocation": "538:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 207,
											"src": "530:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 205,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "530:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Accessor",
									"nameLocation": "460:8:2",
									"nodeType": "StructDefinition",
									"scope": 662,
									"src": "453:109:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 210,
									"mutability": "mutable",
									"name": "Registry",
									"nameLocation": "600:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 662,
									"src": "571:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Registry_$1038_storage",
										"typeString": "struct LibRegistry.Registry"
									},
									"typeName": {
										"id": 209,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 208,
											"name": "LibRegistry.Registry",
											"nameLocations": [
												"571:11:2",
												"583:8:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1038,
											"src": "571:20:2"
										},
										"referencedDeclaration": 1038,
										"src": "571:20:2",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Registry_$1038_storage_ptr",
											"typeString": "struct LibRegistry.Registry"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 215,
									"mutability": "mutable",
									"name": "Accessors",
									"nameLocation": "652:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 662,
									"src": "614:47:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Accessor_$207_storage_$",
										"typeString": "mapping(uint256 => struct AccessRegistry.Accessor)"
									},
									"typeName": {
										"id": 214,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 211,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "622:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "614:28:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Accessor_$207_storage_$",
											"typeString": "mapping(uint256 => struct AccessRegistry.Accessor)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 213,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 212,
												"name": "Accessor",
												"nameLocations": [
													"633:8:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 207,
												"src": "633:8:2"
											},
											"referencedDeclaration": 207,
											"src": "633:8:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Accessor_$207_storage_ptr",
												"typeString": "struct AccessRegistry.Accessor"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "768:311:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 227,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "785:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 228,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "793:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "793:7:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "785:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 233,
												"nodeType": "IfStatement",
												"src": "782:31:2",
												"trueBody": {
													"expression": {
														"hexValue": "74727565",
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "809:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"functionReturnParameters": 226,
													"id": 232,
													"nodeType": "Return",
													"src": "802:11:2"
												}
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "835:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 276,
														"src": "827:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 234,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "827:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 240,
												"initialValue": {
													"arguments": [
														{
															"id": 238,
															"name": "dom",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "856:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 236,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "847:8:2",
														"memberName": "hashWith",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 778,
														"src": "842:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_pure$_t_address_$_t_address_$returns$_t_uint256_$attached_to$_t_address_$",
															"typeString": "function (address,address) pure returns (uint256)"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "842:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "827:33:2"
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 243,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "891:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 241,
															"name": "Registry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "873:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Registry_$1038_storage",
																"typeString": "struct LibRegistry.Registry storage ref"
															}
														},
														"id": 242,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "882:8:2",
														"memberName": "Contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1083,
														"src": "873:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_view$_t_struct$_Registry_$1038_storage_ptr_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_Registry_$1038_storage_ptr_$",
															"typeString": "function (struct LibRegistry.Registry storage pointer,uint256) view returns (bool)"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "873:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 273,
												"nodeType": "IfStatement",
												"src": "870:181:2",
												"trueBody": {
													"id": 272,
													"nodeType": "Block",
													"src": "898:153:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_AccessType_$199",
																		"typeString": "enum AccessRegistry.AccessType"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 245,
																				"name": "Accessors",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 215,
																				"src": "921:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Accessor_$207_storage_$",
																					"typeString": "mapping(uint256 => struct AccessRegistry.Accessor storage ref)"
																				}
																			},
																			"id": 247,
																			"indexExpression": {
																				"id": 246,
																				"name": "hash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 235,
																				"src": "931:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "921:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Accessor_$207_storage",
																				"typeString": "struct AccessRegistry.Accessor storage ref"
																			}
																		},
																		"id": 248,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "937:5:2",
																		"memberName": "Class",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 204,
																		"src": "921:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_AccessType_$199",
																			"typeString": "enum AccessRegistry.AccessType"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "min",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "946:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_AccessType_$199",
																			"typeString": "enum AccessRegistry.AccessType"
																		}
																	},
																	"src": "921:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 266,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				"id": 259,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"baseExpression": {
																							"id": 251,
																							"name": "Accessors",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 215,
																							"src": "954:9:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Accessor_$207_storage_$",
																								"typeString": "mapping(uint256 => struct AccessRegistry.Accessor storage ref)"
																							}
																						},
																						"id": 253,
																						"indexExpression": {
																							"id": 252,
																							"name": "hash",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 235,
																							"src": "964:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "954:15:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Accessor_$207_storage",
																							"typeString": "struct AccessRegistry.Accessor storage ref"
																						}
																					},
																					"id": 254,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "970:6:2",
																					"memberName": "Domain",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 206,
																					"src": "954:22:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"arguments": [
																						{
																							"id": 257,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "988:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_AccessRegistry_$662",
																								"typeString": "contract AccessRegistry"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_AccessRegistry_$662",
																								"typeString": "contract AccessRegistry"
																							}
																						],
																						"id": 256,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "980:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 255,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "980:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 258,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "980:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"src": "954:39:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "||",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				"id": 265,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"baseExpression": {
																							"id": 260,
																							"name": "Accessors",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 215,
																							"src": "997:9:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Accessor_$207_storage_$",
																								"typeString": "mapping(uint256 => struct AccessRegistry.Accessor storage ref)"
																							}
																						},
																						"id": 262,
																						"indexExpression": {
																							"id": 261,
																							"name": "hash",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 235,
																							"src": "1007:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "997:15:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Accessor_$207_storage",
																							"typeString": "struct AccessRegistry.Accessor storage ref"
																						}
																					},
																					"id": 263,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "1013:6:2",
																					"memberName": "Domain",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 206,
																					"src": "997:22:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"id": 264,
																					"name": "dom",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 222,
																					"src": "1023:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"src": "997:29:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "954:72:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 267,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "953:74:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "921:106:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 271,
															"nodeType": "IfStatement",
															"src": "918:122:2",
															"trueBody": {
																"expression": {
																	"hexValue": "74727565",
																	"id": 269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1036:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"functionReturnParameters": 226,
																"id": 270,
																"nodeType": "Return",
																"src": "1029:11:2"
															}
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1067:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 226,
												"id": 275,
												"nodeType": "Return",
												"src": "1060:12:2"
											}
										]
									},
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hasAccess",
									"nameLocation": "686:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "705:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "697:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "697:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "min",
												"nameLocation": "722:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "711:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_AccessType_$199",
													"typeString": "enum AccessRegistry.AccessType"
												},
												"typeName": {
													"id": 219,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 218,
														"name": "AccessType",
														"nameLocations": [
															"711:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 199,
														"src": "711:10:2"
													},
													"referencedDeclaration": 199,
													"src": "711:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_AccessType_$199",
														"typeString": "enum AccessRegistry.AccessType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "dom",
												"nameLocation": "735:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "727:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "696:43:2"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "762:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "762:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "761:6:2"
									},
									"scope": 662,
									"src": "677:402:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "1176:169:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_AccessType_$199",
															"typeString": "enum AccessRegistry.AccessType"
														},
														"id": 294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 289,
																	"name": "Accessors",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "1197:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Accessor_$207_storage_$",
																		"typeString": "mapping(uint256 => struct AccessRegistry.Accessor storage ref)"
																	}
																},
																"id": 291,
																"indexExpression": {
																	"id": 290,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "1207:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1197:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Accessor_$207_storage",
																	"typeString": "struct AccessRegistry.Accessor storage ref"
																}
															},
															"id": 292,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1213:5:2",
															"memberName": "Class",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 204,
															"src": "1197:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_AccessType_$199",
																"typeString": "enum AccessRegistry.AccessType"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"id": 293,
															"name": "min",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "1222:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_AccessType_$199",
																"typeString": "enum AccessRegistry.AccessType"
															}
														},
														"src": "1197:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 295,
																				"name": "Accessors",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 215,
																				"src": "1230:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Accessor_$207_storage_$",
																					"typeString": "mapping(uint256 => struct AccessRegistry.Accessor storage ref)"
																				}
																			},
																			"id": 297,
																			"indexExpression": {
																				"id": 296,
																				"name": "hash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "1240:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1230:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Accessor_$207_storage",
																				"typeString": "struct AccessRegistry.Accessor storage ref"
																			}
																		},
																		"id": 298,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1246:6:2",
																		"memberName": "Domain",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 206,
																		"src": "1230:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 301,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1264:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_AccessRegistry_$662",
																					"typeString": "contract AccessRegistry"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_AccessRegistry_$662",
																					"typeString": "contract AccessRegistry"
																				}
																			],
																			"id": 300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1256:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 299,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1256:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1256:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "1230:39:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 304,
																				"name": "Accessors",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 215,
																				"src": "1273:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Accessor_$207_storage_$",
																					"typeString": "mapping(uint256 => struct AccessRegistry.Accessor storage ref)"
																				}
																			},
																			"id": 306,
																			"indexExpression": {
																				"id": 305,
																				"name": "hash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "1283:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1273:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Accessor_$207_storage",
																				"typeString": "struct AccessRegistry.Accessor storage ref"
																			}
																		},
																		"id": 307,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1289:6:2",
																		"memberName": "Domain",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 206,
																		"src": "1273:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 308,
																		"name": "dom",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 284,
																		"src": "1299:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "1273:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1230:72:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 311,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1229:74:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1197:106:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 315,
												"nodeType": "IfStatement",
												"src": "1194:122:2",
												"trueBody": {
													"expression": {
														"hexValue": "74727565",
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1312:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"functionReturnParameters": 288,
													"id": 314,
													"nodeType": "Return",
													"src": "1305:11:2"
												}
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1333:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 288,
												"id": 317,
												"nodeType": "Return",
												"src": "1326:12:2"
											}
										]
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hasAccess",
									"nameLocation": "1094:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "1113:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "1105:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "min",
												"nameLocation": "1130:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "1119:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_AccessType_$199",
													"typeString": "enum AccessRegistry.AccessType"
												},
												"typeName": {
													"id": 281,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 280,
														"name": "AccessType",
														"nameLocations": [
															"1119:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 199,
														"src": "1119:10:2"
													},
													"referencedDeclaration": 199,
													"src": "1119:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_AccessType_$199",
														"typeString": "enum AccessRegistry.AccessType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "dom",
												"nameLocation": "1143:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "1135:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1135:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1104:43:2"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "1170:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1169:6:2"
									},
									"scope": 662,
									"src": "1085:260:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "1440:364:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 331,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "1469:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 332,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1477:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1477:7:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1469:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 337,
												"nodeType": "IfStatement",
												"src": "1466:31:2",
												"trueBody": {
													"expression": {
														"hexValue": "74727565",
														"id": 335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1493:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"functionReturnParameters": 330,
													"id": 336,
													"nodeType": "Return",
													"src": "1486:11:2"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 340,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1525:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1529:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1525:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 342,
																		"name": "AccessType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 199,
																		"src": "1537:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_AccessType_$199_$",
																			"typeString": "type(enum AccessRegistry.AccessType)"
																		}
																	},
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1548:8:2",
																	"memberName": "CONTRACT",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 197,
																	"src": "1537:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_AccessType_$199",
																		"typeString": "enum AccessRegistry.AccessType"
																	}
																},
																{
																	"id": 344,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "1558:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_enum$_AccessType_$199",
																		"typeString": "enum AccessRegistry.AccessType"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 339,
																"name": "_hasAccess",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	277,
																	319
																],
																"referencedDeclaration": 277,
																"src": "1514:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_enum$_AccessType_$199_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,enum AccessRegistry.AccessType,address) view returns (bool)"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1514:49:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 338,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "1507:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1507:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "1507:57:2"
											},
											{
												"assignments": [
													349
												],
												"declarations": [
													{
														"constant": false,
														"id": 349,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "1582:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 381,
														"src": "1574:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 348,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1574:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 354,
												"initialValue": {
													"arguments": [
														{
															"id": 352,
															"name": "dom",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "1603:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 350,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "1589:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1594:8:2",
														"memberName": "hashWith",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 778,
														"src": "1589:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_pure$_t_address_$_t_address_$returns$_t_uint256_$attached_to$_t_address_$",
															"typeString": "function (address,address) pure returns (uint256)"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1589:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1574:33:2"
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 357,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "1638:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 355,
															"name": "Registry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "1620:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Registry_$1038_storage",
																"typeString": "struct LibRegistry.Registry storage ref"
															}
														},
														"id": 356,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1629:8:2",
														"memberName": "Contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1083,
														"src": "1620:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_view$_t_struct$_Registry_$1038_storage_ptr_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_Registry_$1038_storage_ptr_$",
															"typeString": "function (struct LibRegistry.Registry storage pointer,uint256) view returns (bool)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1620:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 378,
												"nodeType": "IfStatement",
												"src": "1617:159:2",
												"trueBody": {
													"id": 377,
													"nodeType": "Block",
													"src": "1645:131:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 361,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "1677:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 362,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1681:6:2",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "1677:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"expression": {
																					"baseExpression": {
																						"id": 363,
																						"name": "Accessors",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 215,
																						"src": "1689:9:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Accessor_$207_storage_$",
																							"typeString": "mapping(uint256 => struct AccessRegistry.Accessor storage ref)"
																						}
																					},
																					"id": 365,
																					"indexExpression": {
																						"id": 364,
																						"name": "hash",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 349,
																						"src": "1699:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "1689:15:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Accessor_$207_storage",
																						"typeString": "struct AccessRegistry.Accessor storage ref"
																					}
																				},
																				"id": 366,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1705:5:2",
																				"memberName": "Class",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 204,
																				"src": "1689:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_AccessType_$199",
																					"typeString": "enum AccessRegistry.AccessType"
																				}
																			},
																			{
																				"id": 367,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 321,
																				"src": "1712:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_enum$_AccessType_$199",
																					"typeString": "enum AccessRegistry.AccessType"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 360,
																			"name": "_hasAccess",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				277,
																				319
																			],
																			"referencedDeclaration": 277,
																			"src": "1666:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_enum$_AccessType_$199_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,enum AccessRegistry.AccessType,address) view returns (bool)"
																			}
																		},
																		"id": 368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1666:51:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 359,
																	"name": "assert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967293,
																	"src": "1659:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1659:59:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 370,
															"nodeType": "ExpressionStatement",
															"src": "1659:59:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 372,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 349,
																		"src": "1750:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 373,
																		"name": "min",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 324,
																		"src": "1756:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_AccessType_$199",
																			"typeString": "enum AccessRegistry.AccessType"
																		}
																	},
																	{
																		"id": 374,
																		"name": "dom",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 326,
																		"src": "1761:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_enum$_AccessType_$199",
																			"typeString": "enum AccessRegistry.AccessType"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 371,
																	"name": "_hasAccess",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		277,
																		319
																	],
																	"referencedDeclaration": 319,
																	"src": "1739:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_enum$_AccessType_$199_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (uint256,enum AccessRegistry.AccessType,address) view returns (bool)"
																	}
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1739:26:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"functionReturnParameters": 330,
															"id": 376,
															"nodeType": "Return",
															"src": "1732:33:2"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1792:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 330,
												"id": 380,
												"nodeType": "Return",
												"src": "1785:12:2"
											}
										]
									},
									"functionSelector": "f29a1bdd",
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "HasAccess",
									"nameLocation": "1360:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1378:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1370:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1370:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "min",
												"nameLocation": "1395:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1384:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_AccessType_$199",
													"typeString": "enum AccessRegistry.AccessType"
												},
												"typeName": {
													"id": 323,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 322,
														"name": "AccessType",
														"nameLocations": [
															"1384:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 199,
														"src": "1384:10:2"
													},
													"referencedDeclaration": 199,
													"src": "1384:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_AccessType_$199",
														"typeString": "enum AccessRegistry.AccessType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "dom",
												"nameLocation": "1408:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1400:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1369:43:2"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1434:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 328,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1434:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:6:2"
									},
									"scope": 662,
									"src": "1351:453:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "1886:370:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 394,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1913:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1917:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1913:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 396,
																		"name": "AccessType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 199,
																		"src": "1925:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_AccessType_$199_$",
																			"typeString": "type(enum AccessRegistry.AccessType)"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1936:8:2",
																	"memberName": "CONGRESS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 193,
																	"src": "1925:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_AccessType_$199",
																		"typeString": "enum AccessRegistry.AccessType"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 400,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1954:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AccessRegistry_$662",
																				"typeString": "contract AccessRegistry"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AccessRegistry_$662",
																				"typeString": "contract AccessRegistry"
																			}
																		],
																		"id": 399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1946:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 398,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1946:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1946:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_enum$_AccessType_$199",
																		"typeString": "enum AccessRegistry.AccessType"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 393,
																"name": "HasAccess",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 382,
																"src": "1903:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_enum$_AccessType_$199_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,enum AccessRegistry.AccessType,address) view returns (bool)"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1903:57:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 392,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "1896:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1896:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "1896:65:2"
											},
											{
												"assignments": [
													406
												],
												"declarations": [
													{
														"constant": false,
														"id": 406,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "1987:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 445,
														"src": "1979:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 405,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1979:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 411,
												"initialValue": {
													"arguments": [
														{
															"id": 409,
															"name": "dom",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "2008:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 407,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "1994:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1999:8:2",
														"memberName": "hashWith",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 778,
														"src": "1994:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_pure$_t_address_$_t_address_$returns$_t_uint256_$attached_to$_t_address_$",
															"typeString": "function (address,address) pure returns (uint256)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1994:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1979:33:2"
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 414,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "2043:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 412,
															"name": "Registry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "2025:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Registry_$1038_storage",
																"typeString": "struct LibRegistry.Registry storage ref"
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2034:8:2",
														"memberName": "Contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1083,
														"src": "2025:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_view$_t_struct$_Registry_$1038_storage_ptr_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_Registry_$1038_storage_ptr_$",
															"typeString": "function (struct LibRegistry.Registry storage pointer,uint256) view returns (bool)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2025:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 438,
												"nodeType": "IfStatement",
												"src": "2022:191:2",
												"trueBody": {
													"id": 437,
													"nodeType": "Block",
													"src": "2050:163:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 418,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2081:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 419,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2085:6:2",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2081:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"expression": {
																					"baseExpression": {
																						"id": 420,
																						"name": "Accessors",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 215,
																						"src": "2093:9:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Accessor_$207_storage_$",
																							"typeString": "mapping(uint256 => struct AccessRegistry.Accessor storage ref)"
																						}
																					},
																					"id": 422,
																					"indexExpression": {
																						"id": 421,
																						"name": "hash",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 406,
																						"src": "2103:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2093:15:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Accessor_$207_storage",
																						"typeString": "struct AccessRegistry.Accessor storage ref"
																					}
																				},
																				"id": 423,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2109:5:2",
																				"memberName": "Class",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 204,
																				"src": "2093:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_AccessType_$199",
																					"typeString": "enum AccessRegistry.AccessType"
																				}
																			},
																			{
																				"id": 424,
																				"name": "addr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "2116:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_enum$_AccessType_$199",
																					"typeString": "enum AccessRegistry.AccessType"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 417,
																			"name": "HasAccess",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 382,
																			"src": "2071:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_enum$_AccessType_$199_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,enum AccessRegistry.AccessType,address) view returns (bool)"
																			}
																		},
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2071:50:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 416,
																	"name": "assert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967293,
																	"src": "2064:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2064:58:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 427,
															"nodeType": "ExpressionStatement",
															"src": "2064:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 430,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2153:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 431,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2157:6:2",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2153:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 432,
																				"name": "class",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 387,
																				"src": "2165:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_AccessType_$199",
																					"typeString": "enum AccessRegistry.AccessType"
																				}
																			},
																			{
																				"id": 433,
																				"name": "dom",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 389,
																				"src": "2172:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_enum$_AccessType_$199",
																					"typeString": "enum AccessRegistry.AccessType"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 429,
																			"name": "HasAccess",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 382,
																			"src": "2143:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_enum$_AccessType_$199_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,enum AccessRegistry.AccessType,address) view returns (bool)"
																			}
																		},
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2143:33:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 428,
																	"name": "assert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967293,
																	"src": "2136:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2136:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 436,
															"nodeType": "ExpressionStatement",
															"src": "2136:41:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "2232:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "class",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "2238:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_AccessType_$199",
																"typeString": "enum AccessRegistry.AccessType"
															}
														},
														{
															"id": 442,
															"name": "dom",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "2245:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_enum$_AccessType_$199",
																"typeString": "enum AccessRegistry.AccessType"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 439,
														"name": "SetAccess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 616,
														"src": "2222:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_enum$_AccessType_$199_$_t_address_$returns$__$",
															"typeString": "function (address,enum AccessRegistry.AccessType,address)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2222:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "2222:27:2"
											}
										]
									},
									"functionSelector": "7981fb07",
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "RegisterAccess",
									"nameLocation": "1819:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "1842:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1834:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1834:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "class",
												"nameLocation": "1859:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1848:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_AccessType_$199",
													"typeString": "enum AccessRegistry.AccessType"
												},
												"typeName": {
													"id": 386,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 385,
														"name": "AccessType",
														"nameLocations": [
															"1848:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 199,
														"src": "1848:10:2"
													},
													"referencedDeclaration": 199,
													"src": "1848:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_AccessType_$199",
														"typeString": "enum AccessRegistry.AccessType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "dom",
												"nameLocation": "1874:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1866:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1833:45:2"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1886:0:2"
									},
									"scope": 662,
									"src": "1810:446:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "2346:148:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 458,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2373:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2377:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2373:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 460,
																		"name": "AccessType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 199,
																		"src": "2385:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_AccessType_$199_$",
																			"typeString": "type(enum AccessRegistry.AccessType)"
																		}
																	},
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2396:8:2",
																	"memberName": "CONTRACT",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 197,
																	"src": "2385:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_AccessType_$199",
																		"typeString": "enum AccessRegistry.AccessType"
																	}
																},
																{
																	"id": 462,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 448,
																	"src": "2406:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_enum$_AccessType_$199",
																		"typeString": "enum AccessRegistry.AccessType"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 457,
																"name": "HasAccess",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 382,
																"src": "2363:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_enum$_AccessType_$199_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,enum AccessRegistry.AccessType,address) view returns (bool)"
																}
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2363:48:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 456,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "2356:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2356:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "2356:56:2"
											},
											{
												"assignments": [
													467
												],
												"declarations": [
													{
														"constant": false,
														"id": 467,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "2430:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 477,
														"src": "2422:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 466,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2422:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 472,
												"initialValue": {
													"arguments": [
														{
															"id": 470,
															"name": "dom",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "2451:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 468,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "2437:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2442:8:2",
														"memberName": "hashWith",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 778,
														"src": "2437:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_pure$_t_address_$_t_address_$returns$_t_uint256_$attached_to$_t_address_$",
															"typeString": "function (address,address) pure returns (uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2437:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2422:33:2"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 473,
														"name": "Accessors",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "2472:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Accessor_$207_storage_$",
															"typeString": "mapping(uint256 => struct AccessRegistry.Accessor storage ref)"
														}
													},
													"id": 475,
													"indexExpression": {
														"id": 474,
														"name": "hash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "2482:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2472:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Accessor_$207_storage",
														"typeString": "struct AccessRegistry.Accessor storage ref"
													}
												},
												"functionReturnParameters": 455,
												"id": 476,
												"nodeType": "Return",
												"src": "2465:22:2"
											}
										]
									},
									"functionSelector": "2457ed42",
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "GetAccess",
									"nameLocation": "2271:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2289:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "2281:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2281:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "dom",
												"nameLocation": "2303:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "2295:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2295:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2280:27:2"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "2329:15:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Accessor_$207_memory_ptr",
													"typeString": "struct AccessRegistry.Accessor"
												},
												"typeName": {
													"id": 453,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 452,
														"name": "Accessor",
														"nameLocations": [
															"2329:8:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 207,
														"src": "2329:8:2"
													},
													"referencedDeclaration": 207,
													"src": "2329:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Accessor_$207_storage_ptr",
														"typeString": "struct AccessRegistry.Accessor"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2328:17:2"
									},
									"scope": 662,
									"src": "2262:232:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "2595:163:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 492,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2622:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2626:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2622:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 494,
																		"name": "AccessType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 199,
																		"src": "2634:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_AccessType_$199_$",
																			"typeString": "type(enum AccessRegistry.AccessType)"
																		}
																	},
																	"id": 495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2645:8:2",
																	"memberName": "CONTRACT",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 197,
																	"src": "2634:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_AccessType_$199",
																		"typeString": "enum AccessRegistry.AccessType"
																	}
																},
																{
																	"id": 496,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "2655:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_enum$_AccessType_$199",
																		"typeString": "enum AccessRegistry.AccessType"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 491,
																"name": "HasAccess",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 382,
																"src": "2612:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_enum$_AccessType_$199_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,enum AccessRegistry.AccessType,address) view returns (bool)"
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2612:48:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 490,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "2605:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2605:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "2605:56:2"
											},
											{
												"assignments": [
													501
												],
												"declarations": [
													{
														"constant": false,
														"id": 501,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "2679:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 514,
														"src": "2671:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 500,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2671:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 506,
												"initialValue": {
													"arguments": [
														{
															"id": 504,
															"name": "dom",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "2700:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 502,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "2686:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2691:8:2",
														"memberName": "hashWith",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 778,
														"src": "2686:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_pure$_t_address_$_t_address_$returns$_t_uint256_$attached_to$_t_address_$",
															"typeString": "function (address,address) pure returns (uint256)"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2686:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2671:33:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_enum$_AccessType_$199",
														"typeString": "enum AccessRegistry.AccessType"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 507,
																"name": "Accessors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "2721:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Accessor_$207_storage_$",
																	"typeString": "mapping(uint256 => struct AccessRegistry.Accessor storage ref)"
																}
															},
															"id": 509,
															"indexExpression": {
																"id": 508,
																"name": "hash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 501,
																"src": "2731:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2721:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Accessor_$207_storage",
																"typeString": "struct AccessRegistry.Accessor storage ref"
															}
														},
														"id": 510,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2737:5:2",
														"memberName": "Class",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "2721:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_AccessType_$199",
															"typeString": "enum AccessRegistry.AccessType"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 511,
														"name": "class",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "2746:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_AccessType_$199",
															"typeString": "enum AccessRegistry.AccessType"
														}
													},
													"src": "2721:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 489,
												"id": 513,
												"nodeType": "Return",
												"src": "2714:37:2"
											}
										]
									},
									"functionSelector": "ccf61fc3",
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "AccessIsClass",
									"nameLocation": "2510:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2532:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "2524:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "dom",
												"nameLocation": "2546:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "2538:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2538:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "class",
												"nameLocation": "2562:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "2551:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_AccessType_$199",
													"typeString": "enum AccessRegistry.AccessType"
												},
												"typeName": {
													"id": 484,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 483,
														"name": "AccessType",
														"nameLocations": [
															"2551:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 199,
														"src": "2551:10:2"
													},
													"referencedDeclaration": 199,
													"src": "2551:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_AccessType_$199",
														"typeString": "enum AccessRegistry.AccessType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2523:45:2"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "2589:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 487,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2589:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2588:6:2"
									},
									"scope": 662,
									"src": "2501:257:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "2824:114:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 522,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2851:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2855:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2851:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 524,
																		"name": "AccessType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 199,
																		"src": "2863:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_AccessType_$199_$",
																			"typeString": "type(enum AccessRegistry.AccessType)"
																		}
																	},
																	"id": 525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2874:7:2",
																	"memberName": "SOLDIER",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 195,
																	"src": "2863:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_AccessType_$199",
																		"typeString": "enum AccessRegistry.AccessType"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 528,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2891:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AccessRegistry_$662",
																				"typeString": "contract AccessRegistry"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AccessRegistry_$662",
																				"typeString": "contract AccessRegistry"
																			}
																		],
																		"id": 527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2883:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 526,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2883:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2883:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_enum$_AccessType_$199",
																		"typeString": "enum AccessRegistry.AccessType"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 521,
																"name": "HasAccess",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 382,
																"src": "2841:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_enum$_AccessType_$199_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,enum AccessRegistry.AccessType,address) view returns (bool)"
																}
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2841:56:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 520,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "2834:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2834:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 532,
												"nodeType": "ExpressionStatement",
												"src": "2834:64:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 533,
															"name": "Registry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "2915:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Registry_$1038_storage",
																"typeString": "struct LibRegistry.Registry storage ref"
															}
														},
														"id": 534,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2924:5:2",
														"memberName": "Count",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1067,
														"src": "2915:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_view$_t_struct$_Registry_$1038_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Registry_$1038_storage_ptr_$",
															"typeString": "function (struct LibRegistry.Registry storage pointer) view returns (uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2915:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 519,
												"id": 536,
												"nodeType": "Return",
												"src": "2908:23:2"
											}
										]
									},
									"functionSelector": "0e10d955",
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "AccessRegistryCount",
									"nameLocation": "2773:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2792:2:2"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "2815:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2815:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2814:9:2"
									},
									"scope": 662,
									"src": "2764:174:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 570,
										"nodeType": "Block",
										"src": "3018:164:2",
										"statements": [
											{
												"assignments": [
													547
												],
												"declarations": [
													{
														"constant": false,
														"id": 547,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "3036:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 570,
														"src": "3028:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 546,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3028:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 552,
												"initialValue": {
													"arguments": [
														{
															"id": 550,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "3067:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 548,
															"name": "Registry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "3043:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Registry_$1038_storage",
																"typeString": "struct LibRegistry.Registry storage ref"
															}
														},
														"id": 549,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3052:14:2",
														"memberName": "GetHashByIndex",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1054,
														"src": "3043:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_view$_t_struct$_Registry_$1038_storage_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_struct$_Registry_$1038_storage_ptr_$",
															"typeString": "function (struct LibRegistry.Registry storage pointer,uint256) view returns (uint256)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3043:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3028:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 555,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3096:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3100:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3096:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 557,
																		"name": "AccessType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 199,
																		"src": "3108:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_AccessType_$199_$",
																			"typeString": "type(enum AccessRegistry.AccessType)"
																		}
																	},
																	"id": 558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3119:7:2",
																	"memberName": "SOLDIER",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 195,
																	"src": "3108:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_AccessType_$199",
																		"typeString": "enum AccessRegistry.AccessType"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 561,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3136:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AccessRegistry_$662",
																				"typeString": "contract AccessRegistry"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AccessRegistry_$662",
																				"typeString": "contract AccessRegistry"
																			}
																		],
																		"id": 560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3128:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 559,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3128:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3128:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_enum$_AccessType_$199",
																		"typeString": "enum AccessRegistry.AccessType"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 554,
																"name": "HasAccess",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 382,
																"src": "3086:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_enum$_AccessType_$199_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,enum AccessRegistry.AccessType,address) view returns (bool)"
																}
															},
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:56:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 553,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "3079:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3079:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "3079:64:2"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 566,
														"name": "Accessors",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "3160:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Accessor_$207_storage_$",
															"typeString": "mapping(uint256 => struct AccessRegistry.Accessor storage ref)"
														}
													},
													"id": 568,
													"indexExpression": {
														"id": 567,
														"name": "hash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "3170:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3160:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Accessor_$207_storage",
														"typeString": "struct AccessRegistry.Accessor storage ref"
													}
												},
												"functionReturnParameters": 545,
												"id": 569,
												"nodeType": "Return",
												"src": "3153:22:2"
											}
										]
									},
									"functionSelector": "1a2eff27",
									"id": 571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "GetAccessByIndex",
									"nameLocation": "2953:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "i",
												"nameLocation": "2978:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "2970:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2969:11:2"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "3001:15:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Accessor_$207_memory_ptr",
													"typeString": "struct AccessRegistry.Accessor"
												},
												"typeName": {
													"id": 543,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 542,
														"name": "Accessor",
														"nameLocations": [
															"3001:8:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 207,
														"src": "3001:8:2"
													},
													"referencedDeclaration": 207,
													"src": "3001:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Accessor_$207_storage_ptr",
														"typeString": "struct AccessRegistry.Accessor"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3000:17:2"
									},
									"scope": 662,
									"src": "2944:238:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "3261:201:2",
										"statements": [
											{
												"assignments": [
													582
												],
												"declarations": [
													{
														"constant": false,
														"id": 582,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "3279:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 615,
														"src": "3271:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 581,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3271:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 587,
												"initialValue": {
													"arguments": [
														{
															"id": 585,
															"name": "dom",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "3300:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 583,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "3286:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3291:8:2",
														"memberName": "hashWith",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 778,
														"src": "3286:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_pure$_t_address_$_t_address_$returns$_t_uint256_$attached_to$_t_address_$",
															"typeString": "function (address,address) pure returns (uint256)"
														}
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3286:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3271:33:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 591,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "3332:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 588,
															"name": "Registry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "3314:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Registry_$1038_storage",
																"typeString": "struct LibRegistry.Registry storage ref"
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3323:8:2",
														"memberName": "Register",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1125,
														"src": "3314:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Registry_$1038_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_struct$_Registry_$1038_storage_ptr_$",
															"typeString": "function (struct LibRegistry.Registry storage pointer,uint256)"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "3314:23:2"
											},
											{
												"expression": {
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 594,
																"name": "Accessors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "3347:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Accessor_$207_storage_$",
																	"typeString": "mapping(uint256 => struct AccessRegistry.Accessor storage ref)"
																}
															},
															"id": 596,
															"indexExpression": {
																"id": 595,
																"name": "hash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "3357:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3347:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Accessor_$207_storage",
																"typeString": "struct AccessRegistry.Accessor storage ref"
															}
														},
														"id": 597,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3363:7:2",
														"memberName": "Address",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "3347:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 598,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "3373:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3347:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "3347:30:2"
											},
											{
												"expression": {
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 601,
																"name": "Accessors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "3387:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Accessor_$207_storage_$",
																	"typeString": "mapping(uint256 => struct AccessRegistry.Accessor storage ref)"
																}
															},
															"id": 603,
															"indexExpression": {
																"id": 602,
																"name": "hash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "3397:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3387:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Accessor_$207_storage",
																"typeString": "struct AccessRegistry.Accessor storage ref"
															}
														},
														"id": 604,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3403:5:2",
														"memberName": "Class",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "3387:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_AccessType_$199",
															"typeString": "enum AccessRegistry.AccessType"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 605,
														"name": "Class",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "3411:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_AccessType_$199",
															"typeString": "enum AccessRegistry.AccessType"
														}
													},
													"src": "3387:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_AccessType_$199",
														"typeString": "enum AccessRegistry.AccessType"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "3387:29:2"
											},
											{
												"expression": {
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 608,
																"name": "Accessors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "3426:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Accessor_$207_storage_$",
																	"typeString": "mapping(uint256 => struct AccessRegistry.Accessor storage ref)"
																}
															},
															"id": 610,
															"indexExpression": {
																"id": 609,
																"name": "hash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "3436:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3426:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Accessor_$207_storage",
																"typeString": "struct AccessRegistry.Accessor storage ref"
															}
														},
														"id": 611,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3442:6:2",
														"memberName": "Domain",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 206,
														"src": "3426:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 612,
														"name": "dom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "3451:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3426:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "3426:28:2"
											}
										]
									},
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "SetAccess",
									"nameLocation": "3197:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3215:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3207:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3207:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "Class",
												"nameLocation": "3232:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3221:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_AccessType_$199",
													"typeString": "enum AccessRegistry.AccessType"
												},
												"typeName": {
													"id": 575,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 574,
														"name": "AccessType",
														"nameLocations": [
															"3221:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 199,
														"src": "3221:10:2"
													},
													"referencedDeclaration": 199,
													"src": "3221:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_AccessType_$199",
														"typeString": "enum AccessRegistry.AccessType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "dom",
												"nameLocation": "3247:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3239:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3239:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3206:45:2"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3261:0:2"
									},
									"scope": 662,
									"src": "3188:274:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "3524:234:2",
										"statements": [
											{
												"assignments": [
													625
												],
												"declarations": [
													{
														"constant": false,
														"id": 625,
														"mutability": "mutable",
														"name": "A",
														"nameLocation": "3550:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "3534:17:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Accessor_$207_memory_ptr",
															"typeString": "struct AccessRegistry.Accessor"
														},
														"typeName": {
															"id": 624,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 623,
																"name": "Accessor",
																"nameLocations": [
																	"3534:8:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 207,
																"src": "3534:8:2"
															},
															"referencedDeclaration": 207,
															"src": "3534:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Accessor_$207_storage_ptr",
																"typeString": "struct AccessRegistry.Accessor"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 630,
												"initialValue": {
													"arguments": [
														{
															"id": 627,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "3564:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 628,
															"name": "dom",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "3570:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 626,
														"name": "GetAccess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 478,
														"src": "3554:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_struct$_Accessor_$207_memory_ptr_$",
															"typeString": "function (address,address) view returns (struct AccessRegistry.Accessor memory)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3554:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Accessor_$207_memory_ptr",
														"typeString": "struct AccessRegistry.Accessor memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3534:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 633,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3601:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3605:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3601:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 635,
																		"name": "AccessType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 199,
																		"src": "3613:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_AccessType_$199_$",
																			"typeString": "type(enum AccessRegistry.AccessType)"
																		}
																	},
																	"id": 636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3624:9:2",
																	"memberName": "PRESEDENT",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 192,
																	"src": "3613:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_AccessType_$199",
																		"typeString": "enum AccessRegistry.AccessType"
																	}
																},
																{
																	"expression": {
																		"id": 637,
																		"name": "A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 625,
																		"src": "3635:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Accessor_$207_memory_ptr",
																			"typeString": "struct AccessRegistry.Accessor memory"
																		}
																	},
																	"id": 638,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3637:6:2",
																	"memberName": "Domain",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 206,
																	"src": "3635:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_enum$_AccessType_$199",
																		"typeString": "enum AccessRegistry.AccessType"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 632,
																"name": "HasAccess",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 382,
																"src": "3591:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_enum$_AccessType_$199_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,enum AccessRegistry.AccessType,address) view returns (bool)"
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3591:53:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 631,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "3584:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3584:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "3584:61:2"
											},
											{
												"assignments": [
													643
												],
												"declarations": [
													{
														"constant": false,
														"id": 643,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "3663:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "3655:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 642,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3655:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 648,
												"initialValue": {
													"arguments": [
														{
															"id": 646,
															"name": "dom",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "3684:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 644,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "3670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3675:8:2",
														"memberName": "hashWith",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 778,
														"src": "3670:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_pure$_t_address_$_t_address_$returns$_t_uint256_$attached_to$_t_address_$",
															"typeString": "function (address,address) pure returns (uint256)"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3670:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3655:33:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 652,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "3714:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 649,
															"name": "Registry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "3698:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Registry_$1038_storage",
																"typeString": "struct LibRegistry.Registry storage ref"
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3707:6:2",
														"memberName": "Remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1194,
														"src": "3698:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Registry_$1038_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_struct$_Registry_$1038_storage_ptr_$",
															"typeString": "function (struct LibRegistry.Registry storage pointer,uint256)"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3698:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "3698:21:2"
											},
											{
												"expression": {
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "3729:22:2",
													"subExpression": {
														"baseExpression": {
															"id": 655,
															"name": "Accessors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "3736:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Accessor_$207_storage_$",
																"typeString": "mapping(uint256 => struct AccessRegistry.Accessor storage ref)"
															}
														},
														"id": 657,
														"indexExpression": {
															"id": 656,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "3746:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3736:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Accessor_$207_storage",
															"typeString": "struct AccessRegistry.Accessor storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "3729:22:2"
											}
										]
									},
									"functionSelector": "4a78e1e3",
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "RemoveAccess",
									"nameLocation": "3477:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3498:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "3490:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3490:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "dom",
												"nameLocation": "3512:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "3504:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3504:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3489:27:2"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3524:0:2"
									},
									"scope": 662,
									"src": "3468:290:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 663,
							"src": "167:3593:2",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "35:3725:2"
				},
				"id": 2
			},
			"contracts/atropamath.sol": {
				"ast": {
					"absolutePath": "contracts/atropamath.sol",
					"exportedSymbols": {
						"AtropaMath": [
							1024
						],
						"RNG": [
							670
						]
					},
					"id": 1025,
					"license": "Sharia",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 664,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "RNG",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 670,
							"linearizedBaseContracts": [
								670
							],
							"name": "RNG",
							"nameLocation": "73:3:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "604a6fa9",
									"id": 669,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "Random",
									"nameLocation": "92:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "98:2:3"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "118:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 666,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "118:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "117:8:3"
									},
									"scope": 670,
									"src": "83:43:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1025,
							"src": "63:65:3",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AtropaMath",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1024,
							"linearizedBaseContracts": [
								1024
							],
							"name": "AtropaMath",
							"nameLocation": "138:10:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "d3dc2a0f",
									"id": 673,
									"mutability": "constant",
									"name": "MotzkinPrime",
									"nameLocation": "179:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1024,
									"src": "156:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 671,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "156:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"value": {
										"hexValue": "393533343637393534313134333633",
										"id": 672,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "194:15:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_953467954114363_by_1",
											"typeString": "int_const 953467954114363"
										},
										"value": "953467954114363"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 726,
										"nodeType": "Block",
										"src": "778:327:3",
										"statements": [
											{
												"expression": {
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 686,
														"name": "hash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "796:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "803:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "796:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "796:8:3"
											},
											{
												"assignments": [
													691
												],
												"declarations": [
													{
														"constant": false,
														"id": 691,
														"mutability": "mutable",
														"name": "_b",
														"nameLocation": "827:2:3",
														"nodeType": "VariableDeclaration",
														"scope": 726,
														"src": "819:10:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 690,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "819:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 698,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 694,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 677,
																"src": "840:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "832:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint160_$",
																"typeString": "type(uint160)"
															},
															"typeName": {
																"id": 692,
																"name": "uint160",
																"nodeType": "ElementaryTypeName",
																"src": "832:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 695,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "832:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3135",
														"id": 696,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "845:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "832:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "819:28:3"
											},
											{
												"id": 725,
												"nodeType": "UncheckedBlock",
												"src": "857:161:3",
												"statements": [
													{
														"body": {
															"id": 723,
															"nodeType": "Block",
															"src": "898:110:3",
															"statements": [
																{
																	"expression": {
																		"id": 715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 702,
																			"name": "hash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 684,
																			"src": "916:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 711,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"arguments": [
																								{
																									"id": 704,
																									"name": "a",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 675,
																									"src": "933:1:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"id": 705,
																									"name": "b",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 677,
																									"src": "935:1:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								],
																								"id": 703,
																								"name": "hashWith",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 778,
																								"src": "924:8:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_uint256_$",
																									"typeString": "function (address,address) pure returns (uint256)"
																								}
																							},
																							"id": 706,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "924:13:3",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "**",
																						"rightExpression": {
																							"arguments": [
																								{
																									"id": 708,
																									"name": "c",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 679,
																									"src": "948:1:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"id": 709,
																									"name": "g",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 681,
																									"src": "950:1:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								],
																								"id": 707,
																								"name": "hashWith",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 778,
																								"src": "939:8:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_uint256_$",
																									"typeString": "function (address,address) pure returns (uint256)"
																								}
																							},
																							"id": 710,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "939:13:3",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "924:28:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 712,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "923:30:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "%",
																			"rightExpression": {
																				"id": 713,
																				"name": "MotzkinPrime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 673,
																				"src": "954:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint64",
																					"typeString": "uint64"
																				}
																			},
																			"src": "923:43:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "916:50:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 716,
																	"nodeType": "ExpressionStatement",
																	"src": "916:50:3"
																},
																{
																	"expression": {
																		"id": 721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 717,
																			"name": "_b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 691,
																			"src": "984:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 718,
																				"name": "_b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 691,
																				"src": "989:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 719,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "992:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "989:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"src": "984:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	"id": 722,
																	"nodeType": "ExpressionStatement",
																	"src": "984:9:3"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 699,
																"name": "hash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 684,
																"src": "887:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "895:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "887:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 724,
														"nodeType": "WhileStatement",
														"src": "881:127:3"
													}
												]
											}
										]
									},
									"functionSelector": "6e27811b",
									"id": 727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hashWithD",
									"nameLocation": "689:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "707:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "699:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "718:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "710:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "710:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "c",
												"nameLocation": "729:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "721:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "721:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "g",
												"nameLocation": "740:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "732:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "732:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:44:3"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "772:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "764:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "764:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "763:14:3"
									},
									"scope": 1024,
									"src": "680:425:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "1185:333:3",
										"statements": [
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 736,
														"name": "hash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "1203:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 737,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1210:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1203:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "1203:8:3"
											},
											{
												"assignments": [
													741
												],
												"declarations": [
													{
														"constant": false,
														"id": 741,
														"mutability": "mutable",
														"name": "_a",
														"nameLocation": "1229:2:3",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "1221:10:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 740,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "1221:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 746,
												"initialValue": {
													"arguments": [
														{
															"id": 744,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "1242:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1234:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 742,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "1234:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1234:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1221:23:3"
											},
											{
												"assignments": [
													748
												],
												"declarations": [
													{
														"constant": false,
														"id": 748,
														"mutability": "mutable",
														"name": "_b",
														"nameLocation": "1262:2:3",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "1254:10:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 747,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "1254:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 755,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 751,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 731,
																"src": "1275:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1267:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint160_$",
																"typeString": "type(uint160)"
															},
															"typeName": {
																"id": 749,
																"name": "uint160",
																"nodeType": "ElementaryTypeName",
																"src": "1267:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1267:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3135",
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1280:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "1267:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1254:28:3"
											},
											{
												"id": 776,
												"nodeType": "UncheckedBlock",
												"src": "1292:139:3",
												"statements": [
													{
														"body": {
															"id": 774,
															"nodeType": "Block",
															"src": "1333:88:3",
															"statements": [
																{
																	"expression": {
																		"id": 766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 759,
																			"name": "hash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 734,
																			"src": "1351:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 765,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						},
																						"id": 762,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 760,
																							"name": "_a",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 741,
																							"src": "1359:2:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint160",
																								"typeString": "uint160"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "**",
																						"rightExpression": {
																							"id": 761,
																							"name": "_b",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 748,
																							"src": "1363:2:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint160",
																								"typeString": "uint160"
																							}
																						},
																						"src": "1359:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					}
																				],
																				"id": 763,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1358:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "%",
																			"rightExpression": {
																				"id": 764,
																				"name": "MotzkinPrime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 673,
																				"src": "1367:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint64",
																					"typeString": "uint64"
																				}
																			},
																			"src": "1358:21:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"src": "1351:28:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 767,
																	"nodeType": "ExpressionStatement",
																	"src": "1351:28:3"
																},
																{
																	"expression": {
																		"id": 772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 768,
																			"name": "_b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 748,
																			"src": "1397:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 769,
																				"name": "_b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 748,
																				"src": "1402:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 770,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1405:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "1402:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"src": "1397:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	"id": 773,
																	"nodeType": "ExpressionStatement",
																	"src": "1397:9:3"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 756,
																"name": "hash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 734,
																"src": "1322:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 757,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1330:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1322:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 775,
														"nodeType": "WhileStatement",
														"src": "1316:105:3"
													}
												]
											}
										]
									},
									"functionSelector": "fa6bcfec",
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hashWith",
									"nameLocation": "1119:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1136:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "1128:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1128:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1147:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "1139:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1127:22:3"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "1179:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "1171:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1171:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1170:14:3"
									},
									"scope": 1024,
									"src": "1110:408:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 828,
										"nodeType": "Block",
										"src": "1601:333:3",
										"statements": [
											{
												"expression": {
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 787,
														"name": "hash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "1619:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1626:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1619:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "1619:8:3"
											},
											{
												"assignments": [
													792
												],
												"declarations": [
													{
														"constant": false,
														"id": 792,
														"mutability": "mutable",
														"name": "_a",
														"nameLocation": "1645:2:3",
														"nodeType": "VariableDeclaration",
														"scope": 828,
														"src": "1637:10:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 791,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "1637:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 797,
												"initialValue": {
													"arguments": [
														{
															"id": 795,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "1658:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 794,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1650:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 793,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "1650:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1650:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1637:23:3"
											},
											{
												"assignments": [
													799
												],
												"declarations": [
													{
														"constant": false,
														"id": 799,
														"mutability": "mutable",
														"name": "_b",
														"nameLocation": "1678:2:3",
														"nodeType": "VariableDeclaration",
														"scope": 828,
														"src": "1670:10:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 798,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "1670:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 806,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 802,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 782,
																"src": "1691:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1683:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint160_$",
																"typeString": "type(uint160)"
															},
															"typeName": {
																"id": 800,
																"name": "uint160",
																"nodeType": "ElementaryTypeName",
																"src": "1683:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1683:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3135",
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1696:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "1683:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1670:28:3"
											},
											{
												"id": 827,
												"nodeType": "UncheckedBlock",
												"src": "1708:139:3",
												"statements": [
													{
														"body": {
															"id": 825,
															"nodeType": "Block",
															"src": "1749:88:3",
															"statements": [
																{
																	"expression": {
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 810,
																			"name": "hash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 785,
																			"src": "1767:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 816,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						},
																						"id": 813,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 811,
																							"name": "_a",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 792,
																							"src": "1775:2:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint160",
																								"typeString": "uint160"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "**",
																						"rightExpression": {
																							"id": 812,
																							"name": "_b",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 799,
																							"src": "1779:2:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint160",
																								"typeString": "uint160"
																							}
																						},
																						"src": "1775:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					}
																				],
																				"id": 814,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1774:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "%",
																			"rightExpression": {
																				"id": 815,
																				"name": "MotzkinPrime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 673,
																				"src": "1783:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint64",
																					"typeString": "uint64"
																				}
																			},
																			"src": "1774:21:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"src": "1767:28:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 818,
																	"nodeType": "ExpressionStatement",
																	"src": "1767:28:3"
																},
																{
																	"expression": {
																		"id": 823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 819,
																			"name": "_b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 799,
																			"src": "1813:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 820,
																				"name": "_b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 799,
																				"src": "1818:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 821,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1821:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "1818:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"src": "1813:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	"id": 824,
																	"nodeType": "ExpressionStatement",
																	"src": "1813:9:3"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 807,
																"name": "hash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 785,
																"src": "1738:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1746:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1738:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 826,
														"nodeType": "WhileStatement",
														"src": "1732:105:3"
													}
												]
											}
										]
									},
									"functionSelector": "6592f007",
									"id": 829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hashWithHash",
									"nameLocation": "1534:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1555:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "1547:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1563:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "1558:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1558:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1546:19:3"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "1595:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "1587:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1587:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1586:14:3"
									},
									"scope": 1024,
									"src": "1525:409:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "2026:164:3",
										"statements": [
											{
												"assignments": [
													841
												],
												"declarations": [
													{
														"constant": false,
														"id": 841,
														"mutability": "mutable",
														"name": "B",
														"nameLocation": "2044:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 867,
														"src": "2036:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 840,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2036:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 843,
												"initialValue": {
													"id": 842,
													"name": "_b",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 831,
													"src": "2048:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2036:14:3"
											},
											{
												"assignments": [
													845
												],
												"declarations": [
													{
														"constant": false,
														"id": 845,
														"mutability": "mutable",
														"name": "E",
														"nameLocation": "2068:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 867,
														"src": "2060:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 844,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2060:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 847,
												"initialValue": {
													"id": 846,
													"name": "_e",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 833,
													"src": "2072:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2060:14:3"
											},
											{
												"assignments": [
													849
												],
												"declarations": [
													{
														"constant": false,
														"id": 849,
														"mutability": "mutable",
														"name": "M",
														"nameLocation": "2092:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 867,
														"src": "2084:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 848,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2084:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 851,
												"initialValue": {
													"id": 850,
													"name": "_m",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 835,
													"src": "2096:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2084:14:3"
											},
											{
												"assignments": [
													853
												],
												"declarations": [
													{
														"constant": false,
														"id": 853,
														"mutability": "mutable",
														"name": "R",
														"nameLocation": "2115:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 867,
														"src": "2108:8:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 852,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "2108:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 864,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 857,
																		"name": "B",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 841,
																		"src": "2133:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 858,
																		"name": "E",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 845,
																		"src": "2136:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 859,
																		"name": "M",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 849,
																		"src": "2139:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 856,
																	"name": "modExp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "2126:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) returns (uint256)"
																	}
																},
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2126:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"hexValue": "3138343436373434303733373039353531363135",
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2144:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18446744073709551615_by_1",
																	"typeString": "int_const 18446744073709551615"
																},
																"value": "18446744073709551615"
															},
															"src": "2126:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 855,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2119:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 854,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "2119:6:3",
															"typeDescriptions": {}
														}
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2119:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2108:57:3"
											},
											{
												"expression": {
													"id": 865,
													"name": "R",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 853,
													"src": "2182:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 839,
												"id": 866,
												"nodeType": "Return",
												"src": "2175:8:3"
											}
										]
									},
									"functionSelector": "53df6e35",
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp64",
									"nameLocation": "1954:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "_b",
												"nameLocation": "1970:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1963:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 830,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1963:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "_e",
												"nameLocation": "1981:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1974:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 832,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1974:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "_m",
												"nameLocation": "1992:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1985:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 834,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1985:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1962:33:3"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2018:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "2011:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 837,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2011:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2010:15:3"
									},
									"scope": 1024,
									"src": "1945:245:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 880,
										"nodeType": "Block",
										"src": "2280:788:3",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2299:763:3",
													"nodeType": "YulBlock",
													"src": "2299:763:3",
													"statements": [
														{
															"nativeSrc": "2348:26:3",
															"nodeType": "YulVariableDeclaration",
															"src": "2348:26:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2369:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2369:4:3",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2363:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "2363:5:3"
																},
																"nativeSrc": "2363:11:3",
																"nodeType": "YulFunctionCall",
																"src": "2363:11:3"
															},
															"variables": [
																{
																	"name": "pointer",
																	"nativeSrc": "2352:7:3",
																	"nodeType": "YulTypedName",
																	"src": "2352:7:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pointer",
																		"nativeSrc": "2472:7:3",
																		"nodeType": "YulIdentifier",
																		"src": "2472:7:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2481:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2481:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2465:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2465:6:3"
																},
																"nativeSrc": "2465:21:3",
																"nodeType": "YulFunctionCall",
																"src": "2465:21:3"
															},
															"nativeSrc": "2465:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "2465:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pointer",
																				"nativeSrc": "2510:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2510:7:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2519:4:3",
																				"nodeType": "YulLiteral",
																				"src": "2519:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2506:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2506:3:3"
																		},
																		"nativeSrc": "2506:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2506:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2526:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2526:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2499:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2499:6:3"
																},
																"nativeSrc": "2499:32:3",
																"nodeType": "YulFunctionCall",
																"src": "2499:32:3"
															},
															"nativeSrc": "2499:32:3",
															"nodeType": "YulExpressionStatement",
															"src": "2499:32:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pointer",
																				"nativeSrc": "2555:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2555:7:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2564:4:3",
																				"nodeType": "YulLiteral",
																				"src": "2564:4:3",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2551:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2551:3:3"
																		},
																		"nativeSrc": "2551:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2551:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2571:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2571:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2544:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2544:6:3"
																},
																"nativeSrc": "2544:32:3",
																"nodeType": "YulFunctionCall",
																"src": "2544:32:3"
															},
															"nativeSrc": "2544:32:3",
															"nodeType": "YulExpressionStatement",
															"src": "2544:32:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pointer",
																				"nativeSrc": "2660:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2660:7:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2669:4:3",
																				"nodeType": "YulLiteral",
																				"src": "2669:4:3",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2656:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2656:3:3"
																		},
																		"nativeSrc": "2656:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2656:18:3"
																	},
																	{
																		"name": "_b",
																		"nativeSrc": "2676:2:3",
																		"nodeType": "YulIdentifier",
																		"src": "2676:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2649:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2649:6:3"
																},
																"nativeSrc": "2649:30:3",
																"nodeType": "YulFunctionCall",
																"src": "2649:30:3"
															},
															"nativeSrc": "2649:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "2649:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pointer",
																				"nativeSrc": "2703:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2703:7:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2712:4:3",
																				"nodeType": "YulLiteral",
																				"src": "2712:4:3",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2699:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2699:3:3"
																		},
																		"nativeSrc": "2699:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2699:18:3"
																	},
																	{
																		"name": "_e",
																		"nativeSrc": "2719:2:3",
																		"nodeType": "YulIdentifier",
																		"src": "2719:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2692:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2692:6:3"
																},
																"nativeSrc": "2692:30:3",
																"nodeType": "YulFunctionCall",
																"src": "2692:30:3"
															},
															"nativeSrc": "2692:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "2692:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pointer",
																				"nativeSrc": "2746:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2746:7:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2755:4:3",
																				"nodeType": "YulLiteral",
																				"src": "2755:4:3",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2742:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2742:3:3"
																		},
																		"nativeSrc": "2742:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2742:18:3"
																	},
																	{
																		"name": "_m",
																		"nativeSrc": "2762:2:3",
																		"nodeType": "YulIdentifier",
																		"src": "2762:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2735:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2735:6:3"
																},
																"nativeSrc": "2735:30:3",
																"nodeType": "YulFunctionCall",
																"src": "2735:30:3"
															},
															"nativeSrc": "2735:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "2735:30:3"
														},
														{
															"nativeSrc": "2811:24:3",
															"nodeType": "YulVariableDeclaration",
															"src": "2811:24:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2830:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2830:4:3",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2824:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "2824:5:3"
																},
																"nativeSrc": "2824:11:3",
																"nodeType": "YulFunctionCall",
																"src": "2824:11:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2815:5:3",
																	"nodeType": "YulTypedName",
																	"src": "2815:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2972:44:3",
																"nodeType": "YulBlock",
																"src": "2972:44:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2997:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2997:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3000:1:3",
																					"nodeType": "YulLiteral",
																					"src": "3000:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2990:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2990:6:3"
																			},
																			"nativeSrc": "2990:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2990:12:3"
																		},
																		"nativeSrc": "2990:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2990:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2930:1:3",
																						"nodeType": "YulLiteral",
																						"src": "2930:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2926:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2926:3:3"
																				},
																				"nativeSrc": "2926:6:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2926:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2934:4:3",
																				"nodeType": "YulLiteral",
																				"src": "2934:4:3",
																				"type": "",
																				"value": "0x05"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2940:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2940:1:3",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "pointer",
																				"nativeSrc": "2943:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2943:7:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2952:4:3",
																				"nodeType": "YulLiteral",
																				"src": "2952:4:3",
																				"type": "",
																				"value": "0xc0"
																			},
																			{
																				"name": "value",
																				"nativeSrc": "2958:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2958:5:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2965:4:3",
																				"nodeType": "YulLiteral",
																				"src": "2965:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "call",
																			"nativeSrc": "2921:4:3",
																			"nodeType": "YulIdentifier",
																			"src": "2921:4:3"
																		},
																		"nativeSrc": "2921:49:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2921:49:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2914:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2914:6:3"
																},
																"nativeSrc": "2914:57:3",
																"nodeType": "YulFunctionCall",
																"src": "2914:57:3"
															},
															"nativeSrc": "2911:105:3",
															"nodeType": "YulIf",
															"src": "2911:105:3"
														},
														{
															"nativeSrc": "3030:22:3",
															"nodeType": "YulAssignment",
															"src": "3030:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3046:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "3046:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3040:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "3040:5:3"
																},
																"nativeSrc": "3040:12:3",
																"nodeType": "YulFunctionCall",
																"src": "3040:12:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3030:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3030:6:3"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 870,
														"isOffset": false,
														"isSlot": false,
														"src": "2676:2:3",
														"valueSize": 1
													},
													{
														"declaration": 872,
														"isOffset": false,
														"isSlot": false,
														"src": "2719:2:3",
														"valueSize": 1
													},
													{
														"declaration": 874,
														"isOffset": false,
														"isSlot": false,
														"src": "2762:2:3",
														"valueSize": 1
													},
													{
														"declaration": 877,
														"isOffset": false,
														"isSlot": false,
														"src": "3030:6:3",
														"valueSize": 1
													}
												],
												"id": 879,
												"nodeType": "InlineAssembly",
												"src": "2290:772:3"
											}
										]
									},
									"functionSelector": "3148f14f",
									"id": 881,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "2205:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "_b",
												"nameLocation": "2220:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2212:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2212:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "_e",
												"nameLocation": "2232:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2224:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2224:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "_m",
												"nameLocation": "2244:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2236:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2236:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2211:36:3"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2272:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2264:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2264:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2263:16:3"
									},
									"scope": 1024,
									"src": "2196:872:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "3172:1030:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 896,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "3226:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 897,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "3231:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "3226:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 901,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 899,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "3236:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 900,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "3241:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "3236:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3226:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 909,
												"nodeType": "IfStatement",
												"src": "3222:80:3",
												"trueBody": {
													"id": 908,
													"nodeType": "Block",
													"src": "3244:58:3",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "30",
																		"id": 903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3266:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3269:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"id": 905,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 883,
																		"src": "3272:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"id": 906,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3265:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_uint64_$",
																	"typeString": "tuple(int_const 0,int_const 0,uint64)"
																}
															},
															"functionReturnParameters": 895,
															"id": 907,
															"nodeType": "Return",
															"src": "3258:16:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 910,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "3358:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 911,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "3363:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "3358:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 924,
												"nodeType": "IfStatement",
												"src": "3354:75:3",
												"trueBody": {
													"id": 923,
													"nodeType": "Block",
													"src": "3366:63:3",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "30",
																		"id": 913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3388:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"id": 914,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 883,
																		"src": "3391:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			},
																			"id": 917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 915,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 887,
																				"src": "3394:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint64",
																					"typeString": "uint64"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"id": 916,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 883,
																				"src": "3398:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint64",
																					"typeString": "uint64"
																				}
																			},
																			"src": "3394:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"id": 919,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 883,
																			"src": "3406:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"id": 920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "3394:13:3",
																		"trueExpression": {
																			"id": 918,
																			"name": "c",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 887,
																			"src": "3402:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"id": 921,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3387:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_uint64_$_t_uint64_$",
																	"typeString": "tuple(int_const 0,uint64,uint64)"
																}
															},
															"functionReturnParameters": 895,
															"id": 922,
															"nodeType": "Return",
															"src": "3380:28:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 925,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "3442:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 926,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "3447:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "3442:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 939,
												"nodeType": "IfStatement",
												"src": "3438:75:3",
												"trueBody": {
													"id": 938,
													"nodeType": "Block",
													"src": "3450:63:3",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "30",
																		"id": 928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3472:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"id": 929,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 883,
																		"src": "3475:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			},
																			"id": 932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 930,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 885,
																				"src": "3478:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint64",
																					"typeString": "uint64"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"id": 931,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 883,
																				"src": "3482:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint64",
																					"typeString": "uint64"
																				}
																			},
																			"src": "3478:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"id": 934,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 883,
																			"src": "3490:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"id": 935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "3478:13:3",
																		"trueExpression": {
																			"id": 933,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 885,
																			"src": "3486:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"id": 936,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3471:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_uint64_$_t_uint64_$",
																	"typeString": "tuple(int_const 0,uint64,uint64)"
																}
															},
															"functionReturnParameters": 895,
															"id": 937,
															"nodeType": "Return",
															"src": "3464:28:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 940,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "3526:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 941,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "3531:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "3526:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 954,
												"nodeType": "IfStatement",
												"src": "3522:75:3",
												"trueBody": {
													"id": 953,
													"nodeType": "Block",
													"src": "3534:63:3",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "30",
																		"id": 943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3556:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"id": 944,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 885,
																		"src": "3559:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			},
																			"id": 947,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 945,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 883,
																				"src": "3562:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint64",
																					"typeString": "uint64"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"id": 946,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 885,
																				"src": "3566:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint64",
																					"typeString": "uint64"
																				}
																			},
																			"src": "3562:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"id": 949,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 885,
																			"src": "3574:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"id": 950,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "3562:13:3",
																		"trueExpression": {
																			"id": 948,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 883,
																			"src": "3570:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"id": 951,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3555:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_uint64_$_t_uint64_$",
																	"typeString": "tuple(int_const 0,uint64,uint64)"
																}
															},
															"functionReturnParameters": 895,
															"id": 952,
															"nodeType": "Return",
															"src": "3548:28:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 955,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "3646:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"id": 956,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "3651:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "3646:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 958,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "3656:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"id": 959,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "3661:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "3656:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3646:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 979,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 885,
																"src": "3840:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 980,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "3845:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "3840:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 982,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 885,
																"src": "3850:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 983,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 887,
																"src": "3855:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "3850:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "3840:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1019,
														"nodeType": "Block",
														"src": "4030:166:3",
														"statements": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	},
																	"id": 1005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1003,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 883,
																		"src": "4048:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1004,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 885,
																		"src": "4053:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	"src": "4048:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 1017,
																	"nodeType": "Block",
																	"src": "4124:62:3",
																	"statements": [
																		{
																			"expression": {
																				"components": [
																					{
																						"id": 1012,
																						"name": "c",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 887,
																						"src": "4150:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					{
																						"id": 1013,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 885,
																						"src": "4153:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					{
																						"id": 1014,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 883,
																						"src": "4156:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					}
																				],
																				"id": 1015,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4149:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint64_$_t_uint64_$_t_uint64_$",
																					"typeString": "tuple(uint64,uint64,uint64)"
																				}
																			},
																			"functionReturnParameters": 895,
																			"id": 1016,
																			"nodeType": "Return",
																			"src": "4142:16:3"
																		}
																	]
																},
																"id": 1018,
																"nodeType": "IfStatement",
																"src": "4044:142:3",
																"trueBody": {
																	"id": 1011,
																	"nodeType": "Block",
																	"src": "4056:62:3",
																	"statements": [
																		{
																			"expression": {
																				"components": [
																					{
																						"id": 1006,
																						"name": "c",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 887,
																						"src": "4082:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					{
																						"id": 1007,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 883,
																						"src": "4085:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					{
																						"id": 1008,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 885,
																						"src": "4088:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					}
																				],
																				"id": 1009,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4081:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint64_$_t_uint64_$_t_uint64_$",
																					"typeString": "tuple(uint64,uint64,uint64)"
																				}
																			},
																			"functionReturnParameters": 895,
																			"id": 1010,
																			"nodeType": "Return",
																			"src": "4074:16:3"
																		}
																	]
																}
															}
														]
													},
													"id": 1020,
													"nodeType": "IfStatement",
													"src": "3836:360:3",
													"trueBody": {
														"id": 1002,
														"nodeType": "Block",
														"src": "3858:166:3",
														"statements": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	},
																	"id": 988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 986,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 883,
																		"src": "3876:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 987,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 887,
																		"src": "3881:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	"src": "3876:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 1000,
																	"nodeType": "Block",
																	"src": "3952:62:3",
																	"statements": [
																		{
																			"expression": {
																				"components": [
																					{
																						"id": 995,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 885,
																						"src": "3978:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					{
																						"id": 996,
																						"name": "c",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 887,
																						"src": "3981:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					{
																						"id": 997,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 883,
																						"src": "3984:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					}
																				],
																				"id": 998,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3977:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint64_$_t_uint64_$_t_uint64_$",
																					"typeString": "tuple(uint64,uint64,uint64)"
																				}
																			},
																			"functionReturnParameters": 895,
																			"id": 999,
																			"nodeType": "Return",
																			"src": "3970:16:3"
																		}
																	]
																},
																"id": 1001,
																"nodeType": "IfStatement",
																"src": "3872:142:3",
																"trueBody": {
																	"id": 994,
																	"nodeType": "Block",
																	"src": "3884:62:3",
																	"statements": [
																		{
																			"expression": {
																				"components": [
																					{
																						"id": 989,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 885,
																						"src": "3910:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					{
																						"id": 990,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 883,
																						"src": "3913:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					{
																						"id": 991,
																						"name": "c",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 887,
																						"src": "3916:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					}
																				],
																				"id": 992,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3909:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint64_$_t_uint64_$_t_uint64_$",
																					"typeString": "tuple(uint64,uint64,uint64)"
																				}
																			},
																			"functionReturnParameters": 895,
																			"id": 993,
																			"nodeType": "Return",
																			"src": "3902:16:3"
																		}
																	]
																}
															}
														]
													}
												},
												"id": 1021,
												"nodeType": "IfStatement",
												"src": "3642:554:3",
												"trueBody": {
													"id": 978,
													"nodeType": "Block",
													"src": "3664:166:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 962,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 885,
																	"src": "3682:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 963,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 887,
																	"src": "3687:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "3682:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 976,
																"nodeType": "Block",
																"src": "3758:62:3",
																"statements": [
																	{
																		"expression": {
																			"components": [
																				{
																					"id": 971,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 883,
																					"src": "3784:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint64",
																						"typeString": "uint64"
																					}
																				},
																				{
																					"id": 972,
																					"name": "c",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 887,
																					"src": "3787:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint64",
																						"typeString": "uint64"
																					}
																				},
																				{
																					"id": 973,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 885,
																					"src": "3790:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint64",
																						"typeString": "uint64"
																					}
																				}
																			],
																			"id": 974,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3783:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint64_$_t_uint64_$_t_uint64_$",
																				"typeString": "tuple(uint64,uint64,uint64)"
																			}
																		},
																		"functionReturnParameters": 895,
																		"id": 975,
																		"nodeType": "Return",
																		"src": "3776:16:3"
																	}
																]
															},
															"id": 977,
															"nodeType": "IfStatement",
															"src": "3678:142:3",
															"trueBody": {
																"id": 970,
																"nodeType": "Block",
																"src": "3690:62:3",
																"statements": [
																	{
																		"expression": {
																			"components": [
																				{
																					"id": 965,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 883,
																					"src": "3716:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint64",
																						"typeString": "uint64"
																					}
																				},
																				{
																					"id": 966,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 885,
																					"src": "3719:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint64",
																						"typeString": "uint64"
																					}
																				},
																				{
																					"id": 967,
																					"name": "c",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 887,
																					"src": "3722:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint64",
																						"typeString": "uint64"
																					}
																				}
																			],
																			"id": 968,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3715:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint64_$_t_uint64_$_t_uint64_$",
																				"typeString": "tuple(uint64,uint64,uint64)"
																			}
																		},
																		"functionReturnParameters": 895,
																		"id": 969,
																		"nodeType": "Return",
																		"src": "3708:16:3"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"functionSelector": "98fdcdd6",
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sortThree",
									"nameLocation": "3087:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3104:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "3097:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 882,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3097:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3114:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "3107:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 884,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3107:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "c",
												"nameLocation": "3124:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "3117:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 886,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3117:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3096:30:3"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "3148:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 889,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3148:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "3156:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 891,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3156:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "3164:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 893,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3164:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3147:24:3"
									},
									"scope": 1024,
									"src": "3078:1124:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1025,
							"src": "130:4079:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "35:4174:3"
				},
				"id": 3
			},
			"contracts/registry.sol": {
				"ast": {
					"absolutePath": "contracts/registry.sol",
					"exportedSymbols": {
						"LibRegistry": [
							1195
						]
					},
					"id": 1196,
					"license": "Sharia",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1026,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LibRegistry",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1195,
							"linearizedBaseContracts": [
								1195
							],
							"name": "LibRegistry",
							"nameLocation": "70:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "LibRegistry.Registry",
									"id": 1038,
									"members": [
										{
											"constant": false,
											"id": 1029,
											"mutability": "mutable",
											"name": "keys",
											"nameLocation": "124:4:4",
											"nodeType": "VariableDeclaration",
											"scope": 1038,
											"src": "114:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "114:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1028,
												"nodeType": "ArrayTypeName",
												"src": "114:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1033,
											"mutability": "mutable",
											"name": "indexOf",
											"nameLocation": "166:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 1038,
											"src": "138:35:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"typeName": {
												"id": 1032,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "146:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "138:27:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
													"typeString": "mapping(uint256 => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "157:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1037,
											"mutability": "mutable",
											"name": "inserted",
											"nameLocation": "208:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 1038,
											"src": "183:33:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"typeName": {
												"id": 1036,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "191:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "183:24:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
													"typeString": "mapping(uint256 => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1035,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "202:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Registry",
									"nameLocation": "95:8:4",
									"nodeType": "StructDefinition",
									"scope": 1195,
									"src": "88:135:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1053,
										"nodeType": "Block",
										"src": "325:45:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 1048,
															"name": "_registry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "342:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Registry_$1038_storage_ptr",
																"typeString": "struct LibRegistry.Registry storage pointer"
															}
														},
														"id": 1049,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "352:4:4",
														"memberName": "keys",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1029,
														"src": "342:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1051,
													"indexExpression": {
														"id": 1050,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "357:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "342:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1047,
												"id": 1052,
												"nodeType": "Return",
												"src": "335:28:4"
											}
										]
									},
									"functionSelector": "cfe6aa63",
									"id": 1054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "GetHashByIndex",
									"nameLocation": "238:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "_registry",
												"nameLocation": "270:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "253:26:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Registry_$1038_storage_ptr",
													"typeString": "struct LibRegistry.Registry"
												},
												"typeName": {
													"id": 1040,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1039,
														"name": "Registry",
														"nameLocations": [
															"253:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1038,
														"src": "253:8:4"
													},
													"referencedDeclaration": 1038,
													"src": "253:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Registry_$1038_storage_ptr",
														"typeString": "struct LibRegistry.Registry"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "289:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "281:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "281:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "252:43:4"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "316:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "316:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "315:9:4"
									},
									"scope": 1195,
									"src": "229:141:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1066,
										"nodeType": "Block",
										"src": "449:45:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1062,
															"name": "_registry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "466:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Registry_$1038_storage_ptr",
																"typeString": "struct LibRegistry.Registry storage pointer"
															}
														},
														"id": 1063,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "476:4:4",
														"memberName": "keys",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1029,
														"src": "466:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "481:6:4",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "466:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1061,
												"id": 1065,
												"nodeType": "Return",
												"src": "459:28:4"
											}
										]
									},
									"functionSelector": "9ba54d2d",
									"id": 1067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Count",
									"nameLocation": "385:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "_registry",
												"nameLocation": "409:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "391:27:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Registry_$1038_storage_ptr",
													"typeString": "struct LibRegistry.Registry"
												},
												"typeName": {
													"id": 1056,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1055,
														"name": "Registry",
														"nameLocations": [
															"391:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1038,
														"src": "391:8:4"
													},
													"referencedDeclaration": 1038,
													"src": "391:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Registry_$1038_storage_ptr",
														"typeString": "struct LibRegistry.Registry"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "390:29:4"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "440:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "439:9:4"
									},
									"scope": 1195,
									"src": "376:118:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "585:47:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 1077,
															"name": "_registry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "602:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Registry_$1038_storage_ptr",
																"typeString": "struct LibRegistry.Registry storage pointer"
															}
														},
														"id": 1078,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "612:8:4",
														"memberName": "inserted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1037,
														"src": "602:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
															"typeString": "mapping(uint256 => bool)"
														}
													},
													"id": 1080,
													"indexExpression": {
														"id": 1079,
														"name": "key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "621:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "602:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1076,
												"id": 1081,
												"nodeType": "Return",
												"src": "595:30:4"
											}
										]
									},
									"functionSelector": "253472ca",
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Contains",
									"nameLocation": "509:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "_registry",
												"nameLocation": "535:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "518:26:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Registry_$1038_storage_ptr",
													"typeString": "struct LibRegistry.Registry"
												},
												"typeName": {
													"id": 1069,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1068,
														"name": "Registry",
														"nameLocations": [
															"518:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1038,
														"src": "518:8:4"
													},
													"referencedDeclaration": 1038,
													"src": "518:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Registry_$1038_storage_ptr",
														"typeString": "struct LibRegistry.Registry"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "554:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "546:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:41:4"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "579:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1074,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "579:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "578:6:4"
									},
									"scope": 1195,
									"src": "500:132:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1124,
										"nodeType": "Block",
										"src": "704:206:4",
										"statements": [
											{
												"condition": {
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "717:24:4",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"id": 1091,
																"name": "_registry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "718:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Registry_$1038_storage_ptr",
																	"typeString": "struct LibRegistry.Registry storage pointer"
																}
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "728:8:4",
															"memberName": "inserted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1037,
															"src": "718:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1094,
														"indexExpression": {
															"id": 1093,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "737:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "718:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1123,
												"nodeType": "IfStatement",
												"src": "714:190:4",
												"trueBody": {
													"id": 1122,
													"nodeType": "Block",
													"src": "751:153:4",
													"statements": [
														{
															"expression": {
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 1096,
																			"name": "_registry",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1086,
																			"src": "765:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Registry_$1038_storage_ptr",
																				"typeString": "struct LibRegistry.Registry storage pointer"
																			}
																		},
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "775:8:4",
																		"memberName": "inserted",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1037,
																		"src": "765:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																			"typeString": "mapping(uint256 => bool)"
																		}
																	},
																	"id": 1100,
																	"indexExpression": {
																		"id": 1098,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1088,
																		"src": "784:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "765:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "791:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "765:30:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1103,
															"nodeType": "ExpressionStatement",
															"src": "765:30:4"
														},
														{
															"expression": {
																"id": 1112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 1104,
																			"name": "_registry",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1086,
																			"src": "809:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Registry_$1038_storage_ptr",
																				"typeString": "struct LibRegistry.Registry storage pointer"
																			}
																		},
																		"id": 1107,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "819:7:4",
																		"memberName": "indexOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1033,
																		"src": "809:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1108,
																	"indexExpression": {
																		"id": 1106,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1088,
																		"src": "827:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "809:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1109,
																			"name": "_registry",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1086,
																			"src": "834:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Registry_$1038_storage_ptr",
																				"typeString": "struct LibRegistry.Registry storage pointer"
																			}
																		},
																		"id": 1110,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "844:4:4",
																		"memberName": "keys",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1029,
																		"src": "834:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 1111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "849:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "834:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "809:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1113,
															"nodeType": "ExpressionStatement",
															"src": "809:46:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1119,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1088,
																		"src": "889:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1114,
																			"name": "_registry",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1086,
																			"src": "869:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Registry_$1038_storage_ptr",
																				"typeString": "struct LibRegistry.Registry storage pointer"
																			}
																		},
																		"id": 1117,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "879:4:4",
																		"memberName": "keys",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1029,
																		"src": "869:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "884:4:4",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "869:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256)"
																	}
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "869:24:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1121,
															"nodeType": "ExpressionStatement",
															"src": "869:24:4"
														}
													]
												}
											}
										]
									},
									"functionSelector": "8b584f4d",
									"id": 1125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Register",
									"nameLocation": "647:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "_registry",
												"nameLocation": "673:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "656:26:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Registry_$1038_storage_ptr",
													"typeString": "struct LibRegistry.Registry"
												},
												"typeName": {
													"id": 1085,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1084,
														"name": "Registry",
														"nameLocations": [
															"656:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1038,
														"src": "656:8:4"
													},
													"referencedDeclaration": 1038,
													"src": "656:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Registry_$1038_storage_ptr",
														"typeString": "struct LibRegistry.Registry"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "692:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "684:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "655:41:4"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "704:0:4"
									},
									"scope": 1195,
									"src": "638:272:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "980:363:4",
										"statements": [
											{
												"condition": {
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "993:24:4",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"id": 1133,
																"name": "_registry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1128,
																"src": "994:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Registry_$1038_storage_ptr",
																	"typeString": "struct LibRegistry.Registry storage pointer"
																}
															},
															"id": 1134,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1004:8:4",
															"memberName": "inserted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1037,
															"src": "994:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1136,
														"indexExpression": {
															"id": 1135,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "1013:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "994:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1139,
												"nodeType": "IfStatement",
												"src": "990:36:4",
												"trueBody": {
													"functionReturnParameters": 1132,
													"id": 1138,
													"nodeType": "Return",
													"src": "1019:7:4"
												}
											},
											{
												"expression": {
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1035:30:4",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"id": 1140,
																"name": "_registry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1128,
																"src": "1042:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Registry_$1038_storage_ptr",
																	"typeString": "struct LibRegistry.Registry storage pointer"
																}
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1052:8:4",
															"memberName": "inserted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1037,
															"src": "1042:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1143,
														"indexExpression": {
															"id": 1142,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "1061:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1042:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1145,
												"nodeType": "ExpressionStatement",
												"src": "1035:30:4"
											},
											{
												"assignments": [
													1147
												],
												"declarations": [
													{
														"constant": false,
														"id": 1147,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "1083:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1193,
														"src": "1075:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1146,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1075:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1152,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1148,
															"name": "_registry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "1091:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Registry_$1038_storage_ptr",
																"typeString": "struct LibRegistry.Registry storage pointer"
															}
														},
														"id": 1149,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1101:7:4",
														"memberName": "indexOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1033,
														"src": "1091:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1151,
													"indexExpression": {
														"id": 1150,
														"name": "key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "1109:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1091:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1075:38:4"
											},
											{
												"assignments": [
													1154
												],
												"declarations": [
													{
														"constant": false,
														"id": 1154,
														"mutability": "mutable",
														"name": "lastKey",
														"nameLocation": "1131:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1193,
														"src": "1123:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1153,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1123:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1163,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1155,
															"name": "_registry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "1141:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Registry_$1038_storage_ptr",
																"typeString": "struct LibRegistry.Registry storage pointer"
															}
														},
														"id": 1156,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1151:4:4",
														"memberName": "keys",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1029,
														"src": "1141:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1162,
													"indexExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"id": 1157,
																	"name": "_registry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1128,
																	"src": "1156:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Registry_$1038_storage_ptr",
																		"typeString": "struct LibRegistry.Registry storage pointer"
																	}
																},
																"id": 1158,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1166:4:4",
																"memberName": "keys",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1029,
																"src": "1156:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																	"typeString": "uint256[] storage ref"
																}
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1171:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1156:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1180:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1156:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1141:41:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1123:59:4"
											},
											{
												"expression": {
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 1164,
																"name": "_registry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1128,
																"src": "1192:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Registry_$1038_storage_ptr",
																	"typeString": "struct LibRegistry.Registry storage pointer"
																}
															},
															"id": 1167,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1202:7:4",
															"memberName": "indexOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1033,
															"src": "1192:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1168,
														"indexExpression": {
															"id": 1166,
															"name": "lastKey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "1210:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1192:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1169,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "1221:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1192:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1171,
												"nodeType": "ExpressionStatement",
												"src": "1192:34:4"
											},
											{
												"expression": {
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1236:29:4",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"id": 1172,
																"name": "_registry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1128,
																"src": "1243:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Registry_$1038_storage_ptr",
																	"typeString": "struct LibRegistry.Registry storage pointer"
																}
															},
															"id": 1173,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1253:7:4",
															"memberName": "indexOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1033,
															"src": "1243:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1175,
														"indexExpression": {
															"id": 1174,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "1261:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1243:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1177,
												"nodeType": "ExpressionStatement",
												"src": "1236:29:4"
											},
											{
												"expression": {
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 1178,
																"name": "_registry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1128,
																"src": "1275:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Registry_$1038_storage_ptr",
																	"typeString": "struct LibRegistry.Registry storage pointer"
																}
															},
															"id": 1181,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1285:4:4",
															"memberName": "keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1029,
															"src": "1275:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1182,
														"indexExpression": {
															"id": 1180,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "1290:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1275:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1183,
														"name": "lastKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "1299:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1275:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1185,
												"nodeType": "ExpressionStatement",
												"src": "1275:31:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"expression": {
																"id": 1186,
																"name": "_registry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1128,
																"src": "1316:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Registry_$1038_storage_ptr",
																	"typeString": "struct LibRegistry.Registry storage pointer"
																}
															},
															"id": 1189,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1326:4:4",
															"memberName": "keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1029,
															"src": "1316:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1331:3:4",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "1316:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer)"
														}
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1316:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "1316:20:4"
											}
										]
									},
									"functionSelector": "9047f6de",
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Remove",
									"nameLocation": "925:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "_registry",
												"nameLocation": "949:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "932:26:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Registry_$1038_storage_ptr",
													"typeString": "struct LibRegistry.Registry"
												},
												"typeName": {
													"id": 1127,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1126,
														"name": "Registry",
														"nameLocations": [
															"932:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1038,
														"src": "932:8:4"
													},
													"referencedDeclaration": 1038,
													"src": "932:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Registry_$1038_storage_ptr",
														"typeString": "struct LibRegistry.Registry"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "968:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "960:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "960:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:41:4"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "980:0:4"
									},
									"scope": 1195,
									"src": "916:427:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1196,
							"src": "62:1283:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "35:1310:4"
				},
				"id": 4
			}
		}
	}
}