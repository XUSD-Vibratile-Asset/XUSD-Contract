{
	"id": "b79cf3c9870a9fe5f674d49ae09b6474",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/RegistryLibrary.sol": {
				"content": "// SPDX-License-Identifier: Sharia\npragma solidity ^0.8.21;\nimport \"./atropamath.sol\";\n\nlibrary LibRegistry2 {\n    struct Registry {\n        uint256[] keys;\n        mapping(uint256 => uint256) indexOf;\n        mapping(uint256 => bool) inserted;\n    }\n\n    function GetHashByIndex(Registry storage _registry, uint256 index) public view returns(uint256) {\n        return _registry.keys[index];\n    }\n\n    function Count(Registry  storage _registry) public view returns(uint256) {\n        return _registry.keys.length;\n    }\n\n    function Contains(Registry storage _registry, uint256 key) public view returns(bool) {\n        return _registry.inserted[key];\n    }\n\n    function Register(Registry storage _registry, uint256 key) public {\n        if(!_registry.inserted[key])\n        {\n            _registry.inserted[key] = true;\n            _registry.indexOf[key] = _registry.keys.length;\n            _registry.keys.push(key);\n        }\n    }\n\n    function Remove(Registry storage _registry, uint256 key) public {\n        if(!_registry.inserted[key]) return;\n        delete _registry.inserted[key];\n        uint256 index = _registry.indexOf[key];\n        uint256 lastKey = _registry.keys[_registry.keys.length - 1];\n        _registry.indexOf[lastKey] = index;\n        delete _registry.indexOf[key];\n        _registry.keys[index] = lastKey;\n        _registry.keys.pop();\n    }\n}"
			},
			"contracts/atropamath.sol": {
				"content": "// SPDX-License-Identifier: Sharia\npragma solidity ^0.8.21;\n\n\n\n\n// interface RNG {\n//     function Random() external returns(uint64);\n// }\n\nlibrary atropaMath {\n    uint64 constant public MotzkinPrime = 953467954114363;\n\n    // RNG private RandomNumberGeneratorToken;\n\n    // ERC20 private DaiToken;\n    // ERC20 private USDCToken;\n    // ERC20 private USDTToken;\n    // ERC20 private G5Token;\n    // ERC20 private PIToken;\n\n    // constructor() ERC20(/*name short=*/ unicode\"libAtropaMath v1.2\", /*symbol long=*/ unicode\"MATH\") Ownable(msg.sender) {\n    //     DaiToken = ERC20(dai);\n    //     USDCToken = ERC20(usdc);\n    //     USDTToken = ERC20(usdt);\n    //     G5Token = ERC20(G5Contract);\n    //     PIToken = ERC20(PIContract);\n\n    //     //RandomNumberGeneratorToken = RNG(0xa96BcbeD7F01de6CEEd14fC86d90F21a36dE2143);\n    //     RandomNumberGeneratorToken = RNG(0x659b4cE17Ea8eb6138c2fdd8508b5F0fd7b11bc2);\n\n    //     _mint(address(this), 1 * 10 ** decimals());\n    // }\n\n    // function Random() public returns(uint64) {\n    //     if(totalSupply() <= (1111111111 * 10 ** decimals()))\n    //         _mint(address(this), 1 * 10 ** decimals());\n    //     return RandomNumberGeneratorToken.Random();\n    // }\n\n    function hashWith(address a, address b) public pure returns (uint256 hash) {        \n        hash = 0;\n        uint160 _a = uint160(a);\n        uint160 _b = uint160(b) / 15;\n        unchecked {\n            while(hash == 0) {\n                hash = (_a**_b)%MotzkinPrime;\n                _b = _b/2;\n            }\n        }\n        //return modExp(uint256(uint160(a)), uint256(uint160(b)), MotzkinPrime);\n    }\n\n    // function hashWithFunc(address a, bytes memory b) public pure returns (uint256 hash) {        \n    //     hash = 0;\n    //     uint160 _a = uint160(a);\n    //       (uint160 _bj) = abi.decode(\n    //         b,\n    //         (uint160)\n    //     );\n\n    //     uint160 _b = uint160(_bj) / 15;\n    //     unchecked {\n    //         while(hash == 0) {\n    //             hash = (_a**_b)%MotzkinPrime;\n    //             _b = _b/2;\n    //         }\n    //     }\n    //     //return modExp(uint256(uint160(a)), uint256(uint160(b)), MotzkinPrime);\n    // }\n\n    // function modExp64(uint64 _b, uint64 _e, uint64 _m) public returns(uint64 result) {\n    //     uint256 B = _b;\n    //     uint256 E = _e;\n    //     uint256 M = _m;\n    //     uint64 R = uint64(modExp(B, E, M) % 18446744073709551615);\n    //     return R;\n    // }\n\n    // function modExp(uint256 _b, uint256 _e, uint256 _m) public returns (uint256 result) {\n    //     assembly {\n    //         // Free memory pointer\n    //         let pointer := mload(0x40)\n\n    //         // Define length of base, exponent and modulus. 0x20 == 32 bytes\n    //         mstore(pointer, 0x20)\n    //         mstore(add(pointer, 0x20), 0x20)\n    //         mstore(add(pointer, 0x40), 0x20)\n\n    //         // Define variables base, exponent and modulus\n    //         mstore(add(pointer, 0x60), _b)\n    //         mstore(add(pointer, 0x80), _e)\n    //         mstore(add(pointer, 0xa0), _m)\n\n    //         // Store the result\n    //         let value := mload(0xc0)\n\n    //         // Call the precompiled contract 0x05 = bigModExp\n    //         if iszero(call(not(0), 0x05, 0, pointer, 0xc0, value, 0x20)) {\n    //             revert(0, 0)\n    //         }\n\n    //         result := mload(value)\n    //     }\n    // }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 100
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/RegistryLibrary.sol": {
				"LibRegistry2": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/RegistryLibrary.sol\":88:1372  library LibRegistry2 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/RegistryLibrary.sol\":88:1372  library LibRegistry2 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x25494007\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x25f5a60e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2d9f88f2\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa0ab5afc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa673e883\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/RegistryLibrary.sol\":403:521  function Count(Registry  storage _registry) public view returns(uint256) {... */\n    tag_2:\n      tag_7\n      tag_8\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_8:\n        /* \"contracts/RegistryLibrary.sol\":493:514  _registry.keys.length */\n      sload\n      swap1\n        /* \"contracts/RegistryLibrary.sol\":403:521  function Count(Registry  storage _registry) public view returns(uint256) {... */\n      jump\n    tag_7:\n      mload(0x40)\n        /* \"#utility.yul\":424:449   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":412:414   */\n      0x20\n        /* \"#utility.yul\":397:415   */\n      add\n        /* \"contracts/RegistryLibrary.sol\":403:521  function Count(Registry  storage _registry) public view returns(uint256) {... */\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/RegistryLibrary.sol\":665:937  function Register(Registry storage _registry, uint256 key) public {... */\n    tag_3:\n      dup2\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      tag_14\n      tag_15\n      calldatasize\n      0x04\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/RegistryLibrary.sol\":256:397  function GetHashByIndex(Registry storage _registry, uint256 index) public view returns(uint256) {... */\n    tag_4:\n      tag_7\n      tag_19\n      calldatasize\n      0x04\n      tag_16\n      jump\t// in\n    tag_19:\n      tag_20\n      jump\t// in\n        /* \"contracts/RegistryLibrary.sol\":527:659  function Contains(Registry storage _registry, uint256 key) public view returns(bool) {... */\n    tag_5:\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_16\n      jump\t// in\n    tag_23:\n        /* \"contracts/RegistryLibrary.sol\":606:610  bool */\n      0x00\n        /* \"contracts/RegistryLibrary.sol\":629:652  _registry.inserted[key] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/RegistryLibrary.sol\":629:647  _registry.inserted */\n      0x02\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/RegistryLibrary.sol\":629:652  _registry.inserted[key] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/RegistryLibrary.sol\":527:659  function Contains(Registry storage _registry, uint256 key) public view returns(bool) {... */\n      jump\n    tag_22:\n      mload(0x40)\n        /* \"#utility.yul\":957:971   */\n      swap1\n      iszero\n        /* \"#utility.yul\":950:972   */\n      iszero\n        /* \"#utility.yul\":932:973   */\n      dup2\n      mstore\n        /* \"#utility.yul\":920:922   */\n      0x20\n        /* \"#utility.yul\":905:923   */\n      add\n        /* \"contracts/RegistryLibrary.sol\":527:659  function Contains(Registry storage _registry, uint256 key) public view returns(bool) {... */\n      tag_11\n        /* \"#utility.yul\":784:979   */\n      jump\n        /* \"contracts/RegistryLibrary.sol\":943:1370  function Remove(Registry storage _registry, uint256 key) public {... */\n    tag_6:\n      dup2\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_14\n      tag_29\n      calldatasize\n      0x04\n      tag_16\n      jump\t// in\n    tag_29:\n      tag_30\n      jump\t// in\n        /* \"contracts/RegistryLibrary.sol\":665:937  function Register(Registry storage _registry, uint256 key) public {... */\n    tag_17:\n        /* \"contracts/RegistryLibrary.sol\":745:768  _registry.inserted[key] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/RegistryLibrary.sol\":745:763  _registry.inserted */\n      0x02\n      dup4\n      add\n        /* \"contracts/RegistryLibrary.sol\":745:768  _registry.inserted[key] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/RegistryLibrary.sol\":741:931  if(!_registry.inserted[key])... */\n      tag_33\n      jumpi\n        /* \"contracts/RegistryLibrary.sol\":792:815  _registry.inserted[key] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/RegistryLibrary.sol\":792:810  _registry.inserted */\n      0x02\n      dup4\n      add\n        /* \"contracts/RegistryLibrary.sol\":792:815  _registry.inserted[key] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/RegistryLibrary.sol\":792:822  _registry.inserted[key] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/RegistryLibrary.sol\":818:822  true */\n      0x01\n        /* \"contracts/RegistryLibrary.sol\":792:822  _registry.inserted[key] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/RegistryLibrary.sol\":861:882  _registry.keys.length */\n      dup6\n      sload\n        /* \"contracts/RegistryLibrary.sol\":836:853  _registry.indexOf */\n      dup7\n      dup3\n      add\n        /* \"contracts/RegistryLibrary.sol\":836:858  _registry.indexOf[key] */\n      dup5\n      mstore\n      swap2\n      dup5\n      keccak256\n        /* \"contracts/RegistryLibrary.sol\":836:882  _registry.indexOf[key] = _registry.keys.length */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/RegistryLibrary.sol\":896:920  _registry.keys.push(key) */\n      dup2\n      add\n      dup6\n      sstore\n      dup5\n      dup4\n      mstore\n      swap2\n      keccak256\n      add\n      dup2\n      swap1\n      sstore\n        /* \"contracts/RegistryLibrary.sol\":741:931  if(!_registry.inserted[key])... */\n    tag_33:\n        /* \"contracts/RegistryLibrary.sol\":665:937  function Register(Registry storage _registry, uint256 key) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/RegistryLibrary.sol\":256:397  function GetHashByIndex(Registry storage _registry, uint256 index) public view returns(uint256) {... */\n    tag_20:\n        /* \"contracts/RegistryLibrary.sol\":343:350  uint256 */\n      0x00\n        /* \"contracts/RegistryLibrary.sol\":369:378  _registry */\n      dup3\n        /* \"contracts/RegistryLibrary.sol\":369:383  _registry.keys */\n      0x00\n      add\n        /* \"contracts/RegistryLibrary.sol\":384:389  index */\n      dup3\n        /* \"contracts/RegistryLibrary.sol\":369:390  _registry.keys[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_37\n      jumpi\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/RegistryLibrary.sol\":362:390  return _registry.keys[index] */\n      swap1\n      pop\n        /* \"contracts/RegistryLibrary.sol\":256:397  function GetHashByIndex(Registry storage _registry, uint256 index) public view returns(uint256) {... */\n    tag_35:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/RegistryLibrary.sol\":943:1370  function Remove(Registry storage _registry, uint256 key) public {... */\n    tag_30:\n        /* \"contracts/RegistryLibrary.sol\":1021:1044  _registry.inserted[key] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/RegistryLibrary.sol\":1021:1039  _registry.inserted */\n      0x02\n      dup4\n      add\n        /* \"contracts/RegistryLibrary.sol\":1021:1044  _registry.inserted[key] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/RegistryLibrary.sol\":1017:1053  if(!_registry.inserted[key]) return; */\n      tag_42\n      jumpi\n        /* \"contracts/RegistryLibrary.sol\":943:1370  function Remove(Registry storage _registry, uint256 key) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/RegistryLibrary.sol\":1017:1053  if(!_registry.inserted[key]) return; */\n    tag_42:\n        /* \"contracts/RegistryLibrary.sol\":1069:1092  _registry.inserted[key] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/RegistryLibrary.sol\":1069:1087  _registry.inserted */\n      0x02\n      dup4\n      add\n        /* \"contracts/RegistryLibrary.sol\":1069:1092  _registry.inserted[key] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/RegistryLibrary.sol\":1062:1092  delete _registry.inserted[key] */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n      0x01\n        /* \"contracts/RegistryLibrary.sol\":1118:1135  _registry.indexOf */\n      dup1\n      dup7\n      add\n        /* \"contracts/RegistryLibrary.sol\":1118:1140  _registry.indexOf[key] */\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n      sload\n        /* \"contracts/RegistryLibrary.sol\":1183:1204  _registry.keys.length */\n      dup5\n      sload\n        /* \"contracts/RegistryLibrary.sol\":1118:1140  _registry.indexOf[key] */\n      swap1\n      swap3\n        /* \"contracts/RegistryLibrary.sol\":1069:1092  _registry.inserted[key] */\n      swap2\n        /* \"contracts/RegistryLibrary.sol\":1069:1078  _registry */\n      dup6\n      swap2\n        /* \"contracts/RegistryLibrary.sol\":1183:1208  _registry.keys.length - 1 */\n      tag_43\n      swap2\n        /* \"contracts/RegistryLibrary.sol\":1062:1092  delete _registry.inserted[key] */\n      swap1\n        /* \"contracts/RegistryLibrary.sol\":1183:1208  _registry.keys.length - 1 */\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"contracts/RegistryLibrary.sol\":1168:1209  _registry.keys[_registry.keys.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_46\n      jumpi\n      tag_46\n      tag_38\n      jump\t// in\n    tag_46:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/RegistryLibrary.sol\":1219:1245  _registry.indexOf[lastKey] */\n      dup1\n      dup4\n      mstore\n        /* \"contracts/RegistryLibrary.sol\":1219:1236  _registry.indexOf */\n      0x01\n      dup8\n      add\n        /* \"contracts/RegistryLibrary.sol\":1219:1245  _registry.indexOf[lastKey] */\n      swap1\n      swap2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/RegistryLibrary.sol\":1219:1253  _registry.indexOf[lastKey] = index */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/RegistryLibrary.sol\":1270:1292  _registry.indexOf[key] */\n      dup6\n      dup4\n      mstore\n      dup3\n      keccak256\n        /* \"contracts/RegistryLibrary.sol\":1263:1292  delete _registry.indexOf[key] */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/RegistryLibrary.sol\":1302:1323  _registry.keys[index] */\n      dup5\n      sload\n        /* \"contracts/RegistryLibrary.sol\":1168:1209  _registry.keys[_registry.keys.length - 1] */\n      swap1\n      swap2\n      pop\n      dup2\n      swap1\n        /* \"contracts/RegistryLibrary.sol\":1219:1228  _registry */\n      dup6\n      swap1\n        /* \"contracts/RegistryLibrary.sol\":1248:1253  index */\n      dup5\n      swap1\n        /* \"contracts/RegistryLibrary.sol\":1302:1323  _registry.keys[index] */\n      dup2\n      lt\n      tag_49\n      jumpi\n      tag_49\n      tag_38\n      jump\t// in\n    tag_49:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n        /* \"contracts/RegistryLibrary.sol\":1302:1333  _registry.keys[index] = lastKey */\n      sstore\n        /* \"contracts/RegistryLibrary.sol\":1343:1363  _registry.keys.pop() */\n      dup4\n      sload\n        /* \"contracts/RegistryLibrary.sol\":1343:1352  _registry */\n      dup5\n      swap1\n        /* \"contracts/RegistryLibrary.sol\":1343:1363  _registry.keys.pop() */\n      dup1\n      tag_52\n      jumpi\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"contracts/RegistryLibrary.sol\":1007:1370  {... */\n      pop\n      pop\n        /* \"contracts/RegistryLibrary.sol\":943:1370  function Remove(Registry storage _registry, uint256 key) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:265   */\n    tag_9:\n        /* \"#utility.yul\":98:104   */\n      0x00\n        /* \"#utility.yul\":151:153   */\n      0x20\n        /* \"#utility.yul\":139:148   */\n      dup3\n        /* \"#utility.yul\":130:137   */\n      dup5\n        /* \"#utility.yul\":126:149   */\n      sub\n        /* \"#utility.yul\":122:154   */\n      slt\n        /* \"#utility.yul\":119:171   */\n      iszero\n      tag_57\n      jumpi\n        /* \"#utility.yul\":167:168   */\n      0x00\n        /* \"#utility.yul\":164:165   */\n      dup1\n        /* \"#utility.yul\":157:169   */\n      revert\n        /* \"#utility.yul\":119:171   */\n    tag_57:\n      pop\n        /* \"#utility.yul\":212:235   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:265   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":460:779   */\n    tag_16:\n        /* \"#utility.yul\":553:559   */\n      0x00\n        /* \"#utility.yul\":561:567   */\n      dup1\n        /* \"#utility.yul\":614:616   */\n      0x40\n        /* \"#utility.yul\":602:611   */\n      dup4\n        /* \"#utility.yul\":593:600   */\n      dup6\n        /* \"#utility.yul\":589:612   */\n      sub\n        /* \"#utility.yul\":585:617   */\n      slt\n        /* \"#utility.yul\":582:634   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":630:631   */\n      0x00\n        /* \"#utility.yul\":627:628   */\n      dup1\n        /* \"#utility.yul\":620:632   */\n      revert\n        /* \"#utility.yul\":582:634   */\n    tag_60:\n      pop\n      pop\n        /* \"#utility.yul\":675:698   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":769:771   */\n      0x20\n        /* \"#utility.yul\":754:772   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":741:773   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":460:779   */\n      jump\t// out\n        /* \"#utility.yul\":984:1111   */\n    tag_38:\n        /* \"#utility.yul\":1045:1055   */\n      0x4e487b71\n        /* \"#utility.yul\":1040:1043   */\n      0xe0\n        /* \"#utility.yul\":1036:1056   */\n      shl\n        /* \"#utility.yul\":1033:1034   */\n      0x00\n        /* \"#utility.yul\":1026:1057   */\n      mstore\n        /* \"#utility.yul\":1076:1080   */\n      0x32\n        /* \"#utility.yul\":1073:1074   */\n      0x04\n        /* \"#utility.yul\":1066:1081   */\n      mstore\n        /* \"#utility.yul\":1100:1104   */\n      0x24\n        /* \"#utility.yul\":1097:1098   */\n      0x00\n        /* \"#utility.yul\":1090:1105   */\n      revert\n        /* \"#utility.yul\":1116:1341   */\n    tag_44:\n        /* \"#utility.yul\":1183:1192   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":1204:1215   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":1201:1335   */\n      iszero\n      tag_35\n      jumpi\n        /* \"#utility.yul\":1257:1267   */\n      0x4e487b71\n        /* \"#utility.yul\":1252:1255   */\n      0xe0\n        /* \"#utility.yul\":1248:1268   */\n      shl\n        /* \"#utility.yul\":1245:1246   */\n      0x00\n        /* \"#utility.yul\":1238:1269   */\n      mstore\n        /* \"#utility.yul\":1292:1296   */\n      0x11\n        /* \"#utility.yul\":1289:1290   */\n      0x04\n        /* \"#utility.yul\":1282:1297   */\n      mstore\n        /* \"#utility.yul\":1320:1324   */\n      0x24\n        /* \"#utility.yul\":1317:1318   */\n      0x00\n        /* \"#utility.yul\":1310:1325   */\n      revert\n        /* \"#utility.yul\":1346:1473   */\n    tag_53:\n        /* \"#utility.yul\":1407:1417   */\n      0x4e487b71\n        /* \"#utility.yul\":1402:1405   */\n      0xe0\n        /* \"#utility.yul\":1398:1418   */\n      shl\n        /* \"#utility.yul\":1395:1396   */\n      0x00\n        /* \"#utility.yul\":1388:1419   */\n      mstore\n        /* \"#utility.yul\":1438:1442   */\n      0x31\n        /* \"#utility.yul\":1435:1436   */\n      0x04\n        /* \"#utility.yul\":1428:1443   */\n      mstore\n        /* \"#utility.yul\":1462:1466   */\n      0x24\n        /* \"#utility.yul\":1459:1460   */\n      0x00\n        /* \"#utility.yul\":1452:1467   */\n      revert\n\n    auxdata: 0xa2646970667358221220caa6fdddf24fae351b14af6e2d0b90068acfdfbaa2a8f02397f3510aac8651af64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "61031a610034600b8282823980515f1a607314602857634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610610060575f3560e01c8063254940071461006457806325f5a60e146100895780632d9f88f2146100aa578063a0ab5afc146100bd578063a673e883146100f3575b5f80fd5b610076610072366004610266565b5490565b6040519081526020015b60405180910390f35b818015610094575f80fd5b506100a86100a336600461027d565b610112565b005b6100766100b836600461027d565b610168565b6100e36100cb36600461027d565b5f908152600291909101602052604090205460ff1690565b6040519015158152602001610080565b8180156100fe575f80fd5b506100a861010d36600461027d565b61018f565b5f81815260028301602052604090205460ff16610164575f8181526002830160209081526040808320805460ff1916600190811790915585548682018452918420829055810185558483529120018190555b5050565b5f825f01828154811061017d5761017d61029d565b905f5260205f20015490505b92915050565b5f81815260028301602052604090205460ff166101aa575050565b5f8181526002830160209081526040808320805460ff191690556001808601909252822054845490929185916101e091906102b1565b815481106101f0576101f061029d565b5f918252602080832090910154808352600187019091526040808320859055858352822091909155845490915081908590849081106102315761023161029d565b5f91825260209091200155835484908061024d5761024d6102d0565b600190038181905f5260205f20015f9055905550505050565b5f60208284031215610276575f80fd5b5035919050565b5f806040838503121561028e575f80fd5b50508035926020909101359150565b634e487b7160e01b5f52603260045260245ffd5b8181038181111561018957634e487b7160e01b5f52601160045260245ffd5b634e487b7160e01b5f52603160045260245ffdfea2646970667358221220caa6fdddf24fae351b14af6e2d0b90068acfdfbaa2a8f02397f3510aac8651af64736f6c634300081a0033",
							"opcodes": "PUSH2 0x31A PUSH2 0x34 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x28 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25494007 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x25F5A60E EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x2D9F88F2 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0xA0AB5AFC EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0xA673E883 EQ PUSH2 0xF3 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH2 0x72 CALLDATASIZE PUSH1 0x4 PUSH2 0x266 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x94 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH2 0xA3 CALLDATASIZE PUSH1 0x4 PUSH2 0x27D JUMP JUMPDEST PUSH2 0x112 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x76 PUSH2 0xB8 CALLDATASIZE PUSH1 0x4 PUSH2 0x27D JUMP JUMPDEST PUSH2 0x168 JUMP JUMPDEST PUSH2 0xE3 PUSH2 0xCB CALLDATASIZE PUSH1 0x4 PUSH2 0x27D JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x80 JUMP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0xFE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH2 0x10D CALLDATASIZE PUSH1 0x4 PUSH2 0x27D JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x164 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP6 SLOAD DUP7 DUP3 ADD DUP5 MSTORE SWAP2 DUP5 KECCAK256 DUP3 SWAP1 SSTORE DUP2 ADD DUP6 SSTORE DUP5 DUP4 MSTORE SWAP2 KECCAK256 ADD DUP2 SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x17D JUMPI PUSH2 0x17D PUSH2 0x29D JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1AA JUMPI POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 DUP1 DUP7 ADD SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD DUP5 SLOAD SWAP1 SWAP3 SWAP2 DUP6 SWAP2 PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x2B1 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1F0 JUMPI PUSH2 0x1F0 PUSH2 0x29D JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP1 DUP4 MSTORE PUSH1 0x1 DUP8 ADD SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE DUP6 DUP4 MSTORE DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP5 SLOAD SWAP1 SWAP2 POP DUP2 SWAP1 DUP6 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x231 JUMPI PUSH2 0x231 PUSH2 0x29D JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE DUP4 SLOAD DUP5 SWAP1 DUP1 PUSH2 0x24D JUMPI PUSH2 0x24D PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x276 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x189 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0xA6 REVERT 0xDD CALLCODE 0x4F 0xAE CALLDATALOAD SHL EQ 0xAF PUSH15 0x2D0B90068ACFDFBAA2A8F02397F351 EXP 0xAC DUP7 MLOAD 0xAF PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "88:1284:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;88:1284:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Contains_59": {
									"entryPoint": null,
									"id": 59,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@Count_43": {
									"entryPoint": null,
									"id": 43,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@GetHashByIndex_30": {
									"entryPoint": 360,
									"id": 30,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@Register_101": {
									"entryPoint": 274,
									"id": 101,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@Remove_170": {
									"entryPoint": 399,
									"id": 170,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_struct$_Registry_$14_storage_ptr": {
									"entryPoint": 614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_Registry_$14_storage_ptrt_uint256": {
									"entryPoint": 637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x31": {
									"entryPoint": 720,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 669,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1475:2",
										"nodeType": "YulBlock",
										"src": "0:1475:2",
										"statements": [
											{
												"nativeSrc": "6:3:2",
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "109:156:2",
													"nodeType": "YulBlock",
													"src": "109:156:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "155:16:2",
																"nodeType": "YulBlock",
																"src": "155:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "164:1:2",
																					"nodeType": "YulLiteral",
																					"src": "164:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "167:1:2",
																					"nodeType": "YulLiteral",
																					"src": "167:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "157:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "157:6:2"
																			},
																			"nativeSrc": "157:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "157:12:2"
																		},
																		"nativeSrc": "157:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "157:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "130:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "130:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "139:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "139:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "126:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "126:3:2"
																		},
																		"nativeSrc": "126:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "126:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "151:2:2",
																		"nodeType": "YulLiteral",
																		"src": "151:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "122:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "122:3:2"
																},
																"nativeSrc": "122:32:2",
																"nodeType": "YulFunctionCall",
																"src": "122:32:2"
															},
															"nativeSrc": "119:52:2",
															"nodeType": "YulIf",
															"src": "119:52:2"
														},
														{
															"nativeSrc": "180:14:2",
															"nodeType": "YulVariableDeclaration",
															"src": "180:14:2",
															"value": {
																"kind": "number",
																"nativeSrc": "193:1:2",
																"nodeType": "YulLiteral",
																"src": "193:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "184:5:2",
																	"nodeType": "YulTypedName",
																	"src": "184:5:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "203:32:2",
															"nodeType": "YulAssignment",
															"src": "203:32:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "225:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "225:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "212:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "212:12:2"
																},
																"nativeSrc": "212:23:2",
																"nodeType": "YulFunctionCall",
																"src": "212:23:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "203:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "203:5:2"
																}
															]
														},
														{
															"nativeSrc": "244:15:2",
															"nodeType": "YulAssignment",
															"src": "244:15:2",
															"value": {
																"name": "value",
																"nativeSrc": "254:5:2",
																"nodeType": "YulIdentifier",
																"src": "254:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "244:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "244:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_Registry_$14_storage_ptr",
												"nativeSrc": "14:251:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "75:9:2",
														"nodeType": "YulTypedName",
														"src": "75:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "86:7:2",
														"nodeType": "YulTypedName",
														"src": "86:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "98:6:2",
														"nodeType": "YulTypedName",
														"src": "98:6:2",
														"type": ""
													}
												],
												"src": "14:251:2"
											},
											{
												"body": {
													"nativeSrc": "379:76:2",
													"nodeType": "YulBlock",
													"src": "379:76:2",
													"statements": [
														{
															"nativeSrc": "389:26:2",
															"nodeType": "YulAssignment",
															"src": "389:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "401:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "401:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "412:2:2",
																		"nodeType": "YulLiteral",
																		"src": "412:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "397:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "397:3:2"
																},
																"nativeSrc": "397:18:2",
																"nodeType": "YulFunctionCall",
																"src": "397:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "389:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "389:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "431:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "431:9:2"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "442:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "442:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "424:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:2"
																},
																"nativeSrc": "424:25:2",
																"nodeType": "YulFunctionCall",
																"src": "424:25:2"
															},
															"nativeSrc": "424:25:2",
															"nodeType": "YulExpressionStatement",
															"src": "424:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed",
												"nativeSrc": "270:185:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "348:9:2",
														"nodeType": "YulTypedName",
														"src": "348:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "359:6:2",
														"nodeType": "YulTypedName",
														"src": "359:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "370:4:2",
														"nodeType": "YulTypedName",
														"src": "370:4:2",
														"type": ""
													}
												],
												"src": "270:185:2"
											},
											{
												"body": {
													"nativeSrc": "572:207:2",
													"nodeType": "YulBlock",
													"src": "572:207:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "618:16:2",
																"nodeType": "YulBlock",
																"src": "618:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "627:1:2",
																					"nodeType": "YulLiteral",
																					"src": "627:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "630:1:2",
																					"nodeType": "YulLiteral",
																					"src": "630:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "620:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "620:6:2"
																			},
																			"nativeSrc": "620:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "620:12:2"
																		},
																		"nativeSrc": "620:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "620:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "593:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "593:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "602:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "602:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "589:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "589:3:2"
																		},
																		"nativeSrc": "589:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "589:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "614:2:2",
																		"nodeType": "YulLiteral",
																		"src": "614:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "585:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "585:3:2"
																},
																"nativeSrc": "585:32:2",
																"nodeType": "YulFunctionCall",
																"src": "585:32:2"
															},
															"nativeSrc": "582:52:2",
															"nodeType": "YulIf",
															"src": "582:52:2"
														},
														{
															"nativeSrc": "643:14:2",
															"nodeType": "YulVariableDeclaration",
															"src": "643:14:2",
															"value": {
																"kind": "number",
																"nativeSrc": "656:1:2",
																"nodeType": "YulLiteral",
																"src": "656:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "647:5:2",
																	"nodeType": "YulTypedName",
																	"src": "647:5:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "666:32:2",
															"nodeType": "YulAssignment",
															"src": "666:32:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "688:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "688:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "675:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "675:12:2"
																},
																"nativeSrc": "675:23:2",
																"nodeType": "YulFunctionCall",
																"src": "675:23:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "666:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "666:5:2"
																}
															]
														},
														{
															"nativeSrc": "707:15:2",
															"nodeType": "YulAssignment",
															"src": "707:15:2",
															"value": {
																"name": "value",
																"nativeSrc": "717:5:2",
																"nodeType": "YulIdentifier",
																"src": "717:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "707:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "707:6:2"
																}
															]
														},
														{
															"nativeSrc": "731:42:2",
															"nodeType": "YulAssignment",
															"src": "731:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "758:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "758:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "769:2:2",
																				"nodeType": "YulLiteral",
																				"src": "769:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "754:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "754:3:2"
																		},
																		"nativeSrc": "754:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "754:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "741:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "741:12:2"
																},
																"nativeSrc": "741:32:2",
																"nodeType": "YulFunctionCall",
																"src": "741:32:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "731:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "731:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_Registry_$14_storage_ptrt_uint256",
												"nativeSrc": "460:319:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "530:9:2",
														"nodeType": "YulTypedName",
														"src": "530:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "541:7:2",
														"nodeType": "YulTypedName",
														"src": "541:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "553:6:2",
														"nodeType": "YulTypedName",
														"src": "553:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "561:6:2",
														"nodeType": "YulTypedName",
														"src": "561:6:2",
														"type": ""
													}
												],
												"src": "460:319:2"
											},
											{
												"body": {
													"nativeSrc": "887:92:2",
													"nodeType": "YulBlock",
													"src": "887:92:2",
													"statements": [
														{
															"nativeSrc": "897:26:2",
															"nodeType": "YulAssignment",
															"src": "897:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "909:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "909:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "920:2:2",
																		"nodeType": "YulLiteral",
																		"src": "920:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "905:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "905:3:2"
																},
																"nativeSrc": "905:18:2",
																"nodeType": "YulFunctionCall",
																"src": "905:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "897:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "897:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "939:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "939:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "964:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "964:6:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "957:6:2",
																					"nodeType": "YulIdentifier",
																					"src": "957:6:2"
																				},
																				"nativeSrc": "957:14:2",
																				"nodeType": "YulFunctionCall",
																				"src": "957:14:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "950:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "950:6:2"
																		},
																		"nativeSrc": "950:22:2",
																		"nodeType": "YulFunctionCall",
																		"src": "950:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "932:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "932:6:2"
																},
																"nativeSrc": "932:41:2",
																"nodeType": "YulFunctionCall",
																"src": "932:41:2"
															},
															"nativeSrc": "932:41:2",
															"nodeType": "YulExpressionStatement",
															"src": "932:41:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed",
												"nativeSrc": "784:195:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "856:9:2",
														"nodeType": "YulTypedName",
														"src": "856:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "867:6:2",
														"nodeType": "YulTypedName",
														"src": "867:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "878:4:2",
														"nodeType": "YulTypedName",
														"src": "878:4:2",
														"type": ""
													}
												],
												"src": "784:195:2"
											},
											{
												"body": {
													"nativeSrc": "1016:95:2",
													"nodeType": "YulBlock",
													"src": "1016:95:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1033:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1033:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1040:3:2",
																				"nodeType": "YulLiteral",
																				"src": "1040:3:2",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1045:10:2",
																				"nodeType": "YulLiteral",
																				"src": "1045:10:2",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1036:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1036:3:2"
																		},
																		"nativeSrc": "1036:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1026:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1026:6:2"
																},
																"nativeSrc": "1026:31:2",
																"nodeType": "YulFunctionCall",
																"src": "1026:31:2"
															},
															"nativeSrc": "1026:31:2",
															"nodeType": "YulExpressionStatement",
															"src": "1026:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1073:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1073:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1076:4:2",
																		"nodeType": "YulLiteral",
																		"src": "1076:4:2",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1066:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1066:6:2"
																},
																"nativeSrc": "1066:15:2",
																"nodeType": "YulFunctionCall",
																"src": "1066:15:2"
															},
															"nativeSrc": "1066:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "1066:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1097:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1097:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1100:4:2",
																		"nodeType": "YulLiteral",
																		"src": "1100:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1090:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1090:6:2"
																},
																"nativeSrc": "1090:15:2",
																"nodeType": "YulFunctionCall",
																"src": "1090:15:2"
															},
															"nativeSrc": "1090:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "1090:15:2"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "984:127:2",
												"nodeType": "YulFunctionDefinition",
												"src": "984:127:2"
											},
											{
												"body": {
													"nativeSrc": "1165:176:2",
													"nodeType": "YulBlock",
													"src": "1165:176:2",
													"statements": [
														{
															"nativeSrc": "1175:17:2",
															"nodeType": "YulAssignment",
															"src": "1175:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1187:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "1187:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1190:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "1190:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1183:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1183:3:2"
																},
																"nativeSrc": "1183:9:2",
																"nodeType": "YulFunctionCall",
																"src": "1183:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "1175:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1175:4:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1224:111:2",
																"nodeType": "YulBlock",
																"src": "1224:111:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1245:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1245:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1252:3:2",
																							"nodeType": "YulLiteral",
																							"src": "1252:3:2",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1257:10:2",
																							"nodeType": "YulLiteral",
																							"src": "1257:10:2",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1248:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "1248:3:2"
																					},
																					"nativeSrc": "1248:20:2",
																					"nodeType": "YulFunctionCall",
																					"src": "1248:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1238:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1238:6:2"
																			},
																			"nativeSrc": "1238:31:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1238:31:2"
																		},
																		"nativeSrc": "1238:31:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1238:31:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1289:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1289:1:2",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1292:4:2",
																					"nodeType": "YulLiteral",
																					"src": "1292:4:2",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1282:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1282:6:2"
																			},
																			"nativeSrc": "1282:15:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1282:15:2"
																		},
																		"nativeSrc": "1282:15:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1282:15:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1317:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1317:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1320:4:2",
																					"nodeType": "YulLiteral",
																					"src": "1320:4:2",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1310:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1310:6:2"
																			},
																			"nativeSrc": "1310:15:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1310:15:2"
																		},
																		"nativeSrc": "1310:15:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1310:15:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "1207:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "1207:4:2"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "1213:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "1213:1:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1204:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "1204:2:2"
																},
																"nativeSrc": "1204:11:2",
																"nodeType": "YulFunctionCall",
																"src": "1204:11:2"
															},
															"nativeSrc": "1201:134:2",
															"nodeType": "YulIf",
															"src": "1201:134:2"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "1116:225:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1147:1:2",
														"nodeType": "YulTypedName",
														"src": "1147:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1150:1:2",
														"nodeType": "YulTypedName",
														"src": "1150:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "1156:4:2",
														"nodeType": "YulTypedName",
														"src": "1156:4:2",
														"type": ""
													}
												],
												"src": "1116:225:2"
											},
											{
												"body": {
													"nativeSrc": "1378:95:2",
													"nodeType": "YulBlock",
													"src": "1378:95:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1395:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1395:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1402:3:2",
																				"nodeType": "YulLiteral",
																				"src": "1402:3:2",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1407:10:2",
																				"nodeType": "YulLiteral",
																				"src": "1407:10:2",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1398:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1398:3:2"
																		},
																		"nativeSrc": "1398:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1398:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1388:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1388:6:2"
																},
																"nativeSrc": "1388:31:2",
																"nodeType": "YulFunctionCall",
																"src": "1388:31:2"
															},
															"nativeSrc": "1388:31:2",
															"nodeType": "YulExpressionStatement",
															"src": "1388:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1435:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1435:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1438:4:2",
																		"nodeType": "YulLiteral",
																		"src": "1438:4:2",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1428:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1428:6:2"
																},
																"nativeSrc": "1428:15:2",
																"nodeType": "YulFunctionCall",
																"src": "1428:15:2"
															},
															"nativeSrc": "1428:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "1428:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1459:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1459:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1462:4:2",
																		"nodeType": "YulLiteral",
																		"src": "1462:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1452:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1452:6:2"
																},
																"nativeSrc": "1452:15:2",
																"nodeType": "YulFunctionCall",
																"src": "1452:15:2"
															},
															"nativeSrc": "1452:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "1452:15:2"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "1346:127:2",
												"nodeType": "YulFunctionDefinition",
												"src": "1346:127:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_struct$_Registry_$14_storage_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_struct$_Registry_$14_storage_ptrt_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "7300000000000000000000000000000000000000003014608060405260043610610060575f3560e01c8063254940071461006457806325f5a60e146100895780632d9f88f2146100aa578063a0ab5afc146100bd578063a673e883146100f3575b5f80fd5b610076610072366004610266565b5490565b6040519081526020015b60405180910390f35b818015610094575f80fd5b506100a86100a336600461027d565b610112565b005b6100766100b836600461027d565b610168565b6100e36100cb36600461027d565b5f908152600291909101602052604090205460ff1690565b6040519015158152602001610080565b8180156100fe575f80fd5b506100a861010d36600461027d565b61018f565b5f81815260028301602052604090205460ff16610164575f8181526002830160209081526040808320805460ff1916600190811790915585548682018452918420829055810185558483529120018190555b5050565b5f825f01828154811061017d5761017d61029d565b905f5260205f20015490505b92915050565b5f81815260028301602052604090205460ff166101aa575050565b5f8181526002830160209081526040808320805460ff191690556001808601909252822054845490929185916101e091906102b1565b815481106101f0576101f061029d565b5f918252602080832090910154808352600187019091526040808320859055858352822091909155845490915081908590849081106102315761023161029d565b5f91825260209091200155835484908061024d5761024d6102d0565b600190038181905f5260205f20015f9055905550505050565b5f60208284031215610276575f80fd5b5035919050565b5f806040838503121561028e575f80fd5b50508035926020909101359150565b634e487b7160e01b5f52603260045260245ffd5b8181038181111561018957634e487b7160e01b5f52601160045260245ffd5b634e487b7160e01b5f52603160045260245ffdfea2646970667358221220caa6fdddf24fae351b14af6e2d0b90068acfdfbaa2a8f02397f3510aac8651af64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25494007 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x25F5A60E EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x2D9F88F2 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0xA0AB5AFC EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0xA673E883 EQ PUSH2 0xF3 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH2 0x72 CALLDATASIZE PUSH1 0x4 PUSH2 0x266 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x94 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH2 0xA3 CALLDATASIZE PUSH1 0x4 PUSH2 0x27D JUMP JUMPDEST PUSH2 0x112 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x76 PUSH2 0xB8 CALLDATASIZE PUSH1 0x4 PUSH2 0x27D JUMP JUMPDEST PUSH2 0x168 JUMP JUMPDEST PUSH2 0xE3 PUSH2 0xCB CALLDATASIZE PUSH1 0x4 PUSH2 0x27D JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x80 JUMP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0xFE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH2 0x10D CALLDATASIZE PUSH1 0x4 PUSH2 0x27D JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x164 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP6 SLOAD DUP7 DUP3 ADD DUP5 MSTORE SWAP2 DUP5 KECCAK256 DUP3 SWAP1 SSTORE DUP2 ADD DUP6 SSTORE DUP5 DUP4 MSTORE SWAP2 KECCAK256 ADD DUP2 SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x17D JUMPI PUSH2 0x17D PUSH2 0x29D JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1AA JUMPI POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 DUP1 DUP7 ADD SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD DUP5 SLOAD SWAP1 SWAP3 SWAP2 DUP6 SWAP2 PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x2B1 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1F0 JUMPI PUSH2 0x1F0 PUSH2 0x29D JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP1 DUP4 MSTORE PUSH1 0x1 DUP8 ADD SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE DUP6 DUP4 MSTORE DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP5 SLOAD SWAP1 SWAP2 POP DUP2 SWAP1 DUP6 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x231 JUMPI PUSH2 0x231 PUSH2 0x29D JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE DUP4 SLOAD DUP5 SWAP1 DUP1 PUSH2 0x24D JUMPI PUSH2 0x24D PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x276 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x189 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0xA6 REVERT 0xDD CALLCODE 0x4F 0xAE CALLDATALOAD SHL EQ 0xAF PUSH15 0x2D0B90068ACFDFBAA2A8F02397F351 EXP 0xAC DUP7 MLOAD 0xAF PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "88:1284:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;403:118;;;;;;:::i;:::-;493:21;;403:118;;;;424:25:2;;;412:2;397:18;403:118:0;;;;;;;;665:272;;;;;;;;;;-1:-1:-1;665:272:0;;;;;:::i;:::-;;:::i;:::-;;256:141;;;;;;:::i;:::-;;:::i;527:132::-;;;;;;:::i;:::-;606:4;629:23;;;:18;;;;;:23;;;;;;;;;527:132;;;;957:14:2;;950:22;932:41;;920:2;905:18;527:132:0;784:195:2;943:427:0;;;;;;;;;;-1:-1:-1;943:427:0;;;;;:::i;:::-;;:::i;665:272::-;745:23;;;;:18;;;:23;;;;;;;;741:190;;792:23;;;;:18;;;:23;;;;;;;;:30;;-1:-1:-1;;792:30:0;818:4;792:30;;;;;;861:21;;836:17;;;:22;;;;;:46;;;896:24;;;;;;;;;;;;;741:190;665:272;;:::o;256:141::-;343:7;369:9;:14;;384:5;369:21;;;;;;;;:::i;:::-;;;;;;;;;362:28;;256:141;;;;;:::o;943:427::-;1021:23;;;;:18;;;:23;;;;;;;;1017:36;;943:427;;:::o;1017:36::-;1069:23;;;;:18;;;:23;;;;;;;;1062:30;;-1:-1:-1;;1062:30:0;;;;1118:17;;;:22;;;;;;1183:21;;1118:22;;1069:23;:9;;1183:25;;1062:30;1183:25;:::i;:::-;1168:41;;;;;;;;:::i;:::-;;;;;;;;;;;;;1219:26;;;:17;;;:26;;;;;;;:34;;;1270:22;;;;;1263:29;;;;1302:21;;1168:41;;-1:-1:-1;1168:41:0;;1219:9;;1248:5;;1302:21;;;;;;:::i;:::-;;;;;;;;;;:31;1343:20;;:9;;:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1007:363;;943:427;;:::o;14:251:2:-;98:6;151:2;139:9;130:7;126:23;122:32;119:52;;;167:1;164;157:12;119:52;-1:-1:-1;212:23:2;;14:251;-1:-1:-1;14:251:2:o;460:319::-;553:6;561;614:2;602:9;593:7;589:23;585:32;582:52;;;630:1;627;620:12;582:52;-1:-1:-1;;675:23:2;;;769:2;754:18;;;741:32;;-1:-1:-1;460:319:2:o;984:127::-;1045:10;1040:3;1036:20;1033:1;1026:31;1076:4;1073:1;1066:15;1100:4;1097:1;1090:15;1116:225;1183:9;;;1204:11;;;1201:134;;;1257:10;1252:3;1248:20;1245:1;1238:31;1292:4;1289:1;1282:15;1320:4;1317:1;1310:15;1346:127;1407:10;1402:3;1398:20;1395:1;1388:31;1438:4;1435:1;1428:15;1462:4;1459:1;1452:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "158800",
								"executionCost": "232",
								"totalCost": "159032"
							},
							"external": {
								"Contains(LibRegistry2.Registry storage,uint256)": "2510",
								"Count(LibRegistry2.Registry storage)": "2318",
								"GetHashByIndex(LibRegistry2.Registry storage,uint256)": "4598",
								"Register(LibRegistry2.Registry storage,uint256)": "95300",
								"Remove(LibRegistry2.Registry storage,uint256)": "116320"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 88,
									"end": 1372,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 88,
									"end": 1372,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220caa6fdddf24fae351b14af6e2d0b90068acfdfbaa2a8f02397f3510aac8651af64736f6c634300081a0033",
									".code": [
										{
											"begin": 88,
											"end": 1372,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "25494007"
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "25F5A60E"
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "2D9F88F2"
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "A0AB5AFC"
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "A673E883"
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 1372,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 403,
											"end": 521,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 403,
											"end": 521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 403,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 403,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 403,
											"end": 521,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 403,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 403,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 403,
											"end": 521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 403,
											"end": 521,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 403,
											"end": 521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 493,
											"end": 514,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 493,
											"end": 514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 403,
											"end": 521,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 403,
											"end": 521,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 403,
											"end": 521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 403,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 403,
											"end": 521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 424,
											"end": 449,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 424,
											"end": 449,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 424,
											"end": 449,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 412,
											"end": 414,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 397,
											"end": 415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 403,
											"end": 521,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 403,
											"end": 521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 403,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 403,
											"end": 521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 403,
											"end": 521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 403,
											"end": 521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 403,
											"end": 521,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 403,
											"end": 521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 403,
											"end": 521,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 665,
											"end": 937,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 665,
											"end": 937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 937,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 665,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 665,
											"end": 937,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 665,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 937,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 665,
											"end": 937,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 665,
											"end": 937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 665,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 665,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 665,
											"end": 937,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 665,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 665,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 665,
											"end": 937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 937,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 665,
											"end": 937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 665,
											"end": 937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 937,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 665,
											"end": 937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 937,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 256,
											"end": 397,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 256,
											"end": 397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 256,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 256,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 256,
											"end": 397,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 256,
											"end": 397,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 256,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 256,
											"end": 397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 256,
											"end": 397,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 256,
											"end": 397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 256,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 256,
											"end": 397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 527,
											"end": 659,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 527,
											"end": 659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 527,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 527,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 527,
											"end": 659,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 527,
											"end": 659,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 527,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 527,
											"end": 659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 527,
											"end": 659,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 527,
											"end": 659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 606,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 629,
											"end": 652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 629,
											"end": 652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 629,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 629,
											"end": 647,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 629,
											"end": 647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 629,
											"end": 647,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 629,
											"end": 647,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 629,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 629,
											"end": 652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 629,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 629,
											"end": 652,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 629,
											"end": 652,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 629,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 629,
											"end": 652,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 629,
											"end": 652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 527,
											"end": 659,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 527,
											"end": 659,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 527,
											"end": 659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 527,
											"end": 659,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 527,
											"end": 659,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 957,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 957,
											"end": 971,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 950,
											"end": 972,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 932,
											"end": 973,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 932,
											"end": 973,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 920,
											"end": 922,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 905,
											"end": 923,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 527,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 784,
											"end": 979,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 943,
											"end": 1370,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 943,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 943,
											"end": 1370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 943,
											"end": 1370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 943,
											"end": 1370,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 943,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 943,
											"end": 1370,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 943,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 943,
											"end": 1370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 943,
											"end": 1370,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 943,
											"end": 1370,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 943,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 943,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 943,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 943,
											"end": 1370,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 943,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 943,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 943,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 943,
											"end": 1370,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 943,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 943,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 943,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 937,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 665,
											"end": 937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 745,
											"end": 768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 745,
											"end": 768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 745,
											"end": 768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 745,
											"end": 763,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 745,
											"end": 763,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 745,
											"end": 763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 768,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 745,
											"end": 768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 745,
											"end": 768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 745,
											"end": 768,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 745,
											"end": 768,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 768,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 745,
											"end": 768,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 741,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 741,
											"end": 931,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 792,
											"end": 815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 792,
											"end": 815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 792,
											"end": 815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 792,
											"end": 810,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 792,
											"end": 810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 792,
											"end": 815,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 792,
											"end": 815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 792,
											"end": 815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 792,
											"end": 815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 815,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 792,
											"end": 815,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 792,
											"end": 822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 822,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 792,
											"end": 822,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 822,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 792,
											"end": 822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 792,
											"end": 822,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 792,
											"end": 822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 792,
											"end": 822,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 861,
											"end": 882,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 861,
											"end": 882,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 836,
											"end": 853,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 836,
											"end": 853,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 836,
											"end": 853,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 836,
											"end": 858,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 836,
											"end": 858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 836,
											"end": 858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 836,
											"end": 858,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 836,
											"end": 858,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 836,
											"end": 882,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 836,
											"end": 882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 836,
											"end": 882,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 896,
											"end": 920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 896,
											"end": 920,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 896,
											"end": 920,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 896,
											"end": 920,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 896,
											"end": 920,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 896,
											"end": 920,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 896,
											"end": 920,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 896,
											"end": 920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 896,
											"end": 920,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 896,
											"end": 920,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 896,
											"end": 920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 896,
											"end": 920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 896,
											"end": 920,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 741,
											"end": 931,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 741,
											"end": 931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 256,
											"end": 397,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 256,
											"end": 397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 343,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 369,
											"end": 378,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 369,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 369,
											"end": 383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 384,
											"end": 389,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 369,
											"end": 390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 369,
											"end": 390,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 369,
											"end": 390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 369,
											"end": 390,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 369,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 369,
											"end": 390,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 369,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 369,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 369,
											"end": 390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 369,
											"end": 390,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 369,
											"end": 390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 369,
											"end": 390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 369,
											"end": 390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 369,
											"end": 390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 369,
											"end": 390,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 369,
											"end": 390,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 369,
											"end": 390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 369,
											"end": 390,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 362,
											"end": 390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 256,
											"end": 397,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 256,
											"end": 397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 256,
											"end": 397,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 256,
											"end": 397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 256,
											"end": 397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 256,
											"end": 397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 256,
											"end": 397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 943,
											"end": 1370,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 943,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1044,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 1044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1044,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 1044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1044,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1044,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1044,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1021,
											"end": 1044,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1017,
											"end": 1053,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 943,
											"end": 1370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 943,
											"end": 1370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 943,
											"end": 1370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1053,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1017,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1069,
											"end": 1092,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1069,
											"end": 1092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1069,
											"end": 1092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1069,
											"end": 1092,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1069,
											"end": 1087,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1069,
											"end": 1087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1069,
											"end": 1087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1069,
											"end": 1092,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1069,
											"end": 1092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1069,
											"end": 1092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1069,
											"end": 1092,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1069,
											"end": 1092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1069,
											"end": 1092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1069,
											"end": 1092,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1069,
											"end": 1092,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1062,
											"end": 1092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1062,
											"end": 1092,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1062,
											"end": 1092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1062,
											"end": 1092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1062,
											"end": 1092,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1062,
											"end": 1092,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1118,
											"end": 1135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1135,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1140,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1140,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1140,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1140,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1140,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1183,
											"end": 1204,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1183,
											"end": 1204,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1140,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1069,
											"end": 1092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1069,
											"end": 1078,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1069,
											"end": 1078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1183,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1183,
											"end": 1208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1062,
											"end": 1092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1183,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1183,
											"end": 1208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1183,
											"end": 1208,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1183,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1209,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1209,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1168,
											"end": 1209,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1168,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1168,
											"end": 1209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1209,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1168,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1209,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1209,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1209,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1209,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1168,
											"end": 1209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1209,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1209,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1209,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1209,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1209,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1245,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1219,
											"end": 1245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1245,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1245,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1253,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1253,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1292,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1292,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1292,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1292,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1292,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1292,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1292,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1323,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1323,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1209,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1228,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1323,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1302,
											"end": 1323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1302,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1302,
											"end": 1323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1323,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1302,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1323,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1323,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1323,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1302,
											"end": 1323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1323,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1323,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1333,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1363,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1363,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1352,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1343,
											"end": 1363,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1343,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1343,
											"end": 1363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1363,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1343,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1363,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1343,
											"end": 1363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1363,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1363,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1363,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1363,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1363,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1363,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1363,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 943,
											"end": 1370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 943,
											"end": 1370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 943,
											"end": 1370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 265,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 14,
											"end": 265,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 98,
											"end": 104,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 151,
											"end": 153,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 139,
											"end": 148,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 130,
											"end": 137,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 126,
											"end": 149,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 122,
											"end": 154,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 119,
											"end": 171,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 119,
											"end": 171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 119,
											"end": 171,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 167,
											"end": 168,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 164,
											"end": 165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 157,
											"end": 169,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 119,
											"end": 171,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 119,
											"end": 171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 212,
											"end": 235,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 212,
											"end": 235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14,
											"end": 265,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 460,
											"end": 779,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 460,
											"end": 779,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 553,
											"end": 559,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 561,
											"end": 567,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 614,
											"end": 616,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 602,
											"end": 611,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 593,
											"end": 600,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 589,
											"end": 612,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 585,
											"end": 617,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 582,
											"end": 634,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 582,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 582,
											"end": 634,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 630,
											"end": 631,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 627,
											"end": 628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 620,
											"end": 632,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 582,
											"end": 634,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 582,
											"end": 634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 675,
											"end": 698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 675,
											"end": 698,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 675,
											"end": 698,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 769,
											"end": 771,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 754,
											"end": 772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 754,
											"end": 772,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 754,
											"end": 772,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 741,
											"end": 773,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 741,
											"end": 773,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 460,
											"end": 779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 984,
											"end": 1111,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 984,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1045,
											"end": 1055,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 1040,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1036,
											"end": 1056,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1057,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1080,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1073,
											"end": 1074,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1066,
											"end": 1081,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1104,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1097,
											"end": 1098,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1090,
											"end": 1105,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1341,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1116,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1192,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1192,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1192,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1204,
											"end": 1215,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1204,
											"end": 1215,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1204,
											"end": 1215,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1335,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1201,
											"end": 1335,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1267,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 1252,
											"end": 1255,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1248,
											"end": 1268,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1246,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1238,
											"end": 1269,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1296,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1289,
											"end": 1290,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1282,
											"end": 1297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1320,
											"end": 1324,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1317,
											"end": 1318,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1310,
											"end": 1325,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1346,
											"end": 1473,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1346,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1417,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 1402,
											"end": 1405,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1398,
											"end": 1418,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1396,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1419,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1438,
											"end": 1442,
											"name": "PUSH",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1435,
											"end": 1436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1428,
											"end": 1443,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1459,
											"end": 1460,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1467,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/RegistryLibrary.sol",
								"contracts/atropamath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Contains(LibRegistry2.Registry storage,uint256)": "a0ab5afc",
							"Count(LibRegistry2.Registry storage)": "25494007",
							"GetHashByIndex(LibRegistry2.Registry storage,uint256)": "2d9f88f2",
							"Register(LibRegistry2.Registry storage,uint256)": "25f5a60e",
							"Remove(LibRegistry2.Registry storage,uint256)": "a673e883"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RegistryLibrary.sol\":\"LibRegistry2\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/RegistryLibrary.sol\":{\"keccak256\":\"0xc9410f72214e0a42f858b7d47a1cb4afa707358c0cdba2eeeec87ee1a2055cb1\",\"license\":\"Sharia\",\"urls\":[\"bzz-raw://0ee09e59cf699b0292acef0868dd4f734dae6ac188ea8b5730107fb43e4e576d\",\"dweb:/ipfs/QmetLrLwKF2PPvaX1bZVjWw9ucccsx4GhafPSUssFcMKBH\"]},\"contracts/atropamath.sol\":{\"keccak256\":\"0x4eb5633aeb6b6bff89bfc4f98a44d744ccb995cc0001ea0e5ea0bd736d8e5512\",\"license\":\"Sharia\",\"urls\":[\"bzz-raw://f818f67b9160018c16a31331341d07780332a2815caceb8dff84341deb7d68a9\",\"dweb:/ipfs/QmesyX25uHB9aLVf4a6Pdwzv4uvSxsUPa3aSqcKP8YXoJr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/atropamath.sol": {
				"atropaMath": {
					"abi": [
						{
							"inputs": [],
							"name": "MotzkinPrime",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "a",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "b",
									"type": "address"
								}
							],
							"name": "hashWith",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "hash",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/atropamath.sol\":140:3409  library atropaMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/atropamath.sol\":140:3409  library atropaMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xd3dc2a0f\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xfa6bcfec\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/atropamath.sol\":165:218  uint64 constant public MotzkinPrime = 953467954114363 */\n    tag_2:\n      tag_4\n        /* \"contracts/atropamath.sol\":203:218  953467954114363 */\n      0x03632c8eb5af3b\n        /* \"contracts/atropamath.sol\":165:218  uint64 constant public MotzkinPrime = 953467954114363 */\n      dup2\n      jump\n    tag_4:\n      mload(0x40)\n        /* \"#utility.yul\":196:214   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":184:215   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":166:216   */\n      dup2\n      mstore\n        /* \"#utility.yul\":154:156   */\n      0x20\n        /* \"#utility.yul\":139:157   */\n      add\n        /* \"contracts/atropamath.sol\":165:218  uint64 constant public MotzkinPrime = 953467954114363 */\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/atropamath.sol\":1226:1634  function hashWith(address a, address b) public pure returns (uint256 hash) {        ... */\n    tag_3:\n      tag_8\n      tag_9\n      calldatasize\n      0x04\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      mload(0x40)\n        /* \"#utility.yul\":824:849   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":812:814   */\n      0x20\n        /* \"#utility.yul\":797:815   */\n      add\n        /* \"contracts/atropamath.sol\":1226:1634  function hashWith(address a, address b) public pure returns (uint256 hash) {        ... */\n      tag_6\n        /* \"#utility.yul\":670:855   */\n      jump\n        /* \"contracts/atropamath.sol\":1226:1634  function hashWith(address a, address b) public pure returns (uint256 hash) {        ... */\n    tag_11:\n        /* \"contracts/atropamath.sol\":1287:1299  uint256 hash */\n      0x00\n        /* \"contracts/atropamath.sol\":1358:1359  a */\n      dup3\n        /* \"contracts/atropamath.sol\":1287:1299  uint256 hash */\n      dup2\n        /* \"contracts/atropamath.sol\":1383:1398  uint160(b) / 15 */\n      tag_15\n        /* \"contracts/atropamath.sol\":1396:1398  15 */\n      0x0f\n        /* \"contracts/atropamath.sol\":1391:1392  b */\n      dup6\n        /* \"contracts/atropamath.sol\":1383:1398  uint160(b) / 15 */\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"contracts/atropamath.sol\":1370:1398  uint160 _b = uint160(b) / 15 */\n      swap1\n      pop\n        /* \"contracts/atropamath.sol\":1432:1537  while(hash == 0) {... */\n    tag_17:\n        /* \"contracts/atropamath.sol\":1438:1442  hash */\n      dup3\n        /* \"contracts/atropamath.sol\":1446:1447  0 */\n      0x00\n        /* \"contracts/atropamath.sol\":1438:1447  hash == 0 */\n      sub\n        /* \"contracts/atropamath.sol\":1432:1537  while(hash == 0) {... */\n      tag_18\n      jumpi\n        /* \"contracts/atropamath.sol\":203:218  953467954114363 */\n      0x03632c8eb5af3b\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":1475:1481  _a**_b */\n      dup1\n      dup4\n      and\n      dup5\n      dup3\n      and\n      exp\n        /* \"contracts/atropamath.sol\":1474:1495  (_a**_b)%MotzkinPrime */\n      and\n      mod\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":1467:1495  hash = (_a**_b)%MotzkinPrime */\n      and\n      swap3\n      pop\n        /* \"contracts/atropamath.sol\":1521:1522  2 */\n      0x02\n        /* \"contracts/atropamath.sol\":1518:1520  _b */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/atropamath.sol\":1518:1522  _b/2 */\n      and\n      dup2\n      tag_23\n      jumpi\n      tag_23\n      tag_21\n      jump\t// in\n    tag_23:\n      div\n        /* \"contracts/atropamath.sol\":1513:1522  _b = _b/2 */\n      swap1\n      pop\n        /* \"contracts/atropamath.sol\":1432:1537  while(hash == 0) {... */\n      jump(tag_17)\n    tag_18:\n        /* \"contracts/atropamath.sol\":1301:1634  {        ... */\n      pop\n      pop\n        /* \"contracts/atropamath.sol\":1226:1634  function hashWith(address a, address b) public pure returns (uint256 hash) {        ... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":227:400   */\n    tag_24:\n        /* \"#utility.yul\":295:315   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":344:375   */\n      dup2\n      and\n        /* \"#utility.yul\":334:376   */\n      dup2\n      eq\n        /* \"#utility.yul\":324:394   */\n      tag_28\n      jumpi\n        /* \"#utility.yul\":390:391   */\n      0x00\n        /* \"#utility.yul\":387:388   */\n      dup1\n        /* \"#utility.yul\":380:392   */\n      revert\n        /* \"#utility.yul\":324:394   */\n    tag_28:\n        /* \"#utility.yul\":227:400   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":405:665   */\n    tag_10:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":481:487   */\n      dup1\n        /* \"#utility.yul\":534:536   */\n      0x40\n        /* \"#utility.yul\":522:531   */\n      dup4\n        /* \"#utility.yul\":513:520   */\n      dup6\n        /* \"#utility.yul\":509:532   */\n      sub\n        /* \"#utility.yul\":505:537   */\n      slt\n        /* \"#utility.yul\":502:554   */\n      iszero\n      tag_30\n      jumpi\n        /* \"#utility.yul\":550:551   */\n      0x00\n        /* \"#utility.yul\":547:548   */\n      dup1\n        /* \"#utility.yul\":540:552   */\n      revert\n        /* \"#utility.yul\":502:554   */\n    tag_30:\n        /* \"#utility.yul\":573:602   */\n      tag_31\n        /* \"#utility.yul\":592:601   */\n      dup4\n        /* \"#utility.yul\":573:602   */\n      tag_24\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":563:602   */\n      swap2\n      pop\n        /* \"#utility.yul\":621:659   */\n      tag_32\n        /* \"#utility.yul\":655:657   */\n      0x20\n        /* \"#utility.yul\":644:653   */\n      dup5\n        /* \"#utility.yul\":640:658   */\n      add\n        /* \"#utility.yul\":621:659   */\n      tag_24\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":611:659   */\n      swap1\n      pop\n        /* \"#utility.yul\":405:665   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":860:987   */\n    tag_21:\n        /* \"#utility.yul\":921:931   */\n      0x4e487b71\n        /* \"#utility.yul\":916:919   */\n      0xe0\n        /* \"#utility.yul\":912:932   */\n      shl\n        /* \"#utility.yul\":909:910   */\n      0x00\n        /* \"#utility.yul\":902:933   */\n      mstore\n        /* \"#utility.yul\":952:956   */\n      0x12\n        /* \"#utility.yul\":949:950   */\n      0x04\n        /* \"#utility.yul\":942:957   */\n      mstore\n        /* \"#utility.yul\":976:980   */\n      0x24\n        /* \"#utility.yul\":973:974   */\n      0x00\n        /* \"#utility.yul\":966:981   */\n      revert\n        /* \"#utility.yul\":992:1286   */\n    tag_16:\n        /* \"#utility.yul\":1032:1033   */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1059:1086   */\n      dup4\n      and\n      dup1\n        /* \"#utility.yul\":1095:1229   */\n      tag_36\n      jumpi\n        /* \"#utility.yul\":1151:1161   */\n      0x4e487b71\n        /* \"#utility.yul\":1146:1149   */\n      0xe0\n        /* \"#utility.yul\":1142:1162   */\n      shl\n        /* \"#utility.yul\":1139:1140   */\n      0x00\n        /* \"#utility.yul\":1132:1163   */\n      mstore\n        /* \"#utility.yul\":1186:1190   */\n      0x12\n        /* \"#utility.yul\":1183:1184   */\n      0x04\n        /* \"#utility.yul\":1176:1191   */\n      mstore\n        /* \"#utility.yul\":1214:1218   */\n      0x24\n        /* \"#utility.yul\":1211:1212   */\n      0x00\n        /* \"#utility.yul\":1204:1219   */\n      revert\n        /* \"#utility.yul\":1095:1229   */\n    tag_36:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1247:1274   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":1243:1280   */\n      swap2\n      swap1\n      swap2\n      div\n      swap3\n        /* \"#utility.yul\":992:1286   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122081fddc1911292d5589b87e7f2cffd0ec776475ba714ac83d92843f64fef52a9264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6101c5610034600b8282823980515f1a607314602857634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061003f575f3560e01c8063d3dc2a0f14610043578063fa6bcfec1461006f575b5f80fd5b6100516603632c8eb5af3b81565b60405167ffffffffffffffff90911681526020015b60405180910390f35b61008261007d366004610110565b610090565b604051908152602001610066565b5f828161009e600f85610155565b90505b825f036100ed576603632c8eb5af3b6001600160a01b038083168482160a16066001600160a01b031692506002816001600160a01b0316816100e5576100e5610141565b0490506100a1565b505092915050565b80356001600160a01b038116811461010b575f80fd5b919050565b5f8060408385031215610121575f80fd5b61012a836100f5565b9150610138602084016100f5565b90509250929050565b634e487b7160e01b5f52601260045260245ffd5b5f6001600160a01b0383168061017957634e487b7160e01b5f52601260045260245ffd5b6001600160a01b0392909216919091049291505056fea264697066735822122081fddc1911292d5589b87e7f2cffd0ec776475ba714ac83d92843f64fef52a9264736f6c634300081a0033",
							"opcodes": "PUSH2 0x1C5 PUSH2 0x34 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x28 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD3DC2A0F EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xFA6BCFEC EQ PUSH2 0x6F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x51 PUSH7 0x3632C8EB5AF3B DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x110 JUMP JUMPDEST PUSH2 0x90 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x66 JUMP JUMPDEST PUSH0 DUP3 DUP2 PUSH2 0x9E PUSH1 0xF DUP6 PUSH2 0x155 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP3 PUSH0 SUB PUSH2 0xED JUMPI PUSH7 0x3632C8EB5AF3B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND DUP5 DUP3 AND EXP AND MOD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP PUSH1 0x2 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH2 0xE5 JUMPI PUSH2 0xE5 PUSH2 0x141 JUMP JUMPDEST DIV SWAP1 POP PUSH2 0xA1 JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10B JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x121 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12A DUP4 PUSH2 0xF5 JUMP JUMPDEST SWAP2 POP PUSH2 0x138 PUSH1 0x20 DUP5 ADD PUSH2 0xF5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 PUSH2 0x179 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 REVERT 0xDC NOT GT 0x29 0x2D SSTORE DUP10 0xB8 PUSH31 0x7F2CFFD0EC776475BA714AC83D92843F64FEF52A9264736F6C634300081A00 CALLER ",
							"sourceMap": "140:3269:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;140:3269:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MotzkinPrime_176": {
									"entryPoint": null,
									"id": 176,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@hashWith_227": {
									"entryPoint": 144,
									"id": 227,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint160": {
									"entryPoint": 341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x12": {
									"entryPoint": 321,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1288:2",
										"nodeType": "YulBlock",
										"src": "0:1288:2",
										"statements": [
											{
												"nativeSrc": "6:3:2",
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "121:101:2",
													"nodeType": "YulBlock",
													"src": "121:101:2",
													"statements": [
														{
															"nativeSrc": "131:26:2",
															"nodeType": "YulAssignment",
															"src": "131:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "143:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "143:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "154:2:2",
																		"nodeType": "YulLiteral",
																		"src": "154:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "139:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "139:3:2"
																},
																"nativeSrc": "139:18:2",
																"nodeType": "YulFunctionCall",
																"src": "139:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "131:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "131:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "173:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "188:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "188:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "196:18:2",
																				"nodeType": "YulLiteral",
																				"src": "196:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "184:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "184:3:2"
																		},
																		"nativeSrc": "184:31:2",
																		"nodeType": "YulFunctionCall",
																		"src": "184:31:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "166:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:2"
																},
																"nativeSrc": "166:50:2",
																"nodeType": "YulFunctionCall",
																"src": "166:50:2"
															},
															"nativeSrc": "166:50:2",
															"nodeType": "YulExpressionStatement",
															"src": "166:50:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_library_reversed",
												"nativeSrc": "14:208:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "90:9:2",
														"nodeType": "YulTypedName",
														"src": "90:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "101:6:2",
														"nodeType": "YulTypedName",
														"src": "101:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "112:4:2",
														"nodeType": "YulTypedName",
														"src": "112:4:2",
														"type": ""
													}
												],
												"src": "14:208:2"
											},
											{
												"body": {
													"nativeSrc": "276:124:2",
													"nodeType": "YulBlock",
													"src": "276:124:2",
													"statements": [
														{
															"nativeSrc": "286:29:2",
															"nodeType": "YulAssignment",
															"src": "286:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "308:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "295:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "295:12:2"
																},
																"nativeSrc": "295:20:2",
																"nodeType": "YulFunctionCall",
																"src": "295:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "286:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "286:5:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "378:16:2",
																"nodeType": "YulBlock",
																"src": "378:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "387:1:2",
																					"nodeType": "YulLiteral",
																					"src": "387:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "390:1:2",
																					"nodeType": "YulLiteral",
																					"src": "390:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "380:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "380:6:2"
																			},
																			"nativeSrc": "380:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "380:12:2"
																		},
																		"nativeSrc": "380:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "380:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "337:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "337:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "348:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "348:5:2"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "363:3:2",
																										"nodeType": "YulLiteral",
																										"src": "363:3:2",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "368:1:2",
																										"nodeType": "YulLiteral",
																										"src": "368:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "359:3:2",
																									"nodeType": "YulIdentifier",
																									"src": "359:3:2"
																								},
																								"nativeSrc": "359:11:2",
																								"nodeType": "YulFunctionCall",
																								"src": "359:11:2"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "372:1:2",
																								"nodeType": "YulLiteral",
																								"src": "372:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "355:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "355:3:2"
																						},
																						"nativeSrc": "355:19:2",
																						"nodeType": "YulFunctionCall",
																						"src": "355:19:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "344:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "344:3:2"
																				},
																				"nativeSrc": "344:31:2",
																				"nodeType": "YulFunctionCall",
																				"src": "344:31:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "334:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "334:2:2"
																		},
																		"nativeSrc": "334:42:2",
																		"nodeType": "YulFunctionCall",
																		"src": "334:42:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "327:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "327:6:2"
																},
																"nativeSrc": "327:50:2",
																"nodeType": "YulFunctionCall",
																"src": "327:50:2"
															},
															"nativeSrc": "324:70:2",
															"nodeType": "YulIf",
															"src": "324:70:2"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "227:173:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "255:6:2",
														"nodeType": "YulTypedName",
														"src": "255:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "266:5:2",
														"nodeType": "YulTypedName",
														"src": "266:5:2",
														"type": ""
													}
												],
												"src": "227:173:2"
											},
											{
												"body": {
													"nativeSrc": "492:173:2",
													"nodeType": "YulBlock",
													"src": "492:173:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "538:16:2",
																"nodeType": "YulBlock",
																"src": "538:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "547:1:2",
																					"nodeType": "YulLiteral",
																					"src": "547:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "550:1:2",
																					"nodeType": "YulLiteral",
																					"src": "550:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "540:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "540:6:2"
																			},
																			"nativeSrc": "540:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "540:12:2"
																		},
																		"nativeSrc": "540:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "540:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "513:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "513:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "522:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "522:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "509:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "509:3:2"
																		},
																		"nativeSrc": "509:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "509:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "534:2:2",
																		"nodeType": "YulLiteral",
																		"src": "534:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "505:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "505:3:2"
																},
																"nativeSrc": "505:32:2",
																"nodeType": "YulFunctionCall",
																"src": "505:32:2"
															},
															"nativeSrc": "502:52:2",
															"nodeType": "YulIf",
															"src": "502:52:2"
														},
														{
															"nativeSrc": "563:39:2",
															"nodeType": "YulAssignment",
															"src": "563:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "592:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "592:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "573:18:2",
																	"nodeType": "YulIdentifier",
																	"src": "573:18:2"
																},
																"nativeSrc": "573:29:2",
																"nodeType": "YulFunctionCall",
																"src": "573:29:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "563:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:2"
																}
															]
														},
														{
															"nativeSrc": "611:48:2",
															"nodeType": "YulAssignment",
															"src": "611:48:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "644:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "644:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "655:2:2",
																				"nodeType": "YulLiteral",
																				"src": "655:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "640:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "640:3:2"
																		},
																		"nativeSrc": "640:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "640:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "621:18:2",
																	"nodeType": "YulIdentifier",
																	"src": "621:18:2"
																},
																"nativeSrc": "621:38:2",
																"nodeType": "YulFunctionCall",
																"src": "621:38:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "611:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "611:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "405:260:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "450:9:2",
														"nodeType": "YulTypedName",
														"src": "450:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "461:7:2",
														"nodeType": "YulTypedName",
														"src": "461:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "473:6:2",
														"nodeType": "YulTypedName",
														"src": "473:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "481:6:2",
														"nodeType": "YulTypedName",
														"src": "481:6:2",
														"type": ""
													}
												],
												"src": "405:260:2"
											},
											{
												"body": {
													"nativeSrc": "779:76:2",
													"nodeType": "YulBlock",
													"src": "779:76:2",
													"statements": [
														{
															"nativeSrc": "789:26:2",
															"nodeType": "YulAssignment",
															"src": "789:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "801:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "801:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "812:2:2",
																		"nodeType": "YulLiteral",
																		"src": "812:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "797:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "797:3:2"
																},
																"nativeSrc": "797:18:2",
																"nodeType": "YulFunctionCall",
																"src": "797:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "789:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "789:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "831:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "831:9:2"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "842:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "842:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "824:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "824:6:2"
																},
																"nativeSrc": "824:25:2",
																"nodeType": "YulFunctionCall",
																"src": "824:25:2"
															},
															"nativeSrc": "824:25:2",
															"nodeType": "YulExpressionStatement",
															"src": "824:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed",
												"nativeSrc": "670:185:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "748:9:2",
														"nodeType": "YulTypedName",
														"src": "748:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "759:6:2",
														"nodeType": "YulTypedName",
														"src": "759:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "770:4:2",
														"nodeType": "YulTypedName",
														"src": "770:4:2",
														"type": ""
													}
												],
												"src": "670:185:2"
											},
											{
												"body": {
													"nativeSrc": "892:95:2",
													"nodeType": "YulBlock",
													"src": "892:95:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "909:1:2",
																		"nodeType": "YulLiteral",
																		"src": "909:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "916:3:2",
																				"nodeType": "YulLiteral",
																				"src": "916:3:2",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "921:10:2",
																				"nodeType": "YulLiteral",
																				"src": "921:10:2",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "912:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "912:3:2"
																		},
																		"nativeSrc": "912:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "912:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "902:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "902:6:2"
																},
																"nativeSrc": "902:31:2",
																"nodeType": "YulFunctionCall",
																"src": "902:31:2"
															},
															"nativeSrc": "902:31:2",
															"nodeType": "YulExpressionStatement",
															"src": "902:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "949:1:2",
																		"nodeType": "YulLiteral",
																		"src": "949:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "952:4:2",
																		"nodeType": "YulLiteral",
																		"src": "952:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "942:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "942:6:2"
																},
																"nativeSrc": "942:15:2",
																"nodeType": "YulFunctionCall",
																"src": "942:15:2"
															},
															"nativeSrc": "942:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "942:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "973:1:2",
																		"nodeType": "YulLiteral",
																		"src": "973:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "976:4:2",
																		"nodeType": "YulLiteral",
																		"src": "976:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "966:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "966:6:2"
																},
																"nativeSrc": "966:15:2",
																"nodeType": "YulFunctionCall",
																"src": "966:15:2"
															},
															"nativeSrc": "966:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "966:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "860:127:2",
												"nodeType": "YulFunctionDefinition",
												"src": "860:127:2"
											},
											{
												"body": {
													"nativeSrc": "1038:248:2",
													"nodeType": "YulBlock",
													"src": "1038:248:2",
													"statements": [
														{
															"nativeSrc": "1048:38:2",
															"nodeType": "YulVariableDeclaration",
															"src": "1048:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "1063:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "1063:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1074:3:2",
																						"nodeType": "YulLiteral",
																						"src": "1074:3:2",
																						"type": "",
																						"value": "160"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1079:1:2",
																						"nodeType": "YulLiteral",
																						"src": "1079:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1070:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1070:3:2"
																				},
																				"nativeSrc": "1070:11:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1070:11:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1083:1:2",
																				"nodeType": "YulLiteral",
																				"src": "1083:1:2",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1066:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1066:3:2"
																		},
																		"nativeSrc": "1066:19:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1066:19:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1059:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:2"
																},
																"nativeSrc": "1059:27:2",
																"nodeType": "YulFunctionCall",
																"src": "1059:27:2"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nativeSrc": "1052:3:2",
																	"nodeType": "YulTypedName",
																	"src": "1052:3:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1118:111:2",
																"nodeType": "YulBlock",
																"src": "1118:111:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1139:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1139:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1146:3:2",
																							"nodeType": "YulLiteral",
																							"src": "1146:3:2",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1151:10:2",
																							"nodeType": "YulLiteral",
																							"src": "1151:10:2",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1142:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "1142:3:2"
																					},
																					"nativeSrc": "1142:20:2",
																					"nodeType": "YulFunctionCall",
																					"src": "1142:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1132:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1132:6:2"
																			},
																			"nativeSrc": "1132:31:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1132:31:2"
																		},
																		"nativeSrc": "1132:31:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1132:31:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1183:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1183:1:2",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1186:4:2",
																					"nodeType": "YulLiteral",
																					"src": "1186:4:2",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1176:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1176:6:2"
																			},
																			"nativeSrc": "1176:15:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1176:15:2"
																		},
																		"nativeSrc": "1176:15:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1176:15:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1211:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1211:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1214:4:2",
																					"nodeType": "YulLiteral",
																					"src": "1214:4:2",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1204:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1204:6:2"
																			},
																			"nativeSrc": "1204:15:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1204:15:2"
																		},
																		"nativeSrc": "1204:15:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1204:15:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y_1",
																		"nativeSrc": "1105:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1105:3:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1098:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1098:6:2"
																},
																"nativeSrc": "1098:11:2",
																"nodeType": "YulFunctionCall",
																"src": "1098:11:2"
															},
															"nativeSrc": "1095:134:2",
															"nodeType": "YulIf",
															"src": "1095:134:2"
														},
														{
															"nativeSrc": "1238:42:2",
															"nodeType": "YulAssignment",
															"src": "1238:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "1251:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "1251:1:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1262:3:2",
																								"nodeType": "YulLiteral",
																								"src": "1262:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1267:1:2",
																								"nodeType": "YulLiteral",
																								"src": "1267:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1258:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "1258:3:2"
																						},
																						"nativeSrc": "1258:11:2",
																						"nodeType": "YulFunctionCall",
																						"src": "1258:11:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1271:1:2",
																						"nodeType": "YulLiteral",
																						"src": "1271:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1254:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1254:3:2"
																				},
																				"nativeSrc": "1254:19:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1254:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1247:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1247:3:2"
																		},
																		"nativeSrc": "1247:27:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1247:27:2"
																	},
																	{
																		"name": "y_1",
																		"nativeSrc": "1276:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1276:3:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1243:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1243:3:2"
																},
																"nativeSrc": "1243:37:2",
																"nodeType": "YulFunctionCall",
																"src": "1243:37:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "1238:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "1238:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint160",
												"nativeSrc": "992:294:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1023:1:2",
														"nodeType": "YulTypedName",
														"src": "1023:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1026:1:2",
														"nodeType": "YulTypedName",
														"src": "1026:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "1032:1:2",
														"nodeType": "YulTypedName",
														"src": "1032:1:2",
														"type": ""
													}
												],
												"src": "992:294:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint160(x, y) -> r\n    {\n        let y_1 := and(y, sub(shl(160, 1), 1))\n        if iszero(y_1)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(and(x, sub(shl(160, 1), 1)), y_1)\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040526004361061003f575f3560e01c8063d3dc2a0f14610043578063fa6bcfec1461006f575b5f80fd5b6100516603632c8eb5af3b81565b60405167ffffffffffffffff90911681526020015b60405180910390f35b61008261007d366004610110565b610090565b604051908152602001610066565b5f828161009e600f85610155565b90505b825f036100ed576603632c8eb5af3b6001600160a01b038083168482160a16066001600160a01b031692506002816001600160a01b0316816100e5576100e5610141565b0490506100a1565b505092915050565b80356001600160a01b038116811461010b575f80fd5b919050565b5f8060408385031215610121575f80fd5b61012a836100f5565b9150610138602084016100f5565b90509250929050565b634e487b7160e01b5f52601260045260245ffd5b5f6001600160a01b0383168061017957634e487b7160e01b5f52601260045260245ffd5b6001600160a01b0392909216919091049291505056fea264697066735822122081fddc1911292d5589b87e7f2cffd0ec776475ba714ac83d92843f64fef52a9264736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD3DC2A0F EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xFA6BCFEC EQ PUSH2 0x6F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x51 PUSH7 0x3632C8EB5AF3B DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x110 JUMP JUMPDEST PUSH2 0x90 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x66 JUMP JUMPDEST PUSH0 DUP3 DUP2 PUSH2 0x9E PUSH1 0xF DUP6 PUSH2 0x155 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP3 PUSH0 SUB PUSH2 0xED JUMPI PUSH7 0x3632C8EB5AF3B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND DUP5 DUP3 AND EXP AND MOD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP PUSH1 0x2 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH2 0xE5 JUMPI PUSH2 0xE5 PUSH2 0x141 JUMP JUMPDEST DIV SWAP1 POP PUSH2 0xA1 JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10B JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x121 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12A DUP4 PUSH2 0xF5 JUMP JUMPDEST SWAP2 POP PUSH2 0x138 PUSH1 0x20 DUP5 ADD PUSH2 0xF5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 PUSH2 0x179 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 REVERT 0xDC NOT GT 0x29 0x2D SSTORE DUP10 0xB8 PUSH31 0x7F2CFFD0EC776475BA714AC83D92843F64FEF52A9264736F6C634300081A00 CALLER ",
							"sourceMap": "140:3269:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;165:53;;203:15;165:53;;;;;196:18:2;184:31;;;166:50;;154:2;139:18;165:53:1;;;;;;;;1226:408;;;;;;:::i;:::-;;:::i;:::-;;;824:25:2;;;812:2;797:18;1226:408:1;670:185:2;1226:408:1;1287:12;1358:1;1287:12;1383:15;1396:2;1391:1;1383:15;:::i;:::-;1370:28;;1432:105;1438:4;1446:1;1438:9;1432:105;;203:15;-1:-1:-1;;;;;1475:6:1;;;;;;;1474:21;;-1:-1:-1;;;;;1467:28:1;;;1521:1;1518:2;-1:-1:-1;;;;;1518:4:1;;;;;;:::i;:::-;;1513:9;;1432:105;;;1301:333;;1226:408;;;;:::o;227:173:2:-;295:20;;-1:-1:-1;;;;;344:31:2;;334:42;;324:70;;390:1;387;380:12;324:70;227:173;;;:::o;405:260::-;473:6;481;534:2;522:9;513:7;509:23;505:32;502:52;;;550:1;547;540:12;502:52;573:29;592:9;573:29;:::i;:::-;563:39;;621:38;655:2;644:9;640:18;621:38;:::i;:::-;611:48;;405:260;;;;;:::o;860:127::-;921:10;916:3;912:20;909:1;902:31;952:4;949:1;942:15;976:4;973:1;966:15;992:294;1032:1;-1:-1:-1;;;;;1059:27:2;;;1095:134;;1151:10;1146:3;1142:20;1139:1;1132:31;1186:4;1183:1;1176:15;1214:4;1211:1;1204:15;1095:134;-1:-1:-1;;;;;1247:27:2;;;;1243:37;;;;;992:294;-1:-1:-1;;992:294:2:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "90600",
								"executionCost": "168",
								"totalCost": "90768"
							},
							"external": {
								"MotzkinPrime()": "154",
								"hashWith(address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 140,
									"end": 3409,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 140,
									"end": 3409,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122081fddc1911292d5589b87e7f2cffd0ec776475ba714ac83d92843f64fef52a9264736f6c634300081a0033",
									".code": [
										{
											"begin": 140,
											"end": 3409,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 140,
											"end": 3409,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 140,
											"end": 3409,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 140,
											"end": 3409,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 140,
											"end": 3409,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 140,
											"end": 3409,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 140,
											"end": 3409,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 140,
											"end": 3409,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 140,
											"end": 3409,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 140,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 140,
											"end": 3409,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 140,
											"end": 3409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 140,
											"end": 3409,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 140,
											"end": 3409,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 140,
											"end": 3409,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 140,
											"end": 3409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 140,
											"end": 3409,
											"name": "PUSH",
											"source": 1,
											"value": "D3DC2A0F"
										},
										{
											"begin": 140,
											"end": 3409,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 140,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 140,
											"end": 3409,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 140,
											"end": 3409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 140,
											"end": 3409,
											"name": "PUSH",
											"source": 1,
											"value": "FA6BCFEC"
										},
										{
											"begin": 140,
											"end": 3409,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 140,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 140,
											"end": 3409,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 140,
											"end": 3409,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 140,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 140,
											"end": 3409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 140,
											"end": 3409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 140,
											"end": 3409,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 165,
											"end": 218,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 165,
											"end": 218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 165,
											"end": 218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 203,
											"end": 218,
											"name": "PUSH",
											"source": 1,
											"value": "3632C8EB5AF3B"
										},
										{
											"begin": 165,
											"end": 218,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 165,
											"end": 218,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 165,
											"end": 218,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 165,
											"end": 218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 165,
											"end": 218,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 165,
											"end": 218,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 184,
											"end": 215,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 215,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 184,
											"end": 215,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 166,
											"end": 216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 166,
											"end": 216,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 154,
											"end": 156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 139,
											"end": 157,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 165,
											"end": 218,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 165,
											"end": 218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 165,
											"end": 218,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 165,
											"end": 218,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 218,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 165,
											"end": 218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 165,
											"end": 218,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 165,
											"end": 218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 165,
											"end": 218,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1634,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1226,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1226,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1226,
											"end": 1634,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1634,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1226,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1226,
											"end": 1634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1634,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1226,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1226,
											"end": 1634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1634,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1226,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1634,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1634,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 824,
											"end": 849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 824,
											"end": 849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 824,
											"end": 849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 812,
											"end": 814,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 797,
											"end": 815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 670,
											"end": 855,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1634,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1226,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1359,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1396,
											"end": 1398,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 1391,
											"end": 1392,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1383,
											"end": 1398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1398,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1383,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1370,
											"end": 1398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1370,
											"end": 1398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 1537,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1432,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1442,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1446,
											"end": 1447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1447,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1432,
											"end": 1537,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 203,
											"end": 218,
											"name": "PUSH",
											"source": 1,
											"value": "3632C8EB5AF3B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1495,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1495,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1467,
											"end": 1495,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1495,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1522,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1518,
											"end": 1520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1518,
											"end": 1522,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1522,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1518,
											"end": 1522,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1518,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1518,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1522,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1518,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1522,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1513,
											"end": 1522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1513,
											"end": 1522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1432,
											"end": 1537,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 1537,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1432,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1634,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1634,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 227,
											"end": 400,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 227,
											"end": 400,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 295,
											"end": 315,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 295,
											"end": 315,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 344,
											"end": 375,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 344,
											"end": 375,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 334,
											"end": 376,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 376,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 324,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 324,
											"end": 394,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 390,
											"end": 391,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 387,
											"end": 388,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 380,
											"end": 392,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 324,
											"end": 394,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 324,
											"end": 394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 227,
											"end": 400,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 227,
											"end": 400,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 227,
											"end": 400,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 227,
											"end": 400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 405,
											"end": 665,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 405,
											"end": 665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 481,
											"end": 487,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 534,
											"end": 536,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 522,
											"end": 531,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 513,
											"end": 520,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 509,
											"end": 532,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 505,
											"end": 537,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 502,
											"end": 554,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 502,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 502,
											"end": 554,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 550,
											"end": 551,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 547,
											"end": 548,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 540,
											"end": 552,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 502,
											"end": 554,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 502,
											"end": 554,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 573,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 592,
											"end": 601,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 573,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 573,
											"end": 602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 573,
											"end": 602,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 573,
											"end": 602,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 563,
											"end": 602,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 563,
											"end": 602,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 621,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 655,
											"end": 657,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 653,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 640,
											"end": 658,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 621,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 621,
											"end": 659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 621,
											"end": 659,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 621,
											"end": 659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 611,
											"end": 659,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 611,
											"end": 659,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 405,
											"end": 665,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 405,
											"end": 665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 405,
											"end": 665,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 405,
											"end": 665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 405,
											"end": 665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 405,
											"end": 665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 860,
											"end": 987,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 860,
											"end": 987,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 921,
											"end": 931,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 916,
											"end": 919,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 912,
											"end": 932,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 909,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 933,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 952,
											"end": 956,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 949,
											"end": 950,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 942,
											"end": 957,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 976,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 973,
											"end": 974,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 981,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1286,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 992,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1059,
											"end": 1086,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1059,
											"end": 1086,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1059,
											"end": 1086,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1095,
											"end": 1229,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1151,
											"end": 1161,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 1146,
											"end": 1149,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1142,
											"end": 1162,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1140,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1190,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1183,
											"end": 1184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1176,
											"end": 1191,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1214,
											"end": 1218,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1211,
											"end": 1212,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1204,
											"end": 1219,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1229,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1095,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1247,
											"end": 1274,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1247,
											"end": 1274,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1247,
											"end": 1274,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1247,
											"end": 1274,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1280,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1280,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1280,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1280,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1280,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1286,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 992,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/RegistryLibrary.sol",
								"contracts/atropamath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"MotzkinPrime()": "d3dc2a0f",
							"hashWith(address,address)": "fa6bcfec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MotzkinPrime\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"b\",\"type\":\"address\"}],\"name\":\"hashWith\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"hash\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/atropamath.sol\":\"atropaMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/atropamath.sol\":{\"keccak256\":\"0x4eb5633aeb6b6bff89bfc4f98a44d744ccb995cc0001ea0e5ea0bd736d8e5512\",\"license\":\"Sharia\",\"urls\":[\"bzz-raw://f818f67b9160018c16a31331341d07780332a2815caceb8dff84341deb7d68a9\",\"dweb:/ipfs/QmesyX25uHB9aLVf4a6Pdwzv4uvSxsUPa3aSqcKP8YXoJr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/RegistryLibrary.sol": {
				"ast": {
					"absolutePath": "contracts/RegistryLibrary.sol",
					"exportedSymbols": {
						"LibRegistry2": [
							171
						],
						"atropaMath": [
							228
						]
					},
					"id": 172,
					"license": "Sharia",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:0"
						},
						{
							"absolutePath": "contracts/atropamath.sol",
							"file": "./atropamath.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 172,
							"sourceUnit": 229,
							"src": "60:26:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LibRegistry2",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 171,
							"linearizedBaseContracts": [
								171
							],
							"name": "LibRegistry2",
							"nameLocation": "96:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "LibRegistry2.Registry",
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "keys",
											"nameLocation": "151:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "141:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "141:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4,
												"nodeType": "ArrayTypeName",
												"src": "141:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "indexOf",
											"nameLocation": "193:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "165:35:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"typeName": {
												"id": 8,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "173:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "165:27:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
													"typeString": "mapping(uint256 => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "184:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "inserted",
											"nameLocation": "235:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "210:33:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"typeName": {
												"id": 12,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "218:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "210:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
													"typeString": "mapping(uint256 => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 11,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "229:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Registry",
									"nameLocation": "122:8:0",
									"nodeType": "StructDefinition",
									"scope": 171,
									"src": "115:135:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "352:45:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 24,
															"name": "_registry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "369:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Registry_$14_storage_ptr",
																"typeString": "struct LibRegistry2.Registry storage pointer"
															}
														},
														"id": 25,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "379:4:0",
														"memberName": "keys",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "369:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 27,
													"indexExpression": {
														"id": 26,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "384:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "369:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 23,
												"id": 28,
												"nodeType": "Return",
												"src": "362:28:0"
											}
										]
									},
									"functionSelector": "2d9f88f2",
									"id": 30,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "GetHashByIndex",
									"nameLocation": "265:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "_registry",
												"nameLocation": "297:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "280:26:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Registry_$14_storage_ptr",
													"typeString": "struct LibRegistry2.Registry"
												},
												"typeName": {
													"id": 16,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 15,
														"name": "Registry",
														"nameLocations": [
															"280:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "280:8:0"
													},
													"referencedDeclaration": 14,
													"src": "280:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Registry_$14_storage_ptr",
														"typeString": "struct LibRegistry2.Registry"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "316:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "308:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "279:43:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "343:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "342:9:0"
									},
									"scope": 171,
									"src": "256:141:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "476:45:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 38,
															"name": "_registry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "493:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Registry_$14_storage_ptr",
																"typeString": "struct LibRegistry2.Registry storage pointer"
															}
														},
														"id": 39,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "503:4:0",
														"memberName": "keys",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "493:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "508:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "493:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 37,
												"id": 41,
												"nodeType": "Return",
												"src": "486:28:0"
											}
										]
									},
									"functionSelector": "25494007",
									"id": 43,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Count",
									"nameLocation": "412:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "_registry",
												"nameLocation": "436:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "418:27:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Registry_$14_storage_ptr",
													"typeString": "struct LibRegistry2.Registry"
												},
												"typeName": {
													"id": 32,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 31,
														"name": "Registry",
														"nameLocations": [
															"418:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "418:8:0"
													},
													"referencedDeclaration": 14,
													"src": "418:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Registry_$14_storage_ptr",
														"typeString": "struct LibRegistry2.Registry"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:29:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "467:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "467:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "466:9:0"
									},
									"scope": 171,
									"src": "403:118:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "612:47:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 53,
															"name": "_registry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "629:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Registry_$14_storage_ptr",
																"typeString": "struct LibRegistry2.Registry storage pointer"
															}
														},
														"id": 54,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "639:8:0",
														"memberName": "inserted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "629:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
															"typeString": "mapping(uint256 => bool)"
														}
													},
													"id": 56,
													"indexExpression": {
														"id": 55,
														"name": "key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "648:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "629:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 52,
												"id": 57,
												"nodeType": "Return",
												"src": "622:30:0"
											}
										]
									},
									"functionSelector": "a0ab5afc",
									"id": 59,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Contains",
									"nameLocation": "536:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "_registry",
												"nameLocation": "562:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "545:26:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Registry_$14_storage_ptr",
													"typeString": "struct LibRegistry2.Registry"
												},
												"typeName": {
													"id": 45,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 44,
														"name": "Registry",
														"nameLocations": [
															"545:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "545:8:0"
													},
													"referencedDeclaration": 14,
													"src": "545:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Registry_$14_storage_ptr",
														"typeString": "struct LibRegistry2.Registry"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "581:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "573:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "544:41:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "606:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 50,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "606:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "605:6:0"
									},
									"scope": 171,
									"src": "527:132:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "731:206:0",
										"statements": [
											{
												"condition": {
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "744:24:0",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"id": 67,
																"name": "_registry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 62,
																"src": "745:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Registry_$14_storage_ptr",
																	"typeString": "struct LibRegistry2.Registry storage pointer"
																}
															},
															"id": 68,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "755:8:0",
															"memberName": "inserted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 13,
															"src": "745:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 70,
														"indexExpression": {
															"id": 69,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "764:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "745:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 99,
												"nodeType": "IfStatement",
												"src": "741:190:0",
												"trueBody": {
													"id": 98,
													"nodeType": "Block",
													"src": "778:153:0",
													"statements": [
														{
															"expression": {
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 72,
																			"name": "_registry",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 62,
																			"src": "792:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Registry_$14_storage_ptr",
																				"typeString": "struct LibRegistry2.Registry storage pointer"
																			}
																		},
																		"id": 75,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "802:8:0",
																		"memberName": "inserted",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 13,
																		"src": "792:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																			"typeString": "mapping(uint256 => bool)"
																		}
																	},
																	"id": 76,
																	"indexExpression": {
																		"id": 74,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 64,
																		"src": "811:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "792:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 77,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "818:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "792:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 79,
															"nodeType": "ExpressionStatement",
															"src": "792:30:0"
														},
														{
															"expression": {
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 80,
																			"name": "_registry",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 62,
																			"src": "836:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Registry_$14_storage_ptr",
																				"typeString": "struct LibRegistry2.Registry storage pointer"
																			}
																		},
																		"id": 83,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "846:7:0",
																		"memberName": "indexOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 9,
																		"src": "836:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 84,
																	"indexExpression": {
																		"id": 82,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 64,
																		"src": "854:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "836:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 85,
																			"name": "_registry",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 62,
																			"src": "861:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Registry_$14_storage_ptr",
																				"typeString": "struct LibRegistry2.Registry storage pointer"
																			}
																		},
																		"id": 86,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "871:4:0",
																		"memberName": "keys",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5,
																		"src": "861:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 87,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "876:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "861:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "836:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 89,
															"nodeType": "ExpressionStatement",
															"src": "836:46:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 95,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 64,
																		"src": "916:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 90,
																			"name": "_registry",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 62,
																			"src": "896:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Registry_$14_storage_ptr",
																				"typeString": "struct LibRegistry2.Registry storage pointer"
																			}
																		},
																		"id": 93,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "906:4:0",
																		"memberName": "keys",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5,
																		"src": "896:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 94,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "911:4:0",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "896:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256)"
																	}
																},
																"id": 96,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "896:24:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 97,
															"nodeType": "ExpressionStatement",
															"src": "896:24:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "25f5a60e",
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Register",
									"nameLocation": "674:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "_registry",
												"nameLocation": "700:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "683:26:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Registry_$14_storage_ptr",
													"typeString": "struct LibRegistry2.Registry"
												},
												"typeName": {
													"id": 61,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 60,
														"name": "Registry",
														"nameLocations": [
															"683:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "683:8:0"
													},
													"referencedDeclaration": 14,
													"src": "683:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Registry_$14_storage_ptr",
														"typeString": "struct LibRegistry2.Registry"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "719:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "711:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "682:41:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "731:0:0"
									},
									"scope": 171,
									"src": "665:272:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "1007:363:0",
										"statements": [
											{
												"condition": {
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1020:24:0",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"id": 109,
																"name": "_registry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "1021:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Registry_$14_storage_ptr",
																	"typeString": "struct LibRegistry2.Registry storage pointer"
																}
															},
															"id": 110,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1031:8:0",
															"memberName": "inserted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 13,
															"src": "1021:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 112,
														"indexExpression": {
															"id": 111,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "1040:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1021:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 115,
												"nodeType": "IfStatement",
												"src": "1017:36:0",
												"trueBody": {
													"functionReturnParameters": 108,
													"id": 114,
													"nodeType": "Return",
													"src": "1046:7:0"
												}
											},
											{
												"expression": {
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1062:30:0",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"id": 116,
																"name": "_registry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "1069:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Registry_$14_storage_ptr",
																	"typeString": "struct LibRegistry2.Registry storage pointer"
																}
															},
															"id": 117,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1079:8:0",
															"memberName": "inserted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 13,
															"src": "1069:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 119,
														"indexExpression": {
															"id": 118,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "1088:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1069:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "1062:30:0"
											},
											{
												"assignments": [
													123
												],
												"declarations": [
													{
														"constant": false,
														"id": 123,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "1110:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 169,
														"src": "1102:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1102:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 128,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 124,
															"name": "_registry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "1118:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Registry_$14_storage_ptr",
																"typeString": "struct LibRegistry2.Registry storage pointer"
															}
														},
														"id": 125,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1128:7:0",
														"memberName": "indexOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "1118:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 127,
													"indexExpression": {
														"id": 126,
														"name": "key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "1136:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1118:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1102:38:0"
											},
											{
												"assignments": [
													130
												],
												"declarations": [
													{
														"constant": false,
														"id": 130,
														"mutability": "mutable",
														"name": "lastKey",
														"nameLocation": "1158:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 169,
														"src": "1150:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 129,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1150:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 139,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 131,
															"name": "_registry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "1168:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Registry_$14_storage_ptr",
																"typeString": "struct LibRegistry2.Registry storage pointer"
															}
														},
														"id": 132,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1178:4:0",
														"memberName": "keys",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1168:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 138,
													"indexExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"id": 133,
																	"name": "_registry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 104,
																	"src": "1183:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Registry_$14_storage_ptr",
																		"typeString": "struct LibRegistry2.Registry storage pointer"
																	}
																},
																"id": 134,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1193:4:0",
																"memberName": "keys",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "1183:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																	"typeString": "uint256[] storage ref"
																}
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1198:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1183:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1207:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1183:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1168:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1150:59:0"
											},
											{
												"expression": {
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 140,
																"name": "_registry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "1219:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Registry_$14_storage_ptr",
																	"typeString": "struct LibRegistry2.Registry storage pointer"
																}
															},
															"id": 143,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1229:7:0",
															"memberName": "indexOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 9,
															"src": "1219:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 144,
														"indexExpression": {
															"id": 142,
															"name": "lastKey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "1237:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1219:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 145,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1248:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1219:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "1219:34:0"
											},
											{
												"expression": {
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1263:29:0",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"id": 148,
																"name": "_registry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "1270:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Registry_$14_storage_ptr",
																	"typeString": "struct LibRegistry2.Registry storage pointer"
																}
															},
															"id": 149,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1280:7:0",
															"memberName": "indexOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 9,
															"src": "1270:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 151,
														"indexExpression": {
															"id": 150,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "1288:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1270:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "1263:29:0"
											},
											{
												"expression": {
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 154,
																"name": "_registry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "1302:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Registry_$14_storage_ptr",
																	"typeString": "struct LibRegistry2.Registry storage pointer"
																}
															},
															"id": 157,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1312:4:0",
															"memberName": "keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5,
															"src": "1302:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 158,
														"indexExpression": {
															"id": 156,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "1317:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1302:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 159,
														"name": "lastKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1326:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1302:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "1302:31:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"expression": {
																"id": 162,
																"name": "_registry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "1343:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Registry_$14_storage_ptr",
																	"typeString": "struct LibRegistry2.Registry storage pointer"
																}
															},
															"id": 165,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1353:4:0",
															"memberName": "keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5,
															"src": "1343:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1358:3:0",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "1343:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1343:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "1343:20:0"
											}
										]
									},
									"functionSelector": "a673e883",
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Remove",
									"nameLocation": "952:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "_registry",
												"nameLocation": "976:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "959:26:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Registry_$14_storage_ptr",
													"typeString": "struct LibRegistry2.Registry"
												},
												"typeName": {
													"id": 103,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 102,
														"name": "Registry",
														"nameLocations": [
															"959:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "959:8:0"
													},
													"referencedDeclaration": 14,
													"src": "959:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Registry_$14_storage_ptr",
														"typeString": "struct LibRegistry2.Registry"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "995:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "987:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:41:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1007:0:0"
									},
									"scope": 171,
									"src": "943:427:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 172,
							"src": "88:1284:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "35:1337:0"
				},
				"id": 0
			},
			"contracts/atropamath.sol": {
				"ast": {
					"absolutePath": "contracts/atropamath.sol",
					"exportedSymbols": {
						"atropaMath": [
							228
						]
					},
					"id": 229,
					"license": "Sharia",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 173,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "atropaMath",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 228,
							"linearizedBaseContracts": [
								228
							],
							"name": "atropaMath",
							"nameLocation": "148:10:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "d3dc2a0f",
									"id": 176,
									"mutability": "constant",
									"name": "MotzkinPrime",
									"nameLocation": "188:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 228,
									"src": "165:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 174,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "165:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"value": {
										"hexValue": "393533343637393534313134333633",
										"id": 175,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "203:15:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_953467954114363_by_1",
											"typeString": "int_const 953467954114363"
										},
										"value": "953467954114363"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "1301:333:1",
										"statements": [
											{
												"expression": {
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 185,
														"name": "hash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "1319:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1326:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1319:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "1319:8:1"
											},
											{
												"assignments": [
													190
												],
												"declarations": [
													{
														"constant": false,
														"id": 190,
														"mutability": "mutable",
														"name": "_a",
														"nameLocation": "1345:2:1",
														"nodeType": "VariableDeclaration",
														"scope": 226,
														"src": "1337:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 189,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "1337:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 195,
												"initialValue": {
													"arguments": [
														{
															"id": 193,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "1358:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 192,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1350:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 191,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "1350:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1350:10:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1337:23:1"
											},
											{
												"assignments": [
													197
												],
												"declarations": [
													{
														"constant": false,
														"id": 197,
														"mutability": "mutable",
														"name": "_b",
														"nameLocation": "1378:2:1",
														"nodeType": "VariableDeclaration",
														"scope": 226,
														"src": "1370:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 196,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "1370:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 204,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 200,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 180,
																"src": "1391:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1383:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint160_$",
																"typeString": "type(uint160)"
															},
															"typeName": {
																"id": 198,
																"name": "uint160",
																"nodeType": "ElementaryTypeName",
																"src": "1383:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1383:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3135",
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1396:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "1383:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1370:28:1"
											},
											{
												"id": 225,
												"nodeType": "UncheckedBlock",
												"src": "1408:139:1",
												"statements": [
													{
														"body": {
															"id": 223,
															"nodeType": "Block",
															"src": "1449:88:1",
															"statements": [
																{
																	"expression": {
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 208,
																			"name": "hash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 183,
																			"src": "1467:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						},
																						"id": 211,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 209,
																							"name": "_a",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 190,
																							"src": "1475:2:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint160",
																								"typeString": "uint160"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "**",
																						"rightExpression": {
																							"id": 210,
																							"name": "_b",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 197,
																							"src": "1479:2:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint160",
																								"typeString": "uint160"
																							}
																						},
																						"src": "1475:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					}
																				],
																				"id": 212,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1474:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "%",
																			"rightExpression": {
																				"id": 213,
																				"name": "MotzkinPrime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 176,
																				"src": "1483:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint64",
																					"typeString": "uint64"
																				}
																			},
																			"src": "1474:21:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"src": "1467:28:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 216,
																	"nodeType": "ExpressionStatement",
																	"src": "1467:28:1"
																},
																{
																	"expression": {
																		"id": 221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 217,
																			"name": "_b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 197,
																			"src": "1513:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 218,
																				"name": "_b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 197,
																				"src": "1518:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 219,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1521:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "1518:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"src": "1513:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	"id": 222,
																	"nodeType": "ExpressionStatement",
																	"src": "1513:9:1"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 205,
																"name": "hash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "1438:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1446:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1438:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 224,
														"nodeType": "WhileStatement",
														"src": "1432:105:1"
													}
												]
											}
										]
									},
									"functionSelector": "fa6bcfec",
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hashWith",
									"nameLocation": "1235:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1252:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1244:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1263:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1255:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:22:1"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "1295:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1287:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1286:14:1"
									},
									"scope": 228,
									"src": "1226:408:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 229,
							"src": "140:3269:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "35:3374:1"
				},
				"id": 1
			}
		}
	}
}