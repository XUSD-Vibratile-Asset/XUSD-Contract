{
	"id": "8745436e0d2e714cccd03e7ad3ddad06",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol": {
				"content": "/*\r\n    \r\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\r\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\r\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\r\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\r\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\r\n  \r\n  Find any smart contract, and build your project faster: https://www.cookbook.dev\r\n  Twitter: https://twitter.com/cookbook_dev\r\n  Discord: https://discord.gg/cookbookdev\r\n  \r\n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20?utm=code\r\n  */\r\n  \r\n  // SPDX-License-Identifier: MIT\r\n\r\n// File: @openzeppelin/contracts/utils/Context.sol\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/access/Ownable.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n\r\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n *\r\n * _Available since v4.1._\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n * For a generic mechanism see {ERC20PresetMinterPauser}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC20\r\n * applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IERC20-approve}.\r\n */\r\ncontract ERC20 is Context, IERC20, IERC20Metadata {\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * The default value of {decimals} is 18. To select a different value for\r\n     * {decimals} you should overload it.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\r\n     * overridden;\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\r\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` and `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, amount);\r\n        _transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(owner, spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves `amount` of tokens from `from` to `to`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(from, to, amount);\r\n\r\n        uint256 fromBalance = _balances[from];\r\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n        unchecked {\r\n            _balances[from] = fromBalance - amount;\r\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\r\n            // decrementing then incrementing.\r\n            _balances[to] += amount;\r\n        }\r\n\r\n        emit Transfer(from, to, amount);\r\n\r\n        _afterTokenTransfer(from, to, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply += amount;\r\n        unchecked {\r\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\r\n            _balances[account] += amount;\r\n        }\r\n        emit Transfer(address(0), account, amount);\r\n\r\n        _afterTokenTransfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = accountBalance - amount;\r\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\r\n            _totalSupply -= amount;\r\n        }\r\n\r\n        emit Transfer(account, address(0), amount);\r\n\r\n        _afterTokenTransfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\r\n     *\r\n     * Does not update the allowance amount in case of infinite allowance.\r\n     * Revert if not enough allowance is available.\r\n     *\r\n     * Might emit an {Approval} event.\r\n     */\r\n    function _spendAllowance(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance != type(uint256).max) {\r\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\r\n            unchecked {\r\n                _approve(owner, spender, currentAllowance - amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * has been transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n}\r\n\r\n// File: contracts/token/ERC20/extensions/ERC20Decimals.sol\r\n\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title ERC20Decimals\r\n * @dev Extension of {ERC20} that adds decimals storage slot.\r\n */\r\nabstract contract ERC20Decimals is ERC20 {\r\n    uint8 private immutable _decimals;\r\n\r\n    /**\r\n     * @dev Sets the value of the `decimals`. This value is immutable, it can only be\r\n     * set once during construction.\r\n     */\r\n    constructor(uint8 decimals_) {\r\n        _decimals = decimals_;\r\n    }\r\n\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return _decimals;\r\n    }\r\n}\r\n\r\n// File: contracts/token/ERC20/extensions/ERC20Taxable.sol\r\n\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title ERC20Taxable\r\n * @dev Extension of {ERC20} that adds a tax rate per mille.\r\n */\r\nabstract contract ERC20Taxable is ERC20 {\r\n    uint256 private _taxRate;\r\n    address private _taxAddress;\r\n\r\n    mapping(address => bool) private _isExcludedFromTaxFee;\r\n\r\n    /**\r\n     * @dev Sets the value of the `taxFeePerMille` and the `taxAddress`.\r\n     */\r\n    constructor(uint256 taxFeePerMille_, address taxAddress_) {\r\n        _setTaxRate(taxFeePerMille_);\r\n        _setTaxAddress(taxAddress_);\r\n        _setExclusionFromTaxFee(_msgSender(), true);\r\n        _setExclusionFromTaxFee(taxAddress_, true);\r\n    }\r\n\r\n    /**\r\n     * @dev Moves `amount` of tokens from `sender` to `recipient` minus the tax fee.\r\n     * Moves the tax fee to a deposit address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n\r\n        if (_taxRate > 0 && !(_isExcludedFromTaxFee[owner] || _isExcludedFromTaxFee[to])) {\r\n            uint256 taxAmount = (amount * _taxRate) / 1000;\r\n\r\n            if (taxAmount > 0) {\r\n                _transfer(owner, _taxAddress, taxAmount);\r\n                unchecked {\r\n                    amount -= taxAmount;\r\n                }\r\n            }\r\n        }\r\n\r\n        _transfer(owner, to, amount);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` minus the tax fee using the allowance mechanism.\r\n     * `amount` is then deducted from the caller's allowance.\r\n     * Moves the tax fee to a deposit address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` and `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least `amount`.\r\n     */\r\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, amount);\r\n\r\n        if (_taxRate > 0 && !(_isExcludedFromTaxFee[from] || _isExcludedFromTaxFee[to])) {\r\n            uint256 taxAmount = (amount * _taxRate) / 1000;\r\n\r\n            if (taxAmount > 0) {\r\n                _transfer(from, _taxAddress, taxAmount);\r\n                unchecked {\r\n                    amount -= taxAmount;\r\n                }\r\n            }\r\n        }\r\n\r\n        _transfer(from, to, amount);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the per mille rate for taxable mechanism.\r\n     *\r\n     * For each transfer the per mille amount will be calculated and moved to deposit address.\r\n     */\r\n    function taxFeePerMille() public view returns (uint256) {\r\n        return _taxRate;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the deposit address for tax.\r\n     */\r\n    function taxAddress() public view returns (address) {\r\n        return _taxAddress;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the status of exclusion from tax fee mechanism for a given account.\r\n     */\r\n    function isExcludedFromTaxFee(address account) public view returns (bool) {\r\n        return _isExcludedFromTaxFee[account];\r\n    }\r\n\r\n    /**\r\n     * @dev Set the amount of tax fee per mille\r\n     *\r\n     * WARNING: it allows everyone to set the fee. Access controls MUST be defined in derived contracts.\r\n     */\r\n    function _setTaxRate(uint256 taxFeePerMille_) internal virtual {\r\n        require(taxFeePerMille_ < 1000, \"ERC20Taxable: taxFeePerMille_ must be less than 1000\");\r\n\r\n        _taxRate = taxFeePerMille_;\r\n    }\r\n\r\n    /**\r\n     * @dev Set the deposit address for tax\r\n     *\r\n     * WARNING: it allows everyone to set the address. Access controls MUST be defined in derived contracts.\r\n     */\r\n    function _setTaxAddress(address taxAddress_) internal virtual {\r\n        require(taxAddress_ != address(0), \"ERC20Taxable: taxAddress_ cannot be the zero address\");\r\n\r\n        _taxAddress = taxAddress_;\r\n    }\r\n\r\n    /**\r\n     * @dev Set the exclusion status from tax fee mechanism (both sending and receiving)\r\n     *\r\n     * WARNING: it allows everyone to set the status. Access controls MUST be defined in derived contracts.\r\n     */\r\n    function _setExclusionFromTaxFee(address account_, bool status_) internal virtual {\r\n        _isExcludedFromTaxFee[account_] = status_;\r\n    }\r\n}\r\n\r\n// File: contracts/service/ServicePayer.sol\r\n\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IPayable {\r\n    function pay(string memory serviceName, bytes memory signature, address wallet) external payable;\r\n}\r\n\r\n/**\r\n * @title ServicePayer\r\n * @dev Implementation of the ServicePayer\r\n */\r\nabstract contract ServicePayer {\r\n    constructor(address payable receiver, string memory serviceName, bytes memory signature, address wallet) payable {\r\n        IPayable(receiver).pay{value: msg.value}(serviceName, signature, wallet);\r\n    }\r\n}\r\n\r\n// File: contracts/token/ERC20/TaxableERC20.sol\r\n\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\n\r\n\r\n/**\r\n * @title TaxableERC20\r\n * @dev Implementation of the TaxableERC20\r\n */\r\ncontract TaxableERC20 is ERC20Decimals, ERC20Taxable, Ownable, ServicePayer {\r\n    constructor(\r\n        string memory name_,\r\n        string memory symbol_,\r\n        uint8 decimals_,\r\n        uint256 initialBalance_,\r\n        uint256 taxFeePerMille_,\r\n        address taxAddress_,\r\n        bytes memory signature_,\r\n        address payable feeReceiver_\r\n    )\r\n        payable\r\n        ERC20(name_, symbol_)\r\n        ERC20Decimals(decimals_)\r\n        ERC20Taxable(taxFeePerMille_, taxAddress_)\r\n        ServicePayer(feeReceiver_, \"TaxableERC20\", signature_, _msgSender())\r\n    {\r\n        require(initialBalance_ > 0, \"TaxableERC20: supply cannot be zero\");\r\n\r\n        _mint(_msgSender(), initialBalance_);\r\n    }\r\n\r\n    /**\r\n     * @dev Set the amount of tax fee per mille\r\n     *\r\n     * NOTE: restricting access to owner only. See {ERC20Taxable-_setTaxRate}.\r\n     *\r\n     * @param taxFeePerMille The amount of tax fee per mille\r\n     */\r\n    function setTaxFeePerMille(uint256 taxFeePerMille) public onlyOwner {\r\n        _setTaxRate(taxFeePerMille);\r\n    }\r\n\r\n    /**\r\n     * @dev Set the address where to collect tax fee\r\n     *\r\n     * NOTE: restricting access to owner only. See {ERC20Taxable-_setTaxAddress}.\r\n     *\r\n     * @param taxAddress The deposit address for tax\r\n     */\r\n    function setTaxAddress(address taxAddress) public onlyOwner {\r\n        _setTaxAddress(taxAddress);\r\n    }\r\n\r\n    /**\r\n     * @dev Set the exclusion status from tax fee mechanism (both sending and receiving)\r\n     *\r\n     * NOTE: restricting access to owner only. See {ERC20Taxable-_setExclusionFromTaxFee}.\r\n     */\r\n    function setExclusionFromTaxFee(address account, bool status) public onlyOwner {\r\n        _setExclusionFromTaxFee(account, status);\r\n    }\r\n\r\n    function transfer(address to, uint256 amount) public virtual override(ERC20, ERC20Taxable) returns (bool) {\r\n        return super.transfer(to, amount);\r\n    }\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) public virtual override(ERC20, ERC20Taxable) returns (bool) {\r\n        return super.transferFrom(from, to, amount);\r\n    }\r\n\r\n    function decimals() public view virtual override(ERC20, ERC20Decimals) returns (uint8) {\r\n        return super.decimals();\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 100
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":{\"keccak256\":\"0xcf20f4f41b0c587c32b56938933f8fe893b8491fa35a9c0a9d4f13ce36cf2672\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2f45ff573b7ab5d707f978209dec7bd84dbead1e32764af7549cbf430ca1314\",\"dweb:/ipfs/QmdYjizBwTM6kgwcY8BKTHH7NdRyD5wkPUiKMymJxf4ot6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":9931:21895  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10525:10641  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10592:10597  _name */\n  0x03\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10592:10605  _name = name_ */\n  tag_6\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10600:10605  name_ */\n  dup4\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10592:10597  _name */\n  dup3\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10592:10605  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10616:10623  _symbol */\n  0x04\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10616:10633  _symbol = symbol_ */\n  tag_8\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10626:10633  symbol_ */\n  dup3\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10616:10623  _symbol */\n  dup3\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10616:10633  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10525:10641  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":9931:21895  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:869   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":298:311   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":323:353   */\n  dup2\n  gt\n    /* \"#utility.yul\":320:376   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":356:374   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":405:407   */\n  0x40\n    /* \"#utility.yul\":399:408   */\n  mload\n    /* \"#utility.yul\":497:499   */\n  0x1f\n    /* \"#utility.yul\":459:476   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":455:486   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":488:490   */\n  0x3f\n    /* \"#utility.yul\":451:491   */\n  add\n    /* \"#utility.yul\":447:501   */\n  and\n    /* \"#utility.yul\":435:502   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":517:551   */\n  dup2\n  gt\n    /* \"#utility.yul\":553:575   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":514:576   */\n  or\n    /* \"#utility.yul\":511:599   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":579:597   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":615:617   */\n  0x40\n    /* \"#utility.yul\":608:630   */\n  mstore\n    /* \"#utility.yul\":639:661   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":680:699   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":701:705   */\n  0x20\n    /* \"#utility.yul\":676:706   */\n  add\n    /* \"#utility.yul\":673:712   */\n  dup6\n  lt\n    /* \"#utility.yul\":670:729   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":722:723   */\n  dup1\n    /* \"#utility.yul\":715:727   */\n  revert\n    /* \"#utility.yul\":670:729   */\ntag_24:\n    /* \"#utility.yul\":782:788   */\n  dup2\n    /* \"#utility.yul\":775:779   */\n  0x20\n    /* \"#utility.yul\":767:773   */\n  dup6\n    /* \"#utility.yul\":763:780   */\n  add\n    /* \"#utility.yul\":756:760   */\n  0x20\n    /* \"#utility.yul\":748:754   */\n  dup4\n    /* \"#utility.yul\":744:761   */\n  add\n    /* \"#utility.yul\":738:789   */\n  mcopy\n    /* \"#utility.yul\":837:838   */\n  0x00\n    /* \"#utility.yul\":809:828   */\n  swap2\n  dup2\n  add\n    /* \"#utility.yul\":830:834   */\n  0x20\n    /* \"#utility.yul\":805:835   */\n  add\n    /* \"#utility.yul\":798:839   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":813:819   */\n  swap4\n    /* \"#utility.yul\":146:869   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":874:1431   */\ntag_3:\n    /* \"#utility.yul\":973:979   */\n  0x00\n    /* \"#utility.yul\":981:987   */\n  dup1\n    /* \"#utility.yul\":1034:1036   */\n  0x40\n    /* \"#utility.yul\":1022:1031   */\n  dup4\n    /* \"#utility.yul\":1013:1020   */\n  dup6\n    /* \"#utility.yul\":1009:1032   */\n  sub\n    /* \"#utility.yul\":1005:1037   */\n  slt\n    /* \"#utility.yul\":1002:1054   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":1050:1051   */\n  0x00\n    /* \"#utility.yul\":1047:1048   */\n  dup1\n    /* \"#utility.yul\":1040:1052   */\n  revert\n    /* \"#utility.yul\":1002:1054   */\ntag_26:\n    /* \"#utility.yul\":1077:1093   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1105:1135   */\n  dup2\n  gt\n    /* \"#utility.yul\":1102:1152   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":1148:1149   */\n  0x00\n    /* \"#utility.yul\":1145:1146   */\n  dup1\n    /* \"#utility.yul\":1138:1150   */\n  revert\n    /* \"#utility.yul\":1102:1152   */\ntag_27:\n    /* \"#utility.yul\":1171:1232   */\n  tag_28\n    /* \"#utility.yul\":1224:1231   */\n  dup6\n    /* \"#utility.yul\":1215:1221   */\n  dup3\n    /* \"#utility.yul\":1204:1213   */\n  dup7\n    /* \"#utility.yul\":1200:1222   */\n  add\n    /* \"#utility.yul\":1171:1232   */\n  tag_11\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1278:1280   */\n  0x20\n    /* \"#utility.yul\":1263:1281   */\n  dup6\n  add\n    /* \"#utility.yul\":1257:1282   */\n  mload\n    /* \"#utility.yul\":1161:1232   */\n  swap1\n  swap4\n  pop\n    /* \"#utility.yul\":1257:1282   */\n  swap1\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1294:1326   */\n  dup2\n  gt\n    /* \"#utility.yul\":1291:1343   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1339:1340   */\n  0x00\n    /* \"#utility.yul\":1336:1337   */\n  dup1\n    /* \"#utility.yul\":1329:1341   */\n  revert\n    /* \"#utility.yul\":1291:1343   */\ntag_29:\n    /* \"#utility.yul\":1362:1425   */\n  tag_30\n    /* \"#utility.yul\":1417:1424   */\n  dup6\n    /* \"#utility.yul\":1406:1414   */\n  dup3\n    /* \"#utility.yul\":1395:1404   */\n  dup7\n    /* \"#utility.yul\":1391:1415   */\n  add\n    /* \"#utility.yul\":1362:1425   */\n  tag_11\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1352:1425   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":874:1431   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1436:1816   */\ntag_12:\n    /* \"#utility.yul\":1515:1516   */\n  0x01\n    /* \"#utility.yul\":1511:1523   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1558:1570   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1579:1640   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1633:1637   */\n  0x7f\n    /* \"#utility.yul\":1625:1631   */\n  dup3\n    /* \"#utility.yul\":1621:1638   */\n  and\n    /* \"#utility.yul\":1611:1638   */\n  swap2\n  pop\n    /* \"#utility.yul\":1579:1640   */\ntag_32:\n    /* \"#utility.yul\":1686:1688   */\n  0x20\n    /* \"#utility.yul\":1678:1684   */\n  dup3\n    /* \"#utility.yul\":1675:1689   */\n  lt\n    /* \"#utility.yul\":1655:1673   */\n  dup2\n    /* \"#utility.yul\":1652:1690   */\n  sub\n    /* \"#utility.yul\":1649:1810   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1732:1742   */\n  0x4e487b71\n    /* \"#utility.yul\":1727:1730   */\n  0xe0\n    /* \"#utility.yul\":1723:1743   */\n  shl\n    /* \"#utility.yul\":1720:1721   */\n  0x00\n    /* \"#utility.yul\":1713:1744   */\n  mstore\n    /* \"#utility.yul\":1767:1771   */\n  0x22\n    /* \"#utility.yul\":1764:1765   */\n  0x04\n    /* \"#utility.yul\":1757:1772   */\n  mstore\n    /* \"#utility.yul\":1795:1799   */\n  0x24\n    /* \"#utility.yul\":1792:1793   */\n  0x00\n    /* \"#utility.yul\":1785:1800   */\n  revert\n    /* \"#utility.yul\":1649:1810   */\ntag_33:\n  pop\n    /* \"#utility.yul\":1436:1816   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1947:2465   */\ntag_14:\n    /* \"#utility.yul\":2049:2051   */\n  0x1f\n    /* \"#utility.yul\":2044:2047   */\n  dup3\n    /* \"#utility.yul\":2041:2052   */\n  gt\n    /* \"#utility.yul\":2038:2459   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":2085:2090   */\n  dup1\n    /* \"#utility.yul\":2082:2083   */\n  0x00\n    /* \"#utility.yul\":2075:2091   */\n  mstore\n    /* \"#utility.yul\":2129:2133   */\n  0x20\n    /* \"#utility.yul\":2126:2127   */\n  0x00\n    /* \"#utility.yul\":2116:2134   */\n  keccak256\n    /* \"#utility.yul\":2199:2201   */\n  0x1f\n    /* \"#utility.yul\":2187:2197   */\n  dup5\n    /* \"#utility.yul\":2183:2202   */\n  add\n    /* \"#utility.yul\":2180:2181   */\n  0x05\n    /* \"#utility.yul\":2176:2203   */\n  shr\n    /* \"#utility.yul\":2170:2174   */\n  dup2\n    /* \"#utility.yul\":2166:2204   */\n  add\n    /* \"#utility.yul\":2235:2239   */\n  0x20\n    /* \"#utility.yul\":2223:2233   */\n  dup6\n    /* \"#utility.yul\":2220:2240   */\n  lt\n    /* \"#utility.yul\":2217:2264   */\n  iszero\n  tag_37\n  jumpi\n  pop\n    /* \"#utility.yul\":2258:2262   */\n  dup1\n    /* \"#utility.yul\":2217:2264   */\ntag_37:\n    /* \"#utility.yul\":2313:2315   */\n  0x1f\n    /* \"#utility.yul\":2308:2311   */\n  dup5\n    /* \"#utility.yul\":2304:2316   */\n  add\n    /* \"#utility.yul\":2301:2302   */\n  0x05\n    /* \"#utility.yul\":2297:2317   */\n  shr\n    /* \"#utility.yul\":2291:2295   */\n  dup3\n    /* \"#utility.yul\":2287:2318   */\n  add\n    /* \"#utility.yul\":2277:2318   */\n  swap2\n  pop\n    /* \"#utility.yul\":2368:2449   */\ntag_38:\n    /* \"#utility.yul\":2386:2388   */\n  dup2\n    /* \"#utility.yul\":2379:2384   */\n  dup2\n    /* \"#utility.yul\":2376:2389   */\n  lt\n    /* \"#utility.yul\":2368:2449   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":2445:2446   */\n  0x00\n    /* \"#utility.yul\":2431:2447   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2412:2413   */\n  0x01\n    /* \"#utility.yul\":2401:2414   */\n  add\n    /* \"#utility.yul\":2368:2449   */\n  jump(tag_38)\ntag_40:\n    /* \"#utility.yul\":2372:2375   */\n  pop\n  pop\n    /* \"#utility.yul\":2038:2459   */\ntag_36:\n    /* \"#utility.yul\":1947:2465   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2641:3940   */\ntag_7:\n    /* \"#utility.yul\":2761:2771   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2783:2813   */\n  dup2\n  gt\n    /* \"#utility.yul\":2780:2836   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":2816:2834   */\n  tag_44\n  tag_10\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":2845:2942   */\n  tag_45\n    /* \"#utility.yul\":2935:2941   */\n  dup2\n    /* \"#utility.yul\":2895:2933   */\n  tag_46\n    /* \"#utility.yul\":2927:2931   */\n  dup5\n    /* \"#utility.yul\":2921:2932   */\n  sload\n    /* \"#utility.yul\":2895:2933   */\n  tag_12\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":2889:2893   */\n  dup5\n    /* \"#utility.yul\":2845:2942   */\n  tag_14\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":2991:2995   */\n  0x20\n    /* \"#utility.yul\":3022:3024   */\n  0x1f\n    /* \"#utility.yul\":3011:3025   */\n  dup3\n  gt\n    /* \"#utility.yul\":3039:3040   */\n  0x01\n    /* \"#utility.yul\":3034:3683   */\n  dup2\n  eq\n  tag_48\n  jumpi\n    /* \"#utility.yul\":3727:3728   */\n  0x00\n    /* \"#utility.yul\":3744:3750   */\n  dup4\n    /* \"#utility.yul\":3741:3830   */\n  iszero\n  tag_49\n  jumpi\n  pop\n    /* \"#utility.yul\":3796:3815   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":3790:3816   */\n  mload\n    /* \"#utility.yul\":3741:3830   */\ntag_49:\n  not(0x00)\n    /* \"#utility.yul\":2598:2599   */\n  0x03\n    /* \"#utility.yul\":2594:2605   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2590:2614   */\n  shr\n    /* \"#utility.yul\":2586:2615   */\n  not\n    /* \"#utility.yul\":2576:2616   */\n  and\n    /* \"#utility.yul\":2622:2623   */\n  0x01\n    /* \"#utility.yul\":2618:2629   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":2573:2630   */\n  or\n    /* \"#utility.yul\":3843:3924   */\n  dup5\n  sstore\n    /* \"#utility.yul\":3004:3934   */\n  jump(tag_40)\n    /* \"#utility.yul\":3034:3683   */\ntag_48:\n    /* \"#utility.yul\":1894:1895   */\n  0x00\n    /* \"#utility.yul\":1887:1901   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":1931:1935   */\n  0x20\n    /* \"#utility.yul\":1918:1936   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3070:3090   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":3188:3410   */\ntag_52:\n    /* \"#utility.yul\":3202:3209   */\n  dup3\n    /* \"#utility.yul\":3199:3200   */\n  dup2\n    /* \"#utility.yul\":3196:3210   */\n  lt\n    /* \"#utility.yul\":3188:3410   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":3284:3303   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3278:3304   */\n  mload\n    /* \"#utility.yul\":3263:3305   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3391:3395   */\n  0x20\n    /* \"#utility.yul\":3376:3396   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":3344:3345   */\n  0x01\n    /* \"#utility.yul\":3332:3346   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":3218:3230   */\n  add\n    /* \"#utility.yul\":3188:3410   */\n  jump(tag_52)\ntag_54:\n    /* \"#utility.yul\":3192:3195   */\n  pop\n    /* \"#utility.yul\":3438:3444   */\n  dup5\n    /* \"#utility.yul\":3429:3436   */\n  dup3\n    /* \"#utility.yul\":3426:3445   */\n  lt\n    /* \"#utility.yul\":3423:3624   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":3499:3518   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":3493:3519   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3582:3583   */\n  0x03\n    /* \"#utility.yul\":3578:3592   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":3594:3597   */\n  0xf8\n    /* \"#utility.yul\":3574:3598   */\n  and\n    /* \"#utility.yul\":3570:3607   */\n  shr\n    /* \"#utility.yul\":3566:3608   */\n  not\n    /* \"#utility.yul\":3551:3609   */\n  and\n    /* \"#utility.yul\":3536:3610   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3423:3624   */\ntag_55:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3670:3671   */\n  0x01\n    /* \"#utility.yul\":3654:3668   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3650:3672   */\n  add\n    /* \"#utility.yul\":3637:3673   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2641:3940   */\n  jump\t// out\ntag_16:\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":9931:21895  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":9931:21895  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10711:10811  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":13062:13263  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1085:1099   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1078:1100   */\n      iszero\n        /* \"#utility.yul\":1060:1101   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1048:1050   */\n      0x20\n        /* \"#utility.yul\":1033:1051   */\n      add\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":13062:13263  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":920:1107   */\n      jump\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":11831:11939  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":11919:11931  _totalSupply */\n      sload(0x02)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":11831:11939  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1258:1283   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":11831:11939  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":13843:14138  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":11673:11766  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":11756:11758  18 */\n      0x12\n        /* \"#utility.yul\":1815:1851   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1803:1805   */\n      0x20\n        /* \"#utility.yul\":1788:1806   */\n      add\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":11673:11766  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1673:1857   */\n      jump\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14547:14785  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12002:12129  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12103:12121  _balances[account] */\n      and\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12076:12083  uint256 */\n      0x00\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12103:12121  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12002:12129  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10930:11034  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15288:15724  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12335:12528  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12591:12742  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10711:10811  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10765:10778  string memory */\n      0x60\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10798:10803  _name */\n      0x03\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10791:10803  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10711:10811  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":13062:13263  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":13145:13149  bool */\n      0x00\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":2125:2135  msg.sender */\n      caller\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":13201:13233  _approve(owner, spender, amount) */\n      tag_73\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":2125:2135  msg.sender */\n      dup2\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":13217:13224  spender */\n      dup6\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":13226:13232  amount */\n      dup6\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":13201:13209  _approve */\n      tag_74\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":13201:13233  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":13251:13255  true */\n      0x01\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":13244:13255  return true */\n      swap2\n      pop\n      pop\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":13062:13263  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":13843:14138  function transferFrom(... */\n    tag_32:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":13974:13978  bool */\n      0x00\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":2125:2135  msg.sender */\n      caller\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14032:14070  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14048:14052  from */\n      dup6\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":2125:2135  msg.sender */\n      dup3\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14063:14069  amount */\n      dup6\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14032:14047  _spendAllowance */\n      tag_79\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14032:14070  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14081:14108  _transfer(from, to, amount) */\n      tag_80\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14091:14095  from */\n      dup6\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14097:14099  to */\n      dup6\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14101:14107  amount */\n      dup6\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14081:14090  _transfer */\n      tag_81\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14081:14108  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14126:14130  true */\n      0x01\n      swap5\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":13843:14138  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14547:14785  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14635:14639  bool */\n      0x00\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":2125:2135  msg.sender */\n      caller\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14691:14755  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":2125:2135  msg.sender */\n      dup2\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14707:14714  spender */\n      dup6\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14744:14754  addedValue */\n      dup6\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14716:14741  allowance(owner, spender) */\n      tag_86\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":2125:2135  msg.sender */\n      dup4\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14707:14714  spender */\n      dup4\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14716:14725  allowance */\n      tag_61\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14716:14741  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14716:14754  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14691:14699  _approve */\n      tag_74\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14691:14755  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10930:11034  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10986:10999  string memory */\n      0x60\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":11019:11026  _symbol */\n      0x04\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":11012:11026  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15288:15724  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15381:15385  bool */\n      0x00\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":2125:2135  msg.sender */\n      caller\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15381:15385  bool */\n      dup2\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15464:15489  allowance(owner, spender) */\n      tag_98\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":2125:2135  msg.sender */\n      dup3\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15481:15488  spender */\n      dup7\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15464:15473  allowance */\n      tag_61\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15464:15489  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15437:15489  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15528:15543  subtractedValue */\n      dup4\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15508:15524  currentAllowance */\n      dup2\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15508:15543  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15500:15585  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3132:3134   */\n      0x20\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15500:15585  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3114:3135   */\n      mstore\n        /* \"#utility.yul\":3171:3173   */\n      0x25\n        /* \"#utility.yul\":3151:3169   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3144:3174   */\n      mstore\n        /* \"#utility.yul\":3210:3244   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3190:3208   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3183:3245   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3261:3279   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3254:3289   */\n      mstore\n        /* \"#utility.yul\":3306:3325   */\n      0x84\n      add\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15500:15585  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15621:15681  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15630:15635  owner */\n      dup3\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15637:15644  spender */\n      dup7\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15665:15680  subtractedValue */\n      dup7\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15646:15662  currentAllowance */\n      dup5\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15646:15680  currentAllowance - subtractedValue */\n      sub\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15621:15629  _approve */\n      tag_74\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15621:15681  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12335:12528  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12414:12418  bool */\n      0x00\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":2125:2135  msg.sender */\n      caller\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12470:12498  _transfer(owner, to, amount) */\n      tag_73\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":2125:2135  msg.sender */\n      dup2\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12487:12489  to */\n      dup6\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12491:12497  amount */\n      dup6\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12470:12479  _transfer */\n      tag_81\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12470:12498  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12591:12742  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12707:12725  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12680:12687  uint256 */\n      0x00\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12707:12725  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12707:12718  _allowances */\n      0x01\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12707:12725  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12707:12734  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12591:12742  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19315:19695  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19451:19470  owner != address(0) */\n      dup4\n      and\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19443:19511  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3538:3540   */\n      0x20\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19443:19511  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3520:3541   */\n      mstore\n        /* \"#utility.yul\":3577:3579   */\n      0x24\n        /* \"#utility.yul\":3557:3575   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3550:3580   */\n      mstore\n        /* \"#utility.yul\":3616:3650   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3596:3614   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3589:3651   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3667:3685   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3660:3694   */\n      mstore\n        /* \"#utility.yul\":3711:3730   */\n      0x84\n      add\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19443:19511  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3336:3736   */\n      jump\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19443:19511  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19530:19551  spender != address(0) */\n      dup3\n      and\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19522:19590  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3943:3945   */\n      0x20\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19522:19590  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3925:3946   */\n      mstore\n        /* \"#utility.yul\":3982:3984   */\n      0x22\n        /* \"#utility.yul\":3962:3980   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3955:3985   */\n      mstore\n        /* \"#utility.yul\":4021:4055   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4001:4019   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3994:4056   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4072:4090   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4065:4097   */\n      mstore\n        /* \"#utility.yul\":4114:4133   */\n      0x84\n      add\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19522:19590  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3741:4139   */\n      jump\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19522:19590  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19603:19621  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19603:19614  _allowances */\n      0x01\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19603:19621  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19603:19630  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19603:19639  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19655:19687  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1258:1283   */\n      dup5\n      dup2\n      mstore\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19655:19687  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19655:19687  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19315:19695  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19986:20439  function _spendAllowance(... */\n    tag_79:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20121:20145  uint256 currentAllowance */\n      0x00\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20148:20173  allowance(owner, spender) */\n      tag_117\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20158:20163  owner */\n      dup5\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20165:20172  spender */\n      dup5\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20148:20157  allowance */\n      tag_61\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20148:20173  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20121:20173  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20188:20204  currentAllowance */\n      dup2\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20188:20225  currentAllowance != type(uint256).max */\n      eq\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20184:20432  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20270:20276  amount */\n      dup2\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20250:20266  currentAllowance */\n      dup2\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20250:20276  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20242:20310  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4346:4348   */\n      0x20\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20242:20310  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4328:4349   */\n      mstore\n        /* \"#utility.yul\":4385:4387   */\n      0x1d\n        /* \"#utility.yul\":4365:4383   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4358:4388   */\n      mstore\n        /* \"#utility.yul\":4424:4455   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4404:4422   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4397:4456   */\n      mstore\n        /* \"#utility.yul\":4473:4491   */\n      0x64\n      add\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20242:20310  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4144:4497   */\n      jump\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20242:20310  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20354:20405  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20363:20368  owner */\n      dup5\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20370:20377  spender */\n      dup5\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20398:20404  amount */\n      dup5\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20379:20395  currentAllowance */\n      dup5\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20379:20404  currentAllowance - amount */\n      sub\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20354:20362  _approve */\n      tag_74\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20354:20405  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20110:20439  {... */\n      pop\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19986:20439  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16194:17034  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16325:16343  from != address(0) */\n      dup4\n      and\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16317:16385  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4704:4706   */\n      0x20\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16317:16385  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4686:4707   */\n      mstore\n        /* \"#utility.yul\":4743:4745   */\n      0x25\n        /* \"#utility.yul\":4723:4741   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4716:4746   */\n      mstore\n        /* \"#utility.yul\":4782:4816   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4762:4780   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4755:4817   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4833:4851   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4826:4861   */\n      mstore\n        /* \"#utility.yul\":4878:4897   */\n      0x84\n      add\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16317:16385  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4502:4903   */\n      jump\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16317:16385  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16404:16420  to != address(0) */\n      dup3\n      and\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16396:16460  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5110:5112   */\n      0x20\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16396:16460  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5092:5113   */\n      mstore\n        /* \"#utility.yul\":5149:5151   */\n      0x23\n        /* \"#utility.yul\":5129:5147   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5122:5152   */\n      mstore\n        /* \"#utility.yul\":5188:5222   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5168:5186   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5161:5223   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5239:5257   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5232:5265   */\n      mstore\n        /* \"#utility.yul\":5282:5301   */\n      0x84\n      add\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16396:16460  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4908:5307   */\n      jump\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16396:16460  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16546:16561  _balances[from] */\n      dup4\n      and\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16524:16543  uint256 fromBalance */\n      0x00\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16546:16561  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16580:16601  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16572:16644  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5514:5516   */\n      0x20\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16572:16644  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5496:5517   */\n      mstore\n        /* \"#utility.yul\":5553:5555   */\n      0x26\n        /* \"#utility.yul\":5533:5551   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5526:5556   */\n      mstore\n        /* \"#utility.yul\":5592:5626   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5572:5590   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5565:5627   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5643:5661   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5636:5672   */\n      mstore\n        /* \"#utility.yul\":5689:5708   */\n      0x84\n      add\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16572:16644  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5312:5714   */\n      jump\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16572:16644  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16680:16695  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16680:16689  _balances */\n      0x00\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16680:16695  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16698:16718  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16680:16718  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16898:16911  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16898:16921  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16950:16976  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1258:1283   */\n      dup6\n      dup2\n      mstore\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16898:16911  _balances[to] */\n      swap1\n      swap3\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16950:16976  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16950:16976  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16989:17026  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":21039:21164  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:432   */\n    tag_18:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:610   */\n    tag_140:\n        /* \"#utility.yul\":505:525   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":554:585   */\n      dup2\n      and\n        /* \"#utility.yul\":544:586   */\n      dup2\n      eq\n        /* \"#utility.yul\":534:604   */\n      tag_144\n      jumpi\n        /* \"#utility.yul\":600:601   */\n      0x00\n        /* \"#utility.yul\":597:598   */\n      dup1\n        /* \"#utility.yul\":590:602   */\n      revert\n        /* \"#utility.yul\":534:604   */\n    tag_144:\n        /* \"#utility.yul\":437:610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:915   */\n    tag_21:\n        /* \"#utility.yul\":683:689   */\n      0x00\n        /* \"#utility.yul\":691:697   */\n      dup1\n        /* \"#utility.yul\":744:746   */\n      0x40\n        /* \"#utility.yul\":732:741   */\n      dup4\n        /* \"#utility.yul\":723:730   */\n      dup6\n        /* \"#utility.yul\":719:742   */\n      sub\n        /* \"#utility.yul\":715:747   */\n      slt\n        /* \"#utility.yul\":712:764   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":760:761   */\n      0x00\n        /* \"#utility.yul\":757:758   */\n      dup1\n        /* \"#utility.yul\":750:762   */\n      revert\n        /* \"#utility.yul\":712:764   */\n    tag_146:\n        /* \"#utility.yul\":783:812   */\n      tag_147\n        /* \"#utility.yul\":802:811   */\n      dup4\n        /* \"#utility.yul\":783:812   */\n      tag_140\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":773:812   */\n      swap5\n        /* \"#utility.yul\":881:883   */\n      0x20\n        /* \"#utility.yul\":866:884   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":853:885   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":615:915   */\n      jump\t// out\n        /* \"#utility.yul\":1294:1668   */\n    tag_31:\n        /* \"#utility.yul\":1371:1377   */\n      0x00\n        /* \"#utility.yul\":1379:1385   */\n      dup1\n        /* \"#utility.yul\":1387:1393   */\n      0x00\n        /* \"#utility.yul\":1440:1442   */\n      0x60\n        /* \"#utility.yul\":1428:1437   */\n      dup5\n        /* \"#utility.yul\":1419:1426   */\n      dup7\n        /* \"#utility.yul\":1415:1438   */\n      sub\n        /* \"#utility.yul\":1411:1443   */\n      slt\n        /* \"#utility.yul\":1408:1460   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":1456:1457   */\n      0x00\n        /* \"#utility.yul\":1453:1454   */\n      dup1\n        /* \"#utility.yul\":1446:1458   */\n      revert\n        /* \"#utility.yul\":1408:1460   */\n    tag_151:\n        /* \"#utility.yul\":1479:1508   */\n      tag_152\n        /* \"#utility.yul\":1498:1507   */\n      dup5\n        /* \"#utility.yul\":1479:1508   */\n      tag_140\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":1469:1508   */\n      swap3\n      pop\n        /* \"#utility.yul\":1527:1565   */\n      tag_153\n        /* \"#utility.yul\":1561:1563   */\n      0x20\n        /* \"#utility.yul\":1550:1559   */\n      dup6\n        /* \"#utility.yul\":1546:1564   */\n      add\n        /* \"#utility.yul\":1527:1565   */\n      tag_140\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":1294:1668   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1517:1565   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1634:1636   */\n      0x40\n        /* \"#utility.yul\":1619:1637   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1606:1638   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1294:1668   */\n      jump\t// out\n        /* \"#utility.yul\":1862:2048   */\n    tag_44:\n        /* \"#utility.yul\":1921:1927   */\n      0x00\n        /* \"#utility.yul\":1974:1976   */\n      0x20\n        /* \"#utility.yul\":1962:1971   */\n      dup3\n        /* \"#utility.yul\":1953:1960   */\n      dup5\n        /* \"#utility.yul\":1949:1972   */\n      sub\n        /* \"#utility.yul\":1945:1977   */\n      slt\n        /* \"#utility.yul\":1942:1994   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1990:1991   */\n      0x00\n        /* \"#utility.yul\":1987:1988   */\n      dup1\n        /* \"#utility.yul\":1980:1992   */\n      revert\n        /* \"#utility.yul\":1942:1994   */\n    tag_156:\n        /* \"#utility.yul\":2013:2042   */\n      tag_157\n        /* \"#utility.yul\":2032:2041   */\n      dup3\n        /* \"#utility.yul\":2013:2042   */\n      tag_140\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":2003:2042   */\n      swap4\n        /* \"#utility.yul\":1862:2048   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2053:2313   */\n    tag_60:\n        /* \"#utility.yul\":2121:2127   */\n      0x00\n        /* \"#utility.yul\":2129:2135   */\n      dup1\n        /* \"#utility.yul\":2182:2184   */\n      0x40\n        /* \"#utility.yul\":2170:2179   */\n      dup4\n        /* \"#utility.yul\":2161:2168   */\n      dup6\n        /* \"#utility.yul\":2157:2180   */\n      sub\n        /* \"#utility.yul\":2153:2185   */\n      slt\n        /* \"#utility.yul\":2150:2202   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":2198:2199   */\n      0x00\n        /* \"#utility.yul\":2195:2196   */\n      dup1\n        /* \"#utility.yul\":2188:2200   */\n      revert\n        /* \"#utility.yul\":2150:2202   */\n    tag_159:\n        /* \"#utility.yul\":2221:2250   */\n      tag_160\n        /* \"#utility.yul\":2240:2249   */\n      dup4\n        /* \"#utility.yul\":2221:2250   */\n      tag_140\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2211:2250   */\n      swap2\n      pop\n        /* \"#utility.yul\":2269:2307   */\n      tag_161\n        /* \"#utility.yul\":2303:2305   */\n      0x20\n        /* \"#utility.yul\":2292:2301   */\n      dup5\n        /* \"#utility.yul\":2288:2306   */\n      add\n        /* \"#utility.yul\":2269:2307   */\n      tag_140\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2259:2307   */\n      swap1\n      pop\n        /* \"#utility.yul\":2053:2313   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2318:2698   */\n    tag_65:\n        /* \"#utility.yul\":2397:2398   */\n      0x01\n        /* \"#utility.yul\":2393:2405   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2440:2452   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2461:2522   */\n      tag_163\n      jumpi\n        /* \"#utility.yul\":2515:2519   */\n      0x7f\n        /* \"#utility.yul\":2507:2513   */\n      dup3\n        /* \"#utility.yul\":2503:2520   */\n      and\n        /* \"#utility.yul\":2493:2520   */\n      swap2\n      pop\n        /* \"#utility.yul\":2461:2522   */\n    tag_163:\n        /* \"#utility.yul\":2568:2570   */\n      0x20\n        /* \"#utility.yul\":2560:2566   */\n      dup3\n        /* \"#utility.yul\":2557:2571   */\n      lt\n        /* \"#utility.yul\":2537:2555   */\n      dup2\n        /* \"#utility.yul\":2534:2572   */\n      sub\n        /* \"#utility.yul\":2531:2692   */\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2614:2624   */\n      0x4e487b71\n        /* \"#utility.yul\":2609:2612   */\n      0xe0\n        /* \"#utility.yul\":2605:2625   */\n      shl\n        /* \"#utility.yul\":2602:2603   */\n      0x00\n        /* \"#utility.yul\":2595:2626   */\n      mstore\n        /* \"#utility.yul\":2649:2653   */\n      0x22\n        /* \"#utility.yul\":2646:2647   */\n      0x04\n        /* \"#utility.yul\":2639:2654   */\n      mstore\n        /* \"#utility.yul\":2677:2681   */\n      0x24\n        /* \"#utility.yul\":2674:2675   */\n      0x00\n        /* \"#utility.yul\":2667:2682   */\n      revert\n        /* \"#utility.yul\":2531:2692   */\n    tag_164:\n      pop\n        /* \"#utility.yul\":2318:2698   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2703:2925   */\n    tag_88:\n        /* \"#utility.yul\":2768:2777   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2789:2799   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2786:2919   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2841:2851   */\n      0x4e487b71\n        /* \"#utility.yul\":2836:2839   */\n      0xe0\n        /* \"#utility.yul\":2832:2852   */\n      shl\n        /* \"#utility.yul\":2829:2830   */\n      0x00\n        /* \"#utility.yul\":2822:2853   */\n      mstore\n        /* \"#utility.yul\":2876:2880   */\n      0x11\n        /* \"#utility.yul\":2873:2874   */\n      0x04\n        /* \"#utility.yul\":2866:2881   */\n      mstore\n        /* \"#utility.yul\":2904:2908   */\n      0x24\n        /* \"#utility.yul\":2901:2902   */\n      0x00\n        /* \"#utility.yul\":2894:2909   */\n      revert\n\n    auxdata: 0xa2646970667358221220a4699444d16448633b90ed13bcf376e530ed11885d3aad5e910f86fca66a93a264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_273": {
									"entryPoint": null,
									"id": 273,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 99,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 79,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3942:1",
										"nodeType": "YulBlock",
										"src": "0:3942:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:1",
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:1",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:1",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:1",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nativeSrc": "66:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nativeSrc": "56:31:1",
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nativeSrc": "56:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:1",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:1",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nativeSrc": "96:15:1",
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nativeSrc": "96:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:1",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:1",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nativeSrc": "120:15:1",
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nativeSrc": "120:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nativeSrc": "210:659:1",
													"nodeType": "YulBlock",
													"src": "210:659:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:1",
																"nodeType": "YulBlock",
																"src": "259:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:1",
																					"nodeType": "YulLiteral",
																					"src": "268:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:1",
																					"nodeType": "YulLiteral",
																					"src": "271:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:1"
																			},
																			"nativeSrc": "261:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:1"
																		},
																		"nativeSrc": "261:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:1",
																						"nodeType": "YulLiteral",
																						"src": "246:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:1"
																				},
																				"nativeSrc": "234:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:1"
																		},
																		"nativeSrc": "230:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:1"
																},
																"nativeSrc": "223:35:1",
																"nodeType": "YulFunctionCall",
																"src": "223:35:1"
															},
															"nativeSrc": "220:55:1",
															"nodeType": "YulIf",
															"src": "220:55:1"
														},
														{
															"nativeSrc": "284:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "284:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "304:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "304:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "298:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "298:5:1"
																},
																"nativeSrc": "298:13:1",
																"nodeType": "YulFunctionCall",
																"src": "298:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "288:6:1",
																	"nodeType": "YulTypedName",
																	"src": "288:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "354:22:1",
																"nodeType": "YulBlock",
																"src": "354:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "356:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "356:16:1"
																			},
																			"nativeSrc": "356:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "356:18:1"
																		},
																		"nativeSrc": "356:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "356:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "326:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "326:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "342:2:1",
																						"nodeType": "YulLiteral",
																						"src": "342:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "346:1:1",
																						"nodeType": "YulLiteral",
																						"src": "346:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "338:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "338:3:1"
																				},
																				"nativeSrc": "338:10:1",
																				"nodeType": "YulFunctionCall",
																				"src": "338:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "350:1:1",
																				"nodeType": "YulLiteral",
																				"src": "350:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "334:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "334:3:1"
																		},
																		"nativeSrc": "334:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "334:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "323:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "323:2:1"
																},
																"nativeSrc": "323:30:1",
																"nodeType": "YulFunctionCall",
																"src": "323:30:1"
															},
															"nativeSrc": "320:56:1",
															"nodeType": "YulIf",
															"src": "320:56:1"
														},
														{
															"nativeSrc": "385:23:1",
															"nodeType": "YulVariableDeclaration",
															"src": "385:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "405:2:1",
																		"nodeType": "YulLiteral",
																		"src": "405:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "399:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "399:5:1"
																},
																"nativeSrc": "399:9:1",
																"nodeType": "YulFunctionCall",
																"src": "399:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "389:6:1",
																	"nodeType": "YulTypedName",
																	"src": "389:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "417:85:1",
															"nodeType": "YulVariableDeclaration",
															"src": "417:85:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "439:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "439:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "463:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "463:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "471:4:1",
																										"nodeType": "YulLiteral",
																										"src": "471:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "459:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:1"
																								},
																								"nativeSrc": "459:17:1",
																								"nodeType": "YulFunctionCall",
																								"src": "459:17:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "482:2:1",
																										"nodeType": "YulLiteral",
																										"src": "482:2:1",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "478:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "478:3:1"
																								},
																								"nativeSrc": "478:7:1",
																								"nodeType": "YulFunctionCall",
																								"src": "478:7:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "455:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "455:3:1"
																						},
																						"nativeSrc": "455:31:1",
																						"nodeType": "YulFunctionCall",
																						"src": "455:31:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "488:2:1",
																						"nodeType": "YulLiteral",
																						"src": "488:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "451:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "451:3:1"
																				},
																				"nativeSrc": "451:40:1",
																				"nodeType": "YulFunctionCall",
																				"src": "451:40:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "497:2:1",
																						"nodeType": "YulLiteral",
																						"src": "497:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "493:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "493:3:1"
																				},
																				"nativeSrc": "493:7:1",
																				"nodeType": "YulFunctionCall",
																				"src": "493:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "447:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "447:3:1"
																		},
																		"nativeSrc": "447:54:1",
																		"nodeType": "YulFunctionCall",
																		"src": "447:54:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "435:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "435:3:1"
																},
																"nativeSrc": "435:67:1",
																"nodeType": "YulFunctionCall",
																"src": "435:67:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "421:10:1",
																	"nodeType": "YulTypedName",
																	"src": "421:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "577:22:1",
																"nodeType": "YulBlock",
																"src": "577:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "579:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "579:16:1"
																			},
																			"nativeSrc": "579:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "579:18:1"
																		},
																		"nativeSrc": "579:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "579:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "520:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "520:10:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "540:2:1",
																								"nodeType": "YulLiteral",
																								"src": "540:2:1",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "544:1:1",
																								"nodeType": "YulLiteral",
																								"src": "544:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "536:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "536:3:1"
																						},
																						"nativeSrc": "536:10:1",
																						"nodeType": "YulFunctionCall",
																						"src": "536:10:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "548:1:1",
																						"nodeType": "YulLiteral",
																						"src": "548:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "532:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "532:3:1"
																				},
																				"nativeSrc": "532:18:1",
																				"nodeType": "YulFunctionCall",
																				"src": "532:18:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "517:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "517:2:1"
																		},
																		"nativeSrc": "517:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "517:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "556:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "556:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "568:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "568:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "553:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "553:2:1"
																		},
																		"nativeSrc": "553:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "553:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "514:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "514:2:1"
																},
																"nativeSrc": "514:62:1",
																"nodeType": "YulFunctionCall",
																"src": "514:62:1"
															},
															"nativeSrc": "511:88:1",
															"nodeType": "YulIf",
															"src": "511:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "615:2:1",
																		"nodeType": "YulLiteral",
																		"src": "615:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "619:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "619:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "608:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "608:6:1"
																},
																"nativeSrc": "608:22:1",
																"nodeType": "YulFunctionCall",
																"src": "608:22:1"
															},
															"nativeSrc": "608:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "608:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "646:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "646:6:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "654:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "654:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "639:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "639:6:1"
																},
																"nativeSrc": "639:22:1",
																"nodeType": "YulFunctionCall",
																"src": "639:22:1"
															},
															"nativeSrc": "639:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "639:22:1"
														},
														{
															"body": {
																"nativeSrc": "713:16:1",
																"nodeType": "YulBlock",
																"src": "713:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "722:1:1",
																					"nodeType": "YulLiteral",
																					"src": "722:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:1",
																					"nodeType": "YulLiteral",
																					"src": "725:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "715:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "715:6:1"
																			},
																			"nativeSrc": "715:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "715:12:1"
																		},
																		"nativeSrc": "715:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "715:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "684:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "684:6:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "692:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "692:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "680:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "680:3:1"
																				},
																				"nativeSrc": "680:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "680:19:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "701:4:1",
																				"nodeType": "YulLiteral",
																				"src": "701:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "676:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "676:3:1"
																		},
																		"nativeSrc": "676:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "676:30:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "708:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "708:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "673:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "673:2:1"
																},
																"nativeSrc": "673:39:1",
																"nodeType": "YulFunctionCall",
																"src": "673:39:1"
															},
															"nativeSrc": "670:59:1",
															"nodeType": "YulIf",
															"src": "670:59:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "748:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "748:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "756:4:1",
																				"nodeType": "YulLiteral",
																				"src": "756:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "744:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "744:3:1"
																		},
																		"nativeSrc": "744:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "744:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "767:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "767:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "775:4:1",
																				"nodeType": "YulLiteral",
																				"src": "775:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "763:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "763:3:1"
																		},
																		"nativeSrc": "763:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "763:17:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "782:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "782:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "738:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "738:5:1"
																},
																"nativeSrc": "738:51:1",
																"nodeType": "YulFunctionCall",
																"src": "738:51:1"
															},
															"nativeSrc": "738:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "738:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "813:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "813:6:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "821:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "821:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "809:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "809:3:1"
																				},
																				"nativeSrc": "809:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "809:19:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "830:4:1",
																				"nodeType": "YulLiteral",
																				"src": "830:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "805:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "805:3:1"
																		},
																		"nativeSrc": "805:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "805:30:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "837:1:1",
																		"nodeType": "YulLiteral",
																		"src": "837:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "798:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "798:6:1"
																},
																"nativeSrc": "798:41:1",
																"nodeType": "YulFunctionCall",
																"src": "798:41:1"
															},
															"nativeSrc": "798:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "798:41:1"
														},
														{
															"nativeSrc": "848:15:1",
															"nodeType": "YulAssignment",
															"src": "848:15:1",
															"value": {
																"name": "memPtr",
																"nativeSrc": "857:6:1",
																"nodeType": "YulIdentifier",
																"src": "857:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "848:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "848:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:723:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:1",
														"nodeType": "YulTypedName",
														"src": "184:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:1",
														"nodeType": "YulTypedName",
														"src": "192:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:1",
														"nodeType": "YulTypedName",
														"src": "200:5:1",
														"type": ""
													}
												],
												"src": "146:723:1"
											},
											{
												"body": {
													"nativeSrc": "992:439:1",
													"nodeType": "YulBlock",
													"src": "992:439:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1038:16:1",
																"nodeType": "YulBlock",
																"src": "1038:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1047:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1047:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1050:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1050:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1040:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1040:6:1"
																			},
																			"nativeSrc": "1040:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1040:12:1"
																		},
																		"nativeSrc": "1040:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1040:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1013:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1013:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1022:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1022:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1009:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1009:3:1"
																		},
																		"nativeSrc": "1009:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1009:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1034:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1034:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1005:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1005:3:1"
																},
																"nativeSrc": "1005:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1005:32:1"
															},
															"nativeSrc": "1002:52:1",
															"nodeType": "YulIf",
															"src": "1002:52:1"
														},
														{
															"nativeSrc": "1063:30:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1063:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1083:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1083:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1077:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1077:5:1"
																},
																"nativeSrc": "1077:16:1",
																"nodeType": "YulFunctionCall",
																"src": "1077:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1067:6:1",
																	"nodeType": "YulTypedName",
																	"src": "1067:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1136:16:1",
																"nodeType": "YulBlock",
																"src": "1136:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1145:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1145:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1148:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1148:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1138:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1138:6:1"
																			},
																			"nativeSrc": "1138:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1138:12:1"
																		},
																		"nativeSrc": "1138:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1138:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1108:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1108:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1124:2:1",
																						"nodeType": "YulLiteral",
																						"src": "1124:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1128:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1128:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1120:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1120:3:1"
																				},
																				"nativeSrc": "1120:10:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1120:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1132:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1132:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1116:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1116:3:1"
																		},
																		"nativeSrc": "1116:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1116:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1105:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1105:2:1"
																},
																"nativeSrc": "1105:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1105:30:1"
															},
															"nativeSrc": "1102:50:1",
															"nodeType": "YulIf",
															"src": "1102:50:1"
														},
														{
															"nativeSrc": "1161:71:1",
															"nodeType": "YulAssignment",
															"src": "1161:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1204:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1204:9:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1215:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1215:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1200:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1200:3:1"
																		},
																		"nativeSrc": "1200:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1200:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1224:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "1224:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1171:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "1171:28:1"
																},
																"nativeSrc": "1171:61:1",
																"nodeType": "YulFunctionCall",
																"src": "1171:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1161:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1161:6:1"
																}
															]
														},
														{
															"nativeSrc": "1241:41:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1241:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1267:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1267:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1278:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1278:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1263:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1263:3:1"
																		},
																		"nativeSrc": "1263:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1263:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1257:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1257:5:1"
																},
																"nativeSrc": "1257:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1257:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1245:8:1",
																	"nodeType": "YulTypedName",
																	"src": "1245:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1327:16:1",
																"nodeType": "YulBlock",
																"src": "1327:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1336:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1336:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1339:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1329:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1329:6:1"
																			},
																			"nativeSrc": "1329:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1329:12:1"
																		},
																		"nativeSrc": "1329:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1329:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1297:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "1297:8:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1315:2:1",
																						"nodeType": "YulLiteral",
																						"src": "1315:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1319:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1319:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1311:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1311:3:1"
																				},
																				"nativeSrc": "1311:10:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1311:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1323:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1323:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1307:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1307:3:1"
																		},
																		"nativeSrc": "1307:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1307:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1294:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1294:2:1"
																},
																"nativeSrc": "1294:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1294:32:1"
															},
															"nativeSrc": "1291:52:1",
															"nodeType": "YulIf",
															"src": "1291:52:1"
														},
														{
															"nativeSrc": "1352:73:1",
															"nodeType": "YulAssignment",
															"src": "1352:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1395:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1395:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1406:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "1406:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1391:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1391:3:1"
																		},
																		"nativeSrc": "1391:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1391:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1417:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "1417:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1362:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "1362:28:1"
																},
																"nativeSrc": "1362:63:1",
																"nodeType": "YulFunctionCall",
																"src": "1362:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1352:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1352:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "874:557:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "950:9:1",
														"nodeType": "YulTypedName",
														"src": "950:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "961:7:1",
														"nodeType": "YulTypedName",
														"src": "961:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "973:6:1",
														"nodeType": "YulTypedName",
														"src": "973:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "981:6:1",
														"nodeType": "YulTypedName",
														"src": "981:6:1",
														"type": ""
													}
												],
												"src": "874:557:1"
											},
											{
												"body": {
													"nativeSrc": "1491:325:1",
													"nodeType": "YulBlock",
													"src": "1491:325:1",
													"statements": [
														{
															"nativeSrc": "1501:22:1",
															"nodeType": "YulAssignment",
															"src": "1501:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1515:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1515:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1518:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1518:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1511:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1511:3:1"
																},
																"nativeSrc": "1511:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1511:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1501:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:1"
																}
															]
														},
														{
															"nativeSrc": "1532:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1532:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1562:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1562:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1568:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1568:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1558:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1558:3:1"
																},
																"nativeSrc": "1558:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1558:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1536:18:1",
																	"nodeType": "YulTypedName",
																	"src": "1536:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1609:31:1",
																"nodeType": "YulBlock",
																"src": "1609:31:1",
																"statements": [
																	{
																		"nativeSrc": "1611:27:1",
																		"nodeType": "YulAssignment",
																		"src": "1611:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1625:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1625:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1633:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1633:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1621:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1621:3:1"
																			},
																			"nativeSrc": "1621:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1621:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1611:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1611:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1589:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1589:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1582:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1582:6:1"
																},
																"nativeSrc": "1582:26:1",
																"nodeType": "YulFunctionCall",
																"src": "1582:26:1"
															},
															"nativeSrc": "1579:61:1",
															"nodeType": "YulIf",
															"src": "1579:61:1"
														},
														{
															"body": {
																"nativeSrc": "1699:111:1",
																"nodeType": "YulBlock",
																"src": "1699:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1727:3:1",
																							"nodeType": "YulLiteral",
																							"src": "1727:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1732:10:1",
																							"nodeType": "YulLiteral",
																							"src": "1732:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1723:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1723:3:1"
																					},
																					"nativeSrc": "1723:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1723:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1713:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:1"
																			},
																			"nativeSrc": "1713:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1713:31:1"
																		},
																		"nativeSrc": "1713:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1764:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1764:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1767:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1767:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1757:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1757:6:1"
																			},
																			"nativeSrc": "1757:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1757:15:1"
																		},
																		"nativeSrc": "1757:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1757:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1792:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1792:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1795:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1795:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1785:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1785:6:1"
																			},
																			"nativeSrc": "1785:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1785:15:1"
																		},
																		"nativeSrc": "1785:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1785:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1655:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1655:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1678:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1678:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1686:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1686:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1675:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1675:2:1"
																		},
																		"nativeSrc": "1675:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1675:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1652:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1652:2:1"
																},
																"nativeSrc": "1652:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1652:38:1"
															},
															"nativeSrc": "1649:161:1",
															"nodeType": "YulIf",
															"src": "1649:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1436:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1471:4:1",
														"nodeType": "YulTypedName",
														"src": "1471:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1480:6:1",
														"nodeType": "YulTypedName",
														"src": "1480:6:1",
														"type": ""
													}
												],
												"src": "1436:380:1"
											},
											{
												"body": {
													"nativeSrc": "1877:65:1",
													"nodeType": "YulBlock",
													"src": "1877:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1894:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1894:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1897:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1897:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1887:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1887:6:1"
																},
																"nativeSrc": "1887:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1887:14:1"
															},
															"nativeSrc": "1887:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "1887:14:1"
														},
														{
															"nativeSrc": "1910:26:1",
															"nodeType": "YulAssignment",
															"src": "1910:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1931:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1931:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1918:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1918:9:1"
																},
																"nativeSrc": "1918:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1918:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1910:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1910:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1821:121:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1860:3:1",
														"nodeType": "YulTypedName",
														"src": "1860:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1868:4:1",
														"nodeType": "YulTypedName",
														"src": "1868:4:1",
														"type": ""
													}
												],
												"src": "1821:121:1"
											},
											{
												"body": {
													"nativeSrc": "2028:437:1",
													"nodeType": "YulBlock",
													"src": "2028:437:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2061:398:1",
																"nodeType": "YulBlock",
																"src": "2061:398:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2082:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2082:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2085:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2085:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2075:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2075:6:1"
																			},
																			"nativeSrc": "2075:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2075:16:1"
																		},
																		"nativeSrc": "2075:16:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2075:16:1"
																	},
																	{
																		"nativeSrc": "2104:30:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2104:30:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2126:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2126:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2129:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2129:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2116:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2116:9:1"
																			},
																			"nativeSrc": "2116:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2116:18:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2108:4:1",
																				"nodeType": "YulTypedName",
																				"src": "2108:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2147:57:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2147:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2170:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "2170:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2180:1:1",
																							"nodeType": "YulLiteral",
																							"src": "2180:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2187:10:1",
																									"nodeType": "YulIdentifier",
																									"src": "2187:10:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2199:2:1",
																									"nodeType": "YulLiteral",
																									"src": "2199:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2183:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2183:3:1"
																							},
																							"nativeSrc": "2183:19:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2183:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2176:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2176:3:1"
																					},
																					"nativeSrc": "2176:27:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2176:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2166:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2166:3:1"
																			},
																			"nativeSrc": "2166:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2166:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2151:11:1",
																				"nodeType": "YulTypedName",
																				"src": "2151:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2241:23:1",
																			"nodeType": "YulBlock",
																			"src": "2241:23:1",
																			"statements": [
																				{
																					"nativeSrc": "2243:19:1",
																					"nodeType": "YulAssignment",
																					"src": "2243:19:1",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2258:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "2258:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2243:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "2243:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2223:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "2223:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2235:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2235:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2220:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "2220:2:1"
																			},
																			"nativeSrc": "2220:20:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2220:20:1"
																		},
																		"nativeSrc": "2217:47:1",
																		"nodeType": "YulIf",
																		"src": "2217:47:1"
																	},
																	{
																		"nativeSrc": "2277:41:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2277:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2291:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "2291:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2301:1:1",
																							"nodeType": "YulLiteral",
																							"src": "2301:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2308:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2308:3:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2313:2:1",
																									"nodeType": "YulLiteral",
																									"src": "2313:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2304:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2304:3:1"
																							},
																							"nativeSrc": "2304:12:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2304:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2297:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2297:3:1"
																					},
																					"nativeSrc": "2297:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2297:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2287:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2287:3:1"
																			},
																			"nativeSrc": "2287:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2287:31:1"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2281:2:1",
																				"nodeType": "YulTypedName",
																				"src": "2281:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2331:24:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2331:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2344:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "2344:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2335:5:1",
																				"nodeType": "YulTypedName",
																				"src": "2335:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2429:20:1",
																			"nodeType": "YulBlock",
																			"src": "2429:20:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2438:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "2438:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2445:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2445:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2431:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2431:6:1"
																						},
																						"nativeSrc": "2431:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2431:16:1"
																					},
																					"nativeSrc": "2431:16:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "2431:16:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2379:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2379:5:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2386:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "2386:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2376:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "2376:2:1"
																			},
																			"nativeSrc": "2376:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2376:13:1"
																		},
																		"nativeSrc": "2368:81:1",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2390:26:1",
																			"nodeType": "YulBlock",
																			"src": "2390:26:1",
																			"statements": [
																				{
																					"nativeSrc": "2392:22:1",
																					"nodeType": "YulAssignment",
																					"src": "2392:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2405:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "2405:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2412:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2412:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2401:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2401:3:1"
																						},
																						"nativeSrc": "2401:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2401:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2392:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "2392:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2372:3:1",
																			"nodeType": "YulBlock",
																			"src": "2372:3:1",
																			"statements": []
																		},
																		"src": "2368:81:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2044:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2044:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2049:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2049:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2041:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2041:2:1"
																},
																"nativeSrc": "2041:11:1",
																"nodeType": "YulFunctionCall",
																"src": "2041:11:1"
															},
															"nativeSrc": "2038:421:1",
															"nodeType": "YulIf",
															"src": "2038:421:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1947:518:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2000:5:1",
														"nodeType": "YulTypedName",
														"src": "2000:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2007:3:1",
														"nodeType": "YulTypedName",
														"src": "2007:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2012:10:1",
														"nodeType": "YulTypedName",
														"src": "2012:10:1",
														"type": ""
													}
												],
												"src": "1947:518:1"
											},
											{
												"body": {
													"nativeSrc": "2555:81:1",
													"nodeType": "YulBlock",
													"src": "2555:81:1",
													"statements": [
														{
															"nativeSrc": "2565:65:1",
															"nodeType": "YulAssignment",
															"src": "2565:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2580:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2580:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2598:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2598:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2601:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "2601:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2594:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2594:3:1"
																								},
																								"nativeSrc": "2594:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2594:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2611:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2611:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2607:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2607:3:1"
																								},
																								"nativeSrc": "2607:6:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2607:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2590:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2590:3:1"
																						},
																						"nativeSrc": "2590:24:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2590:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2586:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2586:3:1"
																				},
																				"nativeSrc": "2586:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2586:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2576:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2576:3:1"
																		},
																		"nativeSrc": "2576:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2576:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2622:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2622:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2625:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2625:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2618:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2618:3:1"
																		},
																		"nativeSrc": "2618:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2618:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2573:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2573:2:1"
																},
																"nativeSrc": "2573:57:1",
																"nodeType": "YulFunctionCall",
																"src": "2573:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2565:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2565:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2470:166:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2532:4:1",
														"nodeType": "YulTypedName",
														"src": "2532:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2538:3:1",
														"nodeType": "YulTypedName",
														"src": "2538:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2546:4:1",
														"nodeType": "YulTypedName",
														"src": "2546:4:1",
														"type": ""
													}
												],
												"src": "2470:166:1"
											},
											{
												"body": {
													"nativeSrc": "2737:1203:1",
													"nodeType": "YulBlock",
													"src": "2737:1203:1",
													"statements": [
														{
															"nativeSrc": "2747:24:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2747:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2767:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2767:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2761:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2761:5:1"
																},
																"nativeSrc": "2761:10:1",
																"nodeType": "YulFunctionCall",
																"src": "2761:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2751:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2751:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2814:22:1",
																"nodeType": "YulBlock",
																"src": "2814:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2816:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "2816:16:1"
																			},
																			"nativeSrc": "2816:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2816:18:1"
																		},
																		"nativeSrc": "2816:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2816:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2786:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2786:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2802:2:1",
																						"nodeType": "YulLiteral",
																						"src": "2802:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2806:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2806:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2798:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2798:3:1"
																				},
																				"nativeSrc": "2798:10:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2798:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2810:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2810:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2794:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2794:3:1"
																		},
																		"nativeSrc": "2794:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2794:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2783:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2783:2:1"
																},
																"nativeSrc": "2783:30:1",
																"nodeType": "YulFunctionCall",
																"src": "2783:30:1"
															},
															"nativeSrc": "2780:56:1",
															"nodeType": "YulIf",
															"src": "2780:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2889:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2889:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2927:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "2927:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2921:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2921:5:1"
																				},
																				"nativeSrc": "2921:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2921:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2895:25:1",
																			"nodeType": "YulIdentifier",
																			"src": "2895:25:1"
																		},
																		"nativeSrc": "2895:38:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2895:38:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2935:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2845:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "2845:43:1"
																},
																"nativeSrc": "2845:97:1",
																"nodeType": "YulFunctionCall",
																"src": "2845:97:1"
															},
															"nativeSrc": "2845:97:1",
															"nodeType": "YulExpressionStatement",
															"src": "2845:97:1"
														},
														{
															"nativeSrc": "2951:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2951:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2968:1:1",
																"nodeType": "YulLiteral",
																"src": "2968:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2955:9:1",
																	"nodeType": "YulTypedName",
																	"src": "2955:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2978:17:1",
															"nodeType": "YulAssignment",
															"src": "2978:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2991:4:1",
																"nodeType": "YulLiteral",
																"src": "2991:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2978:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2978:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3041:642:1",
																		"nodeType": "YulBlock",
																		"src": "3041:642:1",
																		"statements": [
																			{
																				"nativeSrc": "3055:35:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3055:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3074:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "3074:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3086:2:1",
																									"nodeType": "YulLiteral",
																									"src": "3086:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3082:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "3082:3:1"
																							},
																							"nativeSrc": "3082:7:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3082:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3070:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3070:3:1"
																					},
																					"nativeSrc": "3070:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3070:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3059:7:1",
																						"nodeType": "YulTypedName",
																						"src": "3059:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3103:49:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3103:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3147:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "3147:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3117:29:1",
																						"nodeType": "YulIdentifier",
																						"src": "3117:29:1"
																					},
																					"nativeSrc": "3117:35:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3117:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3107:6:1",
																						"nodeType": "YulTypedName",
																						"src": "3107:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3165:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3165:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3174:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3169:1:1",
																						"nodeType": "YulTypedName",
																						"src": "3169:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3245:165:1",
																					"nodeType": "YulBlock",
																					"src": "3245:165:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3270:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "3270:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3288:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "3288:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3293:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "3293:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3284:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "3284:3:1"
																												},
																												"nativeSrc": "3284:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "3284:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3278:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "3278:5:1"
																										},
																										"nativeSrc": "3278:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "3278:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3263:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "3263:6:1"
																								},
																								"nativeSrc": "3263:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3263:42:1"
																							},
																							"nativeSrc": "3263:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "3263:42:1"
																						},
																						{
																							"nativeSrc": "3322:24:1",
																							"nodeType": "YulAssignment",
																							"src": "3322:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3336:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "3336:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3344:1:1",
																										"nodeType": "YulLiteral",
																										"src": "3344:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3332:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "3332:3:1"
																								},
																								"nativeSrc": "3332:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3332:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3322:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "3322:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3363:33:1",
																							"nodeType": "YulAssignment",
																							"src": "3363:33:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3380:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "3380:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3391:4:1",
																										"nodeType": "YulLiteral",
																										"src": "3391:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3376:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "3376:3:1"
																								},
																								"nativeSrc": "3376:20:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3376:20:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3363:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "3363:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3199:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "3199:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3202:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "3202:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3196:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "3196:2:1"
																					},
																					"nativeSrc": "3196:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3196:14:1"
																				},
																				"nativeSrc": "3188:222:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3211:21:1",
																					"nodeType": "YulBlock",
																					"src": "3211:21:1",
																					"statements": [
																						{
																							"nativeSrc": "3213:17:1",
																							"nodeType": "YulAssignment",
																							"src": "3213:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3222:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "3222:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3225:4:1",
																										"nodeType": "YulLiteral",
																										"src": "3225:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3218:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "3218:3:1"
																								},
																								"nativeSrc": "3218:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3218:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3213:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "3213:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3192:3:1",
																					"nodeType": "YulBlock",
																					"src": "3192:3:1",
																					"statements": []
																				},
																				"src": "3188:222:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "3458:166:1",
																					"nodeType": "YulBlock",
																					"src": "3458:166:1",
																					"statements": [
																						{
																							"nativeSrc": "3476:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3476:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3503:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "3503:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3508:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "3508:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3499:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "3499:3:1"
																										},
																										"nativeSrc": "3499:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "3499:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3493:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "3493:5:1"
																								},
																								"nativeSrc": "3493:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3493:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3480:9:1",
																									"nodeType": "YulTypedName",
																									"src": "3480:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3543:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "3543:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3555:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "3555:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3582:1:1",
																																				"nodeType": "YulLiteral",
																																				"src": "3582:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3585:6:1",
																																				"nodeType": "YulIdentifier",
																																				"src": "3585:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3578:3:1",
																																			"nodeType": "YulIdentifier",
																																			"src": "3578:3:1"
																																		},
																																		"nativeSrc": "3578:14:1",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3578:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3594:3:1",
																																		"nodeType": "YulLiteral",
																																		"src": "3594:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3574:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "3574:3:1"
																																},
																																"nativeSrc": "3574:24:1",
																																"nodeType": "YulFunctionCall",
																																"src": "3574:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3604:1:1",
																																		"nodeType": "YulLiteral",
																																		"src": "3604:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3600:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "3600:3:1"
																																},
																																"nativeSrc": "3600:6:1",
																																"nodeType": "YulFunctionCall",
																																"src": "3600:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3570:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "3570:3:1"
																														},
																														"nativeSrc": "3570:37:1",
																														"nodeType": "YulFunctionCall",
																														"src": "3570:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3566:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "3566:3:1"
																												},
																												"nativeSrc": "3566:42:1",
																												"nodeType": "YulFunctionCall",
																												"src": "3566:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3551:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "3551:3:1"
																										},
																										"nativeSrc": "3551:58:1",
																										"nodeType": "YulFunctionCall",
																										"src": "3551:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3536:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "3536:6:1"
																								},
																								"nativeSrc": "3536:74:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3536:74:1"
																							},
																							"nativeSrc": "3536:74:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "3536:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3429:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "3429:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3438:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "3438:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3426:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "3426:2:1"
																					},
																					"nativeSrc": "3426:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3426:19:1"
																				},
																				"nativeSrc": "3423:201:1",
																				"nodeType": "YulIf",
																				"src": "3423:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3644:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "3644:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3658:1:1",
																											"nodeType": "YulLiteral",
																											"src": "3658:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3661:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "3661:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3654:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "3654:3:1"
																									},
																									"nativeSrc": "3654:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "3654:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3670:1:1",
																									"nodeType": "YulLiteral",
																									"src": "3670:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3650:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "3650:3:1"
																							},
																							"nativeSrc": "3650:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3650:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3637:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3637:6:1"
																					},
																					"nativeSrc": "3637:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3637:36:1"
																				},
																				"nativeSrc": "3637:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "3637:36:1"
																			}
																		]
																	},
																	"nativeSrc": "3034:649:1",
																	"nodeType": "YulCase",
																	"src": "3034:649:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3039:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3039:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3700:234:1",
																		"nodeType": "YulBlock",
																		"src": "3700:234:1",
																		"statements": [
																			{
																				"nativeSrc": "3714:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3714:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3727:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3727:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3718:5:1",
																						"nodeType": "YulTypedName",
																						"src": "3718:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3763:67:1",
																					"nodeType": "YulBlock",
																					"src": "3763:67:1",
																					"statements": [
																						{
																							"nativeSrc": "3781:35:1",
																							"nodeType": "YulAssignment",
																							"src": "3781:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3800:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "3800:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3805:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "3805:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3796:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "3796:3:1"
																										},
																										"nativeSrc": "3796:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "3796:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3790:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "3790:5:1"
																								},
																								"nativeSrc": "3790:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3790:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3781:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "3781:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3744:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "3744:6:1"
																				},
																				"nativeSrc": "3741:89:1",
																				"nodeType": "YulIf",
																				"src": "3741:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3850:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "3850:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3909:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "3909:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3916:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "3916:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3856:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "3856:52:1"
																							},
																							"nativeSrc": "3856:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3856:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3843:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3843:6:1"
																					},
																					"nativeSrc": "3843:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3843:81:1"
																				},
																				"nativeSrc": "3843:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "3843:81:1"
																			}
																		]
																	},
																	"nativeSrc": "3692:242:1",
																	"nodeType": "YulCase",
																	"src": "3692:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3014:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3014:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3022:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3022:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3011:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3011:2:1"
																},
																"nativeSrc": "3011:14:1",
																"nodeType": "YulFunctionCall",
																"src": "3011:14:1"
															},
															"nativeSrc": "3004:930:1",
															"nodeType": "YulSwitch",
															"src": "3004:930:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2641:1299:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2722:4:1",
														"nodeType": "YulTypedName",
														"src": "2722:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2728:3:1",
														"nodeType": "YulTypedName",
														"src": "2728:3:1",
														"type": ""
													}
												],
												"src": "2641:1299:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        mcopy(add(memPtr, 0x20), add(offset, 0x20), length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610ab6380380610ab683398101604081905261002e916100ec565b600361003a83826101d5565b50600461004782826101d5565b50505061028f565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112610072575f80fd5b81516001600160401b0381111561008b5761008b61004f565b604051601f8201601f19908116603f011681016001600160401b03811182821017156100b9576100b961004f565b6040528181528382016020018510156100d0575f80fd5b8160208501602083015e5f918101602001919091529392505050565b5f80604083850312156100fd575f80fd5b82516001600160401b03811115610112575f80fd5b61011e85828601610063565b602085015190935090506001600160401b0381111561013b575f80fd5b61014785828601610063565b9150509250929050565b600181811c9082168061016557607f821691505b60208210810361018357634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156101d057805f5260205f20601f840160051c810160208510156101ae5750805b601f840160051c820191505b818110156101cd575f81556001016101ba565b50505b505050565b81516001600160401b038111156101ee576101ee61004f565b610202816101fc8454610151565b84610189565b6020601f821160018114610234575f831561021d5750848201515b5f19600385901b1c1916600184901b1784556101cd565b5f84815260208120601f198516915b828110156102635787850151825560209485019460019092019101610243565b508482101561028057868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b61081a8061029c5f395ff3fe608060405234801561000f575f80fd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f80fd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f80fd5b6100b261019b565b6040516100bf919061068a565b60405180910390f35b6100db6100d63660046106da565b61022b565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b366004610702565b610244565b604051601281526020016100bf565b6100db61012d3660046106da565b610267565b6100ef61014036600461073c565b6001600160a01b03165f9081526020819052604090205490565b6100b2610288565b6100db6101703660046106da565b610297565b6100db6101833660046106da565b610316565b6100ef61019636600461075c565b610323565b6060600380546101aa9061078d565b80601f01602080910402602001604051908101604052809291908181526020018280546101d69061078d565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b61028391906107c5565b61034d565b6060600480546101aa9061078d565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260208190526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104e2565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146106d5575f80fd5b919050565b5f80604083850312156106eb575f80fd5b6106f4836106bf565b946020939093013593505050565b5f805f60608486031215610714575f80fd5b61071d846106bf565b925061072b602085016106bf565b929592945050506040919091013590565b5f6020828403121561074c575f80fd5b610755826106bf565b9392505050565b5f806040838503121561076d575f80fd5b610776836106bf565b9150610784602084016106bf565b90509250929050565b600181811c908216806107a157607f821691505b6020821081036107bf57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea2646970667358221220a4699444d16448633b90ed13bcf376e530ed11885d3aad5e910f86fca66a93a264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xAB6 CODESIZE SUB DUP1 PUSH2 0xAB6 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xEC JUMP JUMPDEST PUSH1 0x3 PUSH2 0x3A DUP4 DUP3 PUSH2 0x1D5 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x47 DUP3 DUP3 PUSH2 0x1D5 JUMP JUMPDEST POP POP POP PUSH2 0x28F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x72 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x8B JUMPI PUSH2 0x8B PUSH2 0x4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xB9 JUMPI PUSH2 0xB9 PUSH2 0x4F JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0xD0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD MCOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x112 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11E DUP6 DUP3 DUP7 ADD PUSH2 0x63 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x13B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x147 DUP6 DUP3 DUP7 ADD PUSH2 0x63 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x165 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x183 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1D0 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1AE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1CD JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1BA JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1EE JUMPI PUSH2 0x1EE PUSH2 0x4F JUMP JUMPDEST PUSH2 0x202 DUP2 PUSH2 0x1FC DUP5 SLOAD PUSH2 0x151 JUMP JUMPDEST DUP5 PUSH2 0x189 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x234 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x21D JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1CD JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x263 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x243 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x280 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x81A DUP1 PUSH2 0x29C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x702 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x75C JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x78D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x78D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x78D JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6EB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6F4 DUP4 PUSH2 0x6BF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x714 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x71D DUP5 PUSH2 0x6BF JUMP JUMPDEST SWAP3 POP PUSH2 0x72B PUSH1 0x20 DUP6 ADD PUSH2 0x6BF JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x74C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x755 DUP3 PUSH2 0x6BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x76D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x776 DUP4 PUSH2 0x6BF JUMP JUMPDEST SWAP2 POP PUSH2 0x784 PUSH1 0x20 DUP5 ADD PUSH2 0x6BF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7A1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 PUSH10 0x9444D16448633B90ED13 0xBC RETURN PUSH23 0xE530ED11885D3AAD5E910F86FCA66A93A264736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "9931:11964:0:-:0;;;10525:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10592:5;:13;10600:5;10592;:13;:::i;:::-;-1:-1:-1;10616:7:0;:17;10626:7;10616;:17;:::i;:::-;;10525:116;;9931:11964;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:723;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:1;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:1;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:1;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:1;;;725:1;722;715:12;670:59;782:6;775:4;767:6;763:17;756:4;748:6;744:17;738:51;837:1;809:19;;;830:4;805:30;798:41;;;;813:6;146:723;-1:-1:-1;;;146:723:1:o;874:557::-;973:6;981;1034:2;1022:9;1013:7;1009:23;1005:32;1002:52;;;1050:1;1047;1040:12;1002:52;1077:16;;-1:-1:-1;;;;;1105:30:1;;1102:50;;;1148:1;1145;1138:12;1102:50;1171:61;1224:7;1215:6;1204:9;1200:22;1171:61;:::i;:::-;1278:2;1263:18;;1257:25;1161:71;;-1:-1:-1;1257:25:1;-1:-1:-1;;;;;;1294:32:1;;1291:52;;;1339:1;1336;1329:12;1291:52;1362:63;1417:7;1406:8;1395:9;1391:24;1362:63;:::i;:::-;1352:73;;;874:557;;;;;:::o;1436:380::-;1515:1;1511:12;;;;1558;;;1579:61;;1633:4;1625:6;1621:17;1611:27;;1579:61;1686:2;1678:6;1675:14;1655:18;1652:38;1649:161;;1732:10;1727:3;1723:20;1720:1;1713:31;1767:4;1764:1;1757:15;1795:4;1792:1;1785:15;1649:161;;1436:380;;;:::o;1947:518::-;2049:2;2044:3;2041:11;2038:421;;;2085:5;2082:1;2075:16;2129:4;2126:1;2116:18;2199:2;2187:10;2183:19;2180:1;2176:27;2170:4;2166:38;2235:4;2223:10;2220:20;2217:47;;;-1:-1:-1;2258:4:1;2217:47;2313:2;2308:3;2304:12;2301:1;2297:20;2291:4;2287:31;2277:41;;2368:81;2386:2;2379:5;2376:13;2368:81;;;2445:1;2431:16;;2412:1;2401:13;2368:81;;;2372:3;;2038:421;1947:518;;;:::o;2641:1299::-;2761:10;;-1:-1:-1;;;;;2783:30:1;;2780:56;;;2816:18;;:::i;:::-;2845:97;2935:6;2895:38;2927:4;2921:11;2895:38;:::i;:::-;2889:4;2845:97;:::i;:::-;2991:4;3022:2;3011:14;;3039:1;3034:649;;;;3727:1;3744:6;3741:89;;;-1:-1:-1;3796:19:1;;;3790:26;3741:89;-1:-1:-1;;2598:1:1;2594:11;;;2590:24;2586:29;2576:40;2622:1;2618:11;;;2573:57;3843:81;;3004:930;;3034:649;1894:1;1887:14;;;1931:4;1918:18;;-1:-1:-1;;3070:20:1;;;3188:222;3202:7;3199:1;3196:14;3188:222;;;3284:19;;;3278:26;3263:42;;3391:4;3376:20;;;;3344:1;3332:14;;;;3218:12;3188:222;;;3192:3;3438:6;3429:7;3426:19;3423:201;;;3499:19;;;3493:26;-1:-1:-1;;3582:1:1;3578:14;;;3594:3;3574:24;3570:37;3566:42;3551:58;3536:74;;3423:201;-1:-1:-1;;;;3670:1:1;3654:14;;;3650:22;3637:36;;-1:-1:-1;2641:1299:1:o;:::-;9931:11964:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_814": {
									"entryPoint": null,
									"id": 814,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_749": {
									"entryPoint": 845,
									"id": 749,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_803": {
									"entryPoint": null,
									"id": 803,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_792": {
									"entryPoint": 1136,
									"id": 792,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_575": {
									"entryPoint": 1256,
									"id": 575,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_370": {
									"entryPoint": 803,
									"id": 370,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_395": {
									"entryPoint": 555,
									"id": 395,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_327": {
									"entryPoint": null,
									"id": 327,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_303": {
									"entryPoint": null,
									"id": 303,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_498": {
									"entryPoint": 663,
									"id": 498,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_457": {
									"entryPoint": 615,
									"id": 457,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_283": {
									"entryPoint": 411,
									"id": 283,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_293": {
									"entryPoint": 648,
									"id": 293,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_313": {
									"entryPoint": null,
									"id": 313,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_428": {
									"entryPoint": 580,
									"id": 428,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_352": {
									"entryPoint": 790,
									"id": 352,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5716:1",
										"nodeType": "YulBlock",
										"src": "0:5716:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:1",
													"nodeType": "YulBlock",
													"src": "135:297:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:1",
																		"nodeType": "YulLiteral",
																		"src": "163:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:1"
																},
																"nativeSrc": "145:21:1",
																"nodeType": "YulFunctionCall",
																"src": "145:21:1"
															},
															"nativeSrc": "145:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:1"
														},
														{
															"nativeSrc": "175:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:1"
																},
																"nativeSrc": "189:13:1",
																"nodeType": "YulFunctionCall",
																"src": "189:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:1",
																	"nodeType": "YulTypedName",
																	"src": "179:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:1",
																				"nodeType": "YulLiteral",
																				"src": "233:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:1"
																		},
																		"nativeSrc": "218:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:1"
																},
																"nativeSrc": "211:34:1",
																"nodeType": "YulFunctionCall",
																"src": "211:34:1"
															},
															"nativeSrc": "211:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:1",
																				"nodeType": "YulLiteral",
																				"src": "275:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:1"
																		},
																		"nativeSrc": "260:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:1",
																				"nodeType": "YulLiteral",
																				"src": "292:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:1"
																		},
																		"nativeSrc": "280:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:1"
																},
																"nativeSrc": "254:50:1",
																"nodeType": "YulFunctionCall",
																"src": "254:50:1"
															},
															"nativeSrc": "254:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:1"
																				},
																				"nativeSrc": "324:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:1",
																				"nodeType": "YulLiteral",
																				"src": "348:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:1"
																		},
																		"nativeSrc": "320:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:1",
																		"nodeType": "YulLiteral",
																		"src": "353:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:1"
																},
																"nativeSrc": "313:42:1",
																"nodeType": "YulFunctionCall",
																"src": "313:42:1"
															},
															"nativeSrc": "313:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:1"
														},
														{
															"nativeSrc": "364:62:1",
															"nodeType": "YulAssignment",
															"src": "364:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:1",
																								"nodeType": "YulLiteral",
																								"src": "407:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:1"
																						},
																						"nativeSrc": "395:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:1",
																								"nodeType": "YulLiteral",
																								"src": "416:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:1"
																						},
																						"nativeSrc": "412:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:1"
																				},
																				"nativeSrc": "391:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:1"
																		},
																		"nativeSrc": "376:45:1",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:1",
																		"nodeType": "YulLiteral",
																		"src": "423:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:1"
																},
																"nativeSrc": "372:54:1",
																"nodeType": "YulFunctionCall",
																"src": "372:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:1",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:1",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:1",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:418:1"
											},
											{
												"body": {
													"nativeSrc": "486:124:1",
													"nodeType": "YulBlock",
													"src": "486:124:1",
													"statements": [
														{
															"nativeSrc": "496:29:1",
															"nodeType": "YulAssignment",
															"src": "496:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "518:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "518:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "505:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "505:12:1"
																},
																"nativeSrc": "505:20:1",
																"nodeType": "YulFunctionCall",
																"src": "505:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "496:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "588:16:1",
																"nodeType": "YulBlock",
																"src": "588:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "597:1:1",
																					"nodeType": "YulLiteral",
																					"src": "597:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "600:1:1",
																					"nodeType": "YulLiteral",
																					"src": "600:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "590:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "590:6:1"
																			},
																			"nativeSrc": "590:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "590:12:1"
																		},
																		"nativeSrc": "590:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "590:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "547:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "547:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "558:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "558:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "573:3:1",
																										"nodeType": "YulLiteral",
																										"src": "573:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "578:1:1",
																										"nodeType": "YulLiteral",
																										"src": "578:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "569:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "569:3:1"
																								},
																								"nativeSrc": "569:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "569:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "582:1:1",
																								"nodeType": "YulLiteral",
																								"src": "582:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "565:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "565:3:1"
																						},
																						"nativeSrc": "565:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "565:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "554:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "554:3:1"
																				},
																				"nativeSrc": "554:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "554:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "544:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "544:2:1"
																		},
																		"nativeSrc": "544:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "544:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "537:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:1"
																},
																"nativeSrc": "537:50:1",
																"nodeType": "YulFunctionCall",
																"src": "537:50:1"
															},
															"nativeSrc": "534:70:1",
															"nodeType": "YulIf",
															"src": "534:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "437:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "465:6:1",
														"nodeType": "YulTypedName",
														"src": "465:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "476:5:1",
														"nodeType": "YulTypedName",
														"src": "476:5:1",
														"type": ""
													}
												],
												"src": "437:173:1"
											},
											{
												"body": {
													"nativeSrc": "702:213:1",
													"nodeType": "YulBlock",
													"src": "702:213:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "748:16:1",
																"nodeType": "YulBlock",
																"src": "748:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "757:1:1",
																					"nodeType": "YulLiteral",
																					"src": "757:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "760:1:1",
																					"nodeType": "YulLiteral",
																					"src": "760:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "750:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:1"
																			},
																			"nativeSrc": "750:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "750:12:1"
																		},
																		"nativeSrc": "750:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "750:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "723:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "723:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "732:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "732:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "719:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:1"
																		},
																		"nativeSrc": "719:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "719:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "744:2:1",
																		"nodeType": "YulLiteral",
																		"src": "744:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "715:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "715:3:1"
																},
																"nativeSrc": "715:32:1",
																"nodeType": "YulFunctionCall",
																"src": "715:32:1"
															},
															"nativeSrc": "712:52:1",
															"nodeType": "YulIf",
															"src": "712:52:1"
														},
														{
															"nativeSrc": "773:39:1",
															"nodeType": "YulAssignment",
															"src": "773:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "783:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "783:18:1"
																},
																"nativeSrc": "783:29:1",
																"nodeType": "YulFunctionCall",
																"src": "783:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "773:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:1"
																}
															]
														},
														{
															"nativeSrc": "821:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "821:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "834:1:1",
																"nodeType": "YulLiteral",
																"src": "834:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "825:5:1",
																	"nodeType": "YulTypedName",
																	"src": "825:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "844:41:1",
															"nodeType": "YulAssignment",
															"src": "844:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "870:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "870:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "881:2:1",
																				"nodeType": "YulLiteral",
																				"src": "881:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "866:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "866:3:1"
																		},
																		"nativeSrc": "866:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "866:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "853:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "853:12:1"
																},
																"nativeSrc": "853:32:1",
																"nodeType": "YulFunctionCall",
																"src": "853:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "844:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "844:5:1"
																}
															]
														},
														{
															"nativeSrc": "894:15:1",
															"nodeType": "YulAssignment",
															"src": "894:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "904:5:1",
																"nodeType": "YulIdentifier",
																"src": "904:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "894:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "615:300:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "660:9:1",
														"nodeType": "YulTypedName",
														"src": "660:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "671:7:1",
														"nodeType": "YulTypedName",
														"src": "671:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "683:6:1",
														"nodeType": "YulTypedName",
														"src": "683:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "691:6:1",
														"nodeType": "YulTypedName",
														"src": "691:6:1",
														"type": ""
													}
												],
												"src": "615:300:1"
											},
											{
												"body": {
													"nativeSrc": "1015:92:1",
													"nodeType": "YulBlock",
													"src": "1015:92:1",
													"statements": [
														{
															"nativeSrc": "1025:26:1",
															"nodeType": "YulAssignment",
															"src": "1025:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1037:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1037:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1048:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1033:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1033:3:1"
																},
																"nativeSrc": "1033:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1033:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1025:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1025:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1067:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1092:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1092:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1085:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1085:6:1"
																				},
																				"nativeSrc": "1085:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1085:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1078:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1078:6:1"
																		},
																		"nativeSrc": "1078:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1078:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1060:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:1"
																},
																"nativeSrc": "1060:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1060:41:1"
															},
															"nativeSrc": "1060:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "1060:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "920:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "984:9:1",
														"nodeType": "YulTypedName",
														"src": "984:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "995:6:1",
														"nodeType": "YulTypedName",
														"src": "995:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1006:4:1",
														"nodeType": "YulTypedName",
														"src": "1006:4:1",
														"type": ""
													}
												],
												"src": "920:187:1"
											},
											{
												"body": {
													"nativeSrc": "1213:76:1",
													"nodeType": "YulBlock",
													"src": "1213:76:1",
													"statements": [
														{
															"nativeSrc": "1223:26:1",
															"nodeType": "YulAssignment",
															"src": "1223:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1235:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1235:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1246:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1246:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1231:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1231:3:1"
																},
																"nativeSrc": "1231:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1231:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1223:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1223:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1265:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1265:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1276:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1276:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1258:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:1"
																},
																"nativeSrc": "1258:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1258:25:1"
															},
															"nativeSrc": "1258:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "1258:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1112:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1182:9:1",
														"nodeType": "YulTypedName",
														"src": "1182:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1193:6:1",
														"nodeType": "YulTypedName",
														"src": "1193:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1204:4:1",
														"nodeType": "YulTypedName",
														"src": "1204:4:1",
														"type": ""
													}
												],
												"src": "1112:177:1"
											},
											{
												"body": {
													"nativeSrc": "1398:270:1",
													"nodeType": "YulBlock",
													"src": "1398:270:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1444:16:1",
																"nodeType": "YulBlock",
																"src": "1444:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1453:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1453:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1456:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1456:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1446:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1446:6:1"
																			},
																			"nativeSrc": "1446:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1446:12:1"
																		},
																		"nativeSrc": "1446:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1446:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1419:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1419:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1428:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1415:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1415:3:1"
																		},
																		"nativeSrc": "1415:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1415:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1440:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1440:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1411:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1411:3:1"
																},
																"nativeSrc": "1411:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1411:32:1"
															},
															"nativeSrc": "1408:52:1",
															"nodeType": "YulIf",
															"src": "1408:52:1"
														},
														{
															"nativeSrc": "1469:39:1",
															"nodeType": "YulAssignment",
															"src": "1469:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1498:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1479:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1479:18:1"
																},
																"nativeSrc": "1479:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1479:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1469:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1469:6:1"
																}
															]
														},
														{
															"nativeSrc": "1517:48:1",
															"nodeType": "YulAssignment",
															"src": "1517:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1550:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1550:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1561:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1561:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1546:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1546:3:1"
																		},
																		"nativeSrc": "1546:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1546:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1527:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1527:18:1"
																},
																"nativeSrc": "1527:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1527:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1517:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1517:6:1"
																}
															]
														},
														{
															"nativeSrc": "1574:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1574:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1587:1:1",
																"nodeType": "YulLiteral",
																"src": "1587:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1578:5:1",
																	"nodeType": "YulTypedName",
																	"src": "1578:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1597:41:1",
															"nodeType": "YulAssignment",
															"src": "1597:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1623:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1623:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1634:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1634:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1619:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1619:3:1"
																		},
																		"nativeSrc": "1619:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1619:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1606:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1606:12:1"
																},
																"nativeSrc": "1606:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1606:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1597:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1597:5:1"
																}
															]
														},
														{
															"nativeSrc": "1647:15:1",
															"nodeType": "YulAssignment",
															"src": "1647:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "1657:5:1",
																"nodeType": "YulIdentifier",
																"src": "1657:5:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1647:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1647:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1294:374:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1348:9:1",
														"nodeType": "YulTypedName",
														"src": "1348:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1359:7:1",
														"nodeType": "YulTypedName",
														"src": "1359:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1371:6:1",
														"nodeType": "YulTypedName",
														"src": "1371:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1379:6:1",
														"nodeType": "YulTypedName",
														"src": "1379:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1387:6:1",
														"nodeType": "YulTypedName",
														"src": "1387:6:1",
														"type": ""
													}
												],
												"src": "1294:374:1"
											},
											{
												"body": {
													"nativeSrc": "1770:87:1",
													"nodeType": "YulBlock",
													"src": "1770:87:1",
													"statements": [
														{
															"nativeSrc": "1780:26:1",
															"nodeType": "YulAssignment",
															"src": "1780:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1792:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1792:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1803:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1803:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1788:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1788:3:1"
																},
																"nativeSrc": "1788:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1788:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1780:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1780:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1822:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1822:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1837:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1837:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1845:4:1",
																				"nodeType": "YulLiteral",
																				"src": "1845:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1833:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1833:3:1"
																		},
																		"nativeSrc": "1833:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1833:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1815:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1815:6:1"
																},
																"nativeSrc": "1815:36:1",
																"nodeType": "YulFunctionCall",
																"src": "1815:36:1"
															},
															"nativeSrc": "1815:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "1815:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1673:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1739:9:1",
														"nodeType": "YulTypedName",
														"src": "1739:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1750:6:1",
														"nodeType": "YulTypedName",
														"src": "1750:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1761:4:1",
														"nodeType": "YulTypedName",
														"src": "1761:4:1",
														"type": ""
													}
												],
												"src": "1673:184:1"
											},
											{
												"body": {
													"nativeSrc": "1932:116:1",
													"nodeType": "YulBlock",
													"src": "1932:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1978:16:1",
																"nodeType": "YulBlock",
																"src": "1978:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1987:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1987:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1990:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1990:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1980:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1980:6:1"
																			},
																			"nativeSrc": "1980:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1980:12:1"
																		},
																		"nativeSrc": "1980:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1980:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1953:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1953:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1962:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1962:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1949:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1949:3:1"
																		},
																		"nativeSrc": "1949:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1949:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1974:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1974:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1945:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1945:3:1"
																},
																"nativeSrc": "1945:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1945:32:1"
															},
															"nativeSrc": "1942:52:1",
															"nodeType": "YulIf",
															"src": "1942:52:1"
														},
														{
															"nativeSrc": "2003:39:1",
															"nodeType": "YulAssignment",
															"src": "2003:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2032:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2032:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2013:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2013:18:1"
																},
																"nativeSrc": "2013:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2013:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2003:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2003:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1862:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1898:9:1",
														"nodeType": "YulTypedName",
														"src": "1898:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1909:7:1",
														"nodeType": "YulTypedName",
														"src": "1909:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1921:6:1",
														"nodeType": "YulTypedName",
														"src": "1921:6:1",
														"type": ""
													}
												],
												"src": "1862:186:1"
											},
											{
												"body": {
													"nativeSrc": "2140:173:1",
													"nodeType": "YulBlock",
													"src": "2140:173:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2186:16:1",
																"nodeType": "YulBlock",
																"src": "2186:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2195:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2195:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2198:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2198:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2188:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2188:6:1"
																			},
																			"nativeSrc": "2188:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2188:12:1"
																		},
																		"nativeSrc": "2188:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2188:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2161:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2161:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2170:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2170:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2157:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2157:3:1"
																		},
																		"nativeSrc": "2157:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2157:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2182:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2182:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2153:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:1"
																},
																"nativeSrc": "2153:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2153:32:1"
															},
															"nativeSrc": "2150:52:1",
															"nodeType": "YulIf",
															"src": "2150:52:1"
														},
														{
															"nativeSrc": "2211:39:1",
															"nodeType": "YulAssignment",
															"src": "2211:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2240:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2240:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2221:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2221:18:1"
																},
																"nativeSrc": "2221:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2221:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2211:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2211:6:1"
																}
															]
														},
														{
															"nativeSrc": "2259:48:1",
															"nodeType": "YulAssignment",
															"src": "2259:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2292:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2292:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2303:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2303:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2288:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2288:3:1"
																		},
																		"nativeSrc": "2288:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2288:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2269:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2269:18:1"
																},
																"nativeSrc": "2269:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2269:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2259:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2259:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2053:260:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2098:9:1",
														"nodeType": "YulTypedName",
														"src": "2098:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2109:7:1",
														"nodeType": "YulTypedName",
														"src": "2109:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2121:6:1",
														"nodeType": "YulTypedName",
														"src": "2121:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2129:6:1",
														"nodeType": "YulTypedName",
														"src": "2129:6:1",
														"type": ""
													}
												],
												"src": "2053:260:1"
											},
											{
												"body": {
													"nativeSrc": "2373:325:1",
													"nodeType": "YulBlock",
													"src": "2373:325:1",
													"statements": [
														{
															"nativeSrc": "2383:22:1",
															"nodeType": "YulAssignment",
															"src": "2383:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2397:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2397:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2400:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2400:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2393:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2393:3:1"
																},
																"nativeSrc": "2393:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2393:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2383:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2383:6:1"
																}
															]
														},
														{
															"nativeSrc": "2414:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2414:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2444:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2444:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2450:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2450:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2440:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2440:3:1"
																},
																"nativeSrc": "2440:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2440:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2418:18:1",
																	"nodeType": "YulTypedName",
																	"src": "2418:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2491:31:1",
																"nodeType": "YulBlock",
																"src": "2491:31:1",
																"statements": [
																	{
																		"nativeSrc": "2493:27:1",
																		"nodeType": "YulAssignment",
																		"src": "2493:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2507:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2507:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2515:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2515:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2503:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2503:3:1"
																			},
																			"nativeSrc": "2503:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2503:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2493:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2493:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2471:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "2471:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2464:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2464:6:1"
																},
																"nativeSrc": "2464:26:1",
																"nodeType": "YulFunctionCall",
																"src": "2464:26:1"
															},
															"nativeSrc": "2461:61:1",
															"nodeType": "YulIf",
															"src": "2461:61:1"
														},
														{
															"body": {
																"nativeSrc": "2581:111:1",
																"nodeType": "YulBlock",
																"src": "2581:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2602:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2602:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2609:3:1",
																							"nodeType": "YulLiteral",
																							"src": "2609:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2614:10:1",
																							"nodeType": "YulLiteral",
																							"src": "2614:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2605:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2605:3:1"
																					},
																					"nativeSrc": "2605:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2605:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2595:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2595:6:1"
																			},
																			"nativeSrc": "2595:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2595:31:1"
																		},
																		"nativeSrc": "2595:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2595:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2646:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2646:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2649:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2649:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2639:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2639:6:1"
																			},
																			"nativeSrc": "2639:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2639:15:1"
																		},
																		"nativeSrc": "2639:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2639:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2674:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2674:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2677:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2677:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2667:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2667:6:1"
																			},
																			"nativeSrc": "2667:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2667:15:1"
																		},
																		"nativeSrc": "2667:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2667:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2537:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "2537:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2560:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2560:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2568:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2568:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2557:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2557:2:1"
																		},
																		"nativeSrc": "2557:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2557:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2534:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2534:2:1"
																},
																"nativeSrc": "2534:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2534:38:1"
															},
															"nativeSrc": "2531:161:1",
															"nodeType": "YulIf",
															"src": "2531:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2318:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2353:4:1",
														"nodeType": "YulTypedName",
														"src": "2353:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2362:6:1",
														"nodeType": "YulTypedName",
														"src": "2362:6:1",
														"type": ""
													}
												],
												"src": "2318:380:1"
											},
											{
												"body": {
													"nativeSrc": "2751:174:1",
													"nodeType": "YulBlock",
													"src": "2751:174:1",
													"statements": [
														{
															"nativeSrc": "2761:16:1",
															"nodeType": "YulAssignment",
															"src": "2761:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2772:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2772:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2775:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2775:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2768:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2768:3:1"
																},
																"nativeSrc": "2768:9:1",
																"nodeType": "YulFunctionCall",
																"src": "2768:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2761:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2761:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2808:111:1",
																"nodeType": "YulBlock",
																"src": "2808:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2829:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2829:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2836:3:1",
																							"nodeType": "YulLiteral",
																							"src": "2836:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2841:10:1",
																							"nodeType": "YulLiteral",
																							"src": "2841:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2832:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2832:3:1"
																					},
																					"nativeSrc": "2832:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2832:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2822:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2822:6:1"
																			},
																			"nativeSrc": "2822:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:31:1"
																		},
																		"nativeSrc": "2822:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2822:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2873:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2873:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2876:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2876:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2866:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2866:6:1"
																			},
																			"nativeSrc": "2866:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2866:15:1"
																		},
																		"nativeSrc": "2866:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2866:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2901:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2901:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2904:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2904:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2894:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2894:6:1"
																			},
																			"nativeSrc": "2894:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2894:15:1"
																		},
																		"nativeSrc": "2894:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2894:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2792:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2792:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2795:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2795:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2789:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2789:2:1"
																},
																"nativeSrc": "2789:10:1",
																"nodeType": "YulFunctionCall",
																"src": "2789:10:1"
															},
															"nativeSrc": "2786:133:1",
															"nodeType": "YulIf",
															"src": "2786:133:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2703:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2734:1:1",
														"nodeType": "YulTypedName",
														"src": "2734:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2737:1:1",
														"nodeType": "YulTypedName",
														"src": "2737:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2743:3:1",
														"nodeType": "YulTypedName",
														"src": "2743:3:1",
														"type": ""
													}
												],
												"src": "2703:222:1"
											},
											{
												"body": {
													"nativeSrc": "3104:227:1",
													"nodeType": "YulBlock",
													"src": "3104:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3121:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3121:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3132:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3132:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3114:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3114:6:1"
																},
																"nativeSrc": "3114:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3114:21:1"
															},
															"nativeSrc": "3114:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "3114:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3155:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3155:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3166:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3166:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3151:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3151:3:1"
																		},
																		"nativeSrc": "3151:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3151:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3171:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3171:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3144:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3144:6:1"
																},
																"nativeSrc": "3144:30:1",
																"nodeType": "YulFunctionCall",
																"src": "3144:30:1"
															},
															"nativeSrc": "3144:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "3144:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3194:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3194:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3205:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3205:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3190:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3190:3:1"
																		},
																		"nativeSrc": "3190:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3190:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "3210:34:1",
																		"nodeType": "YulLiteral",
																		"src": "3210:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3183:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3183:6:1"
																},
																"nativeSrc": "3183:62:1",
																"nodeType": "YulFunctionCall",
																"src": "3183:62:1"
															},
															"nativeSrc": "3183:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "3183:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3265:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3265:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3276:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3276:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3261:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3261:3:1"
																		},
																		"nativeSrc": "3261:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3261:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "3281:7:1",
																		"nodeType": "YulLiteral",
																		"src": "3281:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3254:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3254:6:1"
																},
																"nativeSrc": "3254:35:1",
																"nodeType": "YulFunctionCall",
																"src": "3254:35:1"
															},
															"nativeSrc": "3254:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "3254:35:1"
														},
														{
															"nativeSrc": "3298:27:1",
															"nodeType": "YulAssignment",
															"src": "3298:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3310:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3310:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3321:3:1",
																		"nodeType": "YulLiteral",
																		"src": "3321:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3306:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3306:3:1"
																},
																"nativeSrc": "3306:19:1",
																"nodeType": "YulFunctionCall",
																"src": "3306:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3298:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3298:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2930:401:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3081:9:1",
														"nodeType": "YulTypedName",
														"src": "3081:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3095:4:1",
														"nodeType": "YulTypedName",
														"src": "3095:4:1",
														"type": ""
													}
												],
												"src": "2930:401:1"
											},
											{
												"body": {
													"nativeSrc": "3510:226:1",
													"nodeType": "YulBlock",
													"src": "3510:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3527:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3527:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3538:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3538:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3520:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3520:6:1"
																},
																"nativeSrc": "3520:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3520:21:1"
															},
															"nativeSrc": "3520:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "3520:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3561:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3561:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3572:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3572:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3557:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:1"
																		},
																		"nativeSrc": "3557:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3557:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3577:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3577:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3550:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3550:6:1"
																},
																"nativeSrc": "3550:30:1",
																"nodeType": "YulFunctionCall",
																"src": "3550:30:1"
															},
															"nativeSrc": "3550:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "3550:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3600:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3600:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3611:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3611:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3596:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3596:3:1"
																		},
																		"nativeSrc": "3596:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3596:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "3616:34:1",
																		"nodeType": "YulLiteral",
																		"src": "3616:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3589:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:1"
																},
																"nativeSrc": "3589:62:1",
																"nodeType": "YulFunctionCall",
																"src": "3589:62:1"
															},
															"nativeSrc": "3589:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "3589:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3671:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3671:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3682:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3682:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3667:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3667:3:1"
																		},
																		"nativeSrc": "3667:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3667:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "3687:6:1",
																		"nodeType": "YulLiteral",
																		"src": "3687:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3660:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3660:6:1"
																},
																"nativeSrc": "3660:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3660:34:1"
															},
															"nativeSrc": "3660:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3660:34:1"
														},
														{
															"nativeSrc": "3703:27:1",
															"nodeType": "YulAssignment",
															"src": "3703:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3715:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3715:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3726:3:1",
																		"nodeType": "YulLiteral",
																		"src": "3726:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3711:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3711:3:1"
																},
																"nativeSrc": "3711:19:1",
																"nodeType": "YulFunctionCall",
																"src": "3711:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3703:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3703:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3336:400:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3487:9:1",
														"nodeType": "YulTypedName",
														"src": "3487:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3501:4:1",
														"nodeType": "YulTypedName",
														"src": "3501:4:1",
														"type": ""
													}
												],
												"src": "3336:400:1"
											},
											{
												"body": {
													"nativeSrc": "3915:224:1",
													"nodeType": "YulBlock",
													"src": "3915:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3932:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3932:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3943:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3943:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3925:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3925:6:1"
																},
																"nativeSrc": "3925:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3925:21:1"
															},
															"nativeSrc": "3925:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "3925:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3966:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3966:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3977:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3977:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3962:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3962:3:1"
																		},
																		"nativeSrc": "3962:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3962:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3982:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3982:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3955:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3955:6:1"
																},
																"nativeSrc": "3955:30:1",
																"nodeType": "YulFunctionCall",
																"src": "3955:30:1"
															},
															"nativeSrc": "3955:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "3955:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4005:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4005:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4016:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4016:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4001:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4001:3:1"
																		},
																		"nativeSrc": "4001:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4001:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "4021:34:1",
																		"nodeType": "YulLiteral",
																		"src": "4021:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3994:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3994:6:1"
																},
																"nativeSrc": "3994:62:1",
																"nodeType": "YulFunctionCall",
																"src": "3994:62:1"
															},
															"nativeSrc": "3994:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "3994:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4076:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4076:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4087:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4087:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4072:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4072:3:1"
																		},
																		"nativeSrc": "4072:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4072:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "4092:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4092:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4065:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4065:6:1"
																},
																"nativeSrc": "4065:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4065:32:1"
															},
															"nativeSrc": "4065:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "4065:32:1"
														},
														{
															"nativeSrc": "4106:27:1",
															"nodeType": "YulAssignment",
															"src": "4106:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4118:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4118:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4129:3:1",
																		"nodeType": "YulLiteral",
																		"src": "4129:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4114:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4114:3:1"
																},
																"nativeSrc": "4114:19:1",
																"nodeType": "YulFunctionCall",
																"src": "4114:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4106:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4106:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3741:398:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3892:9:1",
														"nodeType": "YulTypedName",
														"src": "3892:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3906:4:1",
														"nodeType": "YulTypedName",
														"src": "3906:4:1",
														"type": ""
													}
												],
												"src": "3741:398:1"
											},
											{
												"body": {
													"nativeSrc": "4318:179:1",
													"nodeType": "YulBlock",
													"src": "4318:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4335:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4335:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4346:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4346:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4328:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4328:6:1"
																},
																"nativeSrc": "4328:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4328:21:1"
															},
															"nativeSrc": "4328:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4328:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4369:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4369:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4380:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4380:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4365:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4365:3:1"
																		},
																		"nativeSrc": "4365:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4365:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4385:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4385:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4358:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4358:6:1"
																},
																"nativeSrc": "4358:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4358:30:1"
															},
															"nativeSrc": "4358:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "4358:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4408:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4408:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4419:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4419:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4404:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4404:3:1"
																		},
																		"nativeSrc": "4404:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4404:18:1"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "4424:31:1",
																		"nodeType": "YulLiteral",
																		"src": "4424:31:1",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4397:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4397:6:1"
																},
																"nativeSrc": "4397:59:1",
																"nodeType": "YulFunctionCall",
																"src": "4397:59:1"
															},
															"nativeSrc": "4397:59:1",
															"nodeType": "YulExpressionStatement",
															"src": "4397:59:1"
														},
														{
															"nativeSrc": "4465:26:1",
															"nodeType": "YulAssignment",
															"src": "4465:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4477:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4477:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4488:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4488:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4473:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4473:3:1"
																},
																"nativeSrc": "4473:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4473:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4465:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4465:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4144:353:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4295:9:1",
														"nodeType": "YulTypedName",
														"src": "4295:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4309:4:1",
														"nodeType": "YulTypedName",
														"src": "4309:4:1",
														"type": ""
													}
												],
												"src": "4144:353:1"
											},
											{
												"body": {
													"nativeSrc": "4676:227:1",
													"nodeType": "YulBlock",
													"src": "4676:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4693:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4693:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4704:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4704:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4686:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4686:6:1"
																},
																"nativeSrc": "4686:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4686:21:1"
															},
															"nativeSrc": "4686:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4686:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4727:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4727:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4738:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4738:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4723:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4723:3:1"
																		},
																		"nativeSrc": "4723:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4723:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4743:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4743:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4716:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4716:6:1"
																},
																"nativeSrc": "4716:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4716:30:1"
															},
															"nativeSrc": "4716:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "4716:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4766:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4766:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4777:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4777:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4762:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4762:3:1"
																		},
																		"nativeSrc": "4762:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4762:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "4782:34:1",
																		"nodeType": "YulLiteral",
																		"src": "4782:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4755:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4755:6:1"
																},
																"nativeSrc": "4755:62:1",
																"nodeType": "YulFunctionCall",
																"src": "4755:62:1"
															},
															"nativeSrc": "4755:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "4755:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4837:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4837:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4848:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4848:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4833:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4833:3:1"
																		},
																		"nativeSrc": "4833:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4833:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "4853:7:1",
																		"nodeType": "YulLiteral",
																		"src": "4853:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4826:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4826:6:1"
																},
																"nativeSrc": "4826:35:1",
																"nodeType": "YulFunctionCall",
																"src": "4826:35:1"
															},
															"nativeSrc": "4826:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "4826:35:1"
														},
														{
															"nativeSrc": "4870:27:1",
															"nodeType": "YulAssignment",
															"src": "4870:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4882:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4882:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4893:3:1",
																		"nodeType": "YulLiteral",
																		"src": "4893:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4878:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4878:3:1"
																},
																"nativeSrc": "4878:19:1",
																"nodeType": "YulFunctionCall",
																"src": "4878:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4870:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4870:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4502:401:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4653:9:1",
														"nodeType": "YulTypedName",
														"src": "4653:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4667:4:1",
														"nodeType": "YulTypedName",
														"src": "4667:4:1",
														"type": ""
													}
												],
												"src": "4502:401:1"
											},
											{
												"body": {
													"nativeSrc": "5082:225:1",
													"nodeType": "YulBlock",
													"src": "5082:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5099:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5099:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5110:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5110:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5092:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5092:6:1"
																},
																"nativeSrc": "5092:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5092:21:1"
															},
															"nativeSrc": "5092:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "5092:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5133:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5133:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5144:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5144:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5129:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5129:3:1"
																		},
																		"nativeSrc": "5129:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5129:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5149:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5149:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5122:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5122:6:1"
																},
																"nativeSrc": "5122:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5122:30:1"
															},
															"nativeSrc": "5122:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "5122:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5172:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5172:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5183:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5183:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5168:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5168:3:1"
																		},
																		"nativeSrc": "5168:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "5188:34:1",
																		"nodeType": "YulLiteral",
																		"src": "5188:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5161:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5161:6:1"
																},
																"nativeSrc": "5161:62:1",
																"nodeType": "YulFunctionCall",
																"src": "5161:62:1"
															},
															"nativeSrc": "5161:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "5161:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5243:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5243:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5254:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5254:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5239:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5239:3:1"
																		},
																		"nativeSrc": "5239:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5239:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "5259:5:1",
																		"nodeType": "YulLiteral",
																		"src": "5259:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5232:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5232:6:1"
																},
																"nativeSrc": "5232:33:1",
																"nodeType": "YulFunctionCall",
																"src": "5232:33:1"
															},
															"nativeSrc": "5232:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "5232:33:1"
														},
														{
															"nativeSrc": "5274:27:1",
															"nodeType": "YulAssignment",
															"src": "5274:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5286:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5286:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5297:3:1",
																		"nodeType": "YulLiteral",
																		"src": "5297:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5282:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5282:3:1"
																},
																"nativeSrc": "5282:19:1",
																"nodeType": "YulFunctionCall",
																"src": "5282:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5274:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5274:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4908:399:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5059:9:1",
														"nodeType": "YulTypedName",
														"src": "5059:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5073:4:1",
														"nodeType": "YulTypedName",
														"src": "5073:4:1",
														"type": ""
													}
												],
												"src": "4908:399:1"
											},
											{
												"body": {
													"nativeSrc": "5486:228:1",
													"nodeType": "YulBlock",
													"src": "5486:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5503:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5503:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5514:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5514:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5496:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5496:6:1"
																},
																"nativeSrc": "5496:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5496:21:1"
															},
															"nativeSrc": "5496:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "5496:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5537:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5537:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5548:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5548:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5533:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:1"
																		},
																		"nativeSrc": "5533:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5553:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5553:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5526:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5526:6:1"
																},
																"nativeSrc": "5526:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5526:30:1"
															},
															"nativeSrc": "5526:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "5526:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5576:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5576:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5587:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5587:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5572:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5572:3:1"
																		},
																		"nativeSrc": "5572:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5572:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "5592:34:1",
																		"nodeType": "YulLiteral",
																		"src": "5592:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5565:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5565:6:1"
																},
																"nativeSrc": "5565:62:1",
																"nodeType": "YulFunctionCall",
																"src": "5565:62:1"
															},
															"nativeSrc": "5565:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "5565:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5647:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5647:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5658:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5658:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5643:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5643:3:1"
																		},
																		"nativeSrc": "5643:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5643:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "5663:8:1",
																		"nodeType": "YulLiteral",
																		"src": "5663:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5636:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5636:6:1"
																},
																"nativeSrc": "5636:36:1",
																"nodeType": "YulFunctionCall",
																"src": "5636:36:1"
															},
															"nativeSrc": "5636:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "5636:36:1"
														},
														{
															"nativeSrc": "5681:27:1",
															"nodeType": "YulAssignment",
															"src": "5681:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5693:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5693:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5704:3:1",
																		"nodeType": "YulLiteral",
																		"src": "5704:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5689:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5689:3:1"
																},
																"nativeSrc": "5689:19:1",
																"nodeType": "YulFunctionCall",
																"src": "5689:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5681:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5681:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5312:402:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5463:9:1",
														"nodeType": "YulTypedName",
														"src": "5463:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5477:4:1",
														"nodeType": "YulTypedName",
														"src": "5477:4:1",
														"type": ""
													}
												],
												"src": "5312:402:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f80fd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f80fd5b6100b261019b565b6040516100bf919061068a565b60405180910390f35b6100db6100d63660046106da565b61022b565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b366004610702565b610244565b604051601281526020016100bf565b6100db61012d3660046106da565b610267565b6100ef61014036600461073c565b6001600160a01b03165f9081526020819052604090205490565b6100b2610288565b6100db6101703660046106da565b610297565b6100db6101833660046106da565b610316565b6100ef61019636600461075c565b610323565b6060600380546101aa9061078d565b80601f01602080910402602001604051908101604052809291908181526020018280546101d69061078d565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b61028391906107c5565b61034d565b6060600480546101aa9061078d565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260208190526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104e2565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146106d5575f80fd5b919050565b5f80604083850312156106eb575f80fd5b6106f4836106bf565b946020939093013593505050565b5f805f60608486031215610714575f80fd5b61071d846106bf565b925061072b602085016106bf565b929592945050506040919091013590565b5f6020828403121561074c575f80fd5b610755826106bf565b9392505050565b5f806040838503121561076d575f80fd5b610776836106bf565b9150610784602084016106bf565b90509250929050565b600181811c908216806107a157607f821691505b6020821081036107bf57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea2646970667358221220a4699444d16448633b90ed13bcf376e530ed11885d3aad5e910f86fca66a93a264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x702 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x75C JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x78D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x78D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x78D JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6EB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6F4 DUP4 PUSH2 0x6BF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x714 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x71D DUP5 PUSH2 0x6BF JUMP JUMPDEST SWAP3 POP PUSH2 0x72B PUSH1 0x20 DUP6 ADD PUSH2 0x6BF JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x74C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x755 DUP3 PUSH2 0x6BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x76D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x776 DUP4 PUSH2 0x6BF JUMP JUMPDEST SWAP2 POP PUSH2 0x784 PUSH1 0x20 DUP5 ADD PUSH2 0x6BF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7A1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 PUSH10 0x9444D16448633B90ED13 0xBC RETURN PUSH23 0xE530ED11885D3AAD5E910F86FCA66A93A264736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "9931:11964:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10711:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13062:201;;;;;;:::i;:::-;;:::i;:::-;;;1085:14:1;;1078:22;1060:41;;1048:2;1033:18;13062:201:0;920:187:1;11831:108:0;11919:12;;11831:108;;;1258:25:1;;;1246:2;1231:18;11831:108:0;1112:177:1;13843:295:0;;;;;;:::i;:::-;;:::i;11673:93::-;;;11756:2;1815:36:1;;1803:2;1788:18;11673:93:0;1673:184:1;14547:238:0;;;;;;:::i;:::-;;:::i;12002:127::-;;;;;;:::i;:::-;-1:-1:-1;;;;;12103:18:0;12076:7;12103:18;;;;;;;;;;;;12002:127;10930:104;;;:::i;15288:436::-;;;;;;:::i;:::-;;:::i;12335:193::-;;;;;;:::i;:::-;;:::i;12591:151::-;;;;;;:::i;:::-;;:::i;10711:100::-;10765:13;10798:5;10791:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10711:100;:::o;13062:201::-;13145:4;2125:10;13201:32;2125:10;13217:7;13226:6;13201:8;:32::i;:::-;13251:4;13244:11;;;13062:201;;;;;:::o;13843:295::-;13974:4;2125:10;14032:38;14048:4;2125:10;14063:6;14032:15;:38::i;:::-;14081:27;14091:4;14097:2;14101:6;14081:9;:27::i;:::-;-1:-1:-1;14126:4:0;;13843:295;-1:-1:-1;;;;13843:295:0:o;14547:238::-;14635:4;2125:10;14691:64;2125:10;14707:7;14744:10;14716:25;2125:10;14707:7;14716:9;:25::i;:::-;:38;;;;:::i;:::-;14691:8;:64::i;10930:104::-;10986:13;11019:7;11012:14;;;;;:::i;15288:436::-;15381:4;2125:10;15381:4;15464:25;2125:10;15481:7;15464:9;:25::i;:::-;15437:52;;15528:15;15508:16;:35;;15500:85;;;;-1:-1:-1;;;15500:85:0;;3132:2:1;15500:85:0;;;3114:21:1;3171:2;3151:18;;;3144:30;3210:34;3190:18;;;3183:62;-1:-1:-1;;;3261:18:1;;;3254:35;3306:19;;15500:85:0;;;;;;;;;15621:60;15630:5;15637:7;15665:15;15646:16;:34;15621:8;:60::i;12335:193::-;12414:4;2125:10;12470:28;2125:10;12487:2;12491:6;12470:9;:28::i;12591:151::-;-1:-1:-1;;;;;12707:18:0;;;12680:7;12707:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;12591:151::o;19315:380::-;-1:-1:-1;;;;;19451:19:0;;19443:68;;;;-1:-1:-1;;;19443:68:0;;3538:2:1;19443:68:0;;;3520:21:1;3577:2;3557:18;;;3550:30;3616:34;3596:18;;;3589:62;-1:-1:-1;;;3667:18:1;;;3660:34;3711:19;;19443:68:0;3336:400:1;19443:68:0;-1:-1:-1;;;;;19530:21:0;;19522:68;;;;-1:-1:-1;;;19522:68:0;;3943:2:1;19522:68:0;;;3925:21:1;3982:2;3962:18;;;3955:30;4021:34;4001:18;;;3994:62;-1:-1:-1;;;4072:18:1;;;4065:32;4114:19;;19522:68:0;3741:398:1;19522:68:0;-1:-1:-1;;;;;19603:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;19655:32;;1258:25:1;;;19655:32:0;;1231:18:1;19655:32:0;;;;;;;19315:380;;;:::o;19986:453::-;20121:24;20148:25;20158:5;20165:7;20148:9;:25::i;:::-;20121:52;;-1:-1:-1;;20188:16:0;:37;20184:248;;20270:6;20250:16;:26;;20242:68;;;;-1:-1:-1;;;20242:68:0;;4346:2:1;20242:68:0;;;4328:21:1;4385:2;4365:18;;;4358:30;4424:31;4404:18;;;4397:59;4473:18;;20242:68:0;4144:353:1;20242:68:0;20354:51;20363:5;20370:7;20398:6;20379:16;:25;20354:8;:51::i;:::-;20110:329;19986:453;;;:::o;16194:840::-;-1:-1:-1;;;;;16325:18:0;;16317:68;;;;-1:-1:-1;;;16317:68:0;;4704:2:1;16317:68:0;;;4686:21:1;4743:2;4723:18;;;4716:30;4782:34;4762:18;;;4755:62;-1:-1:-1;;;4833:18:1;;;4826:35;4878:19;;16317:68:0;4502:401:1;16317:68:0;-1:-1:-1;;;;;16404:16:0;;16396:64;;;;-1:-1:-1;;;16396:64:0;;5110:2:1;16396:64:0;;;5092:21:1;5149:2;5129:18;;;5122:30;5188:34;5168:18;;;5161:62;-1:-1:-1;;;5239:18:1;;;5232:33;5282:19;;16396:64:0;4908:399:1;16396:64:0;-1:-1:-1;;;;;16546:15:0;;16524:19;16546:15;;;;;;;;;;;16580:21;;;;16572:72;;;;-1:-1:-1;;;16572:72:0;;5514:2:1;16572:72:0;;;5496:21:1;5553:2;5533:18;;;5526:30;5592:34;5572:18;;;5565:62;-1:-1:-1;;;5643:18:1;;;5636:36;5689:19;;16572:72:0;5312:402:1;16572:72:0;-1:-1:-1;;;;;16680:15:0;;;:9;:15;;;;;;;;;;;16698:20;;;16680:38;;16898:13;;;;;;;;;;:23;;;;;;16950:26;;1258:25:1;;;16898:13:0;;16950:26;;1231:18:1;16950:26:0;;;;;;;16989:37;21039:125;14:418:1;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:173::-;505:20;;-1:-1:-1;;;;;554:31:1;;544:42;;534:70;;600:1;597;590:12;534:70;437:173;;;:::o;615:300::-;683:6;691;744:2;732:9;723:7;719:23;715:32;712:52;;;760:1;757;750:12;712:52;783:29;802:9;783:29;:::i;:::-;773:39;881:2;866:18;;;;853:32;;-1:-1:-1;;;615:300:1:o;1294:374::-;1371:6;1379;1387;1440:2;1428:9;1419:7;1415:23;1411:32;1408:52;;;1456:1;1453;1446:12;1408:52;1479:29;1498:9;1479:29;:::i;:::-;1469:39;;1527:38;1561:2;1550:9;1546:18;1527:38;:::i;:::-;1294:374;;1517:48;;-1:-1:-1;;;1634:2:1;1619:18;;;;1606:32;;1294:374::o;1862:186::-;1921:6;1974:2;1962:9;1953:7;1949:23;1945:32;1942:52;;;1990:1;1987;1980:12;1942:52;2013:29;2032:9;2013:29;:::i;:::-;2003:39;1862:186;-1:-1:-1;;;1862:186:1:o;2053:260::-;2121:6;2129;2182:2;2170:9;2161:7;2157:23;2153:32;2150:52;;;2198:1;2195;2188:12;2150:52;2221:29;2240:9;2221:29;:::i;:::-;2211:39;;2269:38;2303:2;2292:9;2288:18;2269:38;:::i;:::-;2259:48;;2053:260;;;;;:::o;2318:380::-;2397:1;2393:12;;;;2440;;;2461:61;;2515:4;2507:6;2503:17;2493:27;;2461:61;2568:2;2560:6;2557:14;2537:18;2534:38;2531:161;;2614:10;2609:3;2605:20;2602:1;2595:31;2649:4;2646:1;2639:15;2677:4;2674:1;2667:15;2531:161;;2318:380;;;:::o;2703:222::-;2768:9;;;2789:10;;;2786:133;;;2841:10;2836:3;2832:20;2829:1;2822:31;2876:4;2873:1;2866:15;2904:4;2901:1;2894:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "414800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2559",
								"decimals()": "265",
								"decreaseAllowance(address,uint256)": "27011",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "51133",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 9931,
									"end": 21895,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 9931,
									"end": 21895,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 9931,
									"end": 21895,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 10525,
									"end": 10641,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10592,
									"end": 10597,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 10592,
									"end": 10605,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 10600,
									"end": 10605,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10592,
									"end": 10597,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10592,
									"end": 10605,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 10592,
									"end": 10605,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 10592,
									"end": 10605,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 10592,
									"end": 10605,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 10616,
									"end": 10623,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 10616,
									"end": 10633,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 10626,
									"end": 10633,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10616,
									"end": 10623,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10616,
									"end": 10633,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 10616,
									"end": 10633,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 10616,
									"end": 10633,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 10616,
									"end": 10633,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10616,
									"end": 10633,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10525,
									"end": 10641,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9931,
									"end": 21895,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 9931,
									"end": 21895,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 869,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 869,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 298,
									"end": 311,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 298,
									"end": 311,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 323,
									"end": 353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 323,
									"end": 353,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 320,
									"end": 376,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 320,
									"end": 376,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 320,
									"end": 376,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 356,
									"end": 374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 356,
									"end": 374,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 405,
									"end": 407,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 408,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 497,
									"end": 499,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 459,
									"end": 476,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 459,
									"end": 476,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 455,
									"end": 486,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 455,
									"end": 486,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 455,
									"end": 486,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 488,
									"end": 490,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 451,
									"end": 491,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 447,
									"end": 501,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 435,
									"end": 502,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 435,
									"end": 502,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 517,
									"end": 551,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 517,
									"end": 551,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 553,
									"end": 575,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 514,
									"end": 576,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 511,
									"end": 599,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 511,
									"end": 599,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 511,
									"end": 599,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 579,
									"end": 597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 579,
									"end": 597,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 615,
									"end": 617,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 608,
									"end": 630,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 639,
									"end": 661,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 680,
									"end": 699,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 701,
									"end": 705,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 706,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 673,
									"end": 712,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 670,
									"end": 729,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 670,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 723,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 715,
									"end": 727,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 670,
									"end": 729,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 782,
									"end": 788,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 775,
									"end": 779,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 767,
									"end": 773,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 763,
									"end": 780,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 756,
									"end": 760,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 748,
									"end": 754,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 744,
									"end": 761,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 738,
									"end": 789,
									"name": "MCOPY",
									"source": 1
								},
								{
									"begin": 837,
									"end": 838,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 809,
									"end": 828,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 809,
									"end": 828,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 809,
									"end": 828,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 830,
									"end": 834,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 805,
									"end": 835,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 798,
									"end": 839,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 813,
									"end": 819,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 146,
									"end": 869,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 869,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 874,
									"end": 1431,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 874,
									"end": 1431,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 973,
									"end": 979,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 987,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1034,
									"end": 1036,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1022,
									"end": 1031,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1013,
									"end": 1020,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1009,
									"end": 1032,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1005,
									"end": 1037,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1002,
									"end": 1054,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1002,
									"end": 1054,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1002,
									"end": 1054,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1050,
									"end": 1051,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1047,
									"end": 1048,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1002,
									"end": 1054,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1002,
									"end": 1054,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1077,
									"end": 1093,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1077,
									"end": 1093,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1105,
									"end": 1135,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1135,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1102,
									"end": 1152,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1102,
									"end": 1152,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1102,
									"end": 1152,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1145,
									"end": 1146,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1138,
									"end": 1150,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1102,
									"end": 1152,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1102,
									"end": 1152,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1171,
									"end": 1232,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1224,
									"end": 1231,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1215,
									"end": 1221,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1204,
									"end": 1213,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1200,
									"end": 1222,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1171,
									"end": 1232,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1171,
									"end": 1232,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1171,
									"end": 1232,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1171,
									"end": 1232,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1278,
									"end": 1280,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1263,
									"end": 1281,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1263,
									"end": 1281,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1257,
									"end": 1282,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1232,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1232,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1257,
									"end": 1282,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1294,
									"end": 1326,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1326,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1291,
									"end": 1343,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1291,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1291,
									"end": 1343,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1339,
									"end": 1340,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1336,
									"end": 1337,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1329,
									"end": 1341,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1291,
									"end": 1343,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1291,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1362,
									"end": 1425,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1417,
									"end": 1424,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1406,
									"end": 1414,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1395,
									"end": 1404,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1391,
									"end": 1415,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1362,
									"end": 1425,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1362,
									"end": 1425,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1362,
									"end": 1425,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1362,
									"end": 1425,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1352,
									"end": 1425,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1352,
									"end": 1425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1352,
									"end": 1425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 874,
									"end": 1431,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 874,
									"end": 1431,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 874,
									"end": 1431,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 874,
									"end": 1431,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 874,
									"end": 1431,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 874,
									"end": 1431,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1436,
									"end": 1816,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1436,
									"end": 1816,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1515,
									"end": 1516,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1511,
									"end": 1523,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1511,
									"end": 1523,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1511,
									"end": 1523,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1511,
									"end": 1523,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1570,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1570,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1570,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1579,
									"end": 1640,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1579,
									"end": 1640,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1633,
									"end": 1637,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1625,
									"end": 1631,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1621,
									"end": 1638,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1611,
									"end": 1638,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1611,
									"end": 1638,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1579,
									"end": 1640,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1579,
									"end": 1640,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1686,
									"end": 1688,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1675,
									"end": 1689,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1655,
									"end": 1673,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1652,
									"end": 1690,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1649,
									"end": 1810,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1649,
									"end": 1810,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1732,
									"end": 1742,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1727,
									"end": 1730,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1723,
									"end": 1743,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1720,
									"end": 1721,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1713,
									"end": 1744,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1767,
									"end": 1771,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1764,
									"end": 1765,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1757,
									"end": 1772,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1795,
									"end": 1799,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1792,
									"end": 1793,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1785,
									"end": 1800,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1649,
									"end": 1810,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1649,
									"end": 1810,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1649,
									"end": 1810,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1436,
									"end": 1816,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1436,
									"end": 1816,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1436,
									"end": 1816,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1436,
									"end": 1816,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1947,
									"end": 2465,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1947,
									"end": 2465,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2049,
									"end": 2051,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2044,
									"end": 2047,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2052,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2038,
									"end": 2459,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2038,
									"end": 2459,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 2038,
									"end": 2459,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2085,
									"end": 2090,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2082,
									"end": 2083,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2075,
									"end": 2091,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2129,
									"end": 2133,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2126,
									"end": 2127,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2116,
									"end": 2134,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2199,
									"end": 2201,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2187,
									"end": 2197,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2183,
									"end": 2202,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2180,
									"end": 2181,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2176,
									"end": 2203,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2170,
									"end": 2174,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2204,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2235,
									"end": 2239,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2223,
									"end": 2233,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2220,
									"end": 2240,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2217,
									"end": 2264,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2217,
									"end": 2264,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 2217,
									"end": 2264,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2258,
									"end": 2262,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2217,
									"end": 2264,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 2217,
									"end": 2264,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2313,
									"end": 2315,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2308,
									"end": 2311,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2304,
									"end": 2316,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2301,
									"end": 2302,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2297,
									"end": 2317,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2291,
									"end": 2295,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2287,
									"end": 2318,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2277,
									"end": 2318,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2277,
									"end": 2318,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2386,
									"end": 2388,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2379,
									"end": 2384,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2376,
									"end": 2389,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2445,
									"end": 2446,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2431,
									"end": 2447,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2431,
									"end": 2447,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2412,
									"end": 2413,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2401,
									"end": 2414,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2372,
									"end": 2375,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2372,
									"end": 2375,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2038,
									"end": 2459,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 2038,
									"end": 2459,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1947,
									"end": 2465,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1947,
									"end": 2465,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1947,
									"end": 2465,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1947,
									"end": 2465,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2641,
									"end": 3940,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2641,
									"end": 3940,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2761,
									"end": 2771,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2761,
									"end": 2771,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2783,
									"end": 2813,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2783,
									"end": 2813,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2780,
									"end": 2836,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2780,
									"end": 2836,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 2780,
									"end": 2836,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2816,
									"end": 2834,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 2816,
									"end": 2834,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2816,
									"end": 2834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2816,
									"end": 2834,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 2816,
									"end": 2834,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2845,
									"end": 2942,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 2935,
									"end": 2941,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 2933,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 2927,
									"end": 2931,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2921,
									"end": 2932,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 2933,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2895,
									"end": 2933,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 2933,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 2895,
									"end": 2933,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2889,
									"end": 2893,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2845,
									"end": 2942,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 2845,
									"end": 2942,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2845,
									"end": 2942,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 2845,
									"end": 2942,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2991,
									"end": 2995,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3022,
									"end": 3024,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3011,
									"end": 3025,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3011,
									"end": 3025,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3039,
									"end": 3040,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3034,
									"end": 3683,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3034,
									"end": 3683,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 3034,
									"end": 3683,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 3034,
									"end": 3683,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3727,
									"end": 3728,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3744,
									"end": 3750,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3741,
									"end": 3830,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3741,
									"end": 3830,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 3741,
									"end": 3830,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3796,
									"end": 3815,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3796,
									"end": 3815,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3796,
									"end": 3815,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3790,
									"end": 3816,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3741,
									"end": 3830,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 3741,
									"end": 3830,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2598,
									"end": 2599,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2594,
									"end": 2605,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2594,
									"end": 2605,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2594,
									"end": 2605,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2590,
									"end": 2614,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2586,
									"end": 2615,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2576,
									"end": 2616,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2622,
									"end": 2623,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2618,
									"end": 2629,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2618,
									"end": 2629,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2618,
									"end": 2629,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2630,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3843,
									"end": 3924,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3843,
									"end": 3924,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3934,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3004,
									"end": 3934,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3034,
									"end": 3683,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 3034,
									"end": 3683,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1894,
									"end": 1895,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1887,
									"end": 1901,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1887,
									"end": 1901,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1887,
									"end": 1901,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1931,
									"end": 1935,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1918,
									"end": 1936,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1918,
									"end": 1936,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3070,
									"end": 3090,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3070,
									"end": 3090,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3070,
									"end": 3090,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3202,
									"end": 3209,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3199,
									"end": 3200,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3196,
									"end": 3210,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3284,
									"end": 3303,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 3284,
									"end": 3303,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3284,
									"end": 3303,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3278,
									"end": 3304,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3263,
									"end": 3305,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3263,
									"end": 3305,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3391,
									"end": 3395,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3376,
									"end": 3396,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3396,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3396,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3396,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3344,
									"end": 3345,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3332,
									"end": 3346,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3332,
									"end": 3346,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3332,
									"end": 3346,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3332,
									"end": 3346,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3218,
									"end": 3230,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3192,
									"end": 3195,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3438,
									"end": 3444,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3429,
									"end": 3436,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3426,
									"end": 3445,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3423,
									"end": 3624,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3423,
									"end": 3624,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 3423,
									"end": 3624,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3499,
									"end": 3518,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3499,
									"end": 3518,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3499,
									"end": 3518,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3493,
									"end": 3519,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3582,
									"end": 3583,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3578,
									"end": 3592,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 3578,
									"end": 3592,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3578,
									"end": 3592,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3594,
									"end": 3597,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 3574,
									"end": 3598,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3570,
									"end": 3607,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3566,
									"end": 3608,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3551,
									"end": 3609,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3536,
									"end": 3610,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3536,
									"end": 3610,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3423,
									"end": 3624,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 3423,
									"end": 3624,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3670,
									"end": 3671,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3654,
									"end": 3668,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3654,
									"end": 3668,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3654,
									"end": 3668,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3650,
									"end": 3672,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3637,
									"end": 3673,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3637,
									"end": 3673,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2641,
									"end": 3940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2641,
									"end": 3940,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2641,
									"end": 3940,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9931,
									"end": 21895,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9931,
									"end": 21895,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9931,
									"end": 21895,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9931,
									"end": 21895,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9931,
									"end": 21895,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 9931,
									"end": 21895,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9931,
									"end": 21895,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a4699444d16448633b90ed13bcf376e530ed11885d3aad5e910f86fca66a93a264736f6c634300081a0033",
									".code": [
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 21895,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 10711,
											"end": 10811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 10711,
											"end": 10811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 13062,
											"end": 13263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 13062,
											"end": 13263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1100,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 920,
											"end": 1107,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11831,
											"end": 11939,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11831,
											"end": 11939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11919,
											"end": 11931,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11919,
											"end": 11931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11831,
											"end": 11939,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 11831,
											"end": 11939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11831,
											"end": 11939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11831,
											"end": 11939,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11831,
											"end": 11939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13843,
											"end": 14138,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13843,
											"end": 14138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13843,
											"end": 14138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 13843,
											"end": 14138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 13843,
											"end": 14138,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13843,
											"end": 14138,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13843,
											"end": 14138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 13843,
											"end": 14138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13843,
											"end": 14138,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 13843,
											"end": 14138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13843,
											"end": 14138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 13843,
											"end": 14138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11673,
											"end": 11766,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 11673,
											"end": 11766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11673,
											"end": 11766,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11673,
											"end": 11766,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11756,
											"end": 11758,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1805,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 1806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1673,
											"end": 1857,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14547,
											"end": 14785,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 14547,
											"end": 14785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14547,
											"end": 14785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 14547,
											"end": 14785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 14547,
											"end": 14785,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14547,
											"end": 14785,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14547,
											"end": 14785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 14547,
											"end": 14785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14547,
											"end": 14785,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 14547,
											"end": 14785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14547,
											"end": 14785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14547,
											"end": 14785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12002,
											"end": 12129,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 12002,
											"end": 12129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12002,
											"end": 12129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 12002,
											"end": 12129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 12002,
											"end": 12129,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12002,
											"end": 12129,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12002,
											"end": 12129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 12002,
											"end": 12129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12002,
											"end": 12129,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 12002,
											"end": 12129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12103,
											"end": 12121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12076,
											"end": 12083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12103,
											"end": 12121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12121,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12121,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12103,
											"end": 12121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12121,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12103,
											"end": 12121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12121,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12121,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12002,
											"end": 12129,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10930,
											"end": 11034,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 10930,
											"end": 11034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10930,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 10930,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 10930,
											"end": 11034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15288,
											"end": 15724,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 15288,
											"end": 15724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15288,
											"end": 15724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 15288,
											"end": 15724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 15288,
											"end": 15724,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15288,
											"end": 15724,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15288,
											"end": 15724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 15288,
											"end": 15724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15288,
											"end": 15724,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 15288,
											"end": 15724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15288,
											"end": 15724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 15288,
											"end": 15724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12335,
											"end": 12528,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 12335,
											"end": 12528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12335,
											"end": 12528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 12335,
											"end": 12528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 12335,
											"end": 12528,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12335,
											"end": 12528,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12335,
											"end": 12528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 12335,
											"end": 12528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12335,
											"end": 12528,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 12335,
											"end": 12528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12335,
											"end": 12528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 12335,
											"end": 12528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12591,
											"end": 12742,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 12591,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12591,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 12591,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 12591,
											"end": 12742,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12591,
											"end": 12742,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12591,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12591,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12591,
											"end": 12742,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 12591,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12591,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 12591,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10765,
											"end": 10778,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10798,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 10791,
											"end": 10803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 10791,
											"end": 10803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13145,
											"end": 13149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2135,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13201,
											"end": 13233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2125,
											"end": 2135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13217,
											"end": 13224,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13226,
											"end": 13232,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13201,
											"end": 13209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 13201,
											"end": 13233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13201,
											"end": 13233,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 13201,
											"end": 13233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13251,
											"end": 13255,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13244,
											"end": 13255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13843,
											"end": 14138,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 13843,
											"end": 14138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13974,
											"end": 13978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2135,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14032,
											"end": 14070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 14048,
											"end": 14052,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14069,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14032,
											"end": 14047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 14032,
											"end": 14070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14032,
											"end": 14070,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 14032,
											"end": 14070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14081,
											"end": 14108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 14091,
											"end": 14095,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14097,
											"end": 14099,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14101,
											"end": 14107,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14081,
											"end": 14090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 14081,
											"end": 14108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14081,
											"end": 14108,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 14081,
											"end": 14108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14126,
											"end": 14130,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14126,
											"end": 14130,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13843,
											"end": 14138,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13843,
											"end": 14138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14547,
											"end": 14785,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14547,
											"end": 14785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14635,
											"end": 14639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2135,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14691,
											"end": 14755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2125,
											"end": 2135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14714,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14744,
											"end": 14754,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14716,
											"end": 14741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2125,
											"end": 2135,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14714,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14716,
											"end": 14725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 14716,
											"end": 14741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14716,
											"end": 14741,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 14716,
											"end": 14741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14716,
											"end": 14754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 14716,
											"end": 14754,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14716,
											"end": 14754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14716,
											"end": 14754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14716,
											"end": 14754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14716,
											"end": 14754,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 14716,
											"end": 14754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14691,
											"end": 14699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 14691,
											"end": 14755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10930,
											"end": 11034,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 10930,
											"end": 11034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10986,
											"end": 10999,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11019,
											"end": 11026,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11012,
											"end": 11026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11012,
											"end": 11026,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11012,
											"end": 11026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 11012,
											"end": 11026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11012,
											"end": 11026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 11012,
											"end": 11026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15288,
											"end": 15724,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 15288,
											"end": 15724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15381,
											"end": 15385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2135,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15381,
											"end": 15385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15464,
											"end": 15489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2125,
											"end": 2135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15488,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15464,
											"end": 15473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 15464,
											"end": 15489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15464,
											"end": 15489,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 15464,
											"end": 15489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15437,
											"end": 15489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15437,
											"end": 15489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15528,
											"end": 15543,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15508,
											"end": 15524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15508,
											"end": 15543,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15508,
											"end": 15543,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3132,
											"end": 3134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3114,
											"end": 3135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3173,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3174,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3244,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3183,
											"end": 3245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3289,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3306,
											"end": 3325,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3306,
											"end": 3325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15621,
											"end": 15681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 15630,
											"end": 15635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15637,
											"end": 15644,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15665,
											"end": 15680,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15646,
											"end": 15662,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15646,
											"end": 15680,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15621,
											"end": 15629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 15621,
											"end": 15681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12335,
											"end": 12528,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 12335,
											"end": 12528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12414,
											"end": 12418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2135,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12470,
											"end": 12498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2125,
											"end": 2135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12487,
											"end": 12489,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12497,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12470,
											"end": 12479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 12470,
											"end": 12498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12591,
											"end": 12742,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 12591,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12707,
											"end": 12725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12707,
											"end": 12725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12718,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12707,
											"end": 12725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12707,
											"end": 12725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12707,
											"end": 12725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12734,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12734,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12734,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12734,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12734,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12591,
											"end": 12742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19315,
											"end": 19695,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 19315,
											"end": 19695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19451,
											"end": 19470,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19451,
											"end": 19470,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19443,
											"end": 19511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 19443,
											"end": 19511,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19443,
											"end": 19511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19443,
											"end": 19511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19443,
											"end": 19511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19443,
											"end": 19511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3540,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19443,
											"end": 19511,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19443,
											"end": 19511,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19443,
											"end": 19511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3541,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 3579,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3557,
											"end": 3575,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3557,
											"end": 3575,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3557,
											"end": 3575,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3550,
											"end": 3580,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 3650,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3596,
											"end": 3614,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3596,
											"end": 3614,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3589,
											"end": 3651,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3667,
											"end": 3685,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3667,
											"end": 3685,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3685,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3660,
											"end": 3694,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3730,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3711,
											"end": 3730,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19443,
											"end": 19511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3336,
											"end": 3736,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19443,
											"end": 19511,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 19443,
											"end": 19511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19530,
											"end": 19551,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19530,
											"end": 19551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19522,
											"end": 19590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 19522,
											"end": 19590,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19522,
											"end": 19590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19522,
											"end": 19590,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19522,
											"end": 19590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19522,
											"end": 19590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3945,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19522,
											"end": 19590,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19522,
											"end": 19590,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19522,
											"end": 19590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 3946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3982,
											"end": 3984,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 3985,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4021,
											"end": 4055,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3994,
											"end": 4056,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4065,
											"end": 4097,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4114,
											"end": 4133,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4114,
											"end": 4133,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19522,
											"end": 19590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3741,
											"end": 4139,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19522,
											"end": 19590,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 19522,
											"end": 19590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19603,
											"end": 19621,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19621,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19621,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19603,
											"end": 19621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19621,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19614,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19603,
											"end": 19621,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19603,
											"end": 19621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19621,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19603,
											"end": 19621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19621,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19621,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19630,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19630,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19630,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19630,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19630,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19630,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19630,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19630,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19639,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19639,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19655,
											"end": 19687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19655,
											"end": 19687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19655,
											"end": 19687,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 19655,
											"end": 19687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19655,
											"end": 19687,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19655,
											"end": 19687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19655,
											"end": 19687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19655,
											"end": 19687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19655,
											"end": 19687,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19655,
											"end": 19687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19655,
											"end": 19687,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 19315,
											"end": 19695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19315,
											"end": 19695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19315,
											"end": 19695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19315,
											"end": 19695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19986,
											"end": 20439,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 19986,
											"end": 20439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20121,
											"end": 20145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20148,
											"end": 20173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 20158,
											"end": 20163,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20165,
											"end": 20172,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20148,
											"end": 20157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 20148,
											"end": 20173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20148,
											"end": 20173,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 20148,
											"end": 20173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20121,
											"end": 20173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20121,
											"end": 20173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20188,
											"end": 20204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20225,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 20184,
											"end": 20432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20270,
											"end": 20276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20250,
											"end": 20266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20250,
											"end": 20276,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20250,
											"end": 20276,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20242,
											"end": 20310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 20242,
											"end": 20310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20242,
											"end": 20310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20242,
											"end": 20310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20242,
											"end": 20310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20242,
											"end": 20310,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4346,
											"end": 4348,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20242,
											"end": 20310,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20242,
											"end": 20310,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20242,
											"end": 20310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4349,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4387,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 4365,
											"end": 4383,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4365,
											"end": 4383,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4358,
											"end": 4388,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4424,
											"end": 4455,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4404,
											"end": 4422,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4404,
											"end": 4422,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4397,
											"end": 4456,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4473,
											"end": 4491,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4473,
											"end": 4491,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20242,
											"end": 20310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4144,
											"end": 4497,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20242,
											"end": 20310,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 20242,
											"end": 20310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20354,
											"end": 20405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 20363,
											"end": 20368,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20370,
											"end": 20377,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20398,
											"end": 20404,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20379,
											"end": 20395,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20379,
											"end": 20404,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20354,
											"end": 20362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 20354,
											"end": 20405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20354,
											"end": 20405,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 20354,
											"end": 20405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20110,
											"end": 20439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19986,
											"end": 20439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19986,
											"end": 20439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19986,
											"end": 20439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19986,
											"end": 20439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16194,
											"end": 17034,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 16194,
											"end": 17034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16325,
											"end": 16343,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16325,
											"end": 16343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16317,
											"end": 16385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 16317,
											"end": 16385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16317,
											"end": 16385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16317,
											"end": 16385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16317,
											"end": 16385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16317,
											"end": 16385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4706,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16317,
											"end": 16385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16317,
											"end": 16385,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16317,
											"end": 16385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4686,
											"end": 4707,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4745,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4746,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4782,
											"end": 4816,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4755,
											"end": 4817,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4826,
											"end": 4861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4897,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4878,
											"end": 4897,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16317,
											"end": 16385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4502,
											"end": 4903,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16317,
											"end": 16385,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 16317,
											"end": 16385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16404,
											"end": 16420,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16420,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16396,
											"end": 16460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 16396,
											"end": 16460,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16396,
											"end": 16460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16396,
											"end": 16460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16396,
											"end": 16460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16396,
											"end": 16460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5110,
											"end": 5112,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16396,
											"end": 16460,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16396,
											"end": 16460,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16396,
											"end": 16460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5092,
											"end": 5113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5149,
											"end": 5151,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5129,
											"end": 5147,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5129,
											"end": 5147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5147,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5122,
											"end": 5152,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5222,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5161,
											"end": 5223,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5239,
											"end": 5257,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5239,
											"end": 5257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5239,
											"end": 5257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5232,
											"end": 5265,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5301,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5282,
											"end": 5301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16396,
											"end": 16460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4908,
											"end": 5307,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16396,
											"end": 16460,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 16396,
											"end": 16460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16546,
											"end": 16561,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16546,
											"end": 16561,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16546,
											"end": 16561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16546,
											"end": 16561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16546,
											"end": 16561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16546,
											"end": 16561,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16546,
											"end": 16561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16546,
											"end": 16561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16546,
											"end": 16561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16546,
											"end": 16561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16546,
											"end": 16561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16546,
											"end": 16561,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16546,
											"end": 16561,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16580,
											"end": 16601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16580,
											"end": 16601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16580,
											"end": 16601,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16580,
											"end": 16601,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16572,
											"end": 16644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 16572,
											"end": 16644,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16572,
											"end": 16644,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16572,
											"end": 16644,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16572,
											"end": 16644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16572,
											"end": 16644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5514,
											"end": 5516,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16572,
											"end": 16644,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16572,
											"end": 16644,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16572,
											"end": 16644,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5496,
											"end": 5517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5555,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5533,
											"end": 5551,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5533,
											"end": 5551,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5533,
											"end": 5551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5526,
											"end": 5556,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5592,
											"end": 5626,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5572,
											"end": 5590,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5572,
											"end": 5590,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5572,
											"end": 5590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5565,
											"end": 5627,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5636,
											"end": 5672,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5689,
											"end": 5708,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5689,
											"end": 5708,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16572,
											"end": 16644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5312,
											"end": 5714,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16572,
											"end": 16644,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 16572,
											"end": 16644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16680,
											"end": 16695,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16680,
											"end": 16695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16695,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16680,
											"end": 16695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16680,
											"end": 16695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16695,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16695,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16698,
											"end": 16718,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16698,
											"end": 16718,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16698,
											"end": 16718,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16718,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16911,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16911,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16911,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16911,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16911,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16911,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16911,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16911,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16911,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16921,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16921,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16921,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16950,
											"end": 16976,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16950,
											"end": 16976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16898,
											"end": 16911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16911,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16950,
											"end": 16976,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 16950,
											"end": 16976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16950,
											"end": 16976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16950,
											"end": 16976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16950,
											"end": 16976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16950,
											"end": 16976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16950,
											"end": 16976,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16950,
											"end": 16976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16950,
											"end": 16976,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 16989,
											"end": 17026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 21039,
											"end": 21164,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 437,
											"end": 610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 505,
											"end": 525,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 544,
											"end": 586,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 534,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 590,
											"end": 602,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 534,
											"end": 604,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 915,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 615,
											"end": 915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 683,
											"end": 689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 697,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 741,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 723,
											"end": 730,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 719,
											"end": 742,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 715,
											"end": 747,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 712,
											"end": 764,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 712,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 760,
											"end": 761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 750,
											"end": 762,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 712,
											"end": 764,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 783,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 783,
											"end": 812,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 783,
											"end": 812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 881,
											"end": 883,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 866,
											"end": 884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 853,
											"end": 885,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 853,
											"end": 885,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 615,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1442,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1426,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1443,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1479,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1561,
											"end": 1563,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1559,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1564,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1527,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1634,
											"end": 1636,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 1927,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1976,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 1960,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 1972,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 1977,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 1988,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 1992,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2032,
											"end": 2041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2013,
											"end": 2042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2042,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1862,
											"end": 2048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2121,
											"end": 2127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2129,
											"end": 2135,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2182,
											"end": 2184,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2179,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2168,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2157,
											"end": 2180,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2185,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2196,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2200,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2240,
											"end": 2249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2221,
											"end": 2250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2211,
											"end": 2250,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2211,
											"end": 2250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2303,
											"end": 2305,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2292,
											"end": 2301,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2269,
											"end": 2307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2397,
											"end": 2398,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2515,
											"end": 2519,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 2507,
											"end": 2513,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2520,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2570,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2571,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2537,
											"end": 2555,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2572,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2614,
											"end": 2624,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2609,
											"end": 2612,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2605,
											"end": 2625,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2603,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2626,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2653,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2646,
											"end": 2647,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2639,
											"end": 2654,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2681,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2674,
											"end": 2675,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2703,
											"end": 2925,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2703,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2789,
											"end": 2799,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2789,
											"end": 2799,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2789,
											"end": 2799,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2919,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2786,
											"end": 2919,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2851,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2836,
											"end": 2839,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2832,
											"end": 2852,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2822,
											"end": 2853,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 2880,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2873,
											"end": 2874,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2866,
											"end": 2881,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2908,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2901,
											"end": 2902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2909,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":{\"keccak256\":\"0xcf20f4f41b0c587c32b56938933f8fe893b8491fa35a9c0a9d4f13ce36cf2672\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2f45ff573b7ab5d707f978209dec7bd84dbead1e32764af7549cbf430ca1314\",\"dweb:/ipfs/QmdYjizBwTM6kgwcY8BKTHH7NdRyD5wkPUiKMymJxf4ot6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 244,
								"contract": "0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 250,
								"contract": "0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 252,
								"contract": "0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 254,
								"contract": "0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 256,
								"contract": "0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Decimals": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that adds decimals storage slot.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the value of the `decimals`. This value is immutable, it can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"title": "ERC20Decimals",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that adds decimals storage slot.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the value of the `decimals`. This value is immutable, it can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"title\":\"ERC20Decimals\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":\"ERC20Decimals\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":{\"keccak256\":\"0xcf20f4f41b0c587c32b56938933f8fe893b8491fa35a9c0a9d4f13ce36cf2672\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2f45ff573b7ab5d707f978209dec7bd84dbead1e32764af7549cbf430ca1314\",\"dweb:/ipfs/QmdYjizBwTM6kgwcY8BKTHH7NdRyD5wkPUiKMymJxf4ot6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 244,
								"contract": "0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol:ERC20Decimals",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 250,
								"contract": "0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol:ERC20Decimals",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 252,
								"contract": "0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol:ERC20Decimals",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 254,
								"contract": "0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol:ERC20Decimals",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 256,
								"contract": "0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol:ERC20Decimals",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Taxable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isExcludedFromTaxFee",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taxAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taxFeePerMille",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that adds a tax rate per mille.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the value of the `taxFeePerMille` and the `taxAddress`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"isExcludedFromTaxFee(address)": {
								"details": "Returns the status of exclusion from tax fee mechanism for a given account."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"taxAddress()": {
								"details": "Returns the deposit address for tax."
							},
							"taxFeePerMille()": {
								"details": "Returns the per mille rate for taxable mechanism. For each transfer the per mille amount will be calculated and moved to deposit address."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` of tokens from `sender` to `recipient` minus the tax fee. Moves the tax fee to a deposit address. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` minus the tax fee using the allowance mechanism. `amount` is then deducted from the caller's allowance. Moves the tax fee to a deposit address. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"title": "ERC20Taxable",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"isExcludedFromTaxFee(address)": "c283cd12",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"taxAddress()": "b7bda68f",
							"taxFeePerMille()": "c6d205fa",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromTaxFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxFeePerMille\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that adds a tax rate per mille.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the value of the `taxFeePerMille` and the `taxAddress`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"isExcludedFromTaxFee(address)\":{\"details\":\"Returns the status of exclusion from tax fee mechanism for a given account.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"taxAddress()\":{\"details\":\"Returns the deposit address for tax.\"},\"taxFeePerMille()\":{\"details\":\"Returns the per mille rate for taxable mechanism. For each transfer the per mille amount will be calculated and moved to deposit address.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` of tokens from `sender` to `recipient` minus the tax fee. Moves the tax fee to a deposit address. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` minus the tax fee using the allowance mechanism. `amount` is then deducted from the caller's allowance. Moves the tax fee to a deposit address. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"title\":\"ERC20Taxable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":\"ERC20Taxable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":{\"keccak256\":\"0xcf20f4f41b0c587c32b56938933f8fe893b8491fa35a9c0a9d4f13ce36cf2672\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2f45ff573b7ab5d707f978209dec7bd84dbead1e32764af7549cbf430ca1314\",\"dweb:/ipfs/QmdYjizBwTM6kgwcY8BKTHH7NdRyD5wkPUiKMymJxf4ot6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 244,
								"contract": "0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol:ERC20Taxable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 250,
								"contract": "0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol:ERC20Taxable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 252,
								"contract": "0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol:ERC20Taxable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 254,
								"contract": "0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol:ERC20Taxable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 256,
								"contract": "0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol:ERC20Taxable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 848,
								"contract": "0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol:ERC20Taxable",
								"label": "_taxRate",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 850,
								"contract": "0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol:ERC20Taxable",
								"label": "_taxAddress",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 854,
								"contract": "0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol:ERC20Taxable",
								"label": "_isExcludedFromTaxFee",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":{\"keccak256\":\"0xcf20f4f41b0c587c32b56938933f8fe893b8491fa35a9c0a9d4f13ce36cf2672\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2f45ff573b7ab5d707f978209dec7bd84dbead1e32764af7549cbf430ca1314\",\"dweb:/ipfs/QmdYjizBwTM6kgwcY8BKTHH7NdRyD5wkPUiKMymJxf4ot6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":{\"keccak256\":\"0xcf20f4f41b0c587c32b56938933f8fe893b8491fa35a9c0a9d4f13ce36cf2672\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2f45ff573b7ab5d707f978209dec7bd84dbead1e32764af7549cbf430ca1314\",\"dweb:/ipfs/QmdYjizBwTM6kgwcY8BKTHH7NdRyD5wkPUiKMymJxf4ot6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IPayable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "serviceName",
									"type": "string"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "wallet",
									"type": "address"
								}
							],
							"name": "pay",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"pay(string,bytes,address)": "346386e1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"serviceName\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":\"IPayable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":{\"keccak256\":\"0xcf20f4f41b0c587c32b56938933f8fe893b8491fa35a9c0a9d4f13ce36cf2672\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2f45ff573b7ab5d707f978209dec7bd84dbead1e32764af7549cbf430ca1314\",\"dweb:/ipfs/QmdYjizBwTM6kgwcY8BKTHH7NdRyD5wkPUiKMymJxf4ot6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":{\"keccak256\":\"0xcf20f4f41b0c587c32b56938933f8fe893b8491fa35a9c0a9d4f13ce36cf2672\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2f45ff573b7ab5d707f978209dec7bd84dbead1e32764af7549cbf430ca1314\",\"dweb:/ipfs/QmdYjizBwTM6kgwcY8BKTHH7NdRyD5wkPUiKMymJxf4ot6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ServicePayer": {
					"abi": [],
					"devdoc": {
						"details": "Implementation of the ServicePayer",
						"kind": "dev",
						"methods": {},
						"title": "ServicePayer",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Implementation of the ServicePayer\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ServicePayer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":\"ServicePayer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":{\"keccak256\":\"0xcf20f4f41b0c587c32b56938933f8fe893b8491fa35a9c0a9d4f13ce36cf2672\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2f45ff573b7ab5d707f978209dec7bd84dbead1e32764af7549cbf430ca1314\",\"dweb:/ipfs/QmdYjizBwTM6kgwcY8BKTHH7NdRyD5wkPUiKMymJxf4ot6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TaxableERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "decimals_",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "initialBalance_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "taxFeePerMille_",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "taxAddress_",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature_",
									"type": "bytes"
								},
								{
									"internalType": "address payable",
									"name": "feeReceiver_",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isExcludedFromTaxFee",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "setExclusionFromTaxFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "taxAddress",
									"type": "address"
								}
							],
							"name": "setTaxAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "taxFeePerMille",
									"type": "uint256"
								}
							],
							"name": "setTaxFeePerMille",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taxAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taxFeePerMille",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the TaxableERC20",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"isExcludedFromTaxFee(address)": {
								"details": "Returns the status of exclusion from tax fee mechanism for a given account."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"setExclusionFromTaxFee(address,bool)": {
								"details": "Set the exclusion status from tax fee mechanism (both sending and receiving) NOTE: restricting access to owner only. See {ERC20Taxable-_setExclusionFromTaxFee}."
							},
							"setTaxAddress(address)": {
								"details": "Set the address where to collect tax fee NOTE: restricting access to owner only. See {ERC20Taxable-_setTaxAddress}.",
								"params": {
									"taxAddress": "The deposit address for tax"
								}
							},
							"setTaxFeePerMille(uint256)": {
								"details": "Set the amount of tax fee per mille NOTE: restricting access to owner only. See {ERC20Taxable-_setTaxRate}.",
								"params": {
									"taxFeePerMille": "The amount of tax fee per mille"
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"taxAddress()": {
								"details": "Returns the deposit address for tax."
							},
							"taxFeePerMille()": {
								"details": "Returns the per mille rate for taxable mechanism. For each transfer the per mille amount will be calculated and moved to deposit address."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "TaxableERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":27760:30046  contract TaxableERC20 is ERC20Decimals, ERC20Taxable, Ownable, ServicePayer {... */\n  mstore(0x40, 0xa0)\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":27843:28473  constructor(... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_1\n  swap2\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":27385:27589  constructor(address payable receiver, string memory serviceName, bytes memory signature, address wallet) payable {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x0c\n  dup2\n  mstore\n  shl(0xa4, 0x054617861626c65455243323)\n  0x20\n  dup3\n  add\n  mstore\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":28277:28289  feeReceiver_ */\n  dup2\n  swap1\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":28307:28317  signature_ */\n  dup4\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":2125:2135  msg.sender */\n  caller\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":28225:28240  taxFeePerMille_ */\n  dup8\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":28242:28253  taxAddress_ */\n  dup8\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":28192:28201  decimals_ */\n  dup12\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":28153:28158  name_ */\n  dup15\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":28160:28167  symbol_ */\n  dup15\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10592:10597  _name */\n  0x03\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10592:10605  _name = name_ */\n  tag_12\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":28153:28158  name_ */\n  dup4\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10592:10597  _name */\n  dup3\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10592:10605  _name = name_ */\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10616:10623  _symbol */\n  0x04\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10616:10633  _symbol = symbol_ */\n  tag_14\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10626:10633  symbol_ */\n  dup3\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10616:10623  _symbol */\n  dup3\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10616:10633  _symbol = symbol_ */\n  tag_13\n  jump\t// in\ntag_14:\n  pop\n  pop\n  pop\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":22364:22385  _decimals = decimals_ */\n  0xff\n  and\n  0x80\n  mstore\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23035:23063  _setTaxRate(taxFeePerMille_) */\n  tag_17\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23047:23062  taxFeePerMille_ */\n  dup3\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23035:23046  _setTaxRate */\n  tag_18\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23035:23063  _setTaxRate(taxFeePerMille_) */\n  jump\t// in\ntag_17:\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23074:23101  _setTaxAddress(taxAddress_) */\n  tag_19\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23089:23100  taxAddress_ */\n  dup2\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23074:23088  _setTaxAddress */\n  tag_20\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23074:23101  _setTaxAddress(taxAddress_) */\n  jump\t// in\ntag_19:\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23112:23155  _setExclusionFromTaxFee(_msgSender(), true) */\n  tag_21\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":2125:2135  msg.sender */\n  caller\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":27005:27036  _isExcludedFromTaxFee[account_] */\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":27005:27026  _isExcludedFromTaxFee */\n  0x07\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":27005:27036  _isExcludedFromTaxFee[account_] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":27005:27046  _isExcludedFromTaxFee[account_] = status_ */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23150:23154  true */\n  0x01\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":27005:27046  _isExcludedFromTaxFee[account_] = status_ */\n  or\n  swap1\n  sstore\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26912:27054  function _setExclusionFromTaxFee(address account_, bool status_) internal virtual {... */\n  jump\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23112:23155  _setExclusionFromTaxFee(_msgSender(), true) */\ntag_21:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":27005:27036  _isExcludedFromTaxFee[account_] */\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":27005:27026  _isExcludedFromTaxFee */\n  0x07\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":27005:27036  _isExcludedFromTaxFee[account_] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":27005:27046  _isExcludedFromTaxFee[account_] = status_ */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23203:23207  true */\n  0x01\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":27005:27046  _isExcludedFromTaxFee[account_] = status_ */\n  or\n  swap1\n  sstore\n  pop\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":3213:3245  _transferOwnership(_msgSender()) */\n  tag_26\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":2125:2135  msg.sender */\n  caller\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":3213:3231  _transferOwnership */\n  tag_28\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":3213:3245  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_26:\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":27509:27581  IPayable(receiver).pay{value: msg.value}(serviceName, signature, wallet) */\n  mload(0x40)\n  shl(0xe0, 0x346386e1)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":27509:27531  IPayable(receiver).pay */\n  dup6\n  and\n  swap1\n  0x346386e1\n  swap1\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":27539:27548  msg.value */\n  callvalue\n  swap1\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":27509:27581  IPayable(receiver).pay{value: msg.value}(serviceName, signature, wallet) */\n  tag_30\n  swap1\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":27550:27561  serviceName */\n  dup8\n  swap1\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":27563:27572  signature */\n  dup8\n  swap1\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":27574:27580  wallet */\n  dup8\n  swap1\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":27509:27581  IPayable(receiver).pay{value: msg.value}(serviceName, signature, wallet) */\n  0x04\n  add\n  tag_31\n  jump\t// in\ntag_30:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  dup9\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_32\n  jumpi\n  0x00\n  dup1\n  revert\ntag_32:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_34\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_34:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":27385:27589  constructor(address payable receiver, string memory serviceName, bytes memory signature, address wallet) payable {... */\n  pop\n  pop\n  pop\n  pop\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":28375:28376  0 */\n  0x00\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":28357:28372  initialBalance_ */\n  dup6\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":28357:28376  initialBalance_ > 0 */\n  gt\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":28349:28416  require(initialBalance_ > 0, \"TaxableERC20: supply cannot be zero\") */\n  tag_36\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":6137:6139   */\n  0x20\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":28349:28416  require(initialBalance_ > 0, \"TaxableERC20: supply cannot be zero\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":6119:6140   */\n  mstore\n    /* \"#utility.yul\":6176:6178   */\n  0x23\n    /* \"#utility.yul\":6156:6174   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":6149:6179   */\n  mstore\n    /* \"#utility.yul\":6215:6249   */\n  0x54617861626c6545524332303a20737570706c792063616e6e6f74206265207a\n    /* \"#utility.yul\":6195:6213   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":6188:6250   */\n  mstore\n  shl(0xe8, 0x65726f)\n    /* \"#utility.yul\":6266:6284   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":6259:6292   */\n  mstore\n    /* \"#utility.yul\":6309:6328   */\n  0x84\n  add\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":28349:28416  require(initialBalance_ > 0, \"TaxableERC20: supply cannot be zero\") */\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_36:\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":28429:28465  _mint(_msgSender(), initialBalance_) */\n  tag_39\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":2125:2135  msg.sender */\n  caller\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":28449:28464  initialBalance_ */\n  dup7\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":28429:28434  _mint */\n  tag_41\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":28429:28465  _mint(_msgSender(), initialBalance_) */\n  jump\t// in\ntag_39:\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":27843:28473  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":27760:30046  contract TaxableERC20 is ERC20Decimals, ERC20Taxable, Ownable, ServicePayer {... */\n  jump(tag_77)\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26073:26281  function _setTaxRate(uint256 taxFeePerMille_) internal virtual {... */\ntag_18:\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26173:26177  1000 */\n  0x03e8\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26155:26170  taxFeePerMille_ */\n  dup2\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26155:26177  taxFeePerMille_ < 1000 */\n  lt\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26147:26234  require(taxFeePerMille_ < 1000, \"ERC20Taxable: taxFeePerMille_ must be less than 1000\") */\n  tag_45\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":6541:6543   */\n  0x20\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26147:26234  require(taxFeePerMille_ < 1000, \"ERC20Taxable: taxFeePerMille_ must be less than 1000\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":6523:6544   */\n  mstore\n    /* \"#utility.yul\":6580:6582   */\n  0x34\n    /* \"#utility.yul\":6560:6578   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":6553:6583   */\n  mstore\n    /* \"#utility.yul\":6619:6653   */\n  0x455243323054617861626c653a207461784665655065724d696c6c655f206d75\n    /* \"#utility.yul\":6599:6617   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":6592:6654   */\n  mstore\n    /* \"#utility.yul\":6690:6712   */\n  0x7374206265206c657373207468616e2031303030000000000000000000000000\n    /* \"#utility.yul\":6670:6688   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":6663:6713   */\n  mstore\n    /* \"#utility.yul\":6730:6749   */\n  0x84\n  add\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26147:26234  require(taxFeePerMille_ < 1000, \"ERC20Taxable: taxFeePerMille_ must be less than 1000\") */\n  tag_37\n    /* \"#utility.yul\":6339:6755   */\n  jump\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26147:26234  require(taxFeePerMille_ < 1000, \"ERC20Taxable: taxFeePerMille_ must be less than 1000\") */\ntag_45:\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26247:26255  _taxRate */\n  0x05\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26247:26273  _taxRate = taxFeePerMille_ */\n  sstore\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26073:26281  function _setTaxRate(uint256 taxFeePerMille_) internal virtual {... */\n  jump\t// out\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26470:26679  function _setTaxAddress(address taxAddress_) internal virtual {... */\ntag_20:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26551:26576  taxAddress_ != address(0) */\n  dup2\n  and\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26543:26633  require(taxAddress_ != address(0), \"ERC20Taxable: taxAddress_ cannot be the zero address\") */\n  tag_49\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":6962:6964   */\n  0x20\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26543:26633  require(taxAddress_ != address(0), \"ERC20Taxable: taxAddress_ cannot be the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":6944:6965   */\n  mstore\n    /* \"#utility.yul\":7001:7003   */\n  0x34\n    /* \"#utility.yul\":6981:6999   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":6974:7004   */\n  mstore\n    /* \"#utility.yul\":7040:7074   */\n  0x455243323054617861626c653a20746178416464726573735f2063616e6e6f74\n    /* \"#utility.yul\":7020:7038   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":7013:7075   */\n  mstore\n    /* \"#utility.yul\":7111:7133   */\n  0x20626520746865207a65726f2061646472657373000000000000000000000000\n    /* \"#utility.yul\":7091:7109   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":7084:7134   */\n  mstore\n    /* \"#utility.yul\":7151:7170   */\n  0x84\n  add\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26543:26633  require(taxAddress_ != address(0), \"ERC20Taxable: taxAddress_ cannot be the zero address\") */\n  tag_37\n    /* \"#utility.yul\":6760:7176   */\n  jump\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26543:26633  require(taxAddress_ != address(0), \"ERC20Taxable: taxAddress_ cannot be the zero address\") */\ntag_49:\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26646:26657  _taxAddress */\n  0x06\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26646:26671  _taxAddress = taxAddress_ */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26470:26679  function _setTaxAddress(address taxAddress_) internal virtual {... */\n  jump\t// out\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4759:4950  function _transferOwnership(address newOwner) internal virtual {... */\ntag_28:\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4852:4858  _owner */\n  0x08\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4869:4886  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4902:4942  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4852:4858  _owner */\n  swap2\n  and\n  swap2\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4869:4886  _owner = newOwner */\n  swap1\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4852:4858  _owner */\n  dup3\n  swap1\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4902:4942  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4833:4849  address oldOwner */\n  0x00\n  swap1\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4902:4942  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4822:4950  {... */\n  pop\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4759:4950  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":17321:17869  function _mint(address account, uint256 amount) internal virtual {... */\ntag_41:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":17405:17426  account != address(0) */\n  dup3\n  and\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":17397:17462  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_55\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":7383:7385   */\n  0x20\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":17397:17462  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":7365:7386   */\n  mstore\n    /* \"#utility.yul\":7422:7424   */\n  0x1f\n    /* \"#utility.yul\":7402:7420   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":7395:7425   */\n  mstore\n    /* \"#utility.yul\":7461:7494   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":7441:7459   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":7434:7495   */\n  mstore\n    /* \"#utility.yul\":7512:7530   */\n  0x64\n  add\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":17397:17462  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_37\n    /* \"#utility.yul\":7181:7536   */\n  jump\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":17397:17462  require(account != address(0), \"ERC20: mint to the zero address\") */\ntag_55:\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":17553:17559  amount */\n  dup1\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":17537:17549  _totalSupply */\n  0x02\n  0x00\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":17537:17559  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_60\n  swap2\n  swap1\n  tag_61\n  jump\t// in\ntag_60:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":17708:17726  _balances[account] */\n  dup3\n  and\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":17708:17717  _balances */\n  0x00\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":17708:17726  _balances[account] */\n  dup2\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":17708:17736  _balances[account] += amount */\n  dup1\n  sload\n  dup7\n  add\n  swap1\n  sstore\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":17763:17800  Transfer(address(0), account, amount) */\n  mload\n    /* \"#utility.yul\":7914:7939   */\n  dup5\n  dup2\n  mstore\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":17763:17800  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap2\n    /* \"#utility.yul\":7887:7905   */\n  add\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":17763:17800  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":17321:17869  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":21039:21164  function _beforeTokenTransfer(... */\ntag_59:\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_68:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1032   */\ntag_69:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_80\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_80:\n    /* \"#utility.yul\":298:311   */\n  dup2\n  mload\n    /* \"#utility.yul\":343:347   */\n  0x20\n    /* \"#utility.yul\":331:348   */\n  dup4\n  add\n    /* \"#utility.yul\":372:373   */\n  0x00\n  dup1\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":407:437   */\n  dup5\n  gt\n    /* \"#utility.yul\":404:460   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":440:458   */\n  tag_82\n  tag_68\n  jump\t// in\ntag_82:\n  pop\n    /* \"#utility.yul\":595:597   */\n  0x40\n    /* \"#utility.yul\":589:598   */\n  mload\n  not(0x1f)\n    /* \"#utility.yul\":508:510   */\n  0x1f\n    /* \"#utility.yul\":487:502   */\n  dup6\n  add\n    /* \"#utility.yul\":483:512   */\n  dup2\n  and\n    /* \"#utility.yul\":653:655   */\n  0x3f\n    /* \"#utility.yul\":641:656   */\n  add\n    /* \"#utility.yul\":637:666   */\n  and\n    /* \"#utility.yul\":625:667   */\n  dup2\n  add\n    /* \"#utility.yul\":718:740   */\n  dup2\n  dup2\n  lt\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":682:716   */\n  dup3\n  gt\n    /* \"#utility.yul\":679:741   */\n  or\n    /* \"#utility.yul\":676:764   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":744:762   */\n  tag_84\n  tag_68\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":780:782   */\n  0x40\n    /* \"#utility.yul\":773:795   */\n  mstore\n    /* \"#utility.yul\":830:852   */\n  dup4\n  dup2\n  mstore\n    /* \"#utility.yul\":815:821   */\n  swap1\n  pop\n  dup1\n    /* \"#utility.yul\":867:883   */\n  dup3\n  dup5\n  add\n    /* \"#utility.yul\":864:889   */\n  dup8\n  lt\n    /* \"#utility.yul\":861:906   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":899:900   */\n  dup1\n    /* \"#utility.yul\":892:904   */\n  revert\n    /* \"#utility.yul\":861:906   */\ntag_85:\n    /* \"#utility.yul\":945:951   */\n  dup4\n    /* \"#utility.yul\":940:943   */\n  dup4\n    /* \"#utility.yul\":933:937   */\n  0x20\n    /* \"#utility.yul\":925:931   */\n  dup4\n    /* \"#utility.yul\":921:938   */\n  add\n    /* \"#utility.yul\":915:952   */\n  mcopy\n    /* \"#utility.yul\":1000:1001   */\n  0x00\n    /* \"#utility.yul\":993:997   */\n  0x20\n    /* \"#utility.yul\":984:990   */\n  dup6\n    /* \"#utility.yul\":976:982   */\n  dup4\n    /* \"#utility.yul\":972:991   */\n  add\n    /* \"#utility.yul\":968:998   */\n  add\n    /* \"#utility.yul\":961:1002   */\n  mstore\n    /* \"#utility.yul\":1020:1026   */\n  dup1\n    /* \"#utility.yul\":1011:1026   */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":146:1032   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1037:1197   */\ntag_70:\n    /* \"#utility.yul\":1114:1127   */\n  dup1\n  mload\n    /* \"#utility.yul\":1167:1171   */\n  0xff\n    /* \"#utility.yul\":1156:1172   */\n  dup2\n  and\n    /* \"#utility.yul\":1146:1173   */\n  dup2\n  eq\n    /* \"#utility.yul\":1136:1191   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":1187:1188   */\n  0x00\n    /* \"#utility.yul\":1184:1185   */\n  dup1\n    /* \"#utility.yul\":1177:1189   */\n  revert\n    /* \"#utility.yul\":1136:1191   */\ntag_87:\n    /* \"#utility.yul\":1037:1197   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1379   */\ntag_71:\n    /* \"#utility.yul\":1281:1294   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1323:1354   */\n  dup2\n  and\n    /* \"#utility.yul\":1313:1355   */\n  dup2\n  eq\n    /* \"#utility.yul\":1303:1373   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":1369:1370   */\n  0x00\n    /* \"#utility.yul\":1366:1367   */\n  dup1\n    /* \"#utility.yul\":1359:1371   */\n  revert\n    /* \"#utility.yul\":1384:2644   */\ntag_2:\n    /* \"#utility.yul\":1552:1558   */\n  0x00\n    /* \"#utility.yul\":1560:1566   */\n  dup1\n    /* \"#utility.yul\":1568:1574   */\n  0x00\n    /* \"#utility.yul\":1576:1582   */\n  dup1\n    /* \"#utility.yul\":1584:1590   */\n  0x00\n    /* \"#utility.yul\":1592:1598   */\n  dup1\n    /* \"#utility.yul\":1600:1606   */\n  0x00\n    /* \"#utility.yul\":1608:1614   */\n  dup1\n    /* \"#utility.yul\":1661:1664   */\n  0x0100\n    /* \"#utility.yul\":1649:1658   */\n  dup10\n    /* \"#utility.yul\":1640:1647   */\n  dup12\n    /* \"#utility.yul\":1636:1659   */\n  sub\n    /* \"#utility.yul\":1632:1665   */\n  slt\n    /* \"#utility.yul\":1629:1682   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":1678:1679   */\n  0x00\n    /* \"#utility.yul\":1675:1676   */\n  dup1\n    /* \"#utility.yul\":1668:1680   */\n  revert\n    /* \"#utility.yul\":1629:1682   */\ntag_91:\n    /* \"#utility.yul\":1705:1721   */\n  dup9\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1733:1763   */\n  dup2\n  gt\n    /* \"#utility.yul\":1730:1780   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":1776:1777   */\n  0x00\n    /* \"#utility.yul\":1773:1774   */\n  dup1\n    /* \"#utility.yul\":1766:1778   */\n  revert\n    /* \"#utility.yul\":1730:1780   */\ntag_92:\n    /* \"#utility.yul\":1799:1860   */\n  tag_93\n    /* \"#utility.yul\":1852:1859   */\n  dup12\n    /* \"#utility.yul\":1843:1849   */\n  dup3\n    /* \"#utility.yul\":1832:1841   */\n  dup13\n    /* \"#utility.yul\":1828:1850   */\n  add\n    /* \"#utility.yul\":1799:1860   */\n  tag_69\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":1906:1908   */\n  0x20\n    /* \"#utility.yul\":1891:1909   */\n  dup12\n  add\n    /* \"#utility.yul\":1885:1910   */\n  mload\n    /* \"#utility.yul\":1789:1860   */\n  swap1\n  swap10\n  pop\n    /* \"#utility.yul\":1885:1910   */\n  swap1\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1922:1954   */\n  dup2\n  gt\n    /* \"#utility.yul\":1919:1971   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":1967:1968   */\n  0x00\n    /* \"#utility.yul\":1964:1965   */\n  dup1\n    /* \"#utility.yul\":1957:1969   */\n  revert\n    /* \"#utility.yul\":1919:1971   */\ntag_94:\n    /* \"#utility.yul\":1990:2053   */\n  tag_95\n    /* \"#utility.yul\":2045:2052   */\n  dup12\n    /* \"#utility.yul\":2034:2042   */\n  dup3\n    /* \"#utility.yul\":2023:2032   */\n  dup13\n    /* \"#utility.yul\":2019:2043   */\n  add\n    /* \"#utility.yul\":1990:2053   */\n  tag_69\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":1980:2053   */\n  swap8\n  pop\n  pop\n    /* \"#utility.yul\":2072:2119   */\n  tag_96\n    /* \"#utility.yul\":2115:2117   */\n  0x40\n    /* \"#utility.yul\":2104:2113   */\n  dup11\n    /* \"#utility.yul\":2100:2118   */\n  add\n    /* \"#utility.yul\":2072:2119   */\n  tag_70\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":2181:2183   */\n  0x60\n    /* \"#utility.yul\":2166:2184   */\n  dup11\n  add\n    /* \"#utility.yul\":2160:2185   */\n  mload\n    /* \"#utility.yul\":2275:2278   */\n  0x80\n    /* \"#utility.yul\":2260:2279   */\n  dup12\n  add\n    /* \"#utility.yul\":2254:2280   */\n  mload\n    /* \"#utility.yul\":2062:2119   */\n  swap2\n  swap8\n  pop\n    /* \"#utility.yul\":2160:2185   */\n  swap6\n  pop\n    /* \"#utility.yul\":2254:2280   */\n  swap4\n  pop\n    /* \"#utility.yul\":2325:2375   */\n  tag_97\n    /* \"#utility.yul\":2370:2373   */\n  0xa0\n    /* \"#utility.yul\":2355:2374   */\n  dup11\n  add\n    /* \"#utility.yul\":2325:2375   */\n  tag_71\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":2421:2424   */\n  0xc0\n    /* \"#utility.yul\":2406:2425   */\n  dup11\n  add\n    /* \"#utility.yul\":2400:2426   */\n  mload\n    /* \"#utility.yul\":2315:2375   */\n  swap1\n  swap4\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2438:2470   */\n  dup2\n  gt\n    /* \"#utility.yul\":2435:2487   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":2483:2484   */\n  0x00\n    /* \"#utility.yul\":2480:2481   */\n  dup1\n    /* \"#utility.yul\":2473:2485   */\n  revert\n    /* \"#utility.yul\":2435:2487   */\ntag_98:\n    /* \"#utility.yul\":2506:2569   */\n  tag_99\n    /* \"#utility.yul\":2561:2568   */\n  dup12\n    /* \"#utility.yul\":2550:2558   */\n  dup3\n    /* \"#utility.yul\":2539:2548   */\n  dup13\n    /* \"#utility.yul\":2535:2559   */\n  add\n    /* \"#utility.yul\":2506:2569   */\n  tag_69\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2496:2569   */\n  swap3\n  pop\n  pop\n    /* \"#utility.yul\":2588:2638   */\n  tag_100\n    /* \"#utility.yul\":2633:2636   */\n  0xe0\n    /* \"#utility.yul\":2622:2631   */\n  dup11\n    /* \"#utility.yul\":2618:2637   */\n  add\n    /* \"#utility.yul\":2588:2638   */\n  tag_71\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":2578:2638   */\n  swap1\n  pop\n    /* \"#utility.yul\":1384:2644   */\n  swap3\n  swap6\n  swap9\n  pop\n  swap3\n  swap6\n  swap9\n  swap1\n  swap4\n  swap7\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2649:3029   */\ntag_72:\n    /* \"#utility.yul\":2728:2729   */\n  0x01\n    /* \"#utility.yul\":2724:2736   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":2771:2783   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":2792:2853   */\n  tag_102\n  jumpi\n    /* \"#utility.yul\":2846:2850   */\n  0x7f\n    /* \"#utility.yul\":2838:2844   */\n  dup3\n    /* \"#utility.yul\":2834:2851   */\n  and\n    /* \"#utility.yul\":2824:2851   */\n  swap2\n  pop\n    /* \"#utility.yul\":2792:2853   */\ntag_102:\n    /* \"#utility.yul\":2899:2901   */\n  0x20\n    /* \"#utility.yul\":2891:2897   */\n  dup3\n    /* \"#utility.yul\":2888:2902   */\n  lt\n    /* \"#utility.yul\":2868:2886   */\n  dup2\n    /* \"#utility.yul\":2865:2903   */\n  sub\n    /* \"#utility.yul\":2862:3023   */\n  tag_103\n  jumpi\n    /* \"#utility.yul\":2945:2955   */\n  0x4e487b71\n    /* \"#utility.yul\":2940:2943   */\n  0xe0\n    /* \"#utility.yul\":2936:2956   */\n  shl\n    /* \"#utility.yul\":2933:2934   */\n  0x00\n    /* \"#utility.yul\":2926:2957   */\n  mstore\n    /* \"#utility.yul\":2980:2984   */\n  0x22\n    /* \"#utility.yul\":2977:2978   */\n  0x04\n    /* \"#utility.yul\":2970:2985   */\n  mstore\n    /* \"#utility.yul\":3008:3012   */\n  0x24\n    /* \"#utility.yul\":3005:3006   */\n  0x00\n    /* \"#utility.yul\":2998:3013   */\n  revert\n    /* \"#utility.yul\":2862:3023   */\ntag_103:\n  pop\n    /* \"#utility.yul\":2649:3029   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3160:3678   */\ntag_74:\n    /* \"#utility.yul\":3262:3264   */\n  0x1f\n    /* \"#utility.yul\":3257:3260   */\n  dup3\n    /* \"#utility.yul\":3254:3265   */\n  gt\n    /* \"#utility.yul\":3251:3672   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":3298:3303   */\n  dup1\n    /* \"#utility.yul\":3295:3296   */\n  0x00\n    /* \"#utility.yul\":3288:3304   */\n  mstore\n    /* \"#utility.yul\":3342:3346   */\n  0x20\n    /* \"#utility.yul\":3339:3340   */\n  0x00\n    /* \"#utility.yul\":3329:3347   */\n  keccak256\n    /* \"#utility.yul\":3412:3414   */\n  0x1f\n    /* \"#utility.yul\":3400:3410   */\n  dup5\n    /* \"#utility.yul\":3396:3415   */\n  add\n    /* \"#utility.yul\":3393:3394   */\n  0x05\n    /* \"#utility.yul\":3389:3416   */\n  shr\n    /* \"#utility.yul\":3383:3387   */\n  dup2\n    /* \"#utility.yul\":3379:3417   */\n  add\n    /* \"#utility.yul\":3448:3452   */\n  0x20\n    /* \"#utility.yul\":3436:3446   */\n  dup6\n    /* \"#utility.yul\":3433:3453   */\n  lt\n    /* \"#utility.yul\":3430:3477   */\n  iszero\n  tag_107\n  jumpi\n  pop\n    /* \"#utility.yul\":3471:3475   */\n  dup1\n    /* \"#utility.yul\":3430:3477   */\ntag_107:\n    /* \"#utility.yul\":3526:3528   */\n  0x1f\n    /* \"#utility.yul\":3521:3524   */\n  dup5\n    /* \"#utility.yul\":3517:3529   */\n  add\n    /* \"#utility.yul\":3514:3515   */\n  0x05\n    /* \"#utility.yul\":3510:3530   */\n  shr\n    /* \"#utility.yul\":3504:3508   */\n  dup3\n    /* \"#utility.yul\":3500:3531   */\n  add\n    /* \"#utility.yul\":3490:3531   */\n  swap2\n  pop\n    /* \"#utility.yul\":3581:3662   */\ntag_108:\n    /* \"#utility.yul\":3599:3601   */\n  dup2\n    /* \"#utility.yul\":3592:3597   */\n  dup2\n    /* \"#utility.yul\":3589:3602   */\n  lt\n    /* \"#utility.yul\":3581:3662   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":3658:3659   */\n  0x00\n    /* \"#utility.yul\":3644:3660   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3625:3626   */\n  0x01\n    /* \"#utility.yul\":3614:3627   */\n  add\n    /* \"#utility.yul\":3581:3662   */\n  jump(tag_108)\ntag_110:\n    /* \"#utility.yul\":3585:3588   */\n  pop\n  pop\n    /* \"#utility.yul\":3160:3678   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3854:5153   */\ntag_13:\n    /* \"#utility.yul\":3974:3984   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3996:4026   */\n  dup2\n  gt\n    /* \"#utility.yul\":3993:4049   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":4029:4047   */\n  tag_114\n  tag_68\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":4058:4155   */\n  tag_115\n    /* \"#utility.yul\":4148:4154   */\n  dup2\n    /* \"#utility.yul\":4108:4146   */\n  tag_116\n    /* \"#utility.yul\":4140:4144   */\n  dup5\n    /* \"#utility.yul\":4134:4145   */\n  sload\n    /* \"#utility.yul\":4108:4146   */\n  tag_72\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":4102:4106   */\n  dup5\n    /* \"#utility.yul\":4058:4155   */\n  tag_74\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":4204:4208   */\n  0x20\n    /* \"#utility.yul\":4235:4237   */\n  0x1f\n    /* \"#utility.yul\":4224:4238   */\n  dup3\n  gt\n    /* \"#utility.yul\":4252:4253   */\n  0x01\n    /* \"#utility.yul\":4247:4896   */\n  dup2\n  eq\n  tag_118\n  jumpi\n    /* \"#utility.yul\":4940:4941   */\n  0x00\n    /* \"#utility.yul\":4957:4963   */\n  dup4\n    /* \"#utility.yul\":4954:5043   */\n  iszero\n  tag_119\n  jumpi\n  pop\n    /* \"#utility.yul\":5009:5028   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":5003:5029   */\n  mload\n    /* \"#utility.yul\":4954:5043   */\ntag_119:\n  not(0x00)\n    /* \"#utility.yul\":3811:3812   */\n  0x03\n    /* \"#utility.yul\":3807:3818   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":3803:3827   */\n  shr\n    /* \"#utility.yul\":3799:3828   */\n  not\n    /* \"#utility.yul\":3789:3829   */\n  and\n    /* \"#utility.yul\":3835:3836   */\n  0x01\n    /* \"#utility.yul\":3831:3842   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":3786:3843   */\n  or\n    /* \"#utility.yul\":5056:5137   */\n  dup5\n  sstore\n    /* \"#utility.yul\":4217:5147   */\n  jump(tag_110)\n    /* \"#utility.yul\":4247:4896   */\ntag_118:\n    /* \"#utility.yul\":3107:3108   */\n  0x00\n    /* \"#utility.yul\":3100:3114   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":3144:3148   */\n  0x20\n    /* \"#utility.yul\":3131:3149   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":4283:4303   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":4401:4623   */\ntag_122:\n    /* \"#utility.yul\":4415:4422   */\n  dup3\n    /* \"#utility.yul\":4412:4413   */\n  dup2\n    /* \"#utility.yul\":4409:4423   */\n  lt\n    /* \"#utility.yul\":4401:4623   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":4497:4516   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":4491:4517   */\n  mload\n    /* \"#utility.yul\":4476:4518   */\n  dup3\n  sstore\n    /* \"#utility.yul\":4604:4608   */\n  0x20\n    /* \"#utility.yul\":4589:4609   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":4557:4558   */\n  0x01\n    /* \"#utility.yul\":4545:4559   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":4431:4443   */\n  add\n    /* \"#utility.yul\":4401:4623   */\n  jump(tag_122)\ntag_124:\n    /* \"#utility.yul\":4405:4408   */\n  pop\n    /* \"#utility.yul\":4651:4657   */\n  dup5\n    /* \"#utility.yul\":4642:4649   */\n  dup3\n    /* \"#utility.yul\":4639:4658   */\n  lt\n    /* \"#utility.yul\":4636:4837   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":4712:4731   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":4706:4732   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":4795:4796   */\n  0x03\n    /* \"#utility.yul\":4791:4805   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":4807:4810   */\n  0xf8\n    /* \"#utility.yul\":4787:4811   */\n  and\n    /* \"#utility.yul\":4783:4820   */\n  shr\n    /* \"#utility.yul\":4779:4821   */\n  not\n    /* \"#utility.yul\":4764:4822   */\n  and\n    /* \"#utility.yul\":4749:4823   */\n  dup2\n  sstore\n    /* \"#utility.yul\":4636:4837   */\ntag_125:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4883:4884   */\n  0x01\n    /* \"#utility.yul\":4867:4881   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":4863:4885   */\n  add\n    /* \"#utility.yul\":4850:4886   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":3854:5153   */\n  jump\t// out\n    /* \"#utility.yul\":5158:5447   */\ntag_76:\n    /* \"#utility.yul\":5200:5203   */\n  0x00\n    /* \"#utility.yul\":5238:5243   */\n  dup2\n    /* \"#utility.yul\":5232:5244   */\n  mload\n    /* \"#utility.yul\":5265:5271   */\n  dup1\n    /* \"#utility.yul\":5260:5263   */\n  dup5\n    /* \"#utility.yul\":5253:5272   */\n  mstore\n    /* \"#utility.yul\":5321:5327   */\n  dup1\n    /* \"#utility.yul\":5314:5318   */\n  0x20\n    /* \"#utility.yul\":5307:5312   */\n  dup5\n    /* \"#utility.yul\":5303:5319   */\n  add\n    /* \"#utility.yul\":5296:5300   */\n  0x20\n    /* \"#utility.yul\":5291:5294   */\n  dup7\n    /* \"#utility.yul\":5287:5301   */\n  add\n    /* \"#utility.yul\":5281:5328   */\n  mcopy\n    /* \"#utility.yul\":5373:5374   */\n  0x00\n    /* \"#utility.yul\":5366:5370   */\n  0x20\n    /* \"#utility.yul\":5357:5363   */\n  dup3\n    /* \"#utility.yul\":5352:5355   */\n  dup7\n    /* \"#utility.yul\":5348:5364   */\n  add\n    /* \"#utility.yul\":5344:5371   */\n  add\n    /* \"#utility.yul\":5337:5375   */\n  mstore\n    /* \"#utility.yul\":5436:5440   */\n  0x20\n    /* \"#utility.yul\":5429:5431   */\n  0x1f\n    /* \"#utility.yul\":5425:5432   */\n  not\n    /* \"#utility.yul\":5420:5422   */\n  0x1f\n    /* \"#utility.yul\":5412:5418   */\n  dup4\n    /* \"#utility.yul\":5408:5423   */\n  add\n    /* \"#utility.yul\":5404:5433   */\n  and\n    /* \"#utility.yul\":5399:5402   */\n  dup6\n    /* \"#utility.yul\":5395:5434   */\n  add\n    /* \"#utility.yul\":5391:5441   */\n  add\n    /* \"#utility.yul\":5384:5441   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":5158:5447   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5452:5930   */\ntag_31:\n    /* \"#utility.yul\":5675:5677   */\n  0x60\n    /* \"#utility.yul\":5664:5673   */\n  dup2\n    /* \"#utility.yul\":5657:5678   */\n  mstore\n    /* \"#utility.yul\":5638:5642   */\n  0x00\n    /* \"#utility.yul\":5701:5746   */\n  tag_128\n    /* \"#utility.yul\":5742:5744   */\n  0x60\n    /* \"#utility.yul\":5731:5740   */\n  dup4\n    /* \"#utility.yul\":5727:5745   */\n  add\n    /* \"#utility.yul\":5719:5725   */\n  dup7\n    /* \"#utility.yul\":5701:5746   */\n  tag_76\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":5794:5803   */\n  dup3\n    /* \"#utility.yul\":5786:5792   */\n  dup2\n    /* \"#utility.yul\":5782:5804   */\n  sub\n    /* \"#utility.yul\":5777:5779   */\n  0x20\n    /* \"#utility.yul\":5766:5775   */\n  dup5\n    /* \"#utility.yul\":5762:5780   */\n  add\n    /* \"#utility.yul\":5755:5805   */\n  mstore\n    /* \"#utility.yul\":5822:5855   */\n  tag_129\n    /* \"#utility.yul\":5848:5854   */\n  dup2\n    /* \"#utility.yul\":5840:5846   */\n  dup7\n    /* \"#utility.yul\":5822:5855   */\n  tag_76\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":5814:5855   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":5920:5921   */\n  0x01\n    /* \"#utility.yul\":5916:5917   */\n  dup1\n    /* \"#utility.yul\":5911:5914   */\n  0xa0\n    /* \"#utility.yul\":5907:5918   */\n  shl\n    /* \"#utility.yul\":5903:5922   */\n  sub\n    /* \"#utility.yul\":5895:5901   */\n  dup4\n    /* \"#utility.yul\":5891:5923   */\n  and\n    /* \"#utility.yul\":5886:5888   */\n  0x40\n    /* \"#utility.yul\":5875:5884   */\n  dup4\n    /* \"#utility.yul\":5871:5889   */\n  add\n    /* \"#utility.yul\":5864:5924   */\n  mstore\n    /* \"#utility.yul\":5452:5930   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7541:7763   */\ntag_61:\n    /* \"#utility.yul\":7606:7615   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":7627:7637   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":7624:7757   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":7679:7689   */\n  0x4e487b71\n    /* \"#utility.yul\":7674:7677   */\n  0xe0\n    /* \"#utility.yul\":7670:7690   */\n  shl\n    /* \"#utility.yul\":7667:7668   */\n  0x00\n    /* \"#utility.yul\":7660:7691   */\n  mstore\n    /* \"#utility.yul\":7714:7718   */\n  0x11\n    /* \"#utility.yul\":7711:7712   */\n  0x04\n    /* \"#utility.yul\":7704:7719   */\n  mstore\n    /* \"#utility.yul\":7742:7746   */\n  0x24\n    /* \"#utility.yul\":7739:7740   */\n  0x00\n    /* \"#utility.yul\":7732:7747   */\n  revert\n    /* \"#utility.yul\":7624:7757   */\ntag_135:\n    /* \"#utility.yul\":7541:7763   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7768:7945   */\ntag_77:\n    /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":27760:30046  contract TaxableERC20 is ERC20Decimals, ERC20Taxable, Ownable, ServicePayer {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x162cb204f5715a135dda2f6a48fa2a396e865c511d3cd2f5c8fa36ddf89ecd23\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":27760:30046  contract TaxableERC20 is ERC20Decimals, ERC20Taxable, Ownable, ServicePayer {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x95d89b41\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xb7bda68f\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xb7bda68f\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xc283cd12\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xc6d205fa\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa1883d26\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb7600f7a\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x313ce567\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x26789993\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10711:10811  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":13062:13263  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":1085:1099   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1078:1100   */\n      iszero\n        /* \"#utility.yul\":1060:1101   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1048:1050   */\n      0x20\n        /* \"#utility.yul\":1033:1051   */\n      add\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":13062:13263  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_28\n        /* \"#utility.yul\":920:1107   */\n      jump\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":11831:11939  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":11919:11931  _totalSupply */\n      sload(0x02)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":11831:11939  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_36:\n      mload(0x40)\n        /* \"#utility.yul\":1258:1283   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":11831:11939  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_28\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29686:29906  function transferFrom(... */\n    tag_6:\n      tag_30\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29374:29512  function setExclusionFromTaxFee(address account, bool status) public onlyOwner {... */\n    tag_7:\n      tag_45\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29914:30043  function decimals() public view virtual override(ERC20, ERC20Decimals) returns (uint8) {... */\n    tag_8:\n      mload(0x40)\n        /* \"#utility.yul\":2197:2201   */\n      0xff\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":22484:22493  _decimals */\n      immutable(\"0x162cb204f5715a135dda2f6a48fa2a396e865c511d3cd2f5c8fa36ddf89ecd23\")\n        /* \"#utility.yul\":2185:2202   */\n      and\n        /* \"#utility.yul\":2167:2203   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2155:2157   */\n      0x20\n        /* \"#utility.yul\":2140:2158   */\n      add\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29914:30043  function decimals() public view virtual override(ERC20, ERC20Decimals) returns (uint8) {... */\n      tag_28\n        /* \"#utility.yul\":2025:2209   */\n      jump\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14547:14785  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_9:\n      tag_30\n      tag_54\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12002:12129  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_36\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12103:12121  _balances[account] */\n      and\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12076:12083  uint256 */\n      0x00\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12103:12121  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12002:12129  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4140:4243  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_45\n      tag_63\n      jump\t// in\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":3492:3579  function owner() public view virtual returns (address) {... */\n    tag_12:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":3565:3571  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":3492:3579  function owner() public view virtual returns (address) {... */\n    tag_64:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2569:2601   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2551:2602   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2539:2541   */\n      0x20\n        /* \"#utility.yul\":2524:2542   */\n      add\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":3492:3579  function owner() public view virtual returns (address) {... */\n      tag_28\n        /* \"#utility.yul\":2405:2608   */\n      jump\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10930:11034  function symbol() public view virtual override returns (string memory) {... */\n    tag_13:\n      tag_26\n      tag_69\n      jump\t// in\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29053:29158  function setTaxAddress(address taxAddress) public onlyOwner {... */\n    tag_14:\n      tag_45\n      tag_72\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15288:15724  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_15:\n      tag_30\n      tag_75\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29520:29678  function transfer(address to, uint256 amount) public virtual override(ERC20, ERC20Taxable) returns (bool) {... */\n    tag_16:\n      tag_30\n      tag_79\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":28706:28820  function setTaxFeePerMille(uint256 taxFeePerMille) public onlyOwner {... */\n    tag_17:\n      tag_45\n      tag_83\n      calldatasize\n      0x04\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":25550:25639  function taxAddress() public view returns (address) {... */\n    tag_18:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":25620:25631  _taxAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":25550:25639  function taxAddress() public view returns (address) {... */\n      jump(tag_64)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":25754:25884  function isExcludedFromTaxFee(address account) public view returns (bool) {... */\n    tag_19:\n      tag_30\n      tag_90\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_90:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":25846:25876  _isExcludedFromTaxFee[account] */\n      and\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":25822:25826  bool */\n      0x00\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":25846:25876  _isExcludedFromTaxFee[account] */\n      swap1\n      dup2\n      mstore\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":25846:25867  _isExcludedFromTaxFee */\n      0x07\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":25846:25876  _isExcludedFromTaxFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":25754:25884  function isExcludedFromTaxFee(address account) public view returns (bool) {... */\n      jump\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":25384:25474  function taxFeePerMille() public view returns (uint256) {... */\n    tag_20:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":25458:25466  _taxRate */\n      sload(0x05)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":25384:25474  function taxFeePerMille() public view returns (uint256) {... */\n      jump(tag_36)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12591:12742  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_21:\n      tag_36\n      tag_97\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4398:4599  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_45\n      tag_102\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10711:10811  function name() public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10765:10778  string memory */\n      0x60\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10798:10803  _name */\n      0x03\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10791:10803  return _name */\n      dup1\n      sload\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_107\n      swap1\n      tag_106\n      jump\t// in\n    tag_107:\n      dup1\n      iszero\n      tag_108\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_109\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_108)\n    tag_109:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_110:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_110\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_108:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10711:10811  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":13062:13263  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_33:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":13145:13149  bool */\n      0x00\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":2125:2135  msg.sender */\n      caller\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":13201:13233  _approve(owner, spender, amount) */\n      tag_114\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":2125:2135  msg.sender */\n      dup2\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":13217:13224  spender */\n      dup6\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":13226:13232  amount */\n      dup6\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":13201:13209  _approve */\n      tag_115\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":13201:13233  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_114:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":13251:13255  true */\n      0x01\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":13244:13255  return true */\n      swap2\n      pop\n      pop\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":13062:13263  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_111:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29686:29906  function transferFrom(... */\n    tag_43:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29838:29842  bool */\n      0x00\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29862:29898  super.transferFrom(from, to, amount) */\n      tag_118\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29881:29885  from */\n      dup5\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29887:29889  to */\n      dup5\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29891:29897  amount */\n      dup5\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29862:29880  super.transferFrom */\n      tag_119\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29862:29898  super.transferFrom(from, to, amount) */\n      jump\t// in\n    tag_118:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29855:29898  return super.transferFrom(from, to, amount) */\n      swap5\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29686:29906  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29374:29512  function setExclusionFromTaxFee(address account, bool status) public onlyOwner {... */\n    tag_48:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":3378:3391  _checkOwner() */\n      tag_121\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":3378:3389  _checkOwner */\n      tag_122\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":3378:3391  _checkOwner() */\n      jump\t// in\n    tag_121:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":27005:27036  _isExcludedFromTaxFee[account_] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":27005:27026  _isExcludedFromTaxFee */\n      0x07\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":27005:27036  _isExcludedFromTaxFee[account_] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":27005:27046  _isExcludedFromTaxFee[account_] = status_ */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup3\n      iszero\n      iszero\n      or\n      swap1\n      sstore\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29374:29512  function setExclusionFromTaxFee(address account, bool status) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14547:14785  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_55:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14635:14639  bool */\n      0x00\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":2125:2135  msg.sender */\n      caller\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14691:14755  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_114\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":2125:2135  msg.sender */\n      dup2\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14707:14714  spender */\n      dup6\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14744:14754  addedValue */\n      dup6\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14716:14741  allowance(owner, spender) */\n      tag_132\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":2125:2135  msg.sender */\n      dup4\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14707:14714  spender */\n      dup4\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14716:14725  allowance */\n      tag_99\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14716:14741  allowance(owner, spender) */\n      jump\t// in\n    tag_132:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14716:14754  allowance(owner, spender) + addedValue */\n      tag_133\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14691:14699  _approve */\n      tag_115\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":14691:14755  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4140:4243  function renounceOwnership() public virtual onlyOwner {... */\n    tag_63:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":3378:3391  _checkOwner() */\n      tag_137\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":3378:3389  _checkOwner */\n      tag_122\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":3378:3391  _checkOwner() */\n      jump\t// in\n    tag_137:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4205:4235  _transferOwnership(address(0)) */\n      tag_139\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4232:4233  0 */\n      0x00\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4205:4223  _transferOwnership */\n      tag_140\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4205:4235  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_139:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4140:4243  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10930:11034  function symbol() public view virtual override returns (string memory) {... */\n    tag_69:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":10986:10999  string memory */\n      0x60\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":11019:11026  _symbol */\n      0x04\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":11012:11026  return _symbol */\n      dup1\n      sload\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29053:29158  function setTaxAddress(address taxAddress) public onlyOwner {... */\n    tag_73:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":3378:3391  _checkOwner() */\n      tag_149\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":3378:3389  _checkOwner */\n      tag_122\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":3378:3391  _checkOwner() */\n      jump\t// in\n    tag_149:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29124:29150  _setTaxAddress(taxAddress) */\n      tag_151\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29139:29149  taxAddress */\n      dup2\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29124:29138  _setTaxAddress */\n      tag_152\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29124:29150  _setTaxAddress(taxAddress) */\n      jump\t// in\n    tag_151:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29053:29158  function setTaxAddress(address taxAddress) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15288:15724  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_76:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15381:15385  bool */\n      0x00\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":2125:2135  msg.sender */\n      caller\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15381:15385  bool */\n      dup2\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15464:15489  allowance(owner, spender) */\n      tag_155\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":2125:2135  msg.sender */\n      dup3\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15481:15488  spender */\n      dup7\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15464:15473  allowance */\n      tag_99\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15464:15489  allowance(owner, spender) */\n      jump\t// in\n    tag_155:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15437:15489  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15528:15543  subtractedValue */\n      dup4\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15508:15524  currentAllowance */\n      dup2\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15508:15543  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15500:15585  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3958:3960   */\n      0x20\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15500:15585  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3940:3961   */\n      mstore\n        /* \"#utility.yul\":3997:3999   */\n      0x25\n        /* \"#utility.yul\":3977:3995   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3970:4000   */\n      mstore\n        /* \"#utility.yul\":4036:4070   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4016:4034   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4009:4071   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":4087:4105   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4080:4115   */\n      mstore\n        /* \"#utility.yul\":4132:4151   */\n      0x84\n      add\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15500:15585  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15621:15681  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_159\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15630:15635  owner */\n      dup3\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15637:15644  spender */\n      dup7\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15665:15680  subtractedValue */\n      dup7\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15646:15662  currentAllowance */\n      dup5\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15646:15680  currentAllowance - subtractedValue */\n      sub\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15621:15629  _approve */\n      tag_115\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15621:15681  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_159:\n      pop\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15712:15716  true */\n      0x01\n      swap5\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":15288:15724  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29520:29678  function transfer(address to, uint256 amount) public virtual override(ERC20, ERC20Taxable) returns (bool) {... */\n    tag_80:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29620:29624  bool */\n      0x00\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29644:29670  super.transfer(to, amount) */\n      tag_161\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29659:29661  to */\n      dup4\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29663:29669  amount */\n      dup4\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29644:29658  super.transfer */\n      tag_162\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29644:29670  super.transfer(to, amount) */\n      jump\t// in\n    tag_161:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29637:29670  return super.transfer(to, amount) */\n      swap4\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":29520:29678  function transfer(address to, uint256 amount) public virtual override(ERC20, ERC20Taxable) returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":28706:28820  function setTaxFeePerMille(uint256 taxFeePerMille) public onlyOwner {... */\n    tag_85:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":3378:3391  _checkOwner() */\n      tag_164\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":3378:3389  _checkOwner */\n      tag_122\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":3378:3391  _checkOwner() */\n      jump\t// in\n    tag_164:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":28785:28812  _setTaxRate(taxFeePerMille) */\n      tag_151\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":28797:28811  taxFeePerMille */\n      dup2\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":28785:28796  _setTaxRate */\n      tag_167\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":28785:28812  _setTaxRate(taxFeePerMille) */\n      jump\t// in\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12591:12742  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_99:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12707:12725  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12680:12687  uint256 */\n      0x00\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12707:12725  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12707:12718  _allowances */\n      0x01\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12707:12725  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12707:12734  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":12591:12742  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4398:4599  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_103:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":3378:3391  _checkOwner() */\n      tag_173\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":3378:3389  _checkOwner */\n      tag_122\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":3378:3391  _checkOwner() */\n      jump\t// in\n    tag_173:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4487:4509  newOwner != address(0) */\n      dup2\n      and\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4479:4552  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4364:4366   */\n      0x20\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4479:4552  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4346:4367   */\n      mstore\n        /* \"#utility.yul\":4403:4405   */\n      0x26\n        /* \"#utility.yul\":4383:4401   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4376:4406   */\n      mstore\n        /* \"#utility.yul\":4442:4476   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":4422:4440   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4415:4477   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":4493:4511   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4486:4522   */\n      mstore\n        /* \"#utility.yul\":4539:4558   */\n      0x84\n      add\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4479:4552  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_157\n        /* \"#utility.yul\":4162:4564   */\n      jump\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4479:4552  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_175:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4563:4591  _transferOwnership(newOwner) */\n      tag_151\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4582:4590  newOwner */\n      dup2\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4563:4581  _transferOwnership */\n      tag_140\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4563:4591  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19315:19695  function _approve(... */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19451:19470  owner != address(0) */\n      dup4\n      and\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19443:19511  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4771:4773   */\n      0x20\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19443:19511  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4753:4774   */\n      mstore\n        /* \"#utility.yul\":4810:4812   */\n      0x24\n        /* \"#utility.yul\":4790:4808   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4783:4813   */\n      mstore\n        /* \"#utility.yul\":4849:4883   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4829:4847   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4822:4884   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4900:4918   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4893:4927   */\n      mstore\n        /* \"#utility.yul\":4944:4963   */\n      0x84\n      add\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19443:19511  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_157\n        /* \"#utility.yul\":4569:4969   */\n      jump\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19443:19511  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_181:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19530:19551  spender != address(0) */\n      dup3\n      and\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19522:19590  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5176:5178   */\n      0x20\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19522:19590  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5158:5179   */\n      mstore\n        /* \"#utility.yul\":5215:5217   */\n      0x22\n        /* \"#utility.yul\":5195:5213   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5188:5218   */\n      mstore\n        /* \"#utility.yul\":5254:5288   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":5234:5252   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5227:5289   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":5305:5323   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5298:5330   */\n      mstore\n        /* \"#utility.yul\":5347:5366   */\n      0x84\n      add\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19522:19590  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_157\n        /* \"#utility.yul\":4974:5372   */\n      jump\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19522:19590  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_184:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19603:19621  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19603:19614  _allowances */\n      0x01\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19603:19621  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19603:19630  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19603:19639  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19655:19687  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1258:1283   */\n      dup5\n      dup2\n      mstore\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19655:19687  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19655:19687  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19315:19695  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24561:25191  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_119:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24658:24662  bool */\n      0x00\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":2125:2135  msg.sender */\n      caller\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24716:24754  _spendAllowance(from, spender, amount) */\n      tag_190\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24732:24736  from */\n      dup6\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":2125:2135  msg.sender */\n      dup3\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24747:24753  amount */\n      dup6\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24716:24731  _spendAllowance */\n      tag_191\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24716:24754  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_190:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24782:24783  0 */\n      0x00\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24771:24779  _taxRate */\n      sload(0x05)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24771:24783  _taxRate > 0 */\n      gt\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24771:24846  _taxRate > 0 && !(_isExcludedFromTaxFee[from] || _isExcludedFromTaxFee[to]) */\n      dup1\n      iszero\n      tag_192\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24789:24816  _isExcludedFromTaxFee[from] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24789:24810  _isExcludedFromTaxFee */\n      0x07\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24789:24816  _isExcludedFromTaxFee[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24789:24845  _isExcludedFromTaxFee[from] || _isExcludedFromTaxFee[to] */\n      tag_193\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24820:24845  _isExcludedFromTaxFee[to] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24820:24841  _isExcludedFromTaxFee */\n      0x07\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24820:24845  _isExcludedFromTaxFee[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24789:24845  _isExcludedFromTaxFee[from] || _isExcludedFromTaxFee[to] */\n    tag_193:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24787:24846  !(_isExcludedFromTaxFee[from] || _isExcludedFromTaxFee[to]) */\n      iszero\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24771:24846  _taxRate > 0 && !(_isExcludedFromTaxFee[from] || _isExcludedFromTaxFee[to]) */\n    tag_192:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24767:25120  if (_taxRate > 0 && !(_isExcludedFromTaxFee[from] || _isExcludedFromTaxFee[to])) {... */\n      iszero\n      tag_194\n      jumpi\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24863:24880  uint256 taxAmount */\n      0x00\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24905:24909  1000 */\n      0x03e8\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24893:24901  _taxRate */\n      sload(0x05)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24884:24890  amount */\n      dup6\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24884:24901  amount * _taxRate */\n      tag_195\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24883:24909  (amount * _taxRate) / 1000 */\n      tag_197\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24863:24909  uint256 taxAmount = (amount * _taxRate) / 1000 */\n      swap1\n      pop\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24930:24943  taxAmount > 0 */\n      dup1\n      iszero\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24926:25109  if (taxAmount > 0) {... */\n      tag_199\n      jumpi\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24980:24991  _taxAddress */\n      sload(0x06)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24964:25003  _transfer(from, _taxAddress, taxAmount) */\n      tag_200\n      swap1\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24974:24978  from */\n      dup8\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24980:24991  _taxAddress */\n      and\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24993:25002  taxAmount */\n      dup4\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24964:24973  _transfer */\n      tag_201\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24964:25003  _transfer(from, _taxAddress, taxAmount) */\n      jump\t// in\n    tag_200:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":25065:25074  taxAmount */\n      dup1\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":25055:25074  amount -= taxAmount */\n      dup5\n      sub\n      swap4\n      pop\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24926:25109  if (taxAmount > 0) {... */\n    tag_199:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24848:25120  {... */\n      pop\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24767:25120  if (_taxRate > 0 && !(_isExcludedFromTaxFee[from] || _isExcludedFromTaxFee[to])) {... */\n    tag_194:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":25132:25159  _transfer(from, to, amount) */\n      tag_159\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":25142:25146  from */\n      dup6\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":25148:25150  to */\n      dup6\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":25152:25158  amount */\n      dup6\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":25132:25141  _transfer */\n      tag_201\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":25132:25159  _transfer(from, to, amount) */\n      jump\t// in\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":3657:3789  function _checkOwner() internal view virtual {... */\n    tag_122:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":3565:3571  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":2125:2135  msg.sender */\n      caller\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":3721:3744  owner() == _msgSender() */\n      eq\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":3713:3781  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5974:5976   */\n      0x20\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":3713:3781  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5956:5977   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5993:6011   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5986:6016   */\n      mstore\n        /* \"#utility.yul\":6052:6086   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":6032:6050   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6025:6087   */\n      mstore\n        /* \"#utility.yul\":6104:6122   */\n      0x64\n      add\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":3713:3781  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_157\n        /* \"#utility.yul\":5772:6128   */\n      jump\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4759:4950  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_140:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4852:4858  _owner */\n      0x08\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4869:4886  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4902:4942  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4852:4858  _owner */\n      swap2\n      and\n      swap2\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4869:4886  _owner = newOwner */\n      swap1\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4852:4858  _owner */\n      dup3\n      swap1\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4902:4942  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4833:4849  address oldOwner */\n      0x00\n      swap1\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4902:4942  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4822:4950  {... */\n      pop\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":4759:4950  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26470:26679  function _setTaxAddress(address taxAddress_) internal virtual {... */\n    tag_152:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26551:26576  taxAddress_ != address(0) */\n      dup2\n      and\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26543:26633  require(taxAddress_ != address(0), \"ERC20Taxable: taxAddress_ cannot be the zero address\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6335:6337   */\n      0x20\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26543:26633  require(taxAddress_ != address(0), \"ERC20Taxable: taxAddress_ cannot be the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6317:6338   */\n      mstore\n        /* \"#utility.yul\":6374:6376   */\n      0x34\n        /* \"#utility.yul\":6354:6372   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6347:6377   */\n      mstore\n        /* \"#utility.yul\":6413:6447   */\n      0x455243323054617861626c653a20746178416464726573735f2063616e6e6f74\n        /* \"#utility.yul\":6393:6411   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6386:6448   */\n      mstore\n      shl(0x60, 0x20626520746865207a65726f2061646472657373)\n        /* \"#utility.yul\":6464:6482   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6457:6507   */\n      mstore\n        /* \"#utility.yul\":6524:6543   */\n      0x84\n      add\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26543:26633  require(taxAddress_ != address(0), \"ERC20Taxable: taxAddress_ cannot be the zero address\") */\n      tag_157\n        /* \"#utility.yul\":6133:6549   */\n      jump\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26543:26633  require(taxAddress_ != address(0), \"ERC20Taxable: taxAddress_ cannot be the zero address\") */\n    tag_213:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26646:26657  _taxAddress */\n      0x06\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26646:26671  _taxAddress = taxAddress_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26470:26679  function _setTaxAddress(address taxAddress_) internal virtual {... */\n      jump\t// out\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23520:24084  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_162:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23661:23669  _taxRate */\n      sload(0x05)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23599:23603  bool */\n      0x00\n      swap1\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":2125:2135  msg.sender */\n      caller\n      swap1\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23661:23673  _taxRate > 0 */\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23661:23737  _taxRate > 0 && !(_isExcludedFromTaxFee[owner] || _isExcludedFromTaxFee[to]) */\n      tag_218\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23679:23707  _isExcludedFromTaxFee[owner] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23679:23700  _isExcludedFromTaxFee */\n      0x07\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23679:23707  _isExcludedFromTaxFee[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23679:23736  _isExcludedFromTaxFee[owner] || _isExcludedFromTaxFee[to] */\n      tag_219\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23711:23736  _isExcludedFromTaxFee[to] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23711:23732  _isExcludedFromTaxFee */\n      0x07\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23711:23736  _isExcludedFromTaxFee[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23679:23736  _isExcludedFromTaxFee[owner] || _isExcludedFromTaxFee[to] */\n    tag_219:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23677:23737  !(_isExcludedFromTaxFee[owner] || _isExcludedFromTaxFee[to]) */\n      iszero\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23661:23737  _taxRate > 0 && !(_isExcludedFromTaxFee[owner] || _isExcludedFromTaxFee[to]) */\n    tag_218:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23657:24012  if (_taxRate > 0 && !(_isExcludedFromTaxFee[owner] || _isExcludedFromTaxFee[to])) {... */\n      iszero\n      tag_220\n      jumpi\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23754:23771  uint256 taxAmount */\n      0x00\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23796:23800  1000 */\n      0x03e8\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23784:23792  _taxRate */\n      sload(0x05)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23775:23781  amount */\n      dup6\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23775:23792  amount * _taxRate */\n      tag_221\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_221:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23774:23800  (amount * _taxRate) / 1000 */\n      tag_222\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_222:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23754:23800  uint256 taxAmount = (amount * _taxRate) / 1000 */\n      swap1\n      pop\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23821:23834  taxAmount > 0 */\n      dup1\n      iszero\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23817:24001  if (taxAmount > 0) {... */\n      tag_223\n      jumpi\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23872:23883  _taxAddress */\n      sload(0x06)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23855:23895  _transfer(owner, _taxAddress, taxAmount) */\n      tag_224\n      swap1\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23865:23870  owner */\n      dup4\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23872:23883  _taxAddress */\n      and\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23885:23894  taxAmount */\n      dup4\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23855:23864  _transfer */\n      tag_201\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23855:23895  _transfer(owner, _taxAddress, taxAmount) */\n      jump\t// in\n    tag_224:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23957:23966  taxAmount */\n      dup1\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23947:23966  amount -= taxAmount */\n      dup5\n      sub\n      swap4\n      pop\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23817:24001  if (taxAmount > 0) {... */\n    tag_223:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23739:24012  {... */\n      pop\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":23657:24012  if (_taxRate > 0 && !(_isExcludedFromTaxFee[owner] || _isExcludedFromTaxFee[to])) {... */\n    tag_220:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24024:24052  _transfer(owner, to, amount) */\n      tag_114\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24034:24039  owner */\n      dup2\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24041:24043  to */\n      dup6\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24045:24051  amount */\n      dup6\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24024:24033  _transfer */\n      tag_201\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":24024:24052  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26073:26281  function _setTaxRate(uint256 taxFeePerMille_) internal virtual {... */\n    tag_167:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26173:26177  1000 */\n      0x03e8\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26155:26170  taxFeePerMille_ */\n      dup2\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26155:26177  taxFeePerMille_ < 1000 */\n      lt\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26147:26234  require(taxFeePerMille_ < 1000, \"ERC20Taxable: taxFeePerMille_ must be less than 1000\") */\n      tag_227\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6756:6758   */\n      0x20\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26147:26234  require(taxFeePerMille_ < 1000, \"ERC20Taxable: taxFeePerMille_ must be less than 1000\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6738:6759   */\n      mstore\n        /* \"#utility.yul\":6795:6797   */\n      0x34\n        /* \"#utility.yul\":6775:6793   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6768:6798   */\n      mstore\n        /* \"#utility.yul\":6834:6868   */\n      0x455243323054617861626c653a207461784665655065724d696c6c655f206d75\n        /* \"#utility.yul\":6814:6832   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6807:6869   */\n      mstore\n      shl(0x64, 0x07374206265206c657373207468616e203130303)\n        /* \"#utility.yul\":6885:6903   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6878:6928   */\n      mstore\n        /* \"#utility.yul\":6945:6964   */\n      0x84\n      add\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26147:26234  require(taxFeePerMille_ < 1000, \"ERC20Taxable: taxFeePerMille_ must be less than 1000\") */\n      tag_157\n        /* \"#utility.yul\":6554:6970   */\n      jump\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26147:26234  require(taxFeePerMille_ < 1000, \"ERC20Taxable: taxFeePerMille_ must be less than 1000\") */\n    tag_227:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26247:26255  _taxRate */\n      0x05\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26247:26273  _taxRate = taxFeePerMille_ */\n      sstore\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":26073:26281  function _setTaxRate(uint256 taxFeePerMille_) internal virtual {... */\n      jump\t// out\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19986:20439  function _spendAllowance(... */\n    tag_191:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20121:20145  uint256 currentAllowance */\n      0x00\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20148:20173  allowance(owner, spender) */\n      tag_231\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20158:20163  owner */\n      dup5\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20165:20172  spender */\n      dup5\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20148:20157  allowance */\n      tag_99\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20148:20173  allowance(owner, spender) */\n      jump\t// in\n    tag_231:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20121:20173  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20188:20204  currentAllowance */\n      dup2\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20188:20225  currentAllowance != type(uint256).max */\n      eq\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20184:20432  if (currentAllowance != type(uint256).max) {... */\n      tag_236\n      jumpi\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20270:20276  amount */\n      dup2\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20250:20266  currentAllowance */\n      dup2\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20250:20276  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20242:20310  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_233\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7177:7179   */\n      0x20\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20242:20310  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7159:7180   */\n      mstore\n        /* \"#utility.yul\":7216:7218   */\n      0x1d\n        /* \"#utility.yul\":7196:7214   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7189:7219   */\n      mstore\n        /* \"#utility.yul\":7255:7286   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":7235:7253   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7228:7287   */\n      mstore\n        /* \"#utility.yul\":7304:7322   */\n      0x64\n      add\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20242:20310  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_157\n        /* \"#utility.yul\":6975:7328   */\n      jump\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20242:20310  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_233:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20354:20405  _approve(owner, spender, currentAllowance - amount) */\n      tag_236\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20363:20368  owner */\n      dup5\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20370:20377  spender */\n      dup5\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20398:20404  amount */\n      dup5\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20379:20395  currentAllowance */\n      dup5\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20379:20404  currentAllowance - amount */\n      sub\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20354:20362  _approve */\n      tag_115\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20354:20405  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_236:\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":20110:20439  {... */\n      pop\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":19986:20439  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16194:17034  function _transfer(... */\n    tag_201:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16325:16343  from != address(0) */\n      dup4\n      and\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16317:16385  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7535:7537   */\n      0x20\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16317:16385  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7517:7538   */\n      mstore\n        /* \"#utility.yul\":7574:7576   */\n      0x25\n        /* \"#utility.yul\":7554:7572   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7547:7577   */\n      mstore\n        /* \"#utility.yul\":7613:7647   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":7593:7611   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7586:7648   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":7664:7682   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7657:7692   */\n      mstore\n        /* \"#utility.yul\":7709:7728   */\n      0x84\n      add\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16317:16385  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_157\n        /* \"#utility.yul\":7333:7734   */\n      jump\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16317:16385  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_238:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16404:16420  to != address(0) */\n      dup3\n      and\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16396:16460  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7941:7943   */\n      0x20\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16396:16460  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7923:7944   */\n      mstore\n        /* \"#utility.yul\":7980:7982   */\n      0x23\n        /* \"#utility.yul\":7960:7978   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7953:7983   */\n      mstore\n        /* \"#utility.yul\":8019:8053   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":7999:8017   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7992:8054   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":8070:8088   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8063:8096   */\n      mstore\n        /* \"#utility.yul\":8113:8132   */\n      0x84\n      add\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16396:16460  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_157\n        /* \"#utility.yul\":7739:8138   */\n      jump\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16396:16460  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_241:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16546:16561  _balances[from] */\n      dup4\n      and\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16524:16543  uint256 fromBalance */\n      0x00\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16546:16561  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16580:16601  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16572:16644  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8345:8347   */\n      0x20\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16572:16644  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8327:8348   */\n      mstore\n        /* \"#utility.yul\":8384:8386   */\n      0x26\n        /* \"#utility.yul\":8364:8382   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8357:8387   */\n      mstore\n        /* \"#utility.yul\":8423:8457   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":8403:8421   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8396:8458   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":8474:8492   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8467:8503   */\n      mstore\n        /* \"#utility.yul\":8520:8539   */\n      0x84\n      add\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16572:16644  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_157\n        /* \"#utility.yul\":8143:8545   */\n      jump\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16572:16644  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_246:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16680:16695  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16680:16689  _balances */\n      0x00\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16680:16695  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16698:16718  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16680:16718  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16898:16911  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16898:16921  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16950:16976  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1258:1283   */\n      dup6\n      dup2\n      mstore\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16898:16911  _balances[to] */\n      swap1\n      swap3\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16950:16976  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16950:16976  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":16989:17026  _afterTokenTransfer(from, to, amount) */\n      tag_236\n        /* \"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":21039:21164  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:432   */\n    tag_29:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:610   */\n    tag_254:\n        /* \"#utility.yul\":505:525   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":554:585   */\n      dup2\n      and\n        /* \"#utility.yul\":544:586   */\n      dup2\n      eq\n        /* \"#utility.yul\":534:604   */\n      tag_259\n      jumpi\n        /* \"#utility.yul\":600:601   */\n      0x00\n        /* \"#utility.yul\":597:598   */\n      dup1\n        /* \"#utility.yul\":590:602   */\n      revert\n        /* \"#utility.yul\":534:604   */\n    tag_259:\n        /* \"#utility.yul\":437:610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:915   */\n    tag_32:\n        /* \"#utility.yul\":683:689   */\n      0x00\n        /* \"#utility.yul\":691:697   */\n      dup1\n        /* \"#utility.yul\":744:746   */\n      0x40\n        /* \"#utility.yul\":732:741   */\n      dup4\n        /* \"#utility.yul\":723:730   */\n      dup6\n        /* \"#utility.yul\":719:742   */\n      sub\n        /* \"#utility.yul\":715:747   */\n      slt\n        /* \"#utility.yul\":712:764   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":760:761   */\n      0x00\n        /* \"#utility.yul\":757:758   */\n      dup1\n        /* \"#utility.yul\":750:762   */\n      revert\n        /* \"#utility.yul\":712:764   */\n    tag_261:\n        /* \"#utility.yul\":783:812   */\n      tag_262\n        /* \"#utility.yul\":802:811   */\n      dup4\n        /* \"#utility.yul\":783:812   */\n      tag_254\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":773:812   */\n      swap5\n        /* \"#utility.yul\":881:883   */\n      0x20\n        /* \"#utility.yul\":866:884   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":853:885   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":615:915   */\n      jump\t// out\n        /* \"#utility.yul\":1294:1668   */\n    tag_42:\n        /* \"#utility.yul\":1371:1377   */\n      0x00\n        /* \"#utility.yul\":1379:1385   */\n      dup1\n        /* \"#utility.yul\":1387:1393   */\n      0x00\n        /* \"#utility.yul\":1440:1442   */\n      0x60\n        /* \"#utility.yul\":1428:1437   */\n      dup5\n        /* \"#utility.yul\":1419:1426   */\n      dup7\n        /* \"#utility.yul\":1415:1438   */\n      sub\n        /* \"#utility.yul\":1411:1443   */\n      slt\n        /* \"#utility.yul\":1408:1460   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":1456:1457   */\n      0x00\n        /* \"#utility.yul\":1453:1454   */\n      dup1\n        /* \"#utility.yul\":1446:1458   */\n      revert\n        /* \"#utility.yul\":1408:1460   */\n    tag_266:\n        /* \"#utility.yul\":1479:1508   */\n      tag_267\n        /* \"#utility.yul\":1498:1507   */\n      dup5\n        /* \"#utility.yul\":1479:1508   */\n      tag_254\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":1469:1508   */\n      swap3\n      pop\n        /* \"#utility.yul\":1527:1565   */\n      tag_268\n        /* \"#utility.yul\":1561:1563   */\n      0x20\n        /* \"#utility.yul\":1550:1559   */\n      dup6\n        /* \"#utility.yul\":1546:1564   */\n      add\n        /* \"#utility.yul\":1527:1565   */\n      tag_254\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":1294:1668   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1517:1565   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1634:1636   */\n      0x40\n        /* \"#utility.yul\":1619:1637   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1606:1638   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1294:1668   */\n      jump\t// out\n        /* \"#utility.yul\":1673:2020   */\n    tag_47:\n        /* \"#utility.yul\":1738:1744   */\n      0x00\n        /* \"#utility.yul\":1746:1752   */\n      dup1\n        /* \"#utility.yul\":1799:1801   */\n      0x40\n        /* \"#utility.yul\":1787:1796   */\n      dup4\n        /* \"#utility.yul\":1778:1785   */\n      dup6\n        /* \"#utility.yul\":1774:1797   */\n      sub\n        /* \"#utility.yul\":1770:1802   */\n      slt\n        /* \"#utility.yul\":1767:1819   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":1815:1816   */\n      0x00\n        /* \"#utility.yul\":1812:1813   */\n      dup1\n        /* \"#utility.yul\":1805:1817   */\n      revert\n        /* \"#utility.yul\":1767:1819   */\n    tag_270:\n        /* \"#utility.yul\":1838:1867   */\n      tag_271\n        /* \"#utility.yul\":1857:1866   */\n      dup4\n        /* \"#utility.yul\":1838:1867   */\n      tag_254\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":1828:1867   */\n      swap2\n      pop\n        /* \"#utility.yul\":1917:1919   */\n      0x20\n        /* \"#utility.yul\":1906:1915   */\n      dup4\n        /* \"#utility.yul\":1902:1920   */\n      add\n        /* \"#utility.yul\":1889:1921   */\n      calldataload\n        /* \"#utility.yul\":1964:1969   */\n      dup1\n        /* \"#utility.yul\":1957:1970   */\n      iszero\n        /* \"#utility.yul\":1950:1971   */\n      iszero\n        /* \"#utility.yul\":1943:1948   */\n      dup2\n        /* \"#utility.yul\":1940:1972   */\n      eq\n        /* \"#utility.yul\":1930:1990   */\n      tag_272\n      jumpi\n        /* \"#utility.yul\":1986:1987   */\n      0x00\n        /* \"#utility.yul\":1983:1984   */\n      dup1\n        /* \"#utility.yul\":1976:1988   */\n      revert\n        /* \"#utility.yul\":1930:1990   */\n    tag_272:\n        /* \"#utility.yul\":2009:2014   */\n      dup1\n        /* \"#utility.yul\":1999:2014   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1673:2020   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2214:2400   */\n    tag_59:\n        /* \"#utility.yul\":2273:2279   */\n      0x00\n        /* \"#utility.yul\":2326:2328   */\n      0x20\n        /* \"#utility.yul\":2314:2323   */\n      dup3\n        /* \"#utility.yul\":2305:2312   */\n      dup5\n        /* \"#utility.yul\":2301:2324   */\n      sub\n        /* \"#utility.yul\":2297:2329   */\n      slt\n        /* \"#utility.yul\":2294:2346   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":2342:2343   */\n      0x00\n        /* \"#utility.yul\":2339:2340   */\n      dup1\n        /* \"#utility.yul\":2332:2344   */\n      revert\n        /* \"#utility.yul\":2294:2346   */\n    tag_275:\n        /* \"#utility.yul\":2365:2394   */\n      tag_161\n        /* \"#utility.yul\":2384:2393   */\n      dup3\n        /* \"#utility.yul\":2365:2394   */\n      tag_254\n      jump\t// in\n        /* \"#utility.yul\":2613:2839   */\n    tag_84:\n        /* \"#utility.yul\":2672:2678   */\n      0x00\n        /* \"#utility.yul\":2725:2727   */\n      0x20\n        /* \"#utility.yul\":2713:2722   */\n      dup3\n        /* \"#utility.yul\":2704:2711   */\n      dup5\n        /* \"#utility.yul\":2700:2723   */\n      sub\n        /* \"#utility.yul\":2696:2728   */\n      slt\n        /* \"#utility.yul\":2693:2745   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":2741:2742   */\n      0x00\n        /* \"#utility.yul\":2738:2739   */\n      dup1\n        /* \"#utility.yul\":2731:2743   */\n      revert\n        /* \"#utility.yul\":2693:2745   */\n    tag_279:\n      pop\n        /* \"#utility.yul\":2786:2809   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2613:2839   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2844:3104   */\n    tag_98:\n        /* \"#utility.yul\":2912:2918   */\n      0x00\n        /* \"#utility.yul\":2920:2926   */\n      dup1\n        /* \"#utility.yul\":2973:2975   */\n      0x40\n        /* \"#utility.yul\":2961:2970   */\n      dup4\n        /* \"#utility.yul\":2952:2959   */\n      dup6\n        /* \"#utility.yul\":2948:2971   */\n      sub\n        /* \"#utility.yul\":2944:2976   */\n      slt\n        /* \"#utility.yul\":2941:2993   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":2989:2990   */\n      0x00\n        /* \"#utility.yul\":2986:2987   */\n      dup1\n        /* \"#utility.yul\":2979:2991   */\n      revert\n        /* \"#utility.yul\":2941:2993   */\n    tag_281:\n        /* \"#utility.yul\":3012:3041   */\n      tag_282\n        /* \"#utility.yul\":3031:3040   */\n      dup4\n        /* \"#utility.yul\":3012:3041   */\n      tag_254\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":3002:3041   */\n      swap2\n      pop\n        /* \"#utility.yul\":3060:3098   */\n      tag_283\n        /* \"#utility.yul\":3094:3096   */\n      0x20\n        /* \"#utility.yul\":3083:3092   */\n      dup5\n        /* \"#utility.yul\":3079:3097   */\n      add\n        /* \"#utility.yul\":3060:3098   */\n      tag_254\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":3050:3098   */\n      swap1\n      pop\n        /* \"#utility.yul\":2844:3104   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3109:3489   */\n    tag_106:\n        /* \"#utility.yul\":3188:3189   */\n      0x01\n        /* \"#utility.yul\":3184:3196   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3231:3243   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3252:3313   */\n      tag_285\n      jumpi\n        /* \"#utility.yul\":3306:3310   */\n      0x7f\n        /* \"#utility.yul\":3298:3304   */\n      dup3\n        /* \"#utility.yul\":3294:3311   */\n      and\n        /* \"#utility.yul\":3284:3311   */\n      swap2\n      pop\n        /* \"#utility.yul\":3252:3313   */\n    tag_285:\n        /* \"#utility.yul\":3359:3361   */\n      0x20\n        /* \"#utility.yul\":3351:3357   */\n      dup3\n        /* \"#utility.yul\":3348:3362   */\n      lt\n        /* \"#utility.yul\":3328:3346   */\n      dup2\n        /* \"#utility.yul\":3325:3363   */\n      sub\n        /* \"#utility.yul\":3322:3483   */\n      tag_286\n      jumpi\n        /* \"#utility.yul\":3405:3415   */\n      0x4e487b71\n        /* \"#utility.yul\":3400:3403   */\n      0xe0\n        /* \"#utility.yul\":3396:3416   */\n      shl\n        /* \"#utility.yul\":3393:3394   */\n      0x00\n        /* \"#utility.yul\":3386:3417   */\n      mstore\n        /* \"#utility.yul\":3440:3444   */\n      0x22\n        /* \"#utility.yul\":3437:3438   */\n      0x04\n        /* \"#utility.yul\":3430:3445   */\n      mstore\n        /* \"#utility.yul\":3468:3472   */\n      0x24\n        /* \"#utility.yul\":3465:3466   */\n      0x00\n        /* \"#utility.yul\":3458:3473   */\n      revert\n        /* \"#utility.yul\":3322:3483   */\n    tag_286:\n      pop\n        /* \"#utility.yul\":3109:3489   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3494:3621   */\n    tag_255:\n        /* \"#utility.yul\":3555:3565   */\n      0x4e487b71\n        /* \"#utility.yul\":3550:3553   */\n      0xe0\n        /* \"#utility.yul\":3546:3566   */\n      shl\n        /* \"#utility.yul\":3543:3544   */\n      0x00\n        /* \"#utility.yul\":3536:3567   */\n      mstore\n        /* \"#utility.yul\":3586:3590   */\n      0x11\n        /* \"#utility.yul\":3583:3584   */\n      0x04\n        /* \"#utility.yul\":3576:3591   */\n      mstore\n        /* \"#utility.yul\":3610:3614   */\n      0x24\n        /* \"#utility.yul\":3607:3608   */\n      0x00\n        /* \"#utility.yul\":3600:3615   */\n      revert\n        /* \"#utility.yul\":3626:3751   */\n    tag_134:\n        /* \"#utility.yul\":3691:3700   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3712:3722   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3709:3745   */\n      iszero\n      tag_111\n      jumpi\n        /* \"#utility.yul\":3725:3743   */\n      tag_111\n      tag_255\n      jump\t// in\n        /* \"#utility.yul\":5377:5545   */\n    tag_196:\n        /* \"#utility.yul\":5450:5459   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":5481:5490   */\n      dup2\n      iszero\n        /* \"#utility.yul\":5498:5513   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":5492:5514   */\n      dup5\n      eq\n        /* \"#utility.yul\":5478:5515   */\n      or\n        /* \"#utility.yul\":5468:5539   */\n      tag_111\n      jumpi\n        /* \"#utility.yul\":5519:5537   */\n      tag_111\n      tag_255\n      jump\t// in\n        /* \"#utility.yul\":5550:5767   */\n    tag_198:\n        /* \"#utility.yul\":5590:5591   */\n      0x00\n        /* \"#utility.yul\":5616:5617   */\n      dup3\n        /* \"#utility.yul\":5606:5738   */\n      tag_299\n      jumpi\n        /* \"#utility.yul\":5660:5670   */\n      0x4e487b71\n        /* \"#utility.yul\":5655:5658   */\n      0xe0\n        /* \"#utility.yul\":5651:5671   */\n      shl\n        /* \"#utility.yul\":5648:5649   */\n      0x00\n        /* \"#utility.yul\":5641:5672   */\n      mstore\n        /* \"#utility.yul\":5695:5699   */\n      0x12\n        /* \"#utility.yul\":5692:5693   */\n      0x04\n        /* \"#utility.yul\":5685:5700   */\n      mstore\n        /* \"#utility.yul\":5723:5727   */\n      0x24\n        /* \"#utility.yul\":5720:5721   */\n      0x00\n        /* \"#utility.yul\":5713:5728   */\n      revert\n        /* \"#utility.yul\":5606:5738   */\n    tag_299:\n      pop\n        /* \"#utility.yul\":5752:5761   */\n      div\n      swap1\n        /* \"#utility.yul\":5550:5767   */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122012659be5dcbcb543bbd069a8d4751a0da57e397e950fbd65807c6bdc821fb52864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1142": {
									"entryPoint": null,
									"id": 1142,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_1204": {
									"entryPoint": null,
									"id": 1204,
									"parameterSlots": 8,
									"returnSlots": 0
								},
								"@_273": {
									"entryPoint": null,
									"id": 273,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_43": {
									"entryPoint": null,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_832": {
									"entryPoint": null,
									"id": 832,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_882": {
									"entryPoint": null,
									"id": 882,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_814": {
									"entryPoint": null,
									"id": 814,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_803": {
									"entryPoint": 983,
									"id": 803,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_632": {
									"entryPoint": 794,
									"id": 632,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setExclusionFromTaxFee_1105": {
									"entryPoint": null,
									"id": 1105,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setTaxAddress_1090": {
									"entryPoint": 555,
									"id": 1090,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setTaxRate_1069": {
									"entryPoint": 431,
									"id": 1069,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_131": {
									"entryPoint": 713,
									"id": 131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 1172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 1008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256t_uint256t_addresst_bytes_memory_ptrt_address_payable_fromMemory": {
									"entryPoint": 1194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_decode_uint8_fromMemory": {
									"entryPoint": 1151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 1722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_bytes_memory_ptr_t_address__to_t_string_memory_ptr_t_bytes_memory_ptr_t_address__fromStack_reversed": {
									"entryPoint": 1768,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_13b0d23b78e36e0ca5d50799970a37145ee5efca8eea0a88562a540bb3e85734__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_76c937e8541376b2ae2ed2ec41481ffb6ae85620be755d89da3704bd2719bbaa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ee77ba772060351314b1afc6b332478f67976de73404959e804d987fd557b6fd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1461,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 988,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7947:1",
										"nodeType": "YulBlock",
										"src": "0:7947:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:1",
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:1",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:1",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:1",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nativeSrc": "66:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nativeSrc": "56:31:1",
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nativeSrc": "56:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:1",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:1",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nativeSrc": "96:15:1",
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nativeSrc": "96:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:1",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:1",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nativeSrc": "120:15:1",
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nativeSrc": "120:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nativeSrc": "210:822:1",
													"nodeType": "YulBlock",
													"src": "210:822:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:1",
																"nodeType": "YulBlock",
																"src": "259:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:1",
																					"nodeType": "YulLiteral",
																					"src": "268:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:1",
																					"nodeType": "YulLiteral",
																					"src": "271:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:1"
																			},
																			"nativeSrc": "261:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:1"
																		},
																		"nativeSrc": "261:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:1",
																						"nodeType": "YulLiteral",
																						"src": "246:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:1"
																				},
																				"nativeSrc": "234:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:1"
																		},
																		"nativeSrc": "230:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:1"
																},
																"nativeSrc": "223:35:1",
																"nodeType": "YulFunctionCall",
																"src": "223:35:1"
															},
															"nativeSrc": "220:55:1",
															"nodeType": "YulIf",
															"src": "220:55:1"
														},
														{
															"nativeSrc": "284:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "284:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "304:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "304:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "298:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "298:5:1"
																},
																"nativeSrc": "298:13:1",
																"nodeType": "YulFunctionCall",
																"src": "298:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "288:6:1",
																	"nodeType": "YulTypedName",
																	"src": "288:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "320:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "320:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "335:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "335:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "343:4:1",
																		"nodeType": "YulLiteral",
																		"src": "343:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "331:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "331:3:1"
																},
																"nativeSrc": "331:17:1",
																"nodeType": "YulFunctionCall",
																"src": "331:17:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "324:3:1",
																	"nodeType": "YulTypedName",
																	"src": "324:3:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "357:16:1",
															"nodeType": "YulVariableDeclaration",
															"src": "357:16:1",
															"value": {
																"kind": "number",
																"nativeSrc": "372:1:1",
																"nodeType": "YulLiteral",
																"src": "372:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nativeSrc": "361:7:1",
																	"nodeType": "YulTypedName",
																	"src": "361:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "382:13:1",
															"nodeType": "YulVariableDeclaration",
															"src": "382:13:1",
															"value": {
																"kind": "number",
																"nativeSrc": "394:1:1",
																"nodeType": "YulLiteral",
																"src": "394:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "size",
																	"nativeSrc": "386:4:1",
																	"nodeType": "YulTypedName",
																	"src": "386:4:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "438:22:1",
																"nodeType": "YulBlock",
																"src": "438:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "440:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "440:16:1"
																			},
																			"nativeSrc": "440:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "440:18:1"
																		},
																		"nativeSrc": "440:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "440:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "410:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "410:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "426:2:1",
																						"nodeType": "YulLiteral",
																						"src": "426:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "430:1:1",
																						"nodeType": "YulLiteral",
																						"src": "430:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "422:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "422:3:1"
																				},
																				"nativeSrc": "422:10:1",
																				"nodeType": "YulFunctionCall",
																				"src": "422:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "434:1:1",
																				"nodeType": "YulLiteral",
																				"src": "434:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "418:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "418:3:1"
																		},
																		"nativeSrc": "418:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "418:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "407:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "407:2:1"
																},
																"nativeSrc": "407:30:1",
																"nodeType": "YulFunctionCall",
																"src": "407:30:1"
															},
															"nativeSrc": "404:56:1",
															"nodeType": "YulIf",
															"src": "404:56:1"
														},
														{
															"nativeSrc": "469:43:1",
															"nodeType": "YulVariableDeclaration",
															"src": "469:43:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "491:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "491:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "499:2:1",
																				"nodeType": "YulLiteral",
																				"src": "499:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "487:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:1"
																		},
																		"nativeSrc": "487:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "487:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "508:2:1",
																				"nodeType": "YulLiteral",
																				"src": "508:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "504:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:1"
																		},
																		"nativeSrc": "504:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "504:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "483:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:1"
																},
																"nativeSrc": "483:29:1",
																"nodeType": "YulFunctionCall",
																"src": "483:29:1"
															},
															"variables": [
																{
																	"name": "result",
																	"nativeSrc": "473:6:1",
																	"nodeType": "YulTypedName",
																	"src": "473:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "521:25:1",
															"nodeType": "YulAssignment",
															"src": "521:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "533:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "533:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "541:4:1",
																		"nodeType": "YulLiteral",
																		"src": "541:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "529:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "529:3:1"
																},
																"nativeSrc": "529:17:1",
																"nodeType": "YulFunctionCall",
																"src": "529:17:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "521:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:4:1"
																}
															]
														},
														{
															"nativeSrc": "555:15:1",
															"nodeType": "YulVariableDeclaration",
															"src": "555:15:1",
															"value": {
																"kind": "number",
																"nativeSrc": "569:1:1",
																"nodeType": "YulLiteral",
																"src": "569:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "559:6:1",
																	"nodeType": "YulTypedName",
																	"src": "559:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "579:19:1",
															"nodeType": "YulAssignment",
															"src": "579:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "595:2:1",
																		"nodeType": "YulLiteral",
																		"src": "595:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "589:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "589:5:1"
																},
																"nativeSrc": "589:9:1",
																"nodeType": "YulFunctionCall",
																"src": "589:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "579:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "579:6:1"
																}
															]
														},
														{
															"nativeSrc": "607:60:1",
															"nodeType": "YulVariableDeclaration",
															"src": "607:60:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "629:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "result",
																						"nativeSrc": "645:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "645:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "653:2:1",
																						"nodeType": "YulLiteral",
																						"src": "653:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "641:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:3:1"
																				},
																				"nativeSrc": "641:15:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:15:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "662:2:1",
																						"nodeType": "YulLiteral",
																						"src": "662:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "658:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "658:3:1"
																				},
																				"nativeSrc": "658:7:1",
																				"nodeType": "YulFunctionCall",
																				"src": "658:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "637:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "637:3:1"
																		},
																		"nativeSrc": "637:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "637:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "625:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "625:3:1"
																},
																"nativeSrc": "625:42:1",
																"nodeType": "YulFunctionCall",
																"src": "625:42:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "611:10:1",
																	"nodeType": "YulTypedName",
																	"src": "611:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "742:22:1",
																"nodeType": "YulBlock",
																"src": "742:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "744:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "744:16:1"
																			},
																			"nativeSrc": "744:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "744:18:1"
																		},
																		"nativeSrc": "744:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "744:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "685:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "685:10:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "705:2:1",
																								"nodeType": "YulLiteral",
																								"src": "705:2:1",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "709:1:1",
																								"nodeType": "YulLiteral",
																								"src": "709:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "701:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "701:3:1"
																						},
																						"nativeSrc": "701:10:1",
																						"nodeType": "YulFunctionCall",
																						"src": "701:10:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "713:1:1",
																						"nodeType": "YulLiteral",
																						"src": "713:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "697:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "697:3:1"
																				},
																				"nativeSrc": "697:18:1",
																				"nodeType": "YulFunctionCall",
																				"src": "697:18:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "682:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "682:2:1"
																		},
																		"nativeSrc": "682:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "682:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "721:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "721:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "733:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "733:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "718:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "718:2:1"
																		},
																		"nativeSrc": "718:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "718:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "679:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "679:2:1"
																},
																"nativeSrc": "679:62:1",
																"nodeType": "YulFunctionCall",
																"src": "679:62:1"
															},
															"nativeSrc": "676:88:1",
															"nodeType": "YulIf",
															"src": "676:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "780:2:1",
																		"nodeType": "YulLiteral",
																		"src": "780:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "784:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "784:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "773:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:1"
																},
																"nativeSrc": "773:22:1",
																"nodeType": "YulFunctionCall",
																"src": "773:22:1"
															},
															"nativeSrc": "773:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "773:22:1"
														},
														{
															"nativeSrc": "804:17:1",
															"nodeType": "YulAssignment",
															"src": "804:17:1",
															"value": {
																"name": "memPtr",
																"nativeSrc": "815:6:1",
																"nodeType": "YulIdentifier",
																"src": "815:6:1"
															},
															"variableNames": [
																{
																	"name": "array_1",
																	"nativeSrc": "804:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "804:7:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "837:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "837:6:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "845:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "845:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "830:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "830:6:1"
																},
																"nativeSrc": "830:22:1",
																"nodeType": "YulFunctionCall",
																"src": "830:22:1"
															},
															"nativeSrc": "830:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "830:22:1"
														},
														{
															"body": {
																"nativeSrc": "890:16:1",
																"nodeType": "YulBlock",
																"src": "890:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "899:1:1",
																					"nodeType": "YulLiteral",
																					"src": "899:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "902:1:1",
																					"nodeType": "YulLiteral",
																					"src": "902:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "892:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "892:6:1"
																			},
																			"nativeSrc": "892:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "892:12:1"
																		},
																		"nativeSrc": "892:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "892:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "871:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "871:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "876:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "876:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "867:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "867:3:1"
																		},
																		"nativeSrc": "867:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "867:16:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "885:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "885:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "864:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "864:2:1"
																},
																"nativeSrc": "864:25:1",
																"nodeType": "YulFunctionCall",
																"src": "864:25:1"
															},
															"nativeSrc": "861:45:1",
															"nodeType": "YulIf",
															"src": "861:45:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "925:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "925:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "933:4:1",
																				"nodeType": "YulLiteral",
																				"src": "933:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "921:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "921:3:1"
																		},
																		"nativeSrc": "921:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "921:17:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "940:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "940:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "945:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "945:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "915:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "915:5:1"
																},
																"nativeSrc": "915:37:1",
																"nodeType": "YulFunctionCall",
																"src": "915:37:1"
															},
															"nativeSrc": "915:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "915:37:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "976:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "976:6:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "984:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "984:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "972:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "972:3:1"
																				},
																				"nativeSrc": "972:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "972:19:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "993:4:1",
																				"nodeType": "YulLiteral",
																				"src": "993:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "968:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "968:3:1"
																		},
																		"nativeSrc": "968:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "968:30:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1000:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1000:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "961:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "961:6:1"
																},
																"nativeSrc": "961:41:1",
																"nodeType": "YulFunctionCall",
																"src": "961:41:1"
															},
															"nativeSrc": "961:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "961:41:1"
														},
														{
															"nativeSrc": "1011:15:1",
															"nodeType": "YulAssignment",
															"src": "1011:15:1",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1020:6:1",
																"nodeType": "YulIdentifier",
																"src": "1020:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1011:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1011:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:886:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:1",
														"nodeType": "YulTypedName",
														"src": "184:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:1",
														"nodeType": "YulTypedName",
														"src": "192:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:1",
														"nodeType": "YulTypedName",
														"src": "200:5:1",
														"type": ""
													}
												],
												"src": "146:886:1"
											},
											{
												"body": {
													"nativeSrc": "1095:102:1",
													"nodeType": "YulBlock",
													"src": "1095:102:1",
													"statements": [
														{
															"nativeSrc": "1105:22:1",
															"nodeType": "YulAssignment",
															"src": "1105:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1120:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1120:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1114:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:1"
																},
																"nativeSrc": "1114:13:1",
																"nodeType": "YulFunctionCall",
																"src": "1114:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1105:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1105:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1175:16:1",
																"nodeType": "YulBlock",
																"src": "1175:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1184:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1184:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1187:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1187:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1177:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1177:6:1"
																			},
																			"nativeSrc": "1177:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1177:12:1"
																		},
																		"nativeSrc": "1177:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1177:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1149:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1149:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1160:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1160:5:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1167:4:1",
																						"nodeType": "YulLiteral",
																						"src": "1167:4:1",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1156:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1156:3:1"
																				},
																				"nativeSrc": "1156:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1156:16:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1146:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1146:2:1"
																		},
																		"nativeSrc": "1146:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1146:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1139:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1139:6:1"
																},
																"nativeSrc": "1139:35:1",
																"nodeType": "YulFunctionCall",
																"src": "1139:35:1"
															},
															"nativeSrc": "1136:55:1",
															"nodeType": "YulIf",
															"src": "1136:55:1"
														}
													]
												},
												"name": "abi_decode_uint8_fromMemory",
												"nativeSrc": "1037:160:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1074:6:1",
														"nodeType": "YulTypedName",
														"src": "1074:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1085:5:1",
														"nodeType": "YulTypedName",
														"src": "1085:5:1",
														"type": ""
													}
												],
												"src": "1037:160:1"
											},
											{
												"body": {
													"nativeSrc": "1262:117:1",
													"nodeType": "YulBlock",
													"src": "1262:117:1",
													"statements": [
														{
															"nativeSrc": "1272:22:1",
															"nodeType": "YulAssignment",
															"src": "1272:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1287:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1287:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1281:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1281:5:1"
																},
																"nativeSrc": "1281:13:1",
																"nodeType": "YulFunctionCall",
																"src": "1281:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1272:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1272:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1357:16:1",
																"nodeType": "YulBlock",
																"src": "1357:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1366:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1366:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1369:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1369:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1359:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1359:6:1"
																			},
																			"nativeSrc": "1359:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1359:12:1"
																		},
																		"nativeSrc": "1359:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1359:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1316:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1316:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1327:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1327:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1342:3:1",
																										"nodeType": "YulLiteral",
																										"src": "1342:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1347:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1347:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1338:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1338:3:1"
																								},
																								"nativeSrc": "1338:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1338:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1351:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1351:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1334:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1334:3:1"
																						},
																						"nativeSrc": "1334:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1334:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1323:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1323:3:1"
																				},
																				"nativeSrc": "1323:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1323:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1313:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1313:2:1"
																		},
																		"nativeSrc": "1313:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1313:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1306:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1306:6:1"
																},
																"nativeSrc": "1306:50:1",
																"nodeType": "YulFunctionCall",
																"src": "1306:50:1"
															},
															"nativeSrc": "1303:70:1",
															"nodeType": "YulIf",
															"src": "1303:70:1"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "1202:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1241:6:1",
														"nodeType": "YulTypedName",
														"src": "1241:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1252:5:1",
														"nodeType": "YulTypedName",
														"src": "1252:5:1",
														"type": ""
													}
												],
												"src": "1202:177:1"
											},
											{
												"body": {
													"nativeSrc": "1619:1025:1",
													"nodeType": "YulBlock",
													"src": "1619:1025:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1666:16:1",
																"nodeType": "YulBlock",
																"src": "1666:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1675:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1675:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1678:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1678:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1668:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1668:6:1"
																			},
																			"nativeSrc": "1668:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1668:12:1"
																		},
																		"nativeSrc": "1668:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1668:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1640:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1640:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1649:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1649:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1636:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:1"
																		},
																		"nativeSrc": "1636:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1636:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1661:3:1",
																		"nodeType": "YulLiteral",
																		"src": "1661:3:1",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1632:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1632:3:1"
																},
																"nativeSrc": "1632:33:1",
																"nodeType": "YulFunctionCall",
																"src": "1632:33:1"
															},
															"nativeSrc": "1629:53:1",
															"nodeType": "YulIf",
															"src": "1629:53:1"
														},
														{
															"nativeSrc": "1691:30:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1691:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1711:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1711:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1705:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1705:5:1"
																},
																"nativeSrc": "1705:16:1",
																"nodeType": "YulFunctionCall",
																"src": "1705:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1695:6:1",
																	"nodeType": "YulTypedName",
																	"src": "1695:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1764:16:1",
																"nodeType": "YulBlock",
																"src": "1764:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1773:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1773:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1776:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1776:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1766:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1766:6:1"
																			},
																			"nativeSrc": "1766:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1766:12:1"
																		},
																		"nativeSrc": "1766:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1766:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1736:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1736:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1752:2:1",
																						"nodeType": "YulLiteral",
																						"src": "1752:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1756:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1756:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1748:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1748:3:1"
																				},
																				"nativeSrc": "1748:10:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1748:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1760:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1760:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1744:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1744:3:1"
																		},
																		"nativeSrc": "1744:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1744:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1733:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1733:2:1"
																},
																"nativeSrc": "1733:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1733:30:1"
															},
															"nativeSrc": "1730:50:1",
															"nodeType": "YulIf",
															"src": "1730:50:1"
														},
														{
															"nativeSrc": "1789:71:1",
															"nodeType": "YulAssignment",
															"src": "1789:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1832:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1832:9:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1843:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1843:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1828:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1828:3:1"
																		},
																		"nativeSrc": "1828:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1828:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1852:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "1852:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1799:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "1799:28:1"
																},
																"nativeSrc": "1799:61:1",
																"nodeType": "YulFunctionCall",
																"src": "1799:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1789:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1789:6:1"
																}
															]
														},
														{
															"nativeSrc": "1869:41:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1869:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1895:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1895:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1906:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1906:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1891:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1891:3:1"
																		},
																		"nativeSrc": "1891:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1891:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1885:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1885:5:1"
																},
																"nativeSrc": "1885:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1885:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1873:8:1",
																	"nodeType": "YulTypedName",
																	"src": "1873:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1955:16:1",
																"nodeType": "YulBlock",
																"src": "1955:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1964:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1964:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1967:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1967:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1957:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1957:6:1"
																			},
																			"nativeSrc": "1957:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1957:12:1"
																		},
																		"nativeSrc": "1957:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1957:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1925:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "1925:8:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1943:2:1",
																						"nodeType": "YulLiteral",
																						"src": "1943:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1947:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1947:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1939:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1939:3:1"
																				},
																				"nativeSrc": "1939:10:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1939:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1951:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1951:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1935:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1935:3:1"
																		},
																		"nativeSrc": "1935:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1922:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1922:2:1"
																},
																"nativeSrc": "1922:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1922:32:1"
															},
															"nativeSrc": "1919:52:1",
															"nodeType": "YulIf",
															"src": "1919:52:1"
														},
														{
															"nativeSrc": "1980:73:1",
															"nodeType": "YulAssignment",
															"src": "1980:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2023:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2023:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "2034:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "2034:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2019:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2019:3:1"
																		},
																		"nativeSrc": "2019:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2019:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2045:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "2045:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1990:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "1990:28:1"
																},
																"nativeSrc": "1990:63:1",
																"nodeType": "YulFunctionCall",
																"src": "1990:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1980:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1980:6:1"
																}
															]
														},
														{
															"nativeSrc": "2062:57:1",
															"nodeType": "YulAssignment",
															"src": "2062:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2104:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2104:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2115:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2115:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2100:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2100:3:1"
																		},
																		"nativeSrc": "2100:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2100:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint8_fromMemory",
																	"nativeSrc": "2072:27:1",
																	"nodeType": "YulIdentifier",
																	"src": "2072:27:1"
																},
																"nativeSrc": "2072:47:1",
																"nodeType": "YulFunctionCall",
																"src": "2072:47:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2062:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2062:6:1"
																}
															]
														},
														{
															"nativeSrc": "2128:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2128:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2141:1:1",
																"nodeType": "YulLiteral",
																"src": "2141:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2132:5:1",
																	"nodeType": "YulTypedName",
																	"src": "2132:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2151:34:1",
															"nodeType": "YulAssignment",
															"src": "2151:34:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2170:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2170:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2181:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2181:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2166:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2166:3:1"
																		},
																		"nativeSrc": "2166:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2166:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2160:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2160:5:1"
																},
																"nativeSrc": "2160:25:1",
																"nodeType": "YulFunctionCall",
																"src": "2160:25:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2151:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2151:5:1"
																}
															]
														},
														{
															"nativeSrc": "2194:15:1",
															"nodeType": "YulAssignment",
															"src": "2194:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "2204:5:1",
																"nodeType": "YulIdentifier",
																"src": "2204:5:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "2194:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2194:6:1"
																}
															]
														},
														{
															"nativeSrc": "2218:16:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2218:16:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2233:1:1",
																"nodeType": "YulLiteral",
																"src": "2233:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2222:7:1",
																	"nodeType": "YulTypedName",
																	"src": "2222:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2243:37:1",
															"nodeType": "YulAssignment",
															"src": "2243:37:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2264:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2264:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2275:3:1",
																				"nodeType": "YulLiteral",
																				"src": "2275:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2260:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2260:3:1"
																		},
																		"nativeSrc": "2260:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2260:19:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2254:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2254:5:1"
																},
																"nativeSrc": "2254:26:1",
																"nodeType": "YulFunctionCall",
																"src": "2254:26:1"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "2243:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2243:7:1"
																}
															]
														},
														{
															"nativeSrc": "2289:17:1",
															"nodeType": "YulAssignment",
															"src": "2289:17:1",
															"value": {
																"name": "value_1",
																"nativeSrc": "2299:7:1",
																"nodeType": "YulIdentifier",
																"src": "2299:7:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "2289:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2289:6:1"
																}
															]
														},
														{
															"nativeSrc": "2315:60:1",
															"nodeType": "YulAssignment",
															"src": "2315:60:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2359:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2359:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2370:3:1",
																				"nodeType": "YulLiteral",
																				"src": "2370:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2355:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2355:3:1"
																		},
																		"nativeSrc": "2355:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2355:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "2325:29:1",
																	"nodeType": "YulIdentifier",
																	"src": "2325:29:1"
																},
																"nativeSrc": "2325:50:1",
																"nodeType": "YulFunctionCall",
																"src": "2325:50:1"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "2315:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2315:6:1"
																}
															]
														},
														{
															"nativeSrc": "2384:42:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2384:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2410:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2410:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2421:3:1",
																				"nodeType": "YulLiteral",
																				"src": "2421:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2406:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2406:3:1"
																		},
																		"nativeSrc": "2406:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2406:19:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2400:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2400:5:1"
																},
																"nativeSrc": "2400:26:1",
																"nodeType": "YulFunctionCall",
																"src": "2400:26:1"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nativeSrc": "2388:8:1",
																	"nodeType": "YulTypedName",
																	"src": "2388:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2471:16:1",
																"nodeType": "YulBlock",
																"src": "2471:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2480:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2480:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2483:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2483:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2473:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2473:6:1"
																			},
																			"nativeSrc": "2473:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2473:12:1"
																		},
																		"nativeSrc": "2473:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2473:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nativeSrc": "2441:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "2441:8:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2459:2:1",
																						"nodeType": "YulLiteral",
																						"src": "2459:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2463:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2463:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2455:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2455:3:1"
																				},
																				"nativeSrc": "2455:10:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2455:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2467:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2467:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2451:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2451:3:1"
																		},
																		"nativeSrc": "2451:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2451:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2438:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2438:2:1"
																},
																"nativeSrc": "2438:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2438:32:1"
															},
															"nativeSrc": "2435:52:1",
															"nodeType": "YulIf",
															"src": "2435:52:1"
														},
														{
															"nativeSrc": "2496:73:1",
															"nodeType": "YulAssignment",
															"src": "2496:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2539:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2539:9:1"
																			},
																			{
																				"name": "offset_2",
																				"nativeSrc": "2550:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "2550:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2535:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2535:3:1"
																		},
																		"nativeSrc": "2535:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2535:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2561:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "2561:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "2506:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "2506:28:1"
																},
																"nativeSrc": "2506:63:1",
																"nodeType": "YulFunctionCall",
																"src": "2506:63:1"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nativeSrc": "2496:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2496:6:1"
																}
															]
														},
														{
															"nativeSrc": "2578:60:1",
															"nodeType": "YulAssignment",
															"src": "2578:60:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2622:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2622:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2633:3:1",
																				"nodeType": "YulLiteral",
																				"src": "2633:3:1",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2618:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2618:3:1"
																		},
																		"nativeSrc": "2618:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2618:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "2588:29:1",
																	"nodeType": "YulIdentifier",
																	"src": "2588:29:1"
																},
																"nativeSrc": "2588:50:1",
																"nodeType": "YulFunctionCall",
																"src": "2588:50:1"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nativeSrc": "2578:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2578:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256t_uint256t_addresst_bytes_memory_ptrt_address_payable_fromMemory",
												"nativeSrc": "1384:1260:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1529:9:1",
														"nodeType": "YulTypedName",
														"src": "1529:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1540:7:1",
														"nodeType": "YulTypedName",
														"src": "1540:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1552:6:1",
														"nodeType": "YulTypedName",
														"src": "1552:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1560:6:1",
														"nodeType": "YulTypedName",
														"src": "1560:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1568:6:1",
														"nodeType": "YulTypedName",
														"src": "1568:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1576:6:1",
														"nodeType": "YulTypedName",
														"src": "1576:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1584:6:1",
														"nodeType": "YulTypedName",
														"src": "1584:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "1592:6:1",
														"nodeType": "YulTypedName",
														"src": "1592:6:1",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "1600:6:1",
														"nodeType": "YulTypedName",
														"src": "1600:6:1",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "1608:6:1",
														"nodeType": "YulTypedName",
														"src": "1608:6:1",
														"type": ""
													}
												],
												"src": "1384:1260:1"
											},
											{
												"body": {
													"nativeSrc": "2704:325:1",
													"nodeType": "YulBlock",
													"src": "2704:325:1",
													"statements": [
														{
															"nativeSrc": "2714:22:1",
															"nodeType": "YulAssignment",
															"src": "2714:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2728:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2728:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2731:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2731:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2724:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2724:3:1"
																},
																"nativeSrc": "2724:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2724:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2714:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2714:6:1"
																}
															]
														},
														{
															"nativeSrc": "2745:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2745:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2775:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2775:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2781:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2781:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2771:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2771:3:1"
																},
																"nativeSrc": "2771:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2771:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2749:18:1",
																	"nodeType": "YulTypedName",
																	"src": "2749:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2822:31:1",
																"nodeType": "YulBlock",
																"src": "2822:31:1",
																"statements": [
																	{
																		"nativeSrc": "2824:27:1",
																		"nodeType": "YulAssignment",
																		"src": "2824:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2838:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2838:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2846:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2846:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2834:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2834:3:1"
																			},
																			"nativeSrc": "2834:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2834:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2824:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2824:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2802:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "2802:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2795:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2795:6:1"
																},
																"nativeSrc": "2795:26:1",
																"nodeType": "YulFunctionCall",
																"src": "2795:26:1"
															},
															"nativeSrc": "2792:61:1",
															"nodeType": "YulIf",
															"src": "2792:61:1"
														},
														{
															"body": {
																"nativeSrc": "2912:111:1",
																"nodeType": "YulBlock",
																"src": "2912:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2933:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2933:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2940:3:1",
																							"nodeType": "YulLiteral",
																							"src": "2940:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2945:10:1",
																							"nodeType": "YulLiteral",
																							"src": "2945:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2936:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2936:3:1"
																					},
																					"nativeSrc": "2936:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2936:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2926:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2926:6:1"
																			},
																			"nativeSrc": "2926:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2926:31:1"
																		},
																		"nativeSrc": "2926:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2926:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2977:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2977:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2980:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2980:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2970:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2970:6:1"
																			},
																			"nativeSrc": "2970:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2970:15:1"
																		},
																		"nativeSrc": "2970:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2970:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3005:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3005:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3008:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3008:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2998:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2998:6:1"
																			},
																			"nativeSrc": "2998:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2998:15:1"
																		},
																		"nativeSrc": "2998:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2998:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2868:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "2868:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2891:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2891:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2899:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2899:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2888:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2888:2:1"
																		},
																		"nativeSrc": "2888:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2888:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2865:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2865:2:1"
																},
																"nativeSrc": "2865:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2865:38:1"
															},
															"nativeSrc": "2862:161:1",
															"nodeType": "YulIf",
															"src": "2862:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2649:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2684:4:1",
														"nodeType": "YulTypedName",
														"src": "2684:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2693:6:1",
														"nodeType": "YulTypedName",
														"src": "2693:6:1",
														"type": ""
													}
												],
												"src": "2649:380:1"
											},
											{
												"body": {
													"nativeSrc": "3090:65:1",
													"nodeType": "YulBlock",
													"src": "3090:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3107:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3107:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "3110:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3110:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3100:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3100:6:1"
																},
																"nativeSrc": "3100:14:1",
																"nodeType": "YulFunctionCall",
																"src": "3100:14:1"
															},
															"nativeSrc": "3100:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "3100:14:1"
														},
														{
															"nativeSrc": "3123:26:1",
															"nodeType": "YulAssignment",
															"src": "3123:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3141:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3141:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3144:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3144:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3131:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "3131:9:1"
																},
																"nativeSrc": "3131:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3131:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3123:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3123:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "3034:121:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "3073:3:1",
														"nodeType": "YulTypedName",
														"src": "3073:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "3081:4:1",
														"nodeType": "YulTypedName",
														"src": "3081:4:1",
														"type": ""
													}
												],
												"src": "3034:121:1"
											},
											{
												"body": {
													"nativeSrc": "3241:437:1",
													"nodeType": "YulBlock",
													"src": "3241:437:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3274:398:1",
																"nodeType": "YulBlock",
																"src": "3274:398:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3295:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3295:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "3298:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3298:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3288:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3288:6:1"
																			},
																			"nativeSrc": "3288:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3288:16:1"
																		},
																		"nativeSrc": "3288:16:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3288:16:1"
																	},
																	{
																		"nativeSrc": "3317:30:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3317:30:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3339:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3339:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3342:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3342:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "3329:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3329:9:1"
																			},
																			"nativeSrc": "3329:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3329:18:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "3321:4:1",
																				"nodeType": "YulTypedName",
																				"src": "3321:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3360:57:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3360:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "3383:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "3383:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3393:1:1",
																							"nodeType": "YulLiteral",
																							"src": "3393:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "3400:10:1",
																									"nodeType": "YulIdentifier",
																									"src": "3400:10:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3412:2:1",
																									"nodeType": "YulLiteral",
																									"src": "3412:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3396:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "3396:3:1"
																							},
																							"nativeSrc": "3396:19:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3396:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "3389:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3389:3:1"
																					},
																					"nativeSrc": "3389:27:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3389:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3379:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3379:3:1"
																			},
																			"nativeSrc": "3379:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3379:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "3364:11:1",
																				"nodeType": "YulTypedName",
																				"src": "3364:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3454:23:1",
																			"nodeType": "YulBlock",
																			"src": "3454:23:1",
																			"statements": [
																				{
																					"nativeSrc": "3456:19:1",
																					"nodeType": "YulAssignment",
																					"src": "3456:19:1",
																					"value": {
																						"name": "data",
																						"nativeSrc": "3471:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "3471:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3456:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "3456:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3436:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "3436:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3448:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3448:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3433:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "3433:2:1"
																			},
																			"nativeSrc": "3433:20:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3433:20:1"
																		},
																		"nativeSrc": "3430:47:1",
																		"nodeType": "YulIf",
																		"src": "3430:47:1"
																	},
																	{
																		"nativeSrc": "3490:41:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3490:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "3504:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "3504:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3514:1:1",
																							"nodeType": "YulLiteral",
																							"src": "3514:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3521:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "3521:3:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3526:2:1",
																									"nodeType": "YulLiteral",
																									"src": "3526:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3517:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "3517:3:1"
																							},
																							"nativeSrc": "3517:12:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3517:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "3510:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3510:3:1"
																					},
																					"nativeSrc": "3510:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3510:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3500:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3500:3:1"
																			},
																			"nativeSrc": "3500:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3500:31:1"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "3494:2:1",
																				"nodeType": "YulTypedName",
																				"src": "3494:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3544:24:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3544:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "3557:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "3557:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "3548:5:1",
																				"nodeType": "YulTypedName",
																				"src": "3548:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3642:20:1",
																			"nodeType": "YulBlock",
																			"src": "3642:20:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "3651:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "3651:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3658:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3658:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "3644:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "3644:6:1"
																						},
																						"nativeSrc": "3644:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3644:16:1"
																					},
																					"nativeSrc": "3644:16:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "3644:16:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3592:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3592:5:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "3599:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "3599:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3589:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "3589:2:1"
																			},
																			"nativeSrc": "3589:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3589:13:1"
																		},
																		"nativeSrc": "3581:81:1",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "3603:26:1",
																			"nodeType": "YulBlock",
																			"src": "3603:26:1",
																			"statements": [
																				{
																					"nativeSrc": "3605:22:1",
																					"nodeType": "YulAssignment",
																					"src": "3605:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "3618:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "3618:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3625:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3625:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "3614:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3614:3:1"
																						},
																						"nativeSrc": "3614:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3614:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "3605:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "3605:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "3585:3:1",
																			"nodeType": "YulBlock",
																			"src": "3585:3:1",
																			"statements": []
																		},
																		"src": "3581:81:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3257:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3257:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3262:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3262:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3254:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3254:2:1"
																},
																"nativeSrc": "3254:11:1",
																"nodeType": "YulFunctionCall",
																"src": "3254:11:1"
															},
															"nativeSrc": "3251:421:1",
															"nodeType": "YulIf",
															"src": "3251:421:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "3160:518:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3213:5:1",
														"nodeType": "YulTypedName",
														"src": "3213:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3220:3:1",
														"nodeType": "YulTypedName",
														"src": "3220:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3225:10:1",
														"nodeType": "YulTypedName",
														"src": "3225:10:1",
														"type": ""
													}
												],
												"src": "3160:518:1"
											},
											{
												"body": {
													"nativeSrc": "3768:81:1",
													"nodeType": "YulBlock",
													"src": "3768:81:1",
													"statements": [
														{
															"nativeSrc": "3778:65:1",
															"nodeType": "YulAssignment",
															"src": "3778:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "3793:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "3793:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3811:1:1",
																										"nodeType": "YulLiteral",
																										"src": "3811:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "3814:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "3814:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "3807:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "3807:3:1"
																								},
																								"nativeSrc": "3807:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3807:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3824:1:1",
																										"nodeType": "YulLiteral",
																										"src": "3824:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "3820:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "3820:3:1"
																								},
																								"nativeSrc": "3820:6:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3820:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "3803:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3803:3:1"
																						},
																						"nativeSrc": "3803:24:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3803:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3799:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3799:3:1"
																				},
																				"nativeSrc": "3799:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3799:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3789:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3789:3:1"
																		},
																		"nativeSrc": "3789:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3789:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3835:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3835:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3838:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3838:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3831:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3831:3:1"
																		},
																		"nativeSrc": "3831:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3831:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3786:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3786:2:1"
																},
																"nativeSrc": "3786:57:1",
																"nodeType": "YulFunctionCall",
																"src": "3786:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3778:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3778:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3683:166:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3745:4:1",
														"nodeType": "YulTypedName",
														"src": "3745:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3751:3:1",
														"nodeType": "YulTypedName",
														"src": "3751:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3759:4:1",
														"nodeType": "YulTypedName",
														"src": "3759:4:1",
														"type": ""
													}
												],
												"src": "3683:166:1"
											},
											{
												"body": {
													"nativeSrc": "3950:1203:1",
													"nodeType": "YulBlock",
													"src": "3950:1203:1",
													"statements": [
														{
															"nativeSrc": "3960:24:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3960:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3980:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3980:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3974:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3974:5:1"
																},
																"nativeSrc": "3974:10:1",
																"nodeType": "YulFunctionCall",
																"src": "3974:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3964:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3964:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4027:22:1",
																"nodeType": "YulBlock",
																"src": "4027:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4029:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4029:16:1"
																			},
																			"nativeSrc": "4029:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4029:18:1"
																		},
																		"nativeSrc": "4029:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4029:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3999:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3999:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4015:2:1",
																						"nodeType": "YulLiteral",
																						"src": "4015:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4019:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4019:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "4011:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4011:3:1"
																				},
																				"nativeSrc": "4011:10:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4011:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4023:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4023:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4007:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4007:3:1"
																		},
																		"nativeSrc": "4007:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4007:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3996:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3996:2:1"
																},
																"nativeSrc": "3996:30:1",
																"nodeType": "YulFunctionCall",
																"src": "3996:30:1"
															},
															"nativeSrc": "3993:56:1",
															"nodeType": "YulIf",
															"src": "3993:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4102:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4102:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "4140:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "4140:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "4134:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "4134:5:1"
																				},
																				"nativeSrc": "4134:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4134:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "4108:25:1",
																			"nodeType": "YulIdentifier",
																			"src": "4108:25:1"
																		},
																		"nativeSrc": "4108:38:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4108:38:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4148:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4148:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "4058:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "4058:43:1"
																},
																"nativeSrc": "4058:97:1",
																"nodeType": "YulFunctionCall",
																"src": "4058:97:1"
															},
															"nativeSrc": "4058:97:1",
															"nodeType": "YulExpressionStatement",
															"src": "4058:97:1"
														},
														{
															"nativeSrc": "4164:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4164:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4181:1:1",
																"nodeType": "YulLiteral",
																"src": "4181:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4168:9:1",
																	"nodeType": "YulTypedName",
																	"src": "4168:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4191:17:1",
															"nodeType": "YulAssignment",
															"src": "4191:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4204:4:1",
																"nodeType": "YulLiteral",
																"src": "4204:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4191:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "4191:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4254:642:1",
																		"nodeType": "YulBlock",
																		"src": "4254:642:1",
																		"statements": [
																			{
																				"nativeSrc": "4268:35:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4268:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4287:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "4287:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4299:2:1",
																									"nodeType": "YulLiteral",
																									"src": "4299:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4295:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "4295:3:1"
																							},
																							"nativeSrc": "4295:7:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4295:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4283:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4283:3:1"
																					},
																					"nativeSrc": "4283:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4283:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4272:7:1",
																						"nodeType": "YulTypedName",
																						"src": "4272:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4316:49:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4316:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4360:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "4360:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "4330:29:1",
																						"nodeType": "YulIdentifier",
																						"src": "4330:29:1"
																					},
																					"nativeSrc": "4330:35:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4330:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4320:6:1",
																						"nodeType": "YulTypedName",
																						"src": "4320:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4378:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4378:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4387:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4387:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4382:1:1",
																						"nodeType": "YulTypedName",
																						"src": "4382:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4458:165:1",
																					"nodeType": "YulBlock",
																					"src": "4458:165:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4483:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4483:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4501:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "4501:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4506:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "4506:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4497:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "4497:3:1"
																												},
																												"nativeSrc": "4497:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "4497:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4491:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "4491:5:1"
																										},
																										"nativeSrc": "4491:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4491:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4476:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4476:6:1"
																								},
																								"nativeSrc": "4476:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4476:42:1"
																							},
																							"nativeSrc": "4476:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "4476:42:1"
																						},
																						{
																							"nativeSrc": "4535:24:1",
																							"nodeType": "YulAssignment",
																							"src": "4535:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4549:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4549:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4557:1:1",
																										"nodeType": "YulLiteral",
																										"src": "4557:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4545:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4545:3:1"
																								},
																								"nativeSrc": "4545:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4545:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4535:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4535:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4576:33:1",
																							"nodeType": "YulAssignment",
																							"src": "4576:33:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4593:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "4593:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4604:4:1",
																										"nodeType": "YulLiteral",
																										"src": "4604:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4589:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4589:3:1"
																								},
																								"nativeSrc": "4589:20:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4589:20:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4576:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "4576:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4412:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "4412:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4415:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "4415:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4409:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4409:2:1"
																					},
																					"nativeSrc": "4409:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4409:14:1"
																				},
																				"nativeSrc": "4401:222:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4424:21:1",
																					"nodeType": "YulBlock",
																					"src": "4424:21:1",
																					"statements": [
																						{
																							"nativeSrc": "4426:17:1",
																							"nodeType": "YulAssignment",
																							"src": "4426:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4435:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "4435:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4438:4:1",
																										"nodeType": "YulLiteral",
																										"src": "4438:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4431:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4431:3:1"
																								},
																								"nativeSrc": "4431:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4431:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4426:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "4426:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4405:3:1",
																					"nodeType": "YulBlock",
																					"src": "4405:3:1",
																					"statements": []
																				},
																				"src": "4401:222:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "4671:166:1",
																					"nodeType": "YulBlock",
																					"src": "4671:166:1",
																					"statements": [
																						{
																							"nativeSrc": "4689:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4689:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4716:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "4716:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4721:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "4721:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4712:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "4712:3:1"
																										},
																										"nativeSrc": "4712:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4712:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4706:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "4706:5:1"
																								},
																								"nativeSrc": "4706:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4706:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4693:9:1",
																									"nodeType": "YulTypedName",
																									"src": "4693:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4756:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4756:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4768:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "4768:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "4795:1:1",
																																				"nodeType": "YulLiteral",
																																				"src": "4795:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "4798:6:1",
																																				"nodeType": "YulIdentifier",
																																				"src": "4798:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "4791:3:1",
																																			"nodeType": "YulIdentifier",
																																			"src": "4791:3:1"
																																		},
																																		"nativeSrc": "4791:14:1",
																																		"nodeType": "YulFunctionCall",
																																		"src": "4791:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "4807:3:1",
																																		"nodeType": "YulLiteral",
																																		"src": "4807:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "4787:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "4787:3:1"
																																},
																																"nativeSrc": "4787:24:1",
																																"nodeType": "YulFunctionCall",
																																"src": "4787:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "4817:1:1",
																																		"nodeType": "YulLiteral",
																																		"src": "4817:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "4813:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "4813:3:1"
																																},
																																"nativeSrc": "4813:6:1",
																																"nodeType": "YulFunctionCall",
																																"src": "4813:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "4783:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "4783:3:1"
																														},
																														"nativeSrc": "4783:37:1",
																														"nodeType": "YulFunctionCall",
																														"src": "4783:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "4779:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "4779:3:1"
																												},
																												"nativeSrc": "4779:42:1",
																												"nodeType": "YulFunctionCall",
																												"src": "4779:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "4764:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "4764:3:1"
																										},
																										"nativeSrc": "4764:58:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4764:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4749:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4749:6:1"
																								},
																								"nativeSrc": "4749:74:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4749:74:1"
																							},
																							"nativeSrc": "4749:74:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "4749:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4642:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "4642:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4651:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "4651:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4639:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4639:2:1"
																					},
																					"nativeSrc": "4639:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4639:19:1"
																				},
																				"nativeSrc": "4636:201:1",
																				"nodeType": "YulIf",
																				"src": "4636:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4857:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "4857:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "4871:1:1",
																											"nodeType": "YulLiteral",
																											"src": "4871:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "4874:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "4874:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "4867:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "4867:3:1"
																									},
																									"nativeSrc": "4867:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "4867:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4883:1:1",
																									"nodeType": "YulLiteral",
																									"src": "4883:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4863:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "4863:3:1"
																							},
																							"nativeSrc": "4863:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4863:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4850:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:1"
																					},
																					"nativeSrc": "4850:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4850:36:1"
																				},
																				"nativeSrc": "4850:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "4850:36:1"
																			}
																		]
																	},
																	"nativeSrc": "4247:649:1",
																	"nodeType": "YulCase",
																	"src": "4247:649:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4252:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4252:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "4913:234:1",
																		"nodeType": "YulBlock",
																		"src": "4913:234:1",
																		"statements": [
																			{
																				"nativeSrc": "4927:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4927:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4940:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4940:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "4931:5:1",
																						"nodeType": "YulTypedName",
																						"src": "4931:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4976:67:1",
																					"nodeType": "YulBlock",
																					"src": "4976:67:1",
																					"statements": [
																						{
																							"nativeSrc": "4994:35:1",
																							"nodeType": "YulAssignment",
																							"src": "4994:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5013:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "5013:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5018:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "5018:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5009:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "5009:3:1"
																										},
																										"nativeSrc": "5009:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "5009:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5003:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5003:5:1"
																								},
																								"nativeSrc": "5003:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5003:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "4994:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "4994:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "4957:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "4957:6:1"
																				},
																				"nativeSrc": "4954:89:1",
																				"nodeType": "YulIf",
																				"src": "4954:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5063:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "5063:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5122:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5122:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5129:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5129:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5069:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "5069:52:1"
																							},
																							"nativeSrc": "5069:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "5069:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5056:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5056:6:1"
																					},
																					"nativeSrc": "5056:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5056:81:1"
																				},
																				"nativeSrc": "5056:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "5056:81:1"
																			}
																		]
																	},
																	"nativeSrc": "4905:242:1",
																	"nodeType": "YulCase",
																	"src": "4905:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4227:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4227:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4235:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4235:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4224:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4224:2:1"
																},
																"nativeSrc": "4224:14:1",
																"nodeType": "YulFunctionCall",
																"src": "4224:14:1"
															},
															"nativeSrc": "4217:930:1",
															"nodeType": "YulSwitch",
															"src": "4217:930:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3854:1299:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3935:4:1",
														"nodeType": "YulTypedName",
														"src": "3935:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3941:3:1",
														"nodeType": "YulTypedName",
														"src": "3941:3:1",
														"type": ""
													}
												],
												"src": "3854:1299:1"
											},
											{
												"body": {
													"nativeSrc": "5208:239:1",
													"nodeType": "YulBlock",
													"src": "5208:239:1",
													"statements": [
														{
															"nativeSrc": "5218:26:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5218:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5238:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5238:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5232:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "5232:5:1"
																},
																"nativeSrc": "5232:12:1",
																"nodeType": "YulFunctionCall",
																"src": "5232:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5222:6:1",
																	"nodeType": "YulTypedName",
																	"src": "5222:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5260:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5260:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5265:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5265:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5253:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5253:6:1"
																},
																"nativeSrc": "5253:19:1",
																"nodeType": "YulFunctionCall",
																"src": "5253:19:1"
															},
															"nativeSrc": "5253:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "5253:19:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "5291:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "5291:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5296:4:1",
																				"nodeType": "YulLiteral",
																				"src": "5296:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5287:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5287:3:1"
																		},
																		"nativeSrc": "5287:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5287:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5307:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5307:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5314:4:1",
																				"nodeType": "YulLiteral",
																				"src": "5314:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5303:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5303:3:1"
																		},
																		"nativeSrc": "5303:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5303:16:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5321:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5321:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "5281:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "5281:5:1"
																},
																"nativeSrc": "5281:47:1",
																"nodeType": "YulFunctionCall",
																"src": "5281:47:1"
															},
															"nativeSrc": "5281:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "5281:47:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5352:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "5352:3:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "5357:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5357:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5348:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5348:3:1"
																				},
																				"nativeSrc": "5348:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5348:16:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5366:4:1",
																				"nodeType": "YulLiteral",
																				"src": "5366:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5344:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5344:3:1"
																		},
																		"nativeSrc": "5344:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5344:27:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5373:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5373:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5337:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5337:6:1"
																},
																"nativeSrc": "5337:38:1",
																"nodeType": "YulFunctionCall",
																"src": "5337:38:1"
															},
															"nativeSrc": "5337:38:1",
															"nodeType": "YulExpressionStatement",
															"src": "5337:38:1"
														},
														{
															"nativeSrc": "5384:57:1",
															"nodeType": "YulAssignment",
															"src": "5384:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "5399:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "5399:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "5412:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "5412:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5420:2:1",
																								"nodeType": "YulLiteral",
																								"src": "5420:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "5408:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "5408:3:1"
																						},
																						"nativeSrc": "5408:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "5408:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5429:2:1",
																								"nodeType": "YulLiteral",
																								"src": "5429:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "5425:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "5425:3:1"
																						},
																						"nativeSrc": "5425:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "5425:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "5404:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5404:3:1"
																				},
																				"nativeSrc": "5404:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5404:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5395:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5395:3:1"
																		},
																		"nativeSrc": "5395:39:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5395:39:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5436:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5436:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5391:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5391:3:1"
																},
																"nativeSrc": "5391:50:1",
																"nodeType": "YulFunctionCall",
																"src": "5391:50:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5384:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5384:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "5158:289:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5185:5:1",
														"nodeType": "YulTypedName",
														"src": "5185:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5192:3:1",
														"nodeType": "YulTypedName",
														"src": "5192:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5200:3:1",
														"nodeType": "YulTypedName",
														"src": "5200:3:1",
														"type": ""
													}
												],
												"src": "5158:289:1"
											},
											{
												"body": {
													"nativeSrc": "5647:283:1",
													"nodeType": "YulBlock",
													"src": "5647:283:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5664:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5664:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5675:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5675:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5657:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5657:6:1"
																},
																"nativeSrc": "5657:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5657:21:1"
															},
															"nativeSrc": "5657:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "5657:21:1"
														},
														{
															"nativeSrc": "5687:59:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5687:59:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5719:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5719:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5731:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5731:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5742:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5742:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5727:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5727:3:1"
																		},
																		"nativeSrc": "5727:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5727:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "5701:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "5701:17:1"
																},
																"nativeSrc": "5701:45:1",
																"nodeType": "YulFunctionCall",
																"src": "5701:45:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "5691:6:1",
																	"nodeType": "YulTypedName",
																	"src": "5691:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5766:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5766:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5777:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5777:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5762:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5762:3:1"
																		},
																		"nativeSrc": "5762:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5762:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "5786:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5786:6:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5794:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5794:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5782:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5782:3:1"
																		},
																		"nativeSrc": "5782:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5782:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5755:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5755:6:1"
																},
																"nativeSrc": "5755:50:1",
																"nodeType": "YulFunctionCall",
																"src": "5755:50:1"
															},
															"nativeSrc": "5755:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "5755:50:1"
														},
														{
															"nativeSrc": "5814:41:1",
															"nodeType": "YulAssignment",
															"src": "5814:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5840:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5840:6:1"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "5848:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5848:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "5822:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "5822:17:1"
																},
																"nativeSrc": "5822:33:1",
																"nodeType": "YulFunctionCall",
																"src": "5822:33:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5814:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5814:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5875:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5875:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5886:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5886:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5871:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5871:3:1"
																		},
																		"nativeSrc": "5871:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5871:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "5895:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5895:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5911:3:1",
																								"nodeType": "YulLiteral",
																								"src": "5911:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5916:1:1",
																								"nodeType": "YulLiteral",
																								"src": "5916:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5907:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "5907:3:1"
																						},
																						"nativeSrc": "5907:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "5907:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5920:1:1",
																						"nodeType": "YulLiteral",
																						"src": "5920:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5903:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5903:3:1"
																				},
																				"nativeSrc": "5903:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5903:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5891:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5891:3:1"
																		},
																		"nativeSrc": "5891:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5891:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5864:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5864:6:1"
																},
																"nativeSrc": "5864:60:1",
																"nodeType": "YulFunctionCall",
																"src": "5864:60:1"
															},
															"nativeSrc": "5864:60:1",
															"nodeType": "YulExpressionStatement",
															"src": "5864:60:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_bytes_memory_ptr_t_address__to_t_string_memory_ptr_t_bytes_memory_ptr_t_address__fromStack_reversed",
												"nativeSrc": "5452:478:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5600:9:1",
														"nodeType": "YulTypedName",
														"src": "5600:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5611:6:1",
														"nodeType": "YulTypedName",
														"src": "5611:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5619:6:1",
														"nodeType": "YulTypedName",
														"src": "5619:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5627:6:1",
														"nodeType": "YulTypedName",
														"src": "5627:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5638:4:1",
														"nodeType": "YulTypedName",
														"src": "5638:4:1",
														"type": ""
													}
												],
												"src": "5452:478:1"
											},
											{
												"body": {
													"nativeSrc": "6109:225:1",
													"nodeType": "YulBlock",
													"src": "6109:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6126:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6126:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6137:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6137:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6119:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6119:6:1"
																},
																"nativeSrc": "6119:21:1",
																"nodeType": "YulFunctionCall",
																"src": "6119:21:1"
															},
															"nativeSrc": "6119:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "6119:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6160:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6160:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6171:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6171:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6156:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6156:3:1"
																		},
																		"nativeSrc": "6156:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6156:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6176:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6176:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6149:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6149:6:1"
																},
																"nativeSrc": "6149:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6149:30:1"
															},
															"nativeSrc": "6149:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6149:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6199:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6199:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6210:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6210:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6195:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6195:3:1"
																		},
																		"nativeSrc": "6195:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6195:18:1"
																	},
																	{
																		"hexValue": "54617861626c6545524332303a20737570706c792063616e6e6f74206265207a",
																		"kind": "string",
																		"nativeSrc": "6215:34:1",
																		"nodeType": "YulLiteral",
																		"src": "6215:34:1",
																		"type": "",
																		"value": "TaxableERC20: supply cannot be z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6188:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6188:6:1"
																},
																"nativeSrc": "6188:62:1",
																"nodeType": "YulFunctionCall",
																"src": "6188:62:1"
															},
															"nativeSrc": "6188:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "6188:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6270:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6270:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6281:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6281:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6266:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6266:3:1"
																		},
																		"nativeSrc": "6266:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6266:18:1"
																	},
																	{
																		"hexValue": "65726f",
																		"kind": "string",
																		"nativeSrc": "6286:5:1",
																		"nodeType": "YulLiteral",
																		"src": "6286:5:1",
																		"type": "",
																		"value": "ero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6259:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6259:6:1"
																},
																"nativeSrc": "6259:33:1",
																"nodeType": "YulFunctionCall",
																"src": "6259:33:1"
															},
															"nativeSrc": "6259:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "6259:33:1"
														},
														{
															"nativeSrc": "6301:27:1",
															"nodeType": "YulAssignment",
															"src": "6301:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6313:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6313:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6324:3:1",
																		"nodeType": "YulLiteral",
																		"src": "6324:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6309:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6309:3:1"
																},
																"nativeSrc": "6309:19:1",
																"nodeType": "YulFunctionCall",
																"src": "6309:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6301:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6301:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_13b0d23b78e36e0ca5d50799970a37145ee5efca8eea0a88562a540bb3e85734__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5935:399:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6086:9:1",
														"nodeType": "YulTypedName",
														"src": "6086:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6100:4:1",
														"nodeType": "YulTypedName",
														"src": "6100:4:1",
														"type": ""
													}
												],
												"src": "5935:399:1"
											},
											{
												"body": {
													"nativeSrc": "6513:242:1",
													"nodeType": "YulBlock",
													"src": "6513:242:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6530:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6530:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6541:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6541:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6523:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6523:6:1"
																},
																"nativeSrc": "6523:21:1",
																"nodeType": "YulFunctionCall",
																"src": "6523:21:1"
															},
															"nativeSrc": "6523:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "6523:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6564:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6564:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6575:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6575:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6560:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:1"
																		},
																		"nativeSrc": "6560:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6560:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6580:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6580:2:1",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6553:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6553:6:1"
																},
																"nativeSrc": "6553:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6553:30:1"
															},
															"nativeSrc": "6553:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6553:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6603:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6603:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6614:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6614:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6599:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6599:3:1"
																		},
																		"nativeSrc": "6599:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6599:18:1"
																	},
																	{
																		"hexValue": "455243323054617861626c653a207461784665655065724d696c6c655f206d75",
																		"kind": "string",
																		"nativeSrc": "6619:34:1",
																		"nodeType": "YulLiteral",
																		"src": "6619:34:1",
																		"type": "",
																		"value": "ERC20Taxable: taxFeePerMille_ mu"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6592:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6592:6:1"
																},
																"nativeSrc": "6592:62:1",
																"nodeType": "YulFunctionCall",
																"src": "6592:62:1"
															},
															"nativeSrc": "6592:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "6592:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6674:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6674:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6685:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6685:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6670:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6670:3:1"
																		},
																		"nativeSrc": "6670:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6670:18:1"
																	},
																	{
																		"hexValue": "7374206265206c657373207468616e2031303030",
																		"kind": "string",
																		"nativeSrc": "6690:22:1",
																		"nodeType": "YulLiteral",
																		"src": "6690:22:1",
																		"type": "",
																		"value": "st be less than 1000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6663:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6663:6:1"
																},
																"nativeSrc": "6663:50:1",
																"nodeType": "YulFunctionCall",
																"src": "6663:50:1"
															},
															"nativeSrc": "6663:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "6663:50:1"
														},
														{
															"nativeSrc": "6722:27:1",
															"nodeType": "YulAssignment",
															"src": "6722:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6734:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6734:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6745:3:1",
																		"nodeType": "YulLiteral",
																		"src": "6745:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6730:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6730:3:1"
																},
																"nativeSrc": "6730:19:1",
																"nodeType": "YulFunctionCall",
																"src": "6730:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6722:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6722:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_76c937e8541376b2ae2ed2ec41481ffb6ae85620be755d89da3704bd2719bbaa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6339:416:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6490:9:1",
														"nodeType": "YulTypedName",
														"src": "6490:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6504:4:1",
														"nodeType": "YulTypedName",
														"src": "6504:4:1",
														"type": ""
													}
												],
												"src": "6339:416:1"
											},
											{
												"body": {
													"nativeSrc": "6934:242:1",
													"nodeType": "YulBlock",
													"src": "6934:242:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6951:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6951:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6962:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6962:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6944:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6944:6:1"
																},
																"nativeSrc": "6944:21:1",
																"nodeType": "YulFunctionCall",
																"src": "6944:21:1"
															},
															"nativeSrc": "6944:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "6944:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6985:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6985:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6996:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6996:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6981:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6981:3:1"
																		},
																		"nativeSrc": "6981:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6981:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7001:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7001:2:1",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6974:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6974:6:1"
																},
																"nativeSrc": "6974:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6974:30:1"
															},
															"nativeSrc": "6974:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6974:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7024:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7024:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7035:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7035:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7020:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7020:3:1"
																		},
																		"nativeSrc": "7020:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7020:18:1"
																	},
																	{
																		"hexValue": "455243323054617861626c653a20746178416464726573735f2063616e6e6f74",
																		"kind": "string",
																		"nativeSrc": "7040:34:1",
																		"nodeType": "YulLiteral",
																		"src": "7040:34:1",
																		"type": "",
																		"value": "ERC20Taxable: taxAddress_ cannot"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7013:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7013:6:1"
																},
																"nativeSrc": "7013:62:1",
																"nodeType": "YulFunctionCall",
																"src": "7013:62:1"
															},
															"nativeSrc": "7013:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "7013:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7095:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7095:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7106:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7106:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7091:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7091:3:1"
																		},
																		"nativeSrc": "7091:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7091:18:1"
																	},
																	{
																		"hexValue": "20626520746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "7111:22:1",
																		"nodeType": "YulLiteral",
																		"src": "7111:22:1",
																		"type": "",
																		"value": " be the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7084:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7084:6:1"
																},
																"nativeSrc": "7084:50:1",
																"nodeType": "YulFunctionCall",
																"src": "7084:50:1"
															},
															"nativeSrc": "7084:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "7084:50:1"
														},
														{
															"nativeSrc": "7143:27:1",
															"nodeType": "YulAssignment",
															"src": "7143:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7155:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7155:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7166:3:1",
																		"nodeType": "YulLiteral",
																		"src": "7166:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7151:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7151:3:1"
																},
																"nativeSrc": "7151:19:1",
																"nodeType": "YulFunctionCall",
																"src": "7151:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7143:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7143:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ee77ba772060351314b1afc6b332478f67976de73404959e804d987fd557b6fd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6760:416:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6911:9:1",
														"nodeType": "YulTypedName",
														"src": "6911:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6925:4:1",
														"nodeType": "YulTypedName",
														"src": "6925:4:1",
														"type": ""
													}
												],
												"src": "6760:416:1"
											},
											{
												"body": {
													"nativeSrc": "7355:181:1",
													"nodeType": "YulBlock",
													"src": "7355:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7372:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7372:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7383:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7383:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7365:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7365:6:1"
																},
																"nativeSrc": "7365:21:1",
																"nodeType": "YulFunctionCall",
																"src": "7365:21:1"
															},
															"nativeSrc": "7365:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "7365:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7406:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7406:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7417:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7417:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7402:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7402:3:1"
																		},
																		"nativeSrc": "7402:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7402:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7422:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7422:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7395:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7395:6:1"
																},
																"nativeSrc": "7395:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7395:30:1"
															},
															"nativeSrc": "7395:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "7395:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7445:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7445:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7456:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7456:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7441:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7441:3:1"
																		},
																		"nativeSrc": "7441:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7441:18:1"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "7461:33:1",
																		"nodeType": "YulLiteral",
																		"src": "7461:33:1",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7434:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7434:6:1"
																},
																"nativeSrc": "7434:61:1",
																"nodeType": "YulFunctionCall",
																"src": "7434:61:1"
															},
															"nativeSrc": "7434:61:1",
															"nodeType": "YulExpressionStatement",
															"src": "7434:61:1"
														},
														{
															"nativeSrc": "7504:26:1",
															"nodeType": "YulAssignment",
															"src": "7504:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7516:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7516:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7527:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7527:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7512:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7512:3:1"
																},
																"nativeSrc": "7512:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7512:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7504:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7504:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7181:355:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7332:9:1",
														"nodeType": "YulTypedName",
														"src": "7332:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7346:4:1",
														"nodeType": "YulTypedName",
														"src": "7346:4:1",
														"type": ""
													}
												],
												"src": "7181:355:1"
											},
											{
												"body": {
													"nativeSrc": "7589:174:1",
													"nodeType": "YulBlock",
													"src": "7589:174:1",
													"statements": [
														{
															"nativeSrc": "7599:16:1",
															"nodeType": "YulAssignment",
															"src": "7599:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7610:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7610:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7613:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7613:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7606:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7606:3:1"
																},
																"nativeSrc": "7606:9:1",
																"nodeType": "YulFunctionCall",
																"src": "7606:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7599:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7599:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7646:111:1",
																"nodeType": "YulBlock",
																"src": "7646:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7667:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7667:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7674:3:1",
																							"nodeType": "YulLiteral",
																							"src": "7674:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7679:10:1",
																							"nodeType": "YulLiteral",
																							"src": "7679:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "7670:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "7670:3:1"
																					},
																					"nativeSrc": "7670:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "7670:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7660:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7660:6:1"
																			},
																			"nativeSrc": "7660:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7660:31:1"
																		},
																		"nativeSrc": "7660:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7660:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7711:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7711:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7714:4:1",
																					"nodeType": "YulLiteral",
																					"src": "7714:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7704:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7704:6:1"
																			},
																			"nativeSrc": "7704:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7704:15:1"
																		},
																		"nativeSrc": "7704:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7704:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7739:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7739:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7742:4:1",
																					"nodeType": "YulLiteral",
																					"src": "7742:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7732:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7732:6:1"
																			},
																			"nativeSrc": "7732:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7732:15:1"
																		},
																		"nativeSrc": "7732:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7732:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7630:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7630:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7633:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7633:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7627:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7627:2:1"
																},
																"nativeSrc": "7627:10:1",
																"nodeType": "YulFunctionCall",
																"src": "7627:10:1"
															},
															"nativeSrc": "7624:133:1",
															"nodeType": "YulIf",
															"src": "7624:133:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7541:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7572:1:1",
														"nodeType": "YulTypedName",
														"src": "7572:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7575:1:1",
														"nodeType": "YulTypedName",
														"src": "7575:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7581:3:1",
														"nodeType": "YulTypedName",
														"src": "7581:3:1",
														"type": ""
													}
												],
												"src": "7541:222:1"
											},
											{
												"body": {
													"nativeSrc": "7869:76:1",
													"nodeType": "YulBlock",
													"src": "7869:76:1",
													"statements": [
														{
															"nativeSrc": "7879:26:1",
															"nodeType": "YulAssignment",
															"src": "7879:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7891:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7891:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7902:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7902:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7887:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7887:3:1"
																},
																"nativeSrc": "7887:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7887:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7879:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7879:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7921:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7921:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "7932:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7932:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7914:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7914:6:1"
																},
																"nativeSrc": "7914:25:1",
																"nodeType": "YulFunctionCall",
																"src": "7914:25:1"
															},
															"nativeSrc": "7914:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "7914:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "7768:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7838:9:1",
														"nodeType": "YulTypedName",
														"src": "7838:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7849:6:1",
														"nodeType": "YulTypedName",
														"src": "7849:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7860:4:1",
														"nodeType": "YulTypedName",
														"src": "7860:4:1",
														"type": ""
													}
												],
												"src": "7768:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        let src := add(offset, 0x20)\n        let array_1 := 0\n        let size := 0\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let result := and(add(length, 31), not(31))\n        size := add(result, 0x20)\n        let memPtr := 0\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(result, 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array_1 := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        mcopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_uint8_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256t_uint256t_addresst_bytes_memory_ptrt_address_payable_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := abi_decode_uint8_fromMemory(add(headStart, 64))\n        let value := 0\n        value := mload(add(headStart, 96))\n        value3 := value\n        let value_1 := 0\n        value_1 := mload(add(headStart, 128))\n        value4 := value_1\n        value5 := abi_decode_address_fromMemory(add(headStart, 160))\n        let offset_2 := mload(add(headStart, 192))\n        if gt(offset_2, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value6 := abi_decode_string_fromMemory(add(headStart, offset_2), dataEnd)\n        value7 := abi_decode_address_fromMemory(add(headStart, 224))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_bytes_memory_ptr_t_address__to_t_string_memory_ptr_t_bytes_memory_ptr_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        let tail_1 := abi_encode_string(value0, add(headStart, 96))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_13b0d23b78e36e0ca5d50799970a37145ee5efca8eea0a88562a540bb3e85734__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"TaxableERC20: supply cannot be z\")\n        mstore(add(headStart, 96), \"ero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_76c937e8541376b2ae2ed2ec41481ffb6ae85620be755d89da3704bd2719bbaa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC20Taxable: taxFeePerMille_ mu\")\n        mstore(add(headStart, 96), \"st be less than 1000\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ee77ba772060351314b1afc6b332478f67976de73404959e804d987fd557b6fd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC20Taxable: taxAddress_ cannot\")\n        mstore(add(headStart, 96), \" be the zero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a0604052604051611545380380611545833981016040819052610022916104aa565b60408051808201909152600c81526b054617861626c6545524332360a41b60208201528190833387878b8e8e600361005a8382610600565b5060046100678282610600565b50505060ff16608052610079826101af565b6100828161022b565b6100a9336001600160a01b03165f908152600760205260409020805460ff19166001179055565b6001600160a01b03165f908152600760205260409020805460ff19166001179055506100d4336102c9565b60405163346386e160e01b81526001600160a01b0385169063346386e1903490610106908790879087906004016106e8565b5f604051808303818588803b15801561011d575f80fd5b505af115801561012f573d5f803e3d5ffd5b5050505050505050505f85116101985760405162461bcd60e51b815260206004820152602360248201527f54617861626c6545524332303a20737570706c792063616e6e6f74206265207a60448201526265726f60e81b60648201526084015b60405180910390fd5b6101a2338661031a565b505050505050505061074a565b6103e881106102265760405162461bcd60e51b815260206004820152603460248201527f455243323054617861626c653a207461784665655065724d696c6c655f206d7560448201527f7374206265206c657373207468616e2031303030000000000000000000000000606482015260840161018f565b600555565b6001600160a01b0381166102a75760405162461bcd60e51b815260206004820152603460248201527f455243323054617861626c653a20746178416464726573735f2063616e6e6f7460448201527f20626520746865207a65726f2061646472657373000000000000000000000000606482015260840161018f565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0382166103705760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161018f565b8060025f8282546103819190610725565b90915550506001600160a01b0382165f81815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126103ff575f80fd5b8151602083015f806001600160401b0384111561041e5761041e6103dc565b50604051601f19601f85018116603f011681018181106001600160401b038211171561044c5761044c6103dc565b604052838152905080828401871015610463575f80fd5b8383602083015e5f602085830101528094505050505092915050565b805160ff8116811461048f575f80fd5b919050565b80516001600160a01b038116811461048f575f80fd5b5f805f805f805f80610100898b0312156104c2575f80fd5b88516001600160401b038111156104d7575f80fd5b6104e38b828c016103f0565b60208b015190995090506001600160401b03811115610500575f80fd5b61050c8b828c016103f0565b97505061051b60408a0161047f565b60608a015160808b01519197509550935061053860a08a01610494565b60c08a01519093506001600160401b03811115610553575f80fd5b61055f8b828c016103f0565b92505061056e60e08a01610494565b90509295985092959890939650565b600181811c9082168061059157607f821691505b6020821081036105af57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156103d757805f5260205f20601f840160051c810160208510156105da5750805b601f840160051c820191505b818110156105f9575f81556001016105e6565b5050505050565b81516001600160401b03811115610619576106196103dc565b61062d81610627845461057d565b846105b5565b6020601f82116001811461065f575f83156106485750848201515b5f19600385901b1c1916600184901b1784556105f9565b5f84815260208120601f198516915b8281101561068e578785015182556020948501946001909201910161066e565b50848210156106ab57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b606081525f6106fa60608301866106ba565b828103602084015261070c81866106ba565b91505060018060a01b0383166040830152949350505050565b8082018082111561074457634e487b7160e01b5f52601160045260245ffd5b92915050565b608051610de36107625f395f6101ad0152610de35ff3fe608060405234801561000f575f80fd5b5060043610610127575f3560e01c806395d89b41116100a9578063b7bda68f1161006e578063b7bda68f14610293578063c283cd12146102a4578063c6d205fa146102cf578063dd62ed3e146102d7578063f2fde38b146102ea575f80fd5b806395d89b411461023f578063a1883d2614610247578063a457c2d71461025a578063a9059cbb1461026d578063b7600f7a14610280575f80fd5b8063313ce567116100ef578063313ce567146101a657806339509351146101d757806370a08231146101ea578063715018a6146102125780638da5cb5b1461021a575f80fd5b806306fdde031461012b578063095ea7b31461014957806318160ddd1461016c57806323b872dd1461017e5780632678999314610191575b5f80fd5b6101336102fd565b6040516101409190610bcc565b60405180910390f35b61015c610157366004610c1c565b61038d565b6040519015158152602001610140565b6002545b604051908152602001610140565b61015c61018c366004610c44565b6103a6565b6101a461019f366004610c7e565b6103ba565b005b60405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610140565b61015c6101e5366004610c1c565b6103e9565b6101706101f8366004610cb7565b6001600160a01b03165f9081526020819052604090205490565b6101a461040a565b6008546001600160a01b03165b6040516001600160a01b039091168152602001610140565b61013361041d565b6101a4610255366004610cb7565b61042c565b61015c610268366004610c1c565b610440565b61015c61027b366004610c1c565b6104ca565b6101a461028e366004610cd0565b6104dc565b6006546001600160a01b0316610227565b61015c6102b2366004610cb7565b6001600160a01b03165f9081526007602052604090205460ff1690565b600554610170565b6101706102e5366004610ce7565b6104ed565b6101a46102f8366004610cb7565b610517565b60606003805461030c90610d18565b80601f016020809104026020016040519081016040528092919081815260200182805461033890610d18565b80156103835780601f1061035a57610100808354040283529160200191610383565b820191905f5260205f20905b81548152906001019060200180831161036657829003601f168201915b5050505050905090565b5f3361039a81858561058d565b60019150505b92915050565b5f6103b28484846106b0565b949350505050565b6103c261075c565b6001600160a01b0382165f908152600760205260409020805460ff19168215151790555050565b5f3361039a8185856103fb83836104ed565b6104059190610d64565b61058d565b61041261075c565b61041b5f6107b6565b565b60606004805461030c90610d18565b61043461075c565b61043d81610807565b50565b5f338161044d82866104ed565b9050838110156104b25760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6104bf828686840361058d565b506001949350505050565b5f6104d5838361089c565b9392505050565b6104e461075c565b61043d8161093f565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b61051f61075c565b6001600160a01b0381166105845760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104a9565b61043d816107b6565b6001600160a01b0383166105ef5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104a9565b6001600160a01b0382166106505760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104a9565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f336106bd8582856109b2565b5f60055411801561070857506001600160a01b0385165f9081526007602052604090205460ff168061070657506001600160a01b0384165f9081526007602052604090205460ff165b155b15610751575f6103e86005548561071f9190610d77565b6107299190610d8e565b9050801561074f576006546107499087906001600160a01b031683610a2a565b80840393505b505b6104bf858585610a2a565b6008546001600160a01b0316331461041b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a9565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b03811661087a5760405162461bcd60e51b815260206004820152603460248201527f455243323054617861626c653a20746178416464726573735f2063616e6e6f7460448201527320626520746865207a65726f206164647265737360601b60648201526084016104a9565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6005545f903390158015906108eb57506001600160a01b0381165f9081526007602052604090205460ff16806108e957506001600160a01b0384165f9081526007602052604090205460ff165b155b15610934575f6103e8600554856109029190610d77565b61090c9190610d8e565b905080156109325760065461092c9083906001600160a01b031683610a2a565b80840393505b505b61039a818585610a2a565b6103e881106109ad5760405162461bcd60e51b815260206004820152603460248201527f455243323054617861626c653a207461784665655065724d696c6c655f206d7560448201527307374206265206c657373207468616e20313030360641b60648201526084016104a9565b600555565b5f6109bd84846104ed565b90505f198114610a245781811015610a175760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104a9565b610a24848484840361058d565b50505050565b6001600160a01b038316610a8e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104a9565b6001600160a01b038216610af05760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104a9565b6001600160a01b0383165f9081526020819052604090205481811015610b675760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104a9565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610a24565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610c17575f80fd5b919050565b5f8060408385031215610c2d575f80fd5b610c3683610c01565b946020939093013593505050565b5f805f60608486031215610c56575f80fd5b610c5f84610c01565b9250610c6d60208501610c01565b929592945050506040919091013590565b5f8060408385031215610c8f575f80fd5b610c9883610c01565b915060208301358015158114610cac575f80fd5b809150509250929050565b5f60208284031215610cc7575f80fd5b6104d582610c01565b5f60208284031215610ce0575f80fd5b5035919050565b5f8060408385031215610cf8575f80fd5b610d0183610c01565b9150610d0f60208401610c01565b90509250929050565b600181811c90821680610d2c57607f821691505b602082108103610d4a57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156103a0576103a0610d50565b80820281158282048414176103a0576103a0610d50565b5f82610da857634e487b7160e01b5f52601260045260245ffd5b50049056fea264697066735822122012659be5dcbcb543bbd069a8d4751a0da57e397e950fbd65807c6bdc821fb52864736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1545 CODESIZE SUB DUP1 PUSH2 0x1545 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xC DUP2 MSTORE PUSH12 0x54617861626C65455243323 PUSH1 0xA4 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP2 SWAP1 DUP4 CALLER DUP8 DUP8 DUP12 DUP15 DUP15 PUSH1 0x3 PUSH2 0x5A DUP4 DUP3 PUSH2 0x600 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x67 DUP3 DUP3 PUSH2 0x600 JUMP JUMPDEST POP POP POP PUSH1 0xFF AND PUSH1 0x80 MSTORE PUSH2 0x79 DUP3 PUSH2 0x1AF JUMP JUMPDEST PUSH2 0x82 DUP2 PUSH2 0x22B JUMP JUMPDEST PUSH2 0xA9 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP PUSH2 0xD4 CALLER PUSH2 0x2C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x346386E1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x346386E1 SWAP1 CALLVALUE SWAP1 PUSH2 0x106 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x6E8 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP PUSH0 DUP6 GT PUSH2 0x198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54617861626C6545524332303A20737570706C792063616E6E6F74206265207A PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x65726F PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A2 CALLER DUP7 PUSH2 0x31A JUMP JUMPDEST POP POP POP POP POP POP POP POP PUSH2 0x74A JUMP JUMPDEST PUSH2 0x3E8 DUP2 LT PUSH2 0x226 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323054617861626C653A207461784665655065724D696C6C655F206D75 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7374206265206C657373207468616E2031303030000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x18F JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323054617861626C653A20746178416464726573735F2063616E6E6F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20626520746865207A65726F2061646472657373000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x18F JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x370 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x18F JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x725 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3FF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD PUSH0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT ISZERO PUSH2 0x41E JUMPI PUSH2 0x41E PUSH2 0x3DC JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x44C JUMPI PUSH2 0x44C PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE SWAP1 POP DUP1 DUP3 DUP5 ADD DUP8 LT ISZERO PUSH2 0x463 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD MCOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x48F JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x48F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x4C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP9 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4E3 DUP12 DUP3 DUP13 ADD PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x20 DUP12 ADD MLOAD SWAP1 SWAP10 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x500 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x50C DUP12 DUP3 DUP13 ADD PUSH2 0x3F0 JUMP JUMPDEST SWAP8 POP POP PUSH2 0x51B PUSH1 0x40 DUP11 ADD PUSH2 0x47F JUMP JUMPDEST PUSH1 0x60 DUP11 ADD MLOAD PUSH1 0x80 DUP12 ADD MLOAD SWAP2 SWAP8 POP SWAP6 POP SWAP4 POP PUSH2 0x538 PUSH1 0xA0 DUP11 ADD PUSH2 0x494 JUMP JUMPDEST PUSH1 0xC0 DUP11 ADD MLOAD SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x553 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x55F DUP12 DUP3 DUP13 ADD PUSH2 0x3F0 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x56E PUSH1 0xE0 DUP11 ADD PUSH2 0x494 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x591 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x5AF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3D7 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x5DA JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5F9 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x5E6 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x619 JUMPI PUSH2 0x619 PUSH2 0x3DC JUMP JUMPDEST PUSH2 0x62D DUP2 PUSH2 0x627 DUP5 SLOAD PUSH2 0x57D JUMP JUMPDEST DUP5 PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x65F JUMPI PUSH0 DUP4 ISZERO PUSH2 0x648 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x5F9 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x68E JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x66E JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x6AB JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH0 PUSH2 0x6FA PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x6BA JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x70C DUP2 DUP7 PUSH2 0x6BA JUMP JUMPDEST SWAP2 POP POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x744 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xDE3 PUSH2 0x762 PUSH0 CODECOPY PUSH0 PUSH2 0x1AD ADD MSTORE PUSH2 0xDE3 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x127 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0xB7BDA68F GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xB7BDA68F EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xC283CD12 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xC6D205FA EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2EA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xA1883D26 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0xB7600F7A EQ PUSH2 0x280 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xEF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x26789993 EQ PUSH2 0x191 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x133 PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0xBCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15C PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0x38D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0xC44 JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x1A4 PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0xC7E JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH32 0x0 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0x3E9 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A4 PUSH2 0x40A JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x133 PUSH2 0x41D JUMP JUMPDEST PUSH2 0x1A4 PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0xCB7 JUMP JUMPDEST PUSH2 0x42C JUMP JUMPDEST PUSH2 0x15C PUSH2 0x268 CALLDATASIZE PUSH1 0x4 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0x440 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH2 0x1A4 PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0x4DC JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x227 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x170 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x2E5 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE7 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x1A4 PUSH2 0x2F8 CALLDATASIZE PUSH1 0x4 PUSH2 0xCB7 JUMP JUMPDEST PUSH2 0x517 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x30C SWAP1 PUSH2 0xD18 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x338 SWAP1 PUSH2 0xD18 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x383 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x35A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x383 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x366 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x39A DUP2 DUP6 DUP6 PUSH2 0x58D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3B2 DUP5 DUP5 DUP5 PUSH2 0x6B0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3C2 PUSH2 0x75C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x39A DUP2 DUP6 DUP6 PUSH2 0x3FB DUP4 DUP4 PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x405 SWAP2 SWAP1 PUSH2 0xD64 JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST PUSH2 0x412 PUSH2 0x75C JUMP JUMPDEST PUSH2 0x41B PUSH0 PUSH2 0x7B6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x30C SWAP1 PUSH2 0xD18 JUMP JUMPDEST PUSH2 0x434 PUSH2 0x75C JUMP JUMPDEST PUSH2 0x43D DUP2 PUSH2 0x807 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x44D DUP3 DUP7 PUSH2 0x4ED JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4BF DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x58D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4D5 DUP4 DUP4 PUSH2 0x89C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4E4 PUSH2 0x75C JUMP JUMPDEST PUSH2 0x43D DUP2 PUSH2 0x93F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x51F PUSH2 0x75C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x584 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x43D DUP2 PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x650 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x6BD DUP6 DUP3 DUP6 PUSH2 0x9B2 JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD GT DUP1 ISZERO PUSH2 0x708 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x706 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x751 JUMPI PUSH0 PUSH2 0x3E8 PUSH1 0x5 SLOAD DUP6 PUSH2 0x71F SWAP2 SWAP1 PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x729 SWAP2 SWAP1 PUSH2 0xD8E JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x74F JUMPI PUSH1 0x6 SLOAD PUSH2 0x749 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xA2A JUMP JUMPDEST DUP1 DUP5 SUB SWAP4 POP JUMPDEST POP JUMPDEST PUSH2 0x4BF DUP6 DUP6 DUP6 PUSH2 0xA2A JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x87A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323054617861626C653A20746178416464726573735F2063616E6E6F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x20626520746865207A65726F2061646472657373 PUSH1 0x60 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH0 SWAP1 CALLER SWAP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x8EB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x8E9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x934 JUMPI PUSH0 PUSH2 0x3E8 PUSH1 0x5 SLOAD DUP6 PUSH2 0x902 SWAP2 SWAP1 PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x90C SWAP2 SWAP1 PUSH2 0xD8E JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x932 JUMPI PUSH1 0x6 SLOAD PUSH2 0x92C SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xA2A JUMP JUMPDEST DUP1 DUP5 SUB SWAP4 POP JUMPDEST POP JUMPDEST PUSH2 0x39A DUP2 DUP6 DUP6 PUSH2 0xA2A JUMP JUMPDEST PUSH2 0x3E8 DUP2 LT PUSH2 0x9AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323054617861626C653A207461784665655065724D696C6C655F206D75 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x7374206265206C657373207468616E203130303 PUSH1 0x64 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x9BD DUP5 DUP5 PUSH2 0x4ED JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0xA24 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0xA24 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x58D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xB67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC17 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC2D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC36 DUP4 PUSH2 0xC01 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC56 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC5F DUP5 PUSH2 0xC01 JUMP JUMPDEST SWAP3 POP PUSH2 0xC6D PUSH1 0x20 DUP6 ADD PUSH2 0xC01 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC8F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC98 DUP4 PUSH2 0xC01 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xCAC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4D5 DUP3 PUSH2 0xC01 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCF8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD01 DUP4 PUSH2 0xC01 JUMP JUMPDEST SWAP2 POP PUSH2 0xD0F PUSH1 0x20 DUP5 ADD PUSH2 0xC01 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD2C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD4A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3A0 JUMPI PUSH2 0x3A0 PUSH2 0xD50 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x3A0 JUMPI PUSH2 0x3A0 PUSH2 0xD50 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xDA8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT PUSH6 0x9BE5DCBCB543 0xBB 0xD0 PUSH10 0xA8D4751A0DA57E397E95 0xF 0xBD PUSH6 0x807C6BDC821F 0xB5 0x28 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "27760:2286:0:-:0;;;27843:630;;;;;;;;;;;;;;;;;;:::i;:::-;27385:204;;;;;;;;;;;;-1:-1:-1;;;27385:204:0;;;;28277:12;;28307:10;2125;28225:15;28242:11;28192:9;28153:5;28160:7;10592:5;:13;28153:5;10592;:13;:::i;:::-;-1:-1:-1;10616:7:0;:17;10626:7;10616;:17;:::i;:::-;-1:-1:-1;;;22364:21:0;;;;23035:28;23047:15;23035:11;:28::i;:::-;23074:27;23089:11;23074:14;:27::i;:::-;23112:43;2125:10;-1:-1:-1;;;;;27005:31:0;;;;;:21;:31;;;;;:41;;-1:-1:-1;;27005:41:0;23150:4;27005:41;;;26912:142;23112:43;-1:-1:-1;;;;;27005:31:0;;;;;:21;:31;;;;;:41;;-1:-1:-1;;27005:41:0;23203:4;27005:41;;;-1:-1:-1;3213:32:0;2125:10;3213:18;:32::i;:::-;27509:72;;-1:-1:-1;;;27509:72:0;;-1:-1:-1;;;;;27509:22:0;;;;;27539:9;;27509:72;;27550:11;;27563:9;;27574:6;;27509:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27385:204;;;;28375:1:::4;28357:15;:19;28349:67;;;::::0;-1:-1:-1;;;28349:67:0;;6137:2:1;28349:67:0::4;::::0;::::4;6119:21:1::0;6176:2;6156:18;;;6149:30;6215:34;6195:18;;;6188:62;-1:-1:-1;;;6266:18:1;;;6259:33;6309:19;;28349:67:0::4;;;;;;;;;28429:36;2125:10:::0;28449:15;28429:5:::4;:36::i;:::-;27843:630:::0;;;;;;;;27760:2286;;26073:208;26173:4;26155:15;:22;26147:87;;;;-1:-1:-1;;;26147:87:0;;6541:2:1;26147:87:0;;;6523:21:1;6580:2;6560:18;;;6553:30;6619:34;6599:18;;;6592:62;6690:22;6670:18;;;6663:50;6730:19;;26147:87:0;6339:416:1;26147:87:0;26247:8;:26;26073:208::o;26470:209::-;-1:-1:-1;;;;;26551:25:0;;26543:90;;;;-1:-1:-1;;;26543:90:0;;6962:2:1;26543:90:0;;;6944:21:1;7001:2;6981:18;;;6974:30;7040:34;7020:18;;;7013:62;7111:22;7091:18;;;7084:50;7151:19;;26543:90:0;6760:416:1;26543:90:0;26646:11;:25;;-1:-1:-1;;;;;;26646:25:0;-1:-1:-1;;;;;26646:25:0;;;;;;;;;;26470:209::o;4759:191::-;4852:6;;;-1:-1:-1;;;;;4869:17:0;;;-1:-1:-1;;;;;;4869:17:0;;;;;;;4902:40;;4852:6;;;4869:17;4852:6;;4902:40;;4833:16;;4902:40;4822:128;4759:191;:::o;17321:548::-;-1:-1:-1;;;;;17405:21:0;;17397:65;;;;-1:-1:-1;;;17397:65:0;;7383:2:1;17397:65:0;;;7365:21:1;7422:2;7402:18;;;7395:30;7461:33;7441:18;;;7434:61;7512:18;;17397:65:0;7181:355:1;17397:65:0;17553:6;17537:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;17708:18:0;;:9;:18;;;;;;;;;;;:28;;;;;;17763:37;7914:25:1;;;17763:37:0;;7887:18:1;17763:37:0;;;;;;;17321:548;;:::o;21039:125::-;;;;:::o;14:127:1:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:886;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;343:4;331:17;;372:1;;-1:-1:-1;;;;;407:30:1;;404:56;;;440:18;;:::i;:::-;-1:-1:-1;595:2:1;589:9;-1:-1:-1;;508:2:1;487:15;;483:29;;653:2;641:15;637:29;625:42;;718:22;;;-1:-1:-1;;;;;682:34:1;;679:62;676:88;;;744:18;;:::i;:::-;780:2;773:22;830;;;815:6;-1:-1:-1;815:6:1;867:16;;;864:25;-1:-1:-1;861:45:1;;;902:1;899;892:12;861:45;945:6;940:3;933:4;925:6;921:17;915:37;1000:1;993:4;984:6;976;972:19;968:30;961:41;1020:6;1011:15;;;;;;146:886;;;;:::o;1037:160::-;1114:13;;1167:4;1156:16;;1146:27;;1136:55;;1187:1;1184;1177:12;1136:55;1037:160;;;:::o;1202:177::-;1281:13;;-1:-1:-1;;;;;1323:31:1;;1313:42;;1303:70;;1369:1;1366;1359:12;1384:1260;1552:6;1560;1568;1576;1584;1592;1600;1608;1661:3;1649:9;1640:7;1636:23;1632:33;1629:53;;;1678:1;1675;1668:12;1629:53;1705:16;;-1:-1:-1;;;;;1733:30:1;;1730:50;;;1776:1;1773;1766:12;1730:50;1799:61;1852:7;1843:6;1832:9;1828:22;1799:61;:::i;:::-;1906:2;1891:18;;1885:25;1789:71;;-1:-1:-1;1885:25:1;-1:-1:-1;;;;;;1922:32:1;;1919:52;;;1967:1;1964;1957:12;1919:52;1990:63;2045:7;2034:8;2023:9;2019:24;1990:63;:::i;:::-;1980:73;;;2072:47;2115:2;2104:9;2100:18;2072:47;:::i;:::-;2181:2;2166:18;;2160:25;2275:3;2260:19;;2254:26;2062:57;;-1:-1:-1;2160:25:1;-1:-1:-1;2254:26:1;-1:-1:-1;2325:50:1;2370:3;2355:19;;2325:50;:::i;:::-;2421:3;2406:19;;2400:26;2315:60;;-1:-1:-1;;;;;;2438:32:1;;2435:52;;;2483:1;2480;2473:12;2435:52;2506:63;2561:7;2550:8;2539:9;2535:24;2506:63;:::i;:::-;2496:73;;;2588:50;2633:3;2622:9;2618:19;2588:50;:::i;:::-;2578:60;;1384:1260;;;;;;;;;;;:::o;2649:380::-;2728:1;2724:12;;;;2771;;;2792:61;;2846:4;2838:6;2834:17;2824:27;;2792:61;2899:2;2891:6;2888:14;2868:18;2865:38;2862:161;;2945:10;2940:3;2936:20;2933:1;2926:31;2980:4;2977:1;2970:15;3008:4;3005:1;2998:15;2862:161;;2649:380;;;:::o;3160:518::-;3262:2;3257:3;3254:11;3251:421;;;3298:5;3295:1;3288:16;3342:4;3339:1;3329:18;3412:2;3400:10;3396:19;3393:1;3389:27;3383:4;3379:38;3448:4;3436:10;3433:20;3430:47;;;-1:-1:-1;3471:4:1;3430:47;3526:2;3521:3;3517:12;3514:1;3510:20;3504:4;3500:31;3490:41;;3581:81;3599:2;3592:5;3589:13;3581:81;;;3658:1;3644:16;;3625:1;3614:13;3581:81;;;3585:3;;3160:518;;;:::o;3854:1299::-;3974:10;;-1:-1:-1;;;;;3996:30:1;;3993:56;;;4029:18;;:::i;:::-;4058:97;4148:6;4108:38;4140:4;4134:11;4108:38;:::i;:::-;4102:4;4058:97;:::i;:::-;4204:4;4235:2;4224:14;;4252:1;4247:649;;;;4940:1;4957:6;4954:89;;;-1:-1:-1;5009:19:1;;;5003:26;4954:89;-1:-1:-1;;3811:1:1;3807:11;;;3803:24;3799:29;3789:40;3835:1;3831:11;;;3786:57;5056:81;;4217:930;;4247:649;3107:1;3100:14;;;3144:4;3131:18;;-1:-1:-1;;4283:20:1;;;4401:222;4415:7;4412:1;4409:14;4401:222;;;4497:19;;;4491:26;4476:42;;4604:4;4589:20;;;;4557:1;4545:14;;;;4431:12;4401:222;;;4405:3;4651:6;4642:7;4639:19;4636:201;;;4712:19;;;4706:26;-1:-1:-1;;4795:1:1;4791:14;;;4807:3;4787:24;4783:37;4779:42;4764:58;4749:74;;4636:201;-1:-1:-1;;;;4883:1:1;4867:14;;;4863:22;4850:36;;-1:-1:-1;3854:1299:1:o;5158:289::-;5200:3;5238:5;5232:12;5265:6;5260:3;5253:19;5321:6;5314:4;5307:5;5303:16;5296:4;5291:3;5287:14;5281:47;5373:1;5366:4;5357:6;5352:3;5348:16;5344:27;5337:38;5436:4;5429:2;5425:7;5420:2;5412:6;5408:15;5404:29;5399:3;5395:39;5391:50;5384:57;;;5158:289;;;;:::o;5452:478::-;5675:2;5664:9;5657:21;5638:4;5701:45;5742:2;5731:9;5727:18;5719:6;5701:45;:::i;:::-;5794:9;5786:6;5782:22;5777:2;5766:9;5762:18;5755:50;5822:33;5848:6;5840;5822:33;:::i;:::-;5814:41;;;5920:1;5916;5911:3;5907:11;5903:19;5895:6;5891:32;5886:2;5875:9;5871:18;5864:60;5452:478;;;;;;:::o;7541:222::-;7606:9;;;7627:10;;;7624:133;;;7679:10;7674:3;7670:20;7667:1;7660:31;7714:4;7711:1;7704:15;7742:4;7739:1;7732:15;7624:133;7541:222;;;;:::o;7768:177::-;27760:2286:0;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_814": {
									"entryPoint": null,
									"id": 814,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_749": {
									"entryPoint": 1421,
									"id": 749,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_803": {
									"entryPoint": null,
									"id": 803,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOwner_74": {
									"entryPoint": 1884,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setExclusionFromTaxFee_1105": {
									"entryPoint": null,
									"id": 1105,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setTaxAddress_1090": {
									"entryPoint": 2055,
									"id": 1090,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setTaxRate_1069": {
									"entryPoint": 2367,
									"id": 1069,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_spendAllowance_792": {
									"entryPoint": 2482,
									"id": 792,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_131": {
									"entryPoint": 1974,
									"id": 131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_575": {
									"entryPoint": 2602,
									"id": 575,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_370": {
									"entryPoint": 1261,
									"id": 370,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_395": {
									"entryPoint": 909,
									"id": 395,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_327": {
									"entryPoint": null,
									"id": 327,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_1300": {
									"entryPoint": null,
									"id": 1300,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decimals_841": {
									"entryPoint": null,
									"id": 841,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_498": {
									"entryPoint": 1088,
									"id": 498,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_457": {
									"entryPoint": 1001,
									"id": 457,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isExcludedFromTaxFee_1051": {
									"entryPoint": null,
									"id": 1051,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_283": {
									"entryPoint": 765,
									"id": 283,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_60": {
									"entryPoint": null,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_88": {
									"entryPoint": 1034,
									"id": 88,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setExclusionFromTaxFee_1246": {
									"entryPoint": 954,
									"id": 1246,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setTaxAddress_1230": {
									"entryPoint": 1068,
									"id": 1230,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTaxFeePerMille_1217": {
									"entryPoint": 1244,
									"id": 1217,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_293": {
									"entryPoint": 1053,
									"id": 293,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@taxAddress_1038": {
									"entryPoint": null,
									"id": 1038,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@taxFeePerMille_1029": {
									"entryPoint": null,
									"id": 1029,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_313": {
									"entryPoint": null,
									"id": 313,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1020": {
									"entryPoint": 1712,
									"id": 1020,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_1287": {
									"entryPoint": 934,
									"id": 1287,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_111": {
									"entryPoint": 1303,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1265": {
									"entryPoint": 1226,
									"id": 1265,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_947": {
									"entryPoint": 2204,
									"id": 947,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3100,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_76c937e8541376b2ae2ed2ec41481ffb6ae85620be755d89da3704bd2719bbaa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ee77ba772060351314b1afc6b332478f67976de73404959e804d987fd557b6fd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3408,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8547:1",
										"nodeType": "YulBlock",
										"src": "0:8547:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:1",
													"nodeType": "YulBlock",
													"src": "135:297:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:1",
																		"nodeType": "YulLiteral",
																		"src": "163:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:1"
																},
																"nativeSrc": "145:21:1",
																"nodeType": "YulFunctionCall",
																"src": "145:21:1"
															},
															"nativeSrc": "145:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:1"
														},
														{
															"nativeSrc": "175:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:1"
																},
																"nativeSrc": "189:13:1",
																"nodeType": "YulFunctionCall",
																"src": "189:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:1",
																	"nodeType": "YulTypedName",
																	"src": "179:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:1",
																				"nodeType": "YulLiteral",
																				"src": "233:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:1"
																		},
																		"nativeSrc": "218:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:1"
																},
																"nativeSrc": "211:34:1",
																"nodeType": "YulFunctionCall",
																"src": "211:34:1"
															},
															"nativeSrc": "211:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:1",
																				"nodeType": "YulLiteral",
																				"src": "275:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:1"
																		},
																		"nativeSrc": "260:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:1",
																				"nodeType": "YulLiteral",
																				"src": "292:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:1"
																		},
																		"nativeSrc": "280:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:1"
																},
																"nativeSrc": "254:50:1",
																"nodeType": "YulFunctionCall",
																"src": "254:50:1"
															},
															"nativeSrc": "254:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:1"
																				},
																				"nativeSrc": "324:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:1",
																				"nodeType": "YulLiteral",
																				"src": "348:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:1"
																		},
																		"nativeSrc": "320:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:1",
																		"nodeType": "YulLiteral",
																		"src": "353:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:1"
																},
																"nativeSrc": "313:42:1",
																"nodeType": "YulFunctionCall",
																"src": "313:42:1"
															},
															"nativeSrc": "313:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:1"
														},
														{
															"nativeSrc": "364:62:1",
															"nodeType": "YulAssignment",
															"src": "364:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:1",
																								"nodeType": "YulLiteral",
																								"src": "407:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:1"
																						},
																						"nativeSrc": "395:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:1",
																								"nodeType": "YulLiteral",
																								"src": "416:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:1"
																						},
																						"nativeSrc": "412:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:1"
																				},
																				"nativeSrc": "391:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:1"
																		},
																		"nativeSrc": "376:45:1",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:1",
																		"nodeType": "YulLiteral",
																		"src": "423:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:1"
																},
																"nativeSrc": "372:54:1",
																"nodeType": "YulFunctionCall",
																"src": "372:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:1",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:1",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:1",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:418:1"
											},
											{
												"body": {
													"nativeSrc": "486:124:1",
													"nodeType": "YulBlock",
													"src": "486:124:1",
													"statements": [
														{
															"nativeSrc": "496:29:1",
															"nodeType": "YulAssignment",
															"src": "496:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "518:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "518:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "505:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "505:12:1"
																},
																"nativeSrc": "505:20:1",
																"nodeType": "YulFunctionCall",
																"src": "505:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "496:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "588:16:1",
																"nodeType": "YulBlock",
																"src": "588:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "597:1:1",
																					"nodeType": "YulLiteral",
																					"src": "597:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "600:1:1",
																					"nodeType": "YulLiteral",
																					"src": "600:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "590:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "590:6:1"
																			},
																			"nativeSrc": "590:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "590:12:1"
																		},
																		"nativeSrc": "590:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "590:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "547:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "547:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "558:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "558:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "573:3:1",
																										"nodeType": "YulLiteral",
																										"src": "573:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "578:1:1",
																										"nodeType": "YulLiteral",
																										"src": "578:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "569:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "569:3:1"
																								},
																								"nativeSrc": "569:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "569:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "582:1:1",
																								"nodeType": "YulLiteral",
																								"src": "582:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "565:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "565:3:1"
																						},
																						"nativeSrc": "565:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "565:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "554:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "554:3:1"
																				},
																				"nativeSrc": "554:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "554:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "544:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "544:2:1"
																		},
																		"nativeSrc": "544:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "544:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "537:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:1"
																},
																"nativeSrc": "537:50:1",
																"nodeType": "YulFunctionCall",
																"src": "537:50:1"
															},
															"nativeSrc": "534:70:1",
															"nodeType": "YulIf",
															"src": "534:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "437:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "465:6:1",
														"nodeType": "YulTypedName",
														"src": "465:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "476:5:1",
														"nodeType": "YulTypedName",
														"src": "476:5:1",
														"type": ""
													}
												],
												"src": "437:173:1"
											},
											{
												"body": {
													"nativeSrc": "702:213:1",
													"nodeType": "YulBlock",
													"src": "702:213:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "748:16:1",
																"nodeType": "YulBlock",
																"src": "748:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "757:1:1",
																					"nodeType": "YulLiteral",
																					"src": "757:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "760:1:1",
																					"nodeType": "YulLiteral",
																					"src": "760:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "750:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:1"
																			},
																			"nativeSrc": "750:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "750:12:1"
																		},
																		"nativeSrc": "750:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "750:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "723:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "723:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "732:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "732:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "719:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:1"
																		},
																		"nativeSrc": "719:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "719:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "744:2:1",
																		"nodeType": "YulLiteral",
																		"src": "744:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "715:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "715:3:1"
																},
																"nativeSrc": "715:32:1",
																"nodeType": "YulFunctionCall",
																"src": "715:32:1"
															},
															"nativeSrc": "712:52:1",
															"nodeType": "YulIf",
															"src": "712:52:1"
														},
														{
															"nativeSrc": "773:39:1",
															"nodeType": "YulAssignment",
															"src": "773:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "783:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "783:18:1"
																},
																"nativeSrc": "783:29:1",
																"nodeType": "YulFunctionCall",
																"src": "783:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "773:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:1"
																}
															]
														},
														{
															"nativeSrc": "821:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "821:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "834:1:1",
																"nodeType": "YulLiteral",
																"src": "834:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "825:5:1",
																	"nodeType": "YulTypedName",
																	"src": "825:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "844:41:1",
															"nodeType": "YulAssignment",
															"src": "844:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "870:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "870:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "881:2:1",
																				"nodeType": "YulLiteral",
																				"src": "881:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "866:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "866:3:1"
																		},
																		"nativeSrc": "866:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "866:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "853:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "853:12:1"
																},
																"nativeSrc": "853:32:1",
																"nodeType": "YulFunctionCall",
																"src": "853:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "844:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "844:5:1"
																}
															]
														},
														{
															"nativeSrc": "894:15:1",
															"nodeType": "YulAssignment",
															"src": "894:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "904:5:1",
																"nodeType": "YulIdentifier",
																"src": "904:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "894:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "615:300:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "660:9:1",
														"nodeType": "YulTypedName",
														"src": "660:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "671:7:1",
														"nodeType": "YulTypedName",
														"src": "671:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "683:6:1",
														"nodeType": "YulTypedName",
														"src": "683:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "691:6:1",
														"nodeType": "YulTypedName",
														"src": "691:6:1",
														"type": ""
													}
												],
												"src": "615:300:1"
											},
											{
												"body": {
													"nativeSrc": "1015:92:1",
													"nodeType": "YulBlock",
													"src": "1015:92:1",
													"statements": [
														{
															"nativeSrc": "1025:26:1",
															"nodeType": "YulAssignment",
															"src": "1025:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1037:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1037:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1048:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1033:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1033:3:1"
																},
																"nativeSrc": "1033:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1033:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1025:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1025:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1067:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1092:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1092:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1085:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1085:6:1"
																				},
																				"nativeSrc": "1085:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1085:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1078:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1078:6:1"
																		},
																		"nativeSrc": "1078:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1078:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1060:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:1"
																},
																"nativeSrc": "1060:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1060:41:1"
															},
															"nativeSrc": "1060:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "1060:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "920:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "984:9:1",
														"nodeType": "YulTypedName",
														"src": "984:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "995:6:1",
														"nodeType": "YulTypedName",
														"src": "995:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1006:4:1",
														"nodeType": "YulTypedName",
														"src": "1006:4:1",
														"type": ""
													}
												],
												"src": "920:187:1"
											},
											{
												"body": {
													"nativeSrc": "1213:76:1",
													"nodeType": "YulBlock",
													"src": "1213:76:1",
													"statements": [
														{
															"nativeSrc": "1223:26:1",
															"nodeType": "YulAssignment",
															"src": "1223:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1235:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1235:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1246:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1246:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1231:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1231:3:1"
																},
																"nativeSrc": "1231:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1231:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1223:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1223:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1265:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1265:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1276:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1276:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1258:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:1"
																},
																"nativeSrc": "1258:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1258:25:1"
															},
															"nativeSrc": "1258:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "1258:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1112:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1182:9:1",
														"nodeType": "YulTypedName",
														"src": "1182:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1193:6:1",
														"nodeType": "YulTypedName",
														"src": "1193:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1204:4:1",
														"nodeType": "YulTypedName",
														"src": "1204:4:1",
														"type": ""
													}
												],
												"src": "1112:177:1"
											},
											{
												"body": {
													"nativeSrc": "1398:270:1",
													"nodeType": "YulBlock",
													"src": "1398:270:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1444:16:1",
																"nodeType": "YulBlock",
																"src": "1444:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1453:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1453:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1456:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1456:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1446:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1446:6:1"
																			},
																			"nativeSrc": "1446:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1446:12:1"
																		},
																		"nativeSrc": "1446:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1446:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1419:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1419:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1428:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1415:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1415:3:1"
																		},
																		"nativeSrc": "1415:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1415:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1440:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1440:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1411:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1411:3:1"
																},
																"nativeSrc": "1411:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1411:32:1"
															},
															"nativeSrc": "1408:52:1",
															"nodeType": "YulIf",
															"src": "1408:52:1"
														},
														{
															"nativeSrc": "1469:39:1",
															"nodeType": "YulAssignment",
															"src": "1469:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1498:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1479:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1479:18:1"
																},
																"nativeSrc": "1479:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1479:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1469:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1469:6:1"
																}
															]
														},
														{
															"nativeSrc": "1517:48:1",
															"nodeType": "YulAssignment",
															"src": "1517:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1550:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1550:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1561:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1561:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1546:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1546:3:1"
																		},
																		"nativeSrc": "1546:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1546:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1527:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1527:18:1"
																},
																"nativeSrc": "1527:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1527:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1517:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1517:6:1"
																}
															]
														},
														{
															"nativeSrc": "1574:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1574:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1587:1:1",
																"nodeType": "YulLiteral",
																"src": "1587:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1578:5:1",
																	"nodeType": "YulTypedName",
																	"src": "1578:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1597:41:1",
															"nodeType": "YulAssignment",
															"src": "1597:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1623:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1623:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1634:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1634:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1619:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1619:3:1"
																		},
																		"nativeSrc": "1619:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1619:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1606:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1606:12:1"
																},
																"nativeSrc": "1606:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1606:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1597:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1597:5:1"
																}
															]
														},
														{
															"nativeSrc": "1647:15:1",
															"nodeType": "YulAssignment",
															"src": "1647:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "1657:5:1",
																"nodeType": "YulIdentifier",
																"src": "1657:5:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1647:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1647:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1294:374:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1348:9:1",
														"nodeType": "YulTypedName",
														"src": "1348:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1359:7:1",
														"nodeType": "YulTypedName",
														"src": "1359:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1371:6:1",
														"nodeType": "YulTypedName",
														"src": "1371:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1379:6:1",
														"nodeType": "YulTypedName",
														"src": "1379:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1387:6:1",
														"nodeType": "YulTypedName",
														"src": "1387:6:1",
														"type": ""
													}
												],
												"src": "1294:374:1"
											},
											{
												"body": {
													"nativeSrc": "1757:263:1",
													"nodeType": "YulBlock",
													"src": "1757:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1803:16:1",
																"nodeType": "YulBlock",
																"src": "1803:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1812:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1812:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1815:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1815:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1805:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1805:6:1"
																			},
																			"nativeSrc": "1805:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1805:12:1"
																		},
																		"nativeSrc": "1805:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1805:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1778:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1778:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1787:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1787:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1774:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1774:3:1"
																		},
																		"nativeSrc": "1774:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1774:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1799:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1799:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1770:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1770:3:1"
																},
																"nativeSrc": "1770:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1770:32:1"
															},
															"nativeSrc": "1767:52:1",
															"nodeType": "YulIf",
															"src": "1767:52:1"
														},
														{
															"nativeSrc": "1828:39:1",
															"nodeType": "YulAssignment",
															"src": "1828:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1857:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1857:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1838:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1838:18:1"
																},
																"nativeSrc": "1838:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1838:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1828:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1828:6:1"
																}
															]
														},
														{
															"nativeSrc": "1876:45:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1876:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1906:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1906:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1917:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1917:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1902:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1902:3:1"
																		},
																		"nativeSrc": "1902:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1902:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1889:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1889:12:1"
																},
																"nativeSrc": "1889:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1889:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1880:5:1",
																	"nodeType": "YulTypedName",
																	"src": "1880:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1974:16:1",
																"nodeType": "YulBlock",
																"src": "1974:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1983:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1983:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1986:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1986:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1976:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1976:6:1"
																			},
																			"nativeSrc": "1976:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1976:12:1"
																		},
																		"nativeSrc": "1976:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1976:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1943:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1943:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "1964:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1964:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "1957:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "1957:6:1"
																						},
																						"nativeSrc": "1957:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1957:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1950:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1950:6:1"
																				},
																				"nativeSrc": "1950:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1950:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1940:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1940:2:1"
																		},
																		"nativeSrc": "1940:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1940:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1933:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1933:6:1"
																},
																"nativeSrc": "1933:40:1",
																"nodeType": "YulFunctionCall",
																"src": "1933:40:1"
															},
															"nativeSrc": "1930:60:1",
															"nodeType": "YulIf",
															"src": "1930:60:1"
														},
														{
															"nativeSrc": "1999:15:1",
															"nodeType": "YulAssignment",
															"src": "1999:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "2009:5:1",
																"nodeType": "YulIdentifier",
																"src": "2009:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1999:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1999:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "1673:347:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1715:9:1",
														"nodeType": "YulTypedName",
														"src": "1715:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1726:7:1",
														"nodeType": "YulTypedName",
														"src": "1726:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1738:6:1",
														"nodeType": "YulTypedName",
														"src": "1738:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1746:6:1",
														"nodeType": "YulTypedName",
														"src": "1746:6:1",
														"type": ""
													}
												],
												"src": "1673:347:1"
											},
											{
												"body": {
													"nativeSrc": "2122:87:1",
													"nodeType": "YulBlock",
													"src": "2122:87:1",
													"statements": [
														{
															"nativeSrc": "2132:26:1",
															"nodeType": "YulAssignment",
															"src": "2132:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2144:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2144:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2155:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2155:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2140:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2140:3:1"
																},
																"nativeSrc": "2140:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2140:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2132:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2132:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2174:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2174:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2189:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2189:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2197:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2197:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2185:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2185:3:1"
																		},
																		"nativeSrc": "2185:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2185:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2167:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2167:6:1"
																},
																"nativeSrc": "2167:36:1",
																"nodeType": "YulFunctionCall",
																"src": "2167:36:1"
															},
															"nativeSrc": "2167:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "2167:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2025:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2091:9:1",
														"nodeType": "YulTypedName",
														"src": "2091:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2102:6:1",
														"nodeType": "YulTypedName",
														"src": "2102:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2113:4:1",
														"nodeType": "YulTypedName",
														"src": "2113:4:1",
														"type": ""
													}
												],
												"src": "2025:184:1"
											},
											{
												"body": {
													"nativeSrc": "2284:116:1",
													"nodeType": "YulBlock",
													"src": "2284:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2330:16:1",
																"nodeType": "YulBlock",
																"src": "2330:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2339:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2339:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2342:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2342:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2332:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2332:6:1"
																			},
																			"nativeSrc": "2332:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2332:12:1"
																		},
																		"nativeSrc": "2332:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2332:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2305:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2305:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2314:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2314:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2301:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2301:3:1"
																		},
																		"nativeSrc": "2301:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2301:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2326:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2326:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2297:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2297:3:1"
																},
																"nativeSrc": "2297:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2297:32:1"
															},
															"nativeSrc": "2294:52:1",
															"nodeType": "YulIf",
															"src": "2294:52:1"
														},
														{
															"nativeSrc": "2355:39:1",
															"nodeType": "YulAssignment",
															"src": "2355:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2384:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2384:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2365:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2365:18:1"
																},
																"nativeSrc": "2365:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2365:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2355:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2355:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2214:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2250:9:1",
														"nodeType": "YulTypedName",
														"src": "2250:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2261:7:1",
														"nodeType": "YulTypedName",
														"src": "2261:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2273:6:1",
														"nodeType": "YulTypedName",
														"src": "2273:6:1",
														"type": ""
													}
												],
												"src": "2214:186:1"
											},
											{
												"body": {
													"nativeSrc": "2506:102:1",
													"nodeType": "YulBlock",
													"src": "2506:102:1",
													"statements": [
														{
															"nativeSrc": "2516:26:1",
															"nodeType": "YulAssignment",
															"src": "2516:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2528:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2528:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2539:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2539:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2524:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2524:3:1"
																},
																"nativeSrc": "2524:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2524:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2516:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2516:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2558:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2558:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2573:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2573:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2589:3:1",
																								"nodeType": "YulLiteral",
																								"src": "2589:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2594:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2594:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2585:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2585:3:1"
																						},
																						"nativeSrc": "2585:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2585:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2598:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2598:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2581:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2581:3:1"
																				},
																				"nativeSrc": "2581:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2581:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2569:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2569:3:1"
																		},
																		"nativeSrc": "2569:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2569:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2551:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2551:6:1"
																},
																"nativeSrc": "2551:51:1",
																"nodeType": "YulFunctionCall",
																"src": "2551:51:1"
															},
															"nativeSrc": "2551:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "2551:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2405:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2475:9:1",
														"nodeType": "YulTypedName",
														"src": "2475:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2486:6:1",
														"nodeType": "YulTypedName",
														"src": "2486:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2497:4:1",
														"nodeType": "YulTypedName",
														"src": "2497:4:1",
														"type": ""
													}
												],
												"src": "2405:203:1"
											},
											{
												"body": {
													"nativeSrc": "2683:156:1",
													"nodeType": "YulBlock",
													"src": "2683:156:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2729:16:1",
																"nodeType": "YulBlock",
																"src": "2729:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2738:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2738:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2741:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2741:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2731:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2731:6:1"
																			},
																			"nativeSrc": "2731:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2731:12:1"
																		},
																		"nativeSrc": "2731:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2731:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2704:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2704:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2713:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2713:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2700:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2700:3:1"
																		},
																		"nativeSrc": "2700:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2700:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2725:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2725:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2696:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2696:3:1"
																},
																"nativeSrc": "2696:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2696:32:1"
															},
															"nativeSrc": "2693:52:1",
															"nodeType": "YulIf",
															"src": "2693:52:1"
														},
														{
															"nativeSrc": "2754:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2754:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2767:1:1",
																"nodeType": "YulLiteral",
																"src": "2767:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2758:5:1",
																	"nodeType": "YulTypedName",
																	"src": "2758:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2777:32:1",
															"nodeType": "YulAssignment",
															"src": "2777:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2799:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2799:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2786:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2786:12:1"
																},
																"nativeSrc": "2786:23:1",
																"nodeType": "YulFunctionCall",
																"src": "2786:23:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2777:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2777:5:1"
																}
															]
														},
														{
															"nativeSrc": "2818:15:1",
															"nodeType": "YulAssignment",
															"src": "2818:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "2828:5:1",
																"nodeType": "YulIdentifier",
																"src": "2828:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2818:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2818:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2613:226:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2649:9:1",
														"nodeType": "YulTypedName",
														"src": "2649:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2660:7:1",
														"nodeType": "YulTypedName",
														"src": "2660:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2672:6:1",
														"nodeType": "YulTypedName",
														"src": "2672:6:1",
														"type": ""
													}
												],
												"src": "2613:226:1"
											},
											{
												"body": {
													"nativeSrc": "2931:173:1",
													"nodeType": "YulBlock",
													"src": "2931:173:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2977:16:1",
																"nodeType": "YulBlock",
																"src": "2977:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2986:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2986:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2989:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2989:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2979:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2979:6:1"
																			},
																			"nativeSrc": "2979:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2979:12:1"
																		},
																		"nativeSrc": "2979:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2979:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2952:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2952:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2961:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2961:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2948:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2948:3:1"
																		},
																		"nativeSrc": "2948:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2948:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2973:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2973:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2944:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2944:3:1"
																},
																"nativeSrc": "2944:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2944:32:1"
															},
															"nativeSrc": "2941:52:1",
															"nodeType": "YulIf",
															"src": "2941:52:1"
														},
														{
															"nativeSrc": "3002:39:1",
															"nodeType": "YulAssignment",
															"src": "3002:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3031:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3031:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3012:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3012:18:1"
																},
																"nativeSrc": "3012:29:1",
																"nodeType": "YulFunctionCall",
																"src": "3012:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3002:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3002:6:1"
																}
															]
														},
														{
															"nativeSrc": "3050:48:1",
															"nodeType": "YulAssignment",
															"src": "3050:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3083:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3083:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3094:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3094:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3079:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3079:3:1"
																		},
																		"nativeSrc": "3079:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3079:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3060:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3060:18:1"
																},
																"nativeSrc": "3060:38:1",
																"nodeType": "YulFunctionCall",
																"src": "3060:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3050:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3050:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2844:260:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2889:9:1",
														"nodeType": "YulTypedName",
														"src": "2889:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2900:7:1",
														"nodeType": "YulTypedName",
														"src": "2900:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2912:6:1",
														"nodeType": "YulTypedName",
														"src": "2912:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2920:6:1",
														"nodeType": "YulTypedName",
														"src": "2920:6:1",
														"type": ""
													}
												],
												"src": "2844:260:1"
											},
											{
												"body": {
													"nativeSrc": "3164:325:1",
													"nodeType": "YulBlock",
													"src": "3164:325:1",
													"statements": [
														{
															"nativeSrc": "3174:22:1",
															"nodeType": "YulAssignment",
															"src": "3174:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3188:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3188:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "3191:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3191:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3184:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3184:3:1"
																},
																"nativeSrc": "3184:12:1",
																"nodeType": "YulFunctionCall",
																"src": "3184:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3174:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3174:6:1"
																}
															]
														},
														{
															"nativeSrc": "3205:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3205:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3235:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3235:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3241:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3241:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3231:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3231:3:1"
																},
																"nativeSrc": "3231:12:1",
																"nodeType": "YulFunctionCall",
																"src": "3231:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3209:18:1",
																	"nodeType": "YulTypedName",
																	"src": "3209:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3282:31:1",
																"nodeType": "YulBlock",
																"src": "3282:31:1",
																"statements": [
																	{
																		"nativeSrc": "3284:27:1",
																		"nodeType": "YulAssignment",
																		"src": "3284:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3298:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "3298:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3306:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3306:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3294:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3294:3:1"
																			},
																			"nativeSrc": "3294:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3294:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3284:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3284:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3262:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "3262:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3255:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3255:6:1"
																},
																"nativeSrc": "3255:26:1",
																"nodeType": "YulFunctionCall",
																"src": "3255:26:1"
															},
															"nativeSrc": "3252:61:1",
															"nodeType": "YulIf",
															"src": "3252:61:1"
														},
														{
															"body": {
																"nativeSrc": "3372:111:1",
																"nodeType": "YulBlock",
																"src": "3372:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3393:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3393:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3400:3:1",
																							"nodeType": "YulLiteral",
																							"src": "3400:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3405:10:1",
																							"nodeType": "YulLiteral",
																							"src": "3405:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3396:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3396:3:1"
																					},
																					"nativeSrc": "3396:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3396:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3386:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3386:6:1"
																			},
																			"nativeSrc": "3386:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3386:31:1"
																		},
																		"nativeSrc": "3386:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3386:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3437:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3437:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3440:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3440:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3430:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3430:6:1"
																			},
																			"nativeSrc": "3430:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3430:15:1"
																		},
																		"nativeSrc": "3430:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3430:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3465:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3465:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3468:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3468:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3458:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3458:6:1"
																			},
																			"nativeSrc": "3458:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3458:15:1"
																		},
																		"nativeSrc": "3458:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3458:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3328:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "3328:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3351:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3351:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3359:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3359:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3348:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3348:2:1"
																		},
																		"nativeSrc": "3348:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3348:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3325:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3325:2:1"
																},
																"nativeSrc": "3325:38:1",
																"nodeType": "YulFunctionCall",
																"src": "3325:38:1"
															},
															"nativeSrc": "3322:161:1",
															"nodeType": "YulIf",
															"src": "3322:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3109:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3144:4:1",
														"nodeType": "YulTypedName",
														"src": "3144:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3153:6:1",
														"nodeType": "YulTypedName",
														"src": "3153:6:1",
														"type": ""
													}
												],
												"src": "3109:380:1"
											},
											{
												"body": {
													"nativeSrc": "3526:95:1",
													"nodeType": "YulBlock",
													"src": "3526:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3543:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3543:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3550:3:1",
																				"nodeType": "YulLiteral",
																				"src": "3550:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3555:10:1",
																				"nodeType": "YulLiteral",
																				"src": "3555:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3546:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3546:3:1"
																		},
																		"nativeSrc": "3546:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3546:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3536:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3536:6:1"
																},
																"nativeSrc": "3536:31:1",
																"nodeType": "YulFunctionCall",
																"src": "3536:31:1"
															},
															"nativeSrc": "3536:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "3536:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3583:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3583:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3586:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3586:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3576:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3576:6:1"
																},
																"nativeSrc": "3576:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3576:15:1"
															},
															"nativeSrc": "3576:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3576:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3607:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3607:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3610:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3610:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3600:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3600:6:1"
																},
																"nativeSrc": "3600:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3600:15:1"
															},
															"nativeSrc": "3600:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3600:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3494:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "3494:127:1"
											},
											{
												"body": {
													"nativeSrc": "3674:77:1",
													"nodeType": "YulBlock",
													"src": "3674:77:1",
													"statements": [
														{
															"nativeSrc": "3684:16:1",
															"nodeType": "YulAssignment",
															"src": "3684:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3695:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3695:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3698:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3698:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3691:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3691:3:1"
																},
																"nativeSrc": "3691:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3691:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3684:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3684:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3723:22:1",
																"nodeType": "YulBlock",
																"src": "3723:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3725:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "3725:16:1"
																			},
																			"nativeSrc": "3725:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3725:18:1"
																		},
																		"nativeSrc": "3725:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3725:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3715:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3715:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3718:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3718:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3712:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3712:2:1"
																},
																"nativeSrc": "3712:10:1",
																"nodeType": "YulFunctionCall",
																"src": "3712:10:1"
															},
															"nativeSrc": "3709:36:1",
															"nodeType": "YulIf",
															"src": "3709:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3626:125:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3657:1:1",
														"nodeType": "YulTypedName",
														"src": "3657:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3660:1:1",
														"nodeType": "YulTypedName",
														"src": "3660:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3666:3:1",
														"nodeType": "YulTypedName",
														"src": "3666:3:1",
														"type": ""
													}
												],
												"src": "3626:125:1"
											},
											{
												"body": {
													"nativeSrc": "3930:227:1",
													"nodeType": "YulBlock",
													"src": "3930:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3947:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3947:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3958:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3958:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3940:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3940:6:1"
																},
																"nativeSrc": "3940:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3940:21:1"
															},
															"nativeSrc": "3940:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "3940:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3981:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3981:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3992:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3992:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3977:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3977:3:1"
																		},
																		"nativeSrc": "3977:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3977:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3997:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3997:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3970:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3970:6:1"
																},
																"nativeSrc": "3970:30:1",
																"nodeType": "YulFunctionCall",
																"src": "3970:30:1"
															},
															"nativeSrc": "3970:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "3970:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4020:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4020:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4031:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4031:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4016:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4016:3:1"
																		},
																		"nativeSrc": "4016:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4016:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "4036:34:1",
																		"nodeType": "YulLiteral",
																		"src": "4036:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4009:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4009:6:1"
																},
																"nativeSrc": "4009:62:1",
																"nodeType": "YulFunctionCall",
																"src": "4009:62:1"
															},
															"nativeSrc": "4009:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "4009:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4091:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4091:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4102:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4102:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4087:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4087:3:1"
																		},
																		"nativeSrc": "4087:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4087:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "4107:7:1",
																		"nodeType": "YulLiteral",
																		"src": "4107:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4080:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4080:6:1"
																},
																"nativeSrc": "4080:35:1",
																"nodeType": "YulFunctionCall",
																"src": "4080:35:1"
															},
															"nativeSrc": "4080:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "4080:35:1"
														},
														{
															"nativeSrc": "4124:27:1",
															"nodeType": "YulAssignment",
															"src": "4124:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4136:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4136:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4147:3:1",
																		"nodeType": "YulLiteral",
																		"src": "4147:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4132:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4132:3:1"
																},
																"nativeSrc": "4132:19:1",
																"nodeType": "YulFunctionCall",
																"src": "4132:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4124:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4124:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3756:401:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3907:9:1",
														"nodeType": "YulTypedName",
														"src": "3907:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3921:4:1",
														"nodeType": "YulTypedName",
														"src": "3921:4:1",
														"type": ""
													}
												],
												"src": "3756:401:1"
											},
											{
												"body": {
													"nativeSrc": "4336:228:1",
													"nodeType": "YulBlock",
													"src": "4336:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4353:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4353:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4364:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4364:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4346:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4346:6:1"
																},
																"nativeSrc": "4346:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4346:21:1"
															},
															"nativeSrc": "4346:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4346:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4387:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4387:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4398:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4398:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4383:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4383:3:1"
																		},
																		"nativeSrc": "4383:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4383:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4403:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4403:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4376:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4376:6:1"
																},
																"nativeSrc": "4376:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4376:30:1"
															},
															"nativeSrc": "4376:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "4376:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4426:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4426:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4437:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4437:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4422:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4422:3:1"
																		},
																		"nativeSrc": "4422:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4422:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "4442:34:1",
																		"nodeType": "YulLiteral",
																		"src": "4442:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4415:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4415:6:1"
																},
																"nativeSrc": "4415:62:1",
																"nodeType": "YulFunctionCall",
																"src": "4415:62:1"
															},
															"nativeSrc": "4415:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "4415:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4497:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4497:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4508:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4508:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4493:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4493:3:1"
																		},
																		"nativeSrc": "4493:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4493:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "4513:8:1",
																		"nodeType": "YulLiteral",
																		"src": "4513:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4486:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4486:6:1"
																},
																"nativeSrc": "4486:36:1",
																"nodeType": "YulFunctionCall",
																"src": "4486:36:1"
															},
															"nativeSrc": "4486:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "4486:36:1"
														},
														{
															"nativeSrc": "4531:27:1",
															"nodeType": "YulAssignment",
															"src": "4531:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4543:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4543:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4554:3:1",
																		"nodeType": "YulLiteral",
																		"src": "4554:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4539:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4539:3:1"
																},
																"nativeSrc": "4539:19:1",
																"nodeType": "YulFunctionCall",
																"src": "4539:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4531:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4531:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4162:402:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4313:9:1",
														"nodeType": "YulTypedName",
														"src": "4313:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4327:4:1",
														"nodeType": "YulTypedName",
														"src": "4327:4:1",
														"type": ""
													}
												],
												"src": "4162:402:1"
											},
											{
												"body": {
													"nativeSrc": "4743:226:1",
													"nodeType": "YulBlock",
													"src": "4743:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4760:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4760:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4771:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4771:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4753:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4753:6:1"
																},
																"nativeSrc": "4753:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4753:21:1"
															},
															"nativeSrc": "4753:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4753:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4794:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4794:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4805:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4805:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4790:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4790:3:1"
																		},
																		"nativeSrc": "4790:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4790:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4810:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4810:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4783:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4783:6:1"
																},
																"nativeSrc": "4783:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4783:30:1"
															},
															"nativeSrc": "4783:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "4783:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4833:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4833:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4844:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4844:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4829:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:1"
																		},
																		"nativeSrc": "4829:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "4849:34:1",
																		"nodeType": "YulLiteral",
																		"src": "4849:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4822:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4822:6:1"
																},
																"nativeSrc": "4822:62:1",
																"nodeType": "YulFunctionCall",
																"src": "4822:62:1"
															},
															"nativeSrc": "4822:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "4822:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4904:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4904:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4915:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4915:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4900:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4900:3:1"
																		},
																		"nativeSrc": "4900:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4900:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "4920:6:1",
																		"nodeType": "YulLiteral",
																		"src": "4920:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4893:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4893:6:1"
																},
																"nativeSrc": "4893:34:1",
																"nodeType": "YulFunctionCall",
																"src": "4893:34:1"
															},
															"nativeSrc": "4893:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "4893:34:1"
														},
														{
															"nativeSrc": "4936:27:1",
															"nodeType": "YulAssignment",
															"src": "4936:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4948:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4948:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4959:3:1",
																		"nodeType": "YulLiteral",
																		"src": "4959:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4944:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4944:3:1"
																},
																"nativeSrc": "4944:19:1",
																"nodeType": "YulFunctionCall",
																"src": "4944:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4936:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4936:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4569:400:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4720:9:1",
														"nodeType": "YulTypedName",
														"src": "4720:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4734:4:1",
														"nodeType": "YulTypedName",
														"src": "4734:4:1",
														"type": ""
													}
												],
												"src": "4569:400:1"
											},
											{
												"body": {
													"nativeSrc": "5148:224:1",
													"nodeType": "YulBlock",
													"src": "5148:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5165:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5165:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5176:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5176:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5158:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5158:6:1"
																},
																"nativeSrc": "5158:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5158:21:1"
															},
															"nativeSrc": "5158:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "5158:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5199:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5199:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5210:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5210:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5195:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5195:3:1"
																		},
																		"nativeSrc": "5195:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5195:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5215:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5215:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5188:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5188:6:1"
																},
																"nativeSrc": "5188:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5188:30:1"
															},
															"nativeSrc": "5188:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "5188:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5238:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5238:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5249:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5249:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5234:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5234:3:1"
																		},
																		"nativeSrc": "5234:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5234:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "5254:34:1",
																		"nodeType": "YulLiteral",
																		"src": "5254:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5227:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5227:6:1"
																},
																"nativeSrc": "5227:62:1",
																"nodeType": "YulFunctionCall",
																"src": "5227:62:1"
															},
															"nativeSrc": "5227:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "5227:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5309:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5309:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5320:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5320:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5305:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5305:3:1"
																		},
																		"nativeSrc": "5305:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5305:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "5325:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5325:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5298:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5298:6:1"
																},
																"nativeSrc": "5298:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5298:32:1"
															},
															"nativeSrc": "5298:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "5298:32:1"
														},
														{
															"nativeSrc": "5339:27:1",
															"nodeType": "YulAssignment",
															"src": "5339:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5351:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5351:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5362:3:1",
																		"nodeType": "YulLiteral",
																		"src": "5362:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5347:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5347:3:1"
																},
																"nativeSrc": "5347:19:1",
																"nodeType": "YulFunctionCall",
																"src": "5347:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5339:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5339:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4974:398:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5125:9:1",
														"nodeType": "YulTypedName",
														"src": "5125:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5139:4:1",
														"nodeType": "YulTypedName",
														"src": "5139:4:1",
														"type": ""
													}
												],
												"src": "4974:398:1"
											},
											{
												"body": {
													"nativeSrc": "5429:116:1",
													"nodeType": "YulBlock",
													"src": "5429:116:1",
													"statements": [
														{
															"nativeSrc": "5439:20:1",
															"nodeType": "YulAssignment",
															"src": "5439:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5454:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5454:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5457:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5457:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5450:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5450:3:1"
																},
																"nativeSrc": "5450:9:1",
																"nodeType": "YulFunctionCall",
																"src": "5450:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5439:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "5439:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5517:22:1",
																"nodeType": "YulBlock",
																"src": "5517:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5519:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "5519:16:1"
																			},
																			"nativeSrc": "5519:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5519:18:1"
																		},
																		"nativeSrc": "5519:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5519:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5488:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "5488:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5481:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "5481:6:1"
																				},
																				"nativeSrc": "5481:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5481:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5495:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "5495:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5502:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "5502:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5511:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "5511:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5498:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "5498:3:1"
																						},
																						"nativeSrc": "5498:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "5498:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5492:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "5492:2:1"
																				},
																				"nativeSrc": "5492:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5492:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5478:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "5478:2:1"
																		},
																		"nativeSrc": "5478:37:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5478:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5471:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5471:6:1"
																},
																"nativeSrc": "5471:45:1",
																"nodeType": "YulFunctionCall",
																"src": "5471:45:1"
															},
															"nativeSrc": "5468:71:1",
															"nodeType": "YulIf",
															"src": "5468:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "5377:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5408:1:1",
														"nodeType": "YulTypedName",
														"src": "5408:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5411:1:1",
														"nodeType": "YulTypedName",
														"src": "5411:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5417:7:1",
														"nodeType": "YulTypedName",
														"src": "5417:7:1",
														"type": ""
													}
												],
												"src": "5377:168:1"
											},
											{
												"body": {
													"nativeSrc": "5596:171:1",
													"nodeType": "YulBlock",
													"src": "5596:171:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5627:111:1",
																"nodeType": "YulBlock",
																"src": "5627:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5648:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5648:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5655:3:1",
																							"nodeType": "YulLiteral",
																							"src": "5655:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5660:10:1",
																							"nodeType": "YulLiteral",
																							"src": "5660:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5651:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "5651:3:1"
																					},
																					"nativeSrc": "5651:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5651:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5641:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5641:6:1"
																			},
																			"nativeSrc": "5641:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5641:31:1"
																		},
																		"nativeSrc": "5641:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5641:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5692:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5692:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5695:4:1",
																					"nodeType": "YulLiteral",
																					"src": "5695:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5685:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5685:6:1"
																			},
																			"nativeSrc": "5685:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5685:15:1"
																		},
																		"nativeSrc": "5685:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5685:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5720:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5720:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5723:4:1",
																					"nodeType": "YulLiteral",
																					"src": "5723:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5713:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5713:6:1"
																			},
																			"nativeSrc": "5713:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5713:15:1"
																		},
																		"nativeSrc": "5713:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5713:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5616:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5616:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5609:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5609:6:1"
																},
																"nativeSrc": "5609:9:1",
																"nodeType": "YulFunctionCall",
																"src": "5609:9:1"
															},
															"nativeSrc": "5606:132:1",
															"nodeType": "YulIf",
															"src": "5606:132:1"
														},
														{
															"nativeSrc": "5747:14:1",
															"nodeType": "YulAssignment",
															"src": "5747:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5756:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5756:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5759:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5759:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5752:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5752:3:1"
																},
																"nativeSrc": "5752:9:1",
																"nodeType": "YulFunctionCall",
																"src": "5752:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5747:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "5747:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5550:217:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5581:1:1",
														"nodeType": "YulTypedName",
														"src": "5581:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5584:1:1",
														"nodeType": "YulTypedName",
														"src": "5584:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5590:1:1",
														"nodeType": "YulTypedName",
														"src": "5590:1:1",
														"type": ""
													}
												],
												"src": "5550:217:1"
											},
											{
												"body": {
													"nativeSrc": "5946:182:1",
													"nodeType": "YulBlock",
													"src": "5946:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5963:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5963:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5974:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5974:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5956:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5956:6:1"
																},
																"nativeSrc": "5956:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5956:21:1"
															},
															"nativeSrc": "5956:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "5956:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5997:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5997:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6008:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6008:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5993:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5993:3:1"
																		},
																		"nativeSrc": "5993:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5993:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6013:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6013:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5986:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5986:6:1"
																},
																"nativeSrc": "5986:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5986:30:1"
															},
															"nativeSrc": "5986:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "5986:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6036:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6036:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6047:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6047:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6032:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6032:3:1"
																		},
																		"nativeSrc": "6032:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6032:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "6052:34:1",
																		"nodeType": "YulLiteral",
																		"src": "6052:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6025:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6025:6:1"
																},
																"nativeSrc": "6025:62:1",
																"nodeType": "YulFunctionCall",
																"src": "6025:62:1"
															},
															"nativeSrc": "6025:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "6025:62:1"
														},
														{
															"nativeSrc": "6096:26:1",
															"nodeType": "YulAssignment",
															"src": "6096:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6108:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6108:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6119:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6119:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6104:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6104:3:1"
																},
																"nativeSrc": "6104:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6104:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6096:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6096:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5772:356:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5923:9:1",
														"nodeType": "YulTypedName",
														"src": "5923:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5937:4:1",
														"nodeType": "YulTypedName",
														"src": "5937:4:1",
														"type": ""
													}
												],
												"src": "5772:356:1"
											},
											{
												"body": {
													"nativeSrc": "6307:242:1",
													"nodeType": "YulBlock",
													"src": "6307:242:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6324:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6324:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6335:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6335:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6317:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6317:6:1"
																},
																"nativeSrc": "6317:21:1",
																"nodeType": "YulFunctionCall",
																"src": "6317:21:1"
															},
															"nativeSrc": "6317:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "6317:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6358:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6358:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6369:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6369:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6354:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6354:3:1"
																		},
																		"nativeSrc": "6354:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6354:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6374:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6374:2:1",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6347:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6347:6:1"
																},
																"nativeSrc": "6347:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6347:30:1"
															},
															"nativeSrc": "6347:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6347:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6397:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6397:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6408:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6408:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6393:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6393:3:1"
																		},
																		"nativeSrc": "6393:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6393:18:1"
																	},
																	{
																		"hexValue": "455243323054617861626c653a20746178416464726573735f2063616e6e6f74",
																		"kind": "string",
																		"nativeSrc": "6413:34:1",
																		"nodeType": "YulLiteral",
																		"src": "6413:34:1",
																		"type": "",
																		"value": "ERC20Taxable: taxAddress_ cannot"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6386:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6386:6:1"
																},
																"nativeSrc": "6386:62:1",
																"nodeType": "YulFunctionCall",
																"src": "6386:62:1"
															},
															"nativeSrc": "6386:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "6386:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6468:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6468:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6479:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6479:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6464:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6464:3:1"
																		},
																		"nativeSrc": "6464:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6464:18:1"
																	},
																	{
																		"hexValue": "20626520746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "6484:22:1",
																		"nodeType": "YulLiteral",
																		"src": "6484:22:1",
																		"type": "",
																		"value": " be the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6457:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6457:6:1"
																},
																"nativeSrc": "6457:50:1",
																"nodeType": "YulFunctionCall",
																"src": "6457:50:1"
															},
															"nativeSrc": "6457:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "6457:50:1"
														},
														{
															"nativeSrc": "6516:27:1",
															"nodeType": "YulAssignment",
															"src": "6516:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6528:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6528:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6539:3:1",
																		"nodeType": "YulLiteral",
																		"src": "6539:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6524:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6524:3:1"
																},
																"nativeSrc": "6524:19:1",
																"nodeType": "YulFunctionCall",
																"src": "6524:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6516:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6516:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ee77ba772060351314b1afc6b332478f67976de73404959e804d987fd557b6fd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6133:416:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6284:9:1",
														"nodeType": "YulTypedName",
														"src": "6284:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6298:4:1",
														"nodeType": "YulTypedName",
														"src": "6298:4:1",
														"type": ""
													}
												],
												"src": "6133:416:1"
											},
											{
												"body": {
													"nativeSrc": "6728:242:1",
													"nodeType": "YulBlock",
													"src": "6728:242:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6745:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6745:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6756:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6756:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6738:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6738:6:1"
																},
																"nativeSrc": "6738:21:1",
																"nodeType": "YulFunctionCall",
																"src": "6738:21:1"
															},
															"nativeSrc": "6738:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "6738:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6779:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6779:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6790:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6790:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6775:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6775:3:1"
																		},
																		"nativeSrc": "6775:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6775:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6795:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6795:2:1",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6768:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6768:6:1"
																},
																"nativeSrc": "6768:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6768:30:1"
															},
															"nativeSrc": "6768:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6768:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6818:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6818:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6829:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6829:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6814:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6814:3:1"
																		},
																		"nativeSrc": "6814:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6814:18:1"
																	},
																	{
																		"hexValue": "455243323054617861626c653a207461784665655065724d696c6c655f206d75",
																		"kind": "string",
																		"nativeSrc": "6834:34:1",
																		"nodeType": "YulLiteral",
																		"src": "6834:34:1",
																		"type": "",
																		"value": "ERC20Taxable: taxFeePerMille_ mu"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6807:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6807:6:1"
																},
																"nativeSrc": "6807:62:1",
																"nodeType": "YulFunctionCall",
																"src": "6807:62:1"
															},
															"nativeSrc": "6807:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "6807:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6889:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6889:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6900:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6900:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6885:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6885:3:1"
																		},
																		"nativeSrc": "6885:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6885:18:1"
																	},
																	{
																		"hexValue": "7374206265206c657373207468616e2031303030",
																		"kind": "string",
																		"nativeSrc": "6905:22:1",
																		"nodeType": "YulLiteral",
																		"src": "6905:22:1",
																		"type": "",
																		"value": "st be less than 1000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6878:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6878:6:1"
																},
																"nativeSrc": "6878:50:1",
																"nodeType": "YulFunctionCall",
																"src": "6878:50:1"
															},
															"nativeSrc": "6878:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "6878:50:1"
														},
														{
															"nativeSrc": "6937:27:1",
															"nodeType": "YulAssignment",
															"src": "6937:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6949:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6949:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6960:3:1",
																		"nodeType": "YulLiteral",
																		"src": "6960:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6945:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6945:3:1"
																},
																"nativeSrc": "6945:19:1",
																"nodeType": "YulFunctionCall",
																"src": "6945:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6937:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6937:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_76c937e8541376b2ae2ed2ec41481ffb6ae85620be755d89da3704bd2719bbaa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6554:416:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6705:9:1",
														"nodeType": "YulTypedName",
														"src": "6705:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6719:4:1",
														"nodeType": "YulTypedName",
														"src": "6719:4:1",
														"type": ""
													}
												],
												"src": "6554:416:1"
											},
											{
												"body": {
													"nativeSrc": "7149:179:1",
													"nodeType": "YulBlock",
													"src": "7149:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7166:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7166:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7177:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7177:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7159:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:1"
																},
																"nativeSrc": "7159:21:1",
																"nodeType": "YulFunctionCall",
																"src": "7159:21:1"
															},
															"nativeSrc": "7159:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "7159:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7200:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7200:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7211:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7211:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7196:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7196:3:1"
																		},
																		"nativeSrc": "7196:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7196:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7216:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7216:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7189:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7189:6:1"
																},
																"nativeSrc": "7189:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7189:30:1"
															},
															"nativeSrc": "7189:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "7189:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7239:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7239:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7250:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7250:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7235:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7235:3:1"
																		},
																		"nativeSrc": "7235:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7235:18:1"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "7255:31:1",
																		"nodeType": "YulLiteral",
																		"src": "7255:31:1",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7228:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7228:6:1"
																},
																"nativeSrc": "7228:59:1",
																"nodeType": "YulFunctionCall",
																"src": "7228:59:1"
															},
															"nativeSrc": "7228:59:1",
															"nodeType": "YulExpressionStatement",
															"src": "7228:59:1"
														},
														{
															"nativeSrc": "7296:26:1",
															"nodeType": "YulAssignment",
															"src": "7296:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7308:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7308:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7319:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7319:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7304:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7304:3:1"
																},
																"nativeSrc": "7304:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7304:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7296:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7296:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6975:353:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7126:9:1",
														"nodeType": "YulTypedName",
														"src": "7126:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7140:4:1",
														"nodeType": "YulTypedName",
														"src": "7140:4:1",
														"type": ""
													}
												],
												"src": "6975:353:1"
											},
											{
												"body": {
													"nativeSrc": "7507:227:1",
													"nodeType": "YulBlock",
													"src": "7507:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7524:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7524:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7535:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7535:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7517:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7517:6:1"
																},
																"nativeSrc": "7517:21:1",
																"nodeType": "YulFunctionCall",
																"src": "7517:21:1"
															},
															"nativeSrc": "7517:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "7517:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7558:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7558:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7569:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7569:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7554:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7554:3:1"
																		},
																		"nativeSrc": "7554:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7554:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7574:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7574:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7547:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7547:6:1"
																},
																"nativeSrc": "7547:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7547:30:1"
															},
															"nativeSrc": "7547:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "7547:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7597:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7597:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7608:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7608:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7593:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7593:3:1"
																		},
																		"nativeSrc": "7593:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7593:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "7613:34:1",
																		"nodeType": "YulLiteral",
																		"src": "7613:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7586:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7586:6:1"
																},
																"nativeSrc": "7586:62:1",
																"nodeType": "YulFunctionCall",
																"src": "7586:62:1"
															},
															"nativeSrc": "7586:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "7586:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7668:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7668:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7679:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7679:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7664:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7664:3:1"
																		},
																		"nativeSrc": "7664:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7664:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "7684:7:1",
																		"nodeType": "YulLiteral",
																		"src": "7684:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7657:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7657:6:1"
																},
																"nativeSrc": "7657:35:1",
																"nodeType": "YulFunctionCall",
																"src": "7657:35:1"
															},
															"nativeSrc": "7657:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "7657:35:1"
														},
														{
															"nativeSrc": "7701:27:1",
															"nodeType": "YulAssignment",
															"src": "7701:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7713:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7713:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7724:3:1",
																		"nodeType": "YulLiteral",
																		"src": "7724:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7709:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7709:3:1"
																},
																"nativeSrc": "7709:19:1",
																"nodeType": "YulFunctionCall",
																"src": "7709:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7701:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7701:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7333:401:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7484:9:1",
														"nodeType": "YulTypedName",
														"src": "7484:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7498:4:1",
														"nodeType": "YulTypedName",
														"src": "7498:4:1",
														"type": ""
													}
												],
												"src": "7333:401:1"
											},
											{
												"body": {
													"nativeSrc": "7913:225:1",
													"nodeType": "YulBlock",
													"src": "7913:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7930:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7930:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7941:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7941:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7923:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7923:6:1"
																},
																"nativeSrc": "7923:21:1",
																"nodeType": "YulFunctionCall",
																"src": "7923:21:1"
															},
															"nativeSrc": "7923:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "7923:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7964:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7964:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7975:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7975:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7960:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7960:3:1"
																		},
																		"nativeSrc": "7960:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7960:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7980:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7980:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7953:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7953:6:1"
																},
																"nativeSrc": "7953:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7953:30:1"
															},
															"nativeSrc": "7953:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "7953:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8003:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8003:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8014:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8014:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7999:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7999:3:1"
																		},
																		"nativeSrc": "7999:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7999:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "8019:34:1",
																		"nodeType": "YulLiteral",
																		"src": "8019:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7992:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7992:6:1"
																},
																"nativeSrc": "7992:62:1",
																"nodeType": "YulFunctionCall",
																"src": "7992:62:1"
															},
															"nativeSrc": "7992:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "7992:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8074:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8074:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8085:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8085:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8070:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8070:3:1"
																		},
																		"nativeSrc": "8070:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8070:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "8090:5:1",
																		"nodeType": "YulLiteral",
																		"src": "8090:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8063:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8063:6:1"
																},
																"nativeSrc": "8063:33:1",
																"nodeType": "YulFunctionCall",
																"src": "8063:33:1"
															},
															"nativeSrc": "8063:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "8063:33:1"
														},
														{
															"nativeSrc": "8105:27:1",
															"nodeType": "YulAssignment",
															"src": "8105:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8117:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8117:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8128:3:1",
																		"nodeType": "YulLiteral",
																		"src": "8128:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8113:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8113:3:1"
																},
																"nativeSrc": "8113:19:1",
																"nodeType": "YulFunctionCall",
																"src": "8113:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8105:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8105:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7739:399:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7890:9:1",
														"nodeType": "YulTypedName",
														"src": "7890:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7904:4:1",
														"nodeType": "YulTypedName",
														"src": "7904:4:1",
														"type": ""
													}
												],
												"src": "7739:399:1"
											},
											{
												"body": {
													"nativeSrc": "8317:228:1",
													"nodeType": "YulBlock",
													"src": "8317:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8334:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8334:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8345:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8327:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8327:6:1"
																},
																"nativeSrc": "8327:21:1",
																"nodeType": "YulFunctionCall",
																"src": "8327:21:1"
															},
															"nativeSrc": "8327:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "8327:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8368:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8368:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8379:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8379:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8364:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8364:3:1"
																		},
																		"nativeSrc": "8364:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8364:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8384:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8384:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8357:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8357:6:1"
																},
																"nativeSrc": "8357:30:1",
																"nodeType": "YulFunctionCall",
																"src": "8357:30:1"
															},
															"nativeSrc": "8357:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "8357:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8407:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8407:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8418:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8418:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8403:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8403:3:1"
																		},
																		"nativeSrc": "8403:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8403:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "8423:34:1",
																		"nodeType": "YulLiteral",
																		"src": "8423:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8396:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8396:6:1"
																},
																"nativeSrc": "8396:62:1",
																"nodeType": "YulFunctionCall",
																"src": "8396:62:1"
															},
															"nativeSrc": "8396:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "8396:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8478:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8478:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8489:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8489:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8474:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8474:3:1"
																		},
																		"nativeSrc": "8474:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8474:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "8494:8:1",
																		"nodeType": "YulLiteral",
																		"src": "8494:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8467:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8467:6:1"
																},
																"nativeSrc": "8467:36:1",
																"nodeType": "YulFunctionCall",
																"src": "8467:36:1"
															},
															"nativeSrc": "8467:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "8467:36:1"
														},
														{
															"nativeSrc": "8512:27:1",
															"nodeType": "YulAssignment",
															"src": "8512:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8524:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8524:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8535:3:1",
																		"nodeType": "YulLiteral",
																		"src": "8535:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8520:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8520:3:1"
																},
																"nativeSrc": "8520:19:1",
																"nodeType": "YulFunctionCall",
																"src": "8520:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8512:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8512:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8143:402:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8294:9:1",
														"nodeType": "YulTypedName",
														"src": "8294:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8308:4:1",
														"nodeType": "YulTypedName",
														"src": "8308:4:1",
														"type": ""
													}
												],
												"src": "8143:402:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ee77ba772060351314b1afc6b332478f67976de73404959e804d987fd557b6fd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC20Taxable: taxAddress_ cannot\")\n        mstore(add(headStart, 96), \" be the zero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_76c937e8541376b2ae2ed2ec41481ffb6ae85620be755d89da3704bd2719bbaa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC20Taxable: taxFeePerMille_ mu\")\n        mstore(add(headStart, 96), \"st be less than 1000\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"821": [
									{
										"length": 32,
										"start": 429
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610127575f3560e01c806395d89b41116100a9578063b7bda68f1161006e578063b7bda68f14610293578063c283cd12146102a4578063c6d205fa146102cf578063dd62ed3e146102d7578063f2fde38b146102ea575f80fd5b806395d89b411461023f578063a1883d2614610247578063a457c2d71461025a578063a9059cbb1461026d578063b7600f7a14610280575f80fd5b8063313ce567116100ef578063313ce567146101a657806339509351146101d757806370a08231146101ea578063715018a6146102125780638da5cb5b1461021a575f80fd5b806306fdde031461012b578063095ea7b31461014957806318160ddd1461016c57806323b872dd1461017e5780632678999314610191575b5f80fd5b6101336102fd565b6040516101409190610bcc565b60405180910390f35b61015c610157366004610c1c565b61038d565b6040519015158152602001610140565b6002545b604051908152602001610140565b61015c61018c366004610c44565b6103a6565b6101a461019f366004610c7e565b6103ba565b005b60405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610140565b61015c6101e5366004610c1c565b6103e9565b6101706101f8366004610cb7565b6001600160a01b03165f9081526020819052604090205490565b6101a461040a565b6008546001600160a01b03165b6040516001600160a01b039091168152602001610140565b61013361041d565b6101a4610255366004610cb7565b61042c565b61015c610268366004610c1c565b610440565b61015c61027b366004610c1c565b6104ca565b6101a461028e366004610cd0565b6104dc565b6006546001600160a01b0316610227565b61015c6102b2366004610cb7565b6001600160a01b03165f9081526007602052604090205460ff1690565b600554610170565b6101706102e5366004610ce7565b6104ed565b6101a46102f8366004610cb7565b610517565b60606003805461030c90610d18565b80601f016020809104026020016040519081016040528092919081815260200182805461033890610d18565b80156103835780601f1061035a57610100808354040283529160200191610383565b820191905f5260205f20905b81548152906001019060200180831161036657829003601f168201915b5050505050905090565b5f3361039a81858561058d565b60019150505b92915050565b5f6103b28484846106b0565b949350505050565b6103c261075c565b6001600160a01b0382165f908152600760205260409020805460ff19168215151790555050565b5f3361039a8185856103fb83836104ed565b6104059190610d64565b61058d565b61041261075c565b61041b5f6107b6565b565b60606004805461030c90610d18565b61043461075c565b61043d81610807565b50565b5f338161044d82866104ed565b9050838110156104b25760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6104bf828686840361058d565b506001949350505050565b5f6104d5838361089c565b9392505050565b6104e461075c565b61043d8161093f565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b61051f61075c565b6001600160a01b0381166105845760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104a9565b61043d816107b6565b6001600160a01b0383166105ef5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104a9565b6001600160a01b0382166106505760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104a9565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f336106bd8582856109b2565b5f60055411801561070857506001600160a01b0385165f9081526007602052604090205460ff168061070657506001600160a01b0384165f9081526007602052604090205460ff165b155b15610751575f6103e86005548561071f9190610d77565b6107299190610d8e565b9050801561074f576006546107499087906001600160a01b031683610a2a565b80840393505b505b6104bf858585610a2a565b6008546001600160a01b0316331461041b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a9565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b03811661087a5760405162461bcd60e51b815260206004820152603460248201527f455243323054617861626c653a20746178416464726573735f2063616e6e6f7460448201527320626520746865207a65726f206164647265737360601b60648201526084016104a9565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6005545f903390158015906108eb57506001600160a01b0381165f9081526007602052604090205460ff16806108e957506001600160a01b0384165f9081526007602052604090205460ff165b155b15610934575f6103e8600554856109029190610d77565b61090c9190610d8e565b905080156109325760065461092c9083906001600160a01b031683610a2a565b80840393505b505b61039a818585610a2a565b6103e881106109ad5760405162461bcd60e51b815260206004820152603460248201527f455243323054617861626c653a207461784665655065724d696c6c655f206d7560448201527307374206265206c657373207468616e20313030360641b60648201526084016104a9565b600555565b5f6109bd84846104ed565b90505f198114610a245781811015610a175760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104a9565b610a24848484840361058d565b50505050565b6001600160a01b038316610a8e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104a9565b6001600160a01b038216610af05760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104a9565b6001600160a01b0383165f9081526020819052604090205481811015610b675760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104a9565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610a24565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610c17575f80fd5b919050565b5f8060408385031215610c2d575f80fd5b610c3683610c01565b946020939093013593505050565b5f805f60608486031215610c56575f80fd5b610c5f84610c01565b9250610c6d60208501610c01565b929592945050506040919091013590565b5f8060408385031215610c8f575f80fd5b610c9883610c01565b915060208301358015158114610cac575f80fd5b809150509250929050565b5f60208284031215610cc7575f80fd5b6104d582610c01565b5f60208284031215610ce0575f80fd5b5035919050565b5f8060408385031215610cf8575f80fd5b610d0183610c01565b9150610d0f60208401610c01565b90509250929050565b600181811c90821680610d2c57607f821691505b602082108103610d4a57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156103a0576103a0610d50565b80820281158282048414176103a0576103a0610d50565b5f82610da857634e487b7160e01b5f52601260045260245ffd5b50049056fea264697066735822122012659be5dcbcb543bbd069a8d4751a0da57e397e950fbd65807c6bdc821fb52864736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x127 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0xB7BDA68F GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xB7BDA68F EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xC283CD12 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xC6D205FA EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2EA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xA1883D26 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0xB7600F7A EQ PUSH2 0x280 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xEF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x26789993 EQ PUSH2 0x191 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x133 PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0xBCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15C PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0x38D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0xC44 JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x1A4 PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0xC7E JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH32 0x0 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0x3E9 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A4 PUSH2 0x40A JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x133 PUSH2 0x41D JUMP JUMPDEST PUSH2 0x1A4 PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0xCB7 JUMP JUMPDEST PUSH2 0x42C JUMP JUMPDEST PUSH2 0x15C PUSH2 0x268 CALLDATASIZE PUSH1 0x4 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0x440 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH2 0x1A4 PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0x4DC JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x227 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x170 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x2E5 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE7 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x1A4 PUSH2 0x2F8 CALLDATASIZE PUSH1 0x4 PUSH2 0xCB7 JUMP JUMPDEST PUSH2 0x517 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x30C SWAP1 PUSH2 0xD18 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x338 SWAP1 PUSH2 0xD18 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x383 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x35A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x383 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x366 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x39A DUP2 DUP6 DUP6 PUSH2 0x58D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3B2 DUP5 DUP5 DUP5 PUSH2 0x6B0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3C2 PUSH2 0x75C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x39A DUP2 DUP6 DUP6 PUSH2 0x3FB DUP4 DUP4 PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x405 SWAP2 SWAP1 PUSH2 0xD64 JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST PUSH2 0x412 PUSH2 0x75C JUMP JUMPDEST PUSH2 0x41B PUSH0 PUSH2 0x7B6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x30C SWAP1 PUSH2 0xD18 JUMP JUMPDEST PUSH2 0x434 PUSH2 0x75C JUMP JUMPDEST PUSH2 0x43D DUP2 PUSH2 0x807 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x44D DUP3 DUP7 PUSH2 0x4ED JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4BF DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x58D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4D5 DUP4 DUP4 PUSH2 0x89C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4E4 PUSH2 0x75C JUMP JUMPDEST PUSH2 0x43D DUP2 PUSH2 0x93F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x51F PUSH2 0x75C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x584 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x43D DUP2 PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x650 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x6BD DUP6 DUP3 DUP6 PUSH2 0x9B2 JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD GT DUP1 ISZERO PUSH2 0x708 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x706 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x751 JUMPI PUSH0 PUSH2 0x3E8 PUSH1 0x5 SLOAD DUP6 PUSH2 0x71F SWAP2 SWAP1 PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x729 SWAP2 SWAP1 PUSH2 0xD8E JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x74F JUMPI PUSH1 0x6 SLOAD PUSH2 0x749 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xA2A JUMP JUMPDEST DUP1 DUP5 SUB SWAP4 POP JUMPDEST POP JUMPDEST PUSH2 0x4BF DUP6 DUP6 DUP6 PUSH2 0xA2A JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x87A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323054617861626C653A20746178416464726573735F2063616E6E6F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x20626520746865207A65726F2061646472657373 PUSH1 0x60 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH0 SWAP1 CALLER SWAP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x8EB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x8E9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x934 JUMPI PUSH0 PUSH2 0x3E8 PUSH1 0x5 SLOAD DUP6 PUSH2 0x902 SWAP2 SWAP1 PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x90C SWAP2 SWAP1 PUSH2 0xD8E JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x932 JUMPI PUSH1 0x6 SLOAD PUSH2 0x92C SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xA2A JUMP JUMPDEST DUP1 DUP5 SUB SWAP4 POP JUMPDEST POP JUMPDEST PUSH2 0x39A DUP2 DUP6 DUP6 PUSH2 0xA2A JUMP JUMPDEST PUSH2 0x3E8 DUP2 LT PUSH2 0x9AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323054617861626C653A207461784665655065724D696C6C655F206D75 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x7374206265206C657373207468616E203130303 PUSH1 0x64 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x9BD DUP5 DUP5 PUSH2 0x4ED JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0xA24 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0xA24 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x58D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xB67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC17 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC2D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC36 DUP4 PUSH2 0xC01 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC56 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC5F DUP5 PUSH2 0xC01 JUMP JUMPDEST SWAP3 POP PUSH2 0xC6D PUSH1 0x20 DUP6 ADD PUSH2 0xC01 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC8F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC98 DUP4 PUSH2 0xC01 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xCAC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4D5 DUP3 PUSH2 0xC01 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCF8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD01 DUP4 PUSH2 0xC01 JUMP JUMPDEST SWAP2 POP PUSH2 0xD0F PUSH1 0x20 DUP5 ADD PUSH2 0xC01 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD2C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD4A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3A0 JUMPI PUSH2 0x3A0 PUSH2 0xD50 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x3A0 JUMPI PUSH2 0x3A0 PUSH2 0xD50 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xDA8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT PUSH6 0x9BE5DCBCB543 0xBB 0xD0 PUSH10 0xA8D4751A0DA57E397E95 0xF 0xBD PUSH6 0x807C6BDC821F 0xB5 0x28 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "27760:2286:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10711:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13062:201;;;;;;:::i;:::-;;:::i;:::-;;;1085:14:1;;1078:22;1060:41;;1048:2;1033:18;13062:201:0;920:187:1;11831:108:0;11919:12;;11831:108;;;1258:25:1;;;1246:2;1231:18;11831:108:0;1112:177:1;29686:220:0;;;;;;:::i;:::-;;:::i;29374:138::-;;;;;;:::i;:::-;;:::i;:::-;;29914:129;;;2197:4:1;22484:9:0;2185:17:1;2167:36;;2155:2;2140:18;29914:129:0;2025:184:1;14547:238:0;;;;;;:::i;:::-;;:::i;12002:127::-;;;;;;:::i;:::-;-1:-1:-1;;;;;12103:18:0;12076:7;12103:18;;;;;;;;;;;;12002:127;4140:103;;;:::i;3492:87::-;3565:6;;-1:-1:-1;;;;;3565:6:0;3492:87;;;-1:-1:-1;;;;;2569:32:1;;;2551:51;;2539:2;2524:18;3492:87:0;2405:203:1;10930:104:0;;;:::i;29053:105::-;;;;;;:::i;:::-;;:::i;15288:436::-;;;;;;:::i;:::-;;:::i;29520:158::-;;;;;;:::i;:::-;;:::i;28706:114::-;;;;;;:::i;:::-;;:::i;25550:89::-;25620:11;;-1:-1:-1;;;;;25620:11:0;25550:89;;25754:130;;;;;;:::i;:::-;-1:-1:-1;;;;;25846:30:0;25822:4;25846:30;;;:21;:30;;;;;;;;;25754:130;25384:90;25458:8;;25384:90;;12591:151;;;;;;:::i;:::-;;:::i;4398:201::-;;;;;;:::i;:::-;;:::i;10711:100::-;10765:13;10798:5;10791:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10711:100;:::o;13062:201::-;13145:4;2125:10;13201:32;2125:10;13217:7;13226:6;13201:8;:32::i;:::-;13251:4;13244:11;;;13062:201;;;;;:::o;29686:220::-;29838:4;29862:36;29881:4;29887:2;29891:6;29862:18;:36::i;:::-;29855:43;29686:220;-1:-1:-1;;;;29686:220:0:o;29374:138::-;3378:13;:11;:13::i;:::-;-1:-1:-1;;;;;27005:31:0;;;;;;:21;:31;;;;;:41;;-1:-1:-1;;27005:41:0;;;;;;;29374:138;;:::o;14547:238::-;14635:4;2125:10;14691:64;2125:10;14707:7;14744:10;14716:25;2125:10;14707:7;14716:9;:25::i;:::-;:38;;;;:::i;:::-;14691:8;:64::i;4140:103::-;3378:13;:11;:13::i;:::-;4205:30:::1;4232:1;4205:18;:30::i;:::-;4140:103::o:0;10930:104::-;10986:13;11019:7;11012:14;;;;;:::i;29053:105::-;3378:13;:11;:13::i;:::-;29124:26:::1;29139:10;29124:14;:26::i;:::-;29053:105:::0;:::o;15288:436::-;15381:4;2125:10;15381:4;15464:25;2125:10;15481:7;15464:9;:25::i;:::-;15437:52;;15528:15;15508:16;:35;;15500:85;;;;-1:-1:-1;;;15500:85:0;;3958:2:1;15500:85:0;;;3940:21:1;3997:2;3977:18;;;3970:30;4036:34;4016:18;;;4009:62;-1:-1:-1;;;4087:18:1;;;4080:35;4132:19;;15500:85:0;;;;;;;;;15621:60;15630:5;15637:7;15665:15;15646:16;:34;15621:8;:60::i;:::-;-1:-1:-1;15712:4:0;;15288:436;-1:-1:-1;;;;15288:436:0:o;29520:158::-;29620:4;29644:26;29659:2;29663:6;29644:14;:26::i;:::-;29637:33;29520:158;-1:-1:-1;;;29520:158:0:o;28706:114::-;3378:13;:11;:13::i;:::-;28785:27:::1;28797:14;28785:11;:27::i;12591:151::-:0;-1:-1:-1;;;;;12707:18:0;;;12680:7;12707:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;12591:151::o;4398:201::-;3378:13;:11;:13::i;:::-;-1:-1:-1;;;;;4487:22:0;::::1;4479:73;;;::::0;-1:-1:-1;;;4479:73:0;;4364:2:1;4479:73:0::1;::::0;::::1;4346:21:1::0;4403:2;4383:18;;;4376:30;4442:34;4422:18;;;4415:62;-1:-1:-1;;;4493:18:1;;;4486:36;4539:19;;4479:73:0::1;4162:402:1::0;4479:73:0::1;4563:28;4582:8;4563:18;:28::i;19315:380::-:0;-1:-1:-1;;;;;19451:19:0;;19443:68;;;;-1:-1:-1;;;19443:68:0;;4771:2:1;19443:68:0;;;4753:21:1;4810:2;4790:18;;;4783:30;4849:34;4829:18;;;4822:62;-1:-1:-1;;;4900:18:1;;;4893:34;4944:19;;19443:68:0;4569:400:1;19443:68:0;-1:-1:-1;;;;;19530:21:0;;19522:68;;;;-1:-1:-1;;;19522:68:0;;5176:2:1;19522:68:0;;;5158:21:1;5215:2;5195:18;;;5188:30;5254:34;5234:18;;;5227:62;-1:-1:-1;;;5305:18:1;;;5298:32;5347:19;;19522:68:0;4974:398:1;19522:68:0;-1:-1:-1;;;;;19603:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;19655:32;;1258:25:1;;;19655:32:0;;1231:18:1;19655:32:0;;;;;;;19315:380;;;:::o;24561:630::-;24658:4;2125:10;24716:38;24732:4;2125:10;24747:6;24716:15;:38::i;:::-;24782:1;24771:8;;:12;:75;;;;-1:-1:-1;;;;;;24789:27:0;;;;;;:21;:27;;;;;;;;;:56;;-1:-1:-1;;;;;;24820:25:0;;;;;;:21;:25;;;;;;;;24789:56;24787:59;24771:75;24767:353;;;24863:17;24905:4;24893:8;;24884:6;:17;;;;:::i;:::-;24883:26;;;;:::i;:::-;24863:46;-1:-1:-1;24930:13:0;;24926:183;;24980:11;;24964:39;;24974:4;;-1:-1:-1;;;;;24980:11:0;24993:9;24964;:39::i;:::-;25065:9;25055:19;;;;24926:183;24848:272;24767:353;25132:27;25142:4;25148:2;25152:6;25132:9;:27::i;3657:132::-;3565:6;;-1:-1:-1;;;;;3565:6:0;2125:10;3721:23;3713:68;;;;-1:-1:-1;;;3713:68:0;;5974:2:1;3713:68:0;;;5956:21:1;;;5993:18;;;5986:30;6052:34;6032:18;;;6025:62;6104:18;;3713:68:0;5772:356:1;4759:191:0;4852:6;;;-1:-1:-1;;;;;4869:17:0;;;-1:-1:-1;;;;;;4869:17:0;;;;;;;4902:40;;4852:6;;;4869:17;4852:6;;4902:40;;4833:16;;4902:40;4822:128;4759:191;:::o;26470:209::-;-1:-1:-1;;;;;26551:25:0;;26543:90;;;;-1:-1:-1;;;26543:90:0;;6335:2:1;26543:90:0;;;6317:21:1;6374:2;6354:18;;;6347:30;6413:34;6393:18;;;6386:62;-1:-1:-1;;;6464:18:1;;;6457:50;6524:19;;26543:90:0;6133:416:1;26543:90:0;26646:11;:25;;-1:-1:-1;;;;;;26646:25:0;-1:-1:-1;;;;;26646:25:0;;;;;;;;;;26470:209::o;23520:564::-;23661:8;;23599:4;;2125:10;;23661:12;;;;:76;;-1:-1:-1;;;;;;23679:28:0;;;;;;:21;:28;;;;;;;;;:57;;-1:-1:-1;;;;;;23711:25:0;;;;;;:21;:25;;;;;;;;23679:57;23677:60;23661:76;23657:355;;;23754:17;23796:4;23784:8;;23775:6;:17;;;;:::i;:::-;23774:26;;;;:::i;:::-;23754:46;-1:-1:-1;23821:13:0;;23817:184;;23872:11;;23855:40;;23865:5;;-1:-1:-1;;;;;23872:11:0;23885:9;23855;:40::i;:::-;23957:9;23947:19;;;;23817:184;23739:273;23657:355;24024:28;24034:5;24041:2;24045:6;24024:9;:28::i;26073:208::-;26173:4;26155:15;:22;26147:87;;;;-1:-1:-1;;;26147:87:0;;6756:2:1;26147:87:0;;;6738:21:1;6795:2;6775:18;;;6768:30;6834:34;6814:18;;;6807:62;-1:-1:-1;;;6885:18:1;;;6878:50;6945:19;;26147:87:0;6554:416:1;26147:87:0;26247:8;:26;26073:208::o;19986:453::-;20121:24;20148:25;20158:5;20165:7;20148:9;:25::i;:::-;20121:52;;-1:-1:-1;;20188:16:0;:37;20184:248;;20270:6;20250:16;:26;;20242:68;;;;-1:-1:-1;;;20242:68:0;;7177:2:1;20242:68:0;;;7159:21:1;7216:2;7196:18;;;7189:30;7255:31;7235:18;;;7228:59;7304:18;;20242:68:0;6975:353:1;20242:68:0;20354:51;20363:5;20370:7;20398:6;20379:16;:25;20354:8;:51::i;:::-;20110:329;19986:453;;;:::o;16194:840::-;-1:-1:-1;;;;;16325:18:0;;16317:68;;;;-1:-1:-1;;;16317:68:0;;7535:2:1;16317:68:0;;;7517:21:1;7574:2;7554:18;;;7547:30;7613:34;7593:18;;;7586:62;-1:-1:-1;;;7664:18:1;;;7657:35;7709:19;;16317:68:0;7333:401:1;16317:68:0;-1:-1:-1;;;;;16404:16:0;;16396:64;;;;-1:-1:-1;;;16396:64:0;;7941:2:1;16396:64:0;;;7923:21:1;7980:2;7960:18;;;7953:30;8019:34;7999:18;;;7992:62;-1:-1:-1;;;8070:18:1;;;8063:33;8113:19;;16396:64:0;7739:399:1;16396:64:0;-1:-1:-1;;;;;16546:15:0;;16524:19;16546:15;;;;;;;;;;;16580:21;;;;16572:72;;;;-1:-1:-1;;;16572:72:0;;8345:2:1;16572:72:0;;;8327:21:1;8384:2;8364:18;;;8357:30;8423:34;8403:18;;;8396:62;-1:-1:-1;;;8474:18:1;;;8467:36;8520:19;;16572:72:0;8143:402:1;16572:72:0;-1:-1:-1;;;;;16680:15:0;;;:9;:15;;;;;;;;;;;16698:20;;;16680:38;;16898:13;;;;;;;;;;:23;;;;;;16950:26;;1258:25:1;;;16898:13:0;;16950:26;;1231:18:1;16950:26:0;;;;;;;16989:37;21039:125;14:418:1;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:173::-;505:20;;-1:-1:-1;;;;;554:31:1;;544:42;;534:70;;600:1;597;590:12;534:70;437:173;;;:::o;615:300::-;683:6;691;744:2;732:9;723:7;719:23;715:32;712:52;;;760:1;757;750:12;712:52;783:29;802:9;783:29;:::i;:::-;773:39;881:2;866:18;;;;853:32;;-1:-1:-1;;;615:300:1:o;1294:374::-;1371:6;1379;1387;1440:2;1428:9;1419:7;1415:23;1411:32;1408:52;;;1456:1;1453;1446:12;1408:52;1479:29;1498:9;1479:29;:::i;:::-;1469:39;;1527:38;1561:2;1550:9;1546:18;1527:38;:::i;:::-;1294:374;;1517:48;;-1:-1:-1;;;1634:2:1;1619:18;;;;1606:32;;1294:374::o;1673:347::-;1738:6;1746;1799:2;1787:9;1778:7;1774:23;1770:32;1767:52;;;1815:1;1812;1805:12;1767:52;1838:29;1857:9;1838:29;:::i;:::-;1828:39;;1917:2;1906:9;1902:18;1889:32;1964:5;1957:13;1950:21;1943:5;1940:32;1930:60;;1986:1;1983;1976:12;1930:60;2009:5;1999:15;;;1673:347;;;;;:::o;2214:186::-;2273:6;2326:2;2314:9;2305:7;2301:23;2297:32;2294:52;;;2342:1;2339;2332:12;2294:52;2365:29;2384:9;2365:29;:::i;2613:226::-;2672:6;2725:2;2713:9;2704:7;2700:23;2696:32;2693:52;;;2741:1;2738;2731:12;2693:52;-1:-1:-1;2786:23:1;;2613:226;-1:-1:-1;2613:226:1:o;2844:260::-;2912:6;2920;2973:2;2961:9;2952:7;2948:23;2944:32;2941:52;;;2989:1;2986;2979:12;2941:52;3012:29;3031:9;3012:29;:::i;:::-;3002:39;;3060:38;3094:2;3083:9;3079:18;3060:38;:::i;:::-;3050:48;;2844:260;;;;;:::o;3109:380::-;3188:1;3184:12;;;;3231;;;3252:61;;3306:4;3298:6;3294:17;3284:27;;3252:61;3359:2;3351:6;3348:14;3328:18;3325:38;3322:161;;3405:10;3400:3;3396:20;3393:1;3386:31;3440:4;3437:1;3430:15;3468:4;3465:1;3458:15;3322:161;;3109:380;;;:::o;3494:127::-;3555:10;3550:3;3546:20;3543:1;3536:31;3586:4;3583:1;3576:15;3610:4;3607:1;3600:15;3626:125;3691:9;;;3712:10;;;3709:36;;;3725:18;;:::i;5377:168::-;5450:9;;;5481;;5498:15;;;5492:22;;5478:37;5468:71;;5519:18;;:::i;5550:217::-;5590:1;5616;5606:132;;5660:10;5655:3;5651:20;5648:1;5641:31;5695:4;5692:1;5685:15;5723:4;5720:1;5713:15;5606:132;-1:-1:-1;5752:9:1;;5550:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "711000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24647",
								"balanceOf(address)": "2604",
								"decimals()": "infinite",
								"decreaseAllowance(address,uint256)": "27012",
								"increaseAllowance(address,uint256)": "infinite",
								"isExcludedFromTaxFee(address)": "2590",
								"name()": "infinite",
								"owner()": "2430",
								"renounceOwnership()": "infinite",
								"setExclusionFromTaxFee(address,bool)": "26956",
								"setTaxAddress(address)": "26842",
								"setTaxFeePerMille(uint256)": "24649",
								"symbol()": "infinite",
								"taxAddress()": "2352",
								"taxFeePerMille()": "2357",
								"totalSupply()": "2348",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28443"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27760,
									"end": 30046,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 27760,
									"end": 30046,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27760,
									"end": 30046,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27843,
									"end": 28473,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27843,
									"end": 28473,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27843,
									"end": 28473,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 27843,
									"end": 28473,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 27843,
									"end": 28473,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 27843,
									"end": 28473,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27843,
									"end": 28473,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 27843,
									"end": 28473,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 27843,
									"end": 28473,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27843,
									"end": 28473,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27843,
									"end": 28473,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27843,
									"end": 28473,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27843,
									"end": 28473,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27843,
									"end": 28473,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27843,
									"end": 28473,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27843,
									"end": 28473,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27843,
									"end": 28473,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 27843,
									"end": 28473,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 27843,
									"end": 28473,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 27843,
									"end": 28473,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27843,
									"end": 28473,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27589,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27385,
									"end": 27589,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27589,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27589,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27589,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27589,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27589,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27589,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27589,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27589,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 27385,
									"end": 27589,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27589,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "54617861626C65455243323"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 27385,
									"end": 27589,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27385,
									"end": 27589,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27589,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27589,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28277,
									"end": 28289,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28277,
									"end": 28289,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28307,
									"end": 28317,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2125,
									"end": 2135,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 28225,
									"end": 28240,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 28242,
									"end": 28253,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 28192,
									"end": 28201,
									"name": "DUP12",
									"source": 0
								},
								{
									"begin": 28153,
									"end": 28158,
									"name": "DUP15",
									"source": 0
								},
								{
									"begin": 28160,
									"end": 28167,
									"name": "DUP15",
									"source": 0
								},
								{
									"begin": 10592,
									"end": 10597,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 10592,
									"end": 10605,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 28153,
									"end": 28158,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10592,
									"end": 10597,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10592,
									"end": 10605,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 10592,
									"end": 10605,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 10592,
									"end": 10605,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 10592,
									"end": 10605,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 10616,
									"end": 10623,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 10616,
									"end": 10633,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 10626,
									"end": 10633,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10616,
									"end": 10623,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10616,
									"end": 10633,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 10616,
									"end": 10633,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 10616,
									"end": 10633,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 10616,
									"end": 10633,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 22364,
									"end": 22385,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 22364,
									"end": 22385,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22364,
									"end": 22385,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 22364,
									"end": 22385,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23035,
									"end": 23063,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 23047,
									"end": 23062,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23035,
									"end": 23046,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 23035,
									"end": 23063,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23035,
									"end": 23063,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 23035,
									"end": 23063,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23074,
									"end": 23101,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 23089,
									"end": 23100,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23074,
									"end": 23088,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 23074,
									"end": 23101,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23074,
									"end": 23101,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 23074,
									"end": 23101,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23112,
									"end": 23155,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 2125,
									"end": 2135,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 27005,
									"end": 27036,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27005,
									"end": 27036,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27005,
									"end": 27036,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27005,
									"end": 27036,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27005,
									"end": 27036,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27005,
									"end": 27026,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 27005,
									"end": 27036,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27005,
									"end": 27036,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27005,
									"end": 27036,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27005,
									"end": 27036,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27005,
									"end": 27036,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 27005,
									"end": 27046,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27005,
									"end": 27046,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 27005,
									"end": 27046,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23150,
									"end": 23154,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27005,
									"end": 27046,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 27005,
									"end": 27046,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27005,
									"end": 27046,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 26912,
									"end": 27054,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23112,
									"end": 23155,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 23112,
									"end": 23155,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 27005,
									"end": 27036,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27005,
									"end": 27036,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27005,
									"end": 27036,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27005,
									"end": 27036,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27005,
									"end": 27036,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27005,
									"end": 27026,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 27005,
									"end": 27036,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27005,
									"end": 27036,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27005,
									"end": 27036,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27005,
									"end": 27036,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27005,
									"end": 27036,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 27005,
									"end": 27046,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27005,
									"end": 27046,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 27005,
									"end": 27046,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23203,
									"end": 23207,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27005,
									"end": 27046,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 27005,
									"end": 27046,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27005,
									"end": 27046,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3213,
									"end": 3245,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 2125,
									"end": 2135,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 3213,
									"end": 3231,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 3213,
									"end": 3245,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3213,
									"end": 3245,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 3213,
									"end": 3245,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "346386E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 27509,
									"end": 27531,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27531,
									"name": "PUSH",
									"source": 0,
									"value": "346386E1"
								},
								{
									"begin": 27509,
									"end": 27531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27539,
									"end": 27548,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 27539,
									"end": 27548,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27550,
									"end": 27561,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 27550,
									"end": 27561,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27563,
									"end": 27572,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 27563,
									"end": 27572,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27574,
									"end": 27580,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 27574,
									"end": 27580,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 27509,
									"end": 27581,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "CALL",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27509,
									"end": 27581,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27589,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27589,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27589,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27589,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28375,
									"end": 28376,
									"modifierDepth": 4,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28357,
									"end": 28372,
									"modifierDepth": 4,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 28357,
									"end": 28376,
									"modifierDepth": 4,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 28349,
									"end": 28416,
									"modifierDepth": 4,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 28349,
									"end": 28416,
									"modifierDepth": 4,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 28349,
									"end": 28416,
									"modifierDepth": 4,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28349,
									"end": 28416,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 28349,
									"end": 28416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28349,
									"end": 28416,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6137,
									"end": 6139,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 28349,
									"end": 28416,
									"modifierDepth": 4,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 28349,
									"end": 28416,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28349,
									"end": 28416,
									"modifierDepth": 4,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6119,
									"end": 6140,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6176,
									"end": 6178,
									"name": "PUSH",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 6156,
									"end": 6174,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 6156,
									"end": 6174,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6156,
									"end": 6174,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6149,
									"end": 6179,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6215,
									"end": 6249,
									"name": "PUSH",
									"source": 1,
									"value": "54617861626C6545524332303A20737570706C792063616E6E6F74206265207A"
								},
								{
									"begin": 6195,
									"end": 6213,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 6195,
									"end": 6213,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6195,
									"end": 6213,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6188,
									"end": 6250,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "65726F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6266,
									"end": 6284,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 6266,
									"end": 6284,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6266,
									"end": 6284,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6259,
									"end": 6292,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6309,
									"end": 6328,
									"name": "PUSH",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 6309,
									"end": 6328,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 28349,
									"end": 28416,
									"modifierDepth": 4,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 28349,
									"end": 28416,
									"modifierDepth": 4,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28349,
									"end": 28416,
									"modifierDepth": 4,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28349,
									"end": 28416,
									"modifierDepth": 4,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 28349,
									"end": 28416,
									"modifierDepth": 4,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28349,
									"end": 28416,
									"modifierDepth": 4,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 28349,
									"end": 28416,
									"modifierDepth": 4,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 28349,
									"end": 28416,
									"modifierDepth": 4,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28349,
									"end": 28416,
									"modifierDepth": 4,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 28349,
									"end": 28416,
									"modifierDepth": 4,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 28349,
									"end": 28416,
									"modifierDepth": 4,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28429,
									"end": 28465,
									"modifierDepth": 4,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 2125,
									"end": 2135,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 28449,
									"end": 28464,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 28429,
									"end": 28434,
									"modifierDepth": 4,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 28429,
									"end": 28465,
									"jumpType": "[in]",
									"modifierDepth": 4,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 28429,
									"end": 28465,
									"modifierDepth": 4,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 28429,
									"end": 28465,
									"modifierDepth": 4,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27843,
									"end": 28473,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27843,
									"end": 28473,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27843,
									"end": 28473,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27843,
									"end": 28473,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27843,
									"end": 28473,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27843,
									"end": 28473,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27843,
									"end": 28473,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27843,
									"end": 28473,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27760,
									"end": 30046,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "77"
								},
								{
									"begin": 27760,
									"end": 30046,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 26073,
									"end": 26281,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 26073,
									"end": 26281,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26173,
									"end": 26177,
									"name": "PUSH",
									"source": 0,
									"value": "3E8"
								},
								{
									"begin": 26155,
									"end": 26170,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26155,
									"end": 26177,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 26147,
									"end": 26234,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 26147,
									"end": 26234,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26147,
									"end": 26234,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26147,
									"end": 26234,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 26147,
									"end": 26234,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26147,
									"end": 26234,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6541,
									"end": 6543,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 26147,
									"end": 26234,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 26147,
									"end": 26234,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 26147,
									"end": 26234,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6523,
									"end": 6544,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6580,
									"end": 6582,
									"name": "PUSH",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 6560,
									"end": 6578,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 6560,
									"end": 6578,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6578,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6583,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6619,
									"end": 6653,
									"name": "PUSH",
									"source": 1,
									"value": "455243323054617861626C653A207461784665655065724D696C6C655F206D75"
								},
								{
									"begin": 6599,
									"end": 6617,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 6599,
									"end": 6617,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6599,
									"end": 6617,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6592,
									"end": 6654,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6690,
									"end": 6712,
									"name": "PUSH",
									"source": 1,
									"value": "7374206265206C657373207468616E2031303030000000000000000000000000"
								},
								{
									"begin": 6670,
									"end": 6688,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 6670,
									"end": 6688,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6670,
									"end": 6688,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6663,
									"end": 6713,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6730,
									"end": 6749,
									"name": "PUSH",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 6730,
									"end": 6749,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 26147,
									"end": 26234,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 6339,
									"end": 6755,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 26147,
									"end": 26234,
									"name": "tag",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 26147,
									"end": 26234,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26247,
									"end": 26255,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 26247,
									"end": 26273,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 26073,
									"end": 26281,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 26470,
									"end": 26679,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26470,
									"end": 26679,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 26551,
									"end": 26576,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26551,
									"end": 26576,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 26543,
									"end": 26633,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 26543,
									"end": 26633,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26543,
									"end": 26633,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26543,
									"end": 26633,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 26543,
									"end": 26633,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26543,
									"end": 26633,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6962,
									"end": 6964,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 26543,
									"end": 26633,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 26543,
									"end": 26633,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 26543,
									"end": 26633,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6944,
									"end": 6965,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7001,
									"end": 7003,
									"name": "PUSH",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 6981,
									"end": 6999,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 6981,
									"end": 6999,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6981,
									"end": 6999,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6974,
									"end": 7004,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7040,
									"end": 7074,
									"name": "PUSH",
									"source": 1,
									"value": "455243323054617861626C653A20746178416464726573735F2063616E6E6F74"
								},
								{
									"begin": 7020,
									"end": 7038,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 7020,
									"end": 7038,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7020,
									"end": 7038,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7013,
									"end": 7075,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7111,
									"end": 7133,
									"name": "PUSH",
									"source": 1,
									"value": "20626520746865207A65726F2061646472657373000000000000000000000000"
								},
								{
									"begin": 7091,
									"end": 7109,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 7091,
									"end": 7109,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7091,
									"end": 7109,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7084,
									"end": 7134,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7151,
									"end": 7170,
									"name": "PUSH",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 7151,
									"end": 7170,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 26543,
									"end": 26633,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 6760,
									"end": 7176,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 26543,
									"end": 26633,
									"name": "tag",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 26543,
									"end": 26633,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26646,
									"end": 26657,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 26646,
									"end": 26671,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26646,
									"end": 26671,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 26646,
									"end": 26671,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 26646,
									"end": 26671,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 26646,
									"end": 26671,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26646,
									"end": 26671,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 26646,
									"end": 26671,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 26646,
									"end": 26671,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 26646,
									"end": 26671,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26646,
									"end": 26671,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 26646,
									"end": 26671,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 26646,
									"end": 26671,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26646,
									"end": 26671,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 26470,
									"end": 26679,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4759,
									"end": 4950,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 4759,
									"end": 4950,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4852,
									"end": 4858,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 4852,
									"end": 4858,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4852,
									"end": 4858,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4869,
									"end": 4886,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 4869,
									"end": 4886,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4869,
									"end": 4886,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4869,
									"end": 4886,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 4869,
									"end": 4886,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4869,
									"end": 4886,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4869,
									"end": 4886,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 4869,
									"end": 4886,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4869,
									"end": 4886,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 4869,
									"end": 4886,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 4902,
									"end": 4942,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4902,
									"end": 4942,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4852,
									"end": 4858,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4852,
									"end": 4858,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4852,
									"end": 4858,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4869,
									"end": 4886,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4852,
									"end": 4858,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4852,
									"end": 4858,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4902,
									"end": 4942,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 4902,
									"end": 4942,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4833,
									"end": 4849,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4833,
									"end": 4849,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4902,
									"end": 4942,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 4822,
									"end": 4950,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4759,
									"end": 4950,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4759,
									"end": 4950,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17321,
									"end": 17869,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 17321,
									"end": 17869,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17405,
									"end": 17426,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17405,
									"end": 17426,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17397,
									"end": 17462,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "55"
								},
								{
									"begin": 17397,
									"end": 17462,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17397,
									"end": 17462,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17397,
									"end": 17462,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 17397,
									"end": 17462,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17397,
									"end": 17462,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7383,
									"end": 7385,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 17397,
									"end": 17462,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17397,
									"end": 17462,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17397,
									"end": 17462,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7386,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7422,
									"end": 7424,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 7402,
									"end": 7420,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 7402,
									"end": 7420,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7402,
									"end": 7420,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7395,
									"end": 7425,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7461,
									"end": 7494,
									"name": "PUSH",
									"source": 1,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 7441,
									"end": 7459,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 7441,
									"end": 7459,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7441,
									"end": 7459,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7434,
									"end": 7495,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7512,
									"end": 7530,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 7512,
									"end": 7530,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 17397,
									"end": 17462,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 7181,
									"end": 7536,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 17397,
									"end": 17462,
									"name": "tag",
									"source": 0,
									"value": "55"
								},
								{
									"begin": 17397,
									"end": 17462,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17553,
									"end": 17559,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17537,
									"end": 17549,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17537,
									"end": 17549,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17537,
									"end": 17559,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17537,
									"end": 17559,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17537,
									"end": 17559,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17537,
									"end": 17559,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 17537,
									"end": 17559,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17537,
									"end": 17559,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17537,
									"end": 17559,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "61"
								},
								{
									"begin": 17537,
									"end": 17559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17537,
									"end": 17559,
									"name": "tag",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 17537,
									"end": 17559,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17537,
									"end": 17559,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17537,
									"end": 17559,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17537,
									"end": 17559,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17708,
									"end": 17726,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17708,
									"end": 17726,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17708,
									"end": 17717,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17708,
									"end": 17726,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17708,
									"end": 17726,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17708,
									"end": 17726,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17708,
									"end": 17726,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17708,
									"end": 17726,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17708,
									"end": 17726,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17708,
									"end": 17726,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17708,
									"end": 17726,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17708,
									"end": 17726,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17708,
									"end": 17726,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17708,
									"end": 17726,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17708,
									"end": 17736,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17708,
									"end": 17736,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17708,
									"end": 17736,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 17708,
									"end": 17736,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17708,
									"end": 17736,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17708,
									"end": 17736,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17763,
									"end": 17800,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7914,
									"end": 7939,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7914,
									"end": 7939,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7914,
									"end": 7939,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 17763,
									"end": 17800,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 17763,
									"end": 17800,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7887,
									"end": 7905,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 17763,
									"end": 17800,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17763,
									"end": 17800,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17763,
									"end": 17800,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17763,
									"end": 17800,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17763,
									"end": 17800,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17763,
									"end": 17800,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17763,
									"end": 17800,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 17321,
									"end": 17869,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17321,
									"end": 17869,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17321,
									"end": 17869,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 21039,
									"end": 21164,
									"name": "tag",
									"source": 0,
									"value": "59"
								},
								{
									"begin": 21039,
									"end": 21164,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21039,
									"end": 21164,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21039,
									"end": 21164,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21039,
									"end": 21164,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21039,
									"end": 21164,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1032,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 146,
									"end": 1032,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 298,
									"end": 311,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 298,
									"end": 311,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 331,
									"end": 348,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 331,
									"end": 348,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 372,
									"end": 373,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 372,
									"end": 373,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 407,
									"end": 437,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 407,
									"end": 437,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 404,
									"end": 460,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 404,
									"end": 460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 404,
									"end": 460,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 440,
									"end": 458,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 440,
									"end": 458,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 440,
									"end": 458,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 440,
									"end": 458,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 440,
									"end": 458,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 595,
									"end": 597,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 589,
									"end": 598,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 508,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 487,
									"end": 502,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 487,
									"end": 502,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 483,
									"end": 512,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 483,
									"end": 512,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 653,
									"end": 655,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 641,
									"end": 656,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 637,
									"end": 666,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 625,
									"end": 667,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 625,
									"end": 667,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 718,
									"end": 740,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 718,
									"end": 740,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 718,
									"end": 740,
									"name": "LT",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 682,
									"end": 716,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 682,
									"end": 716,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 679,
									"end": 741,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 676,
									"end": 764,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 676,
									"end": 764,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 676,
									"end": 764,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 744,
									"end": 762,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 744,
									"end": 762,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 744,
									"end": 762,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 744,
									"end": 762,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 744,
									"end": 762,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 780,
									"end": 782,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 773,
									"end": 795,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 830,
									"end": 852,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 830,
									"end": 852,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 830,
									"end": 852,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 815,
									"end": 821,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 815,
									"end": 821,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 867,
									"end": 883,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 867,
									"end": 883,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 867,
									"end": 883,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 864,
									"end": 889,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 861,
									"end": 906,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 861,
									"end": 906,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 861,
									"end": 906,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 899,
									"end": 900,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 892,
									"end": 904,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 861,
									"end": 906,
									"name": "tag",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 861,
									"end": 906,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 945,
									"end": 951,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 940,
									"end": 943,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 933,
									"end": 937,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 925,
									"end": 931,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 921,
									"end": 938,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 915,
									"end": 952,
									"name": "MCOPY",
									"source": 1
								},
								{
									"begin": 1000,
									"end": 1001,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 993,
									"end": 997,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 984,
									"end": 990,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 976,
									"end": 982,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 972,
									"end": 991,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 968,
									"end": 998,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 961,
									"end": 1002,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1020,
									"end": 1026,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1026,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1026,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1026,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1026,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1026,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1026,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1032,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1032,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1032,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1032,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1032,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1037,
									"end": 1197,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 1037,
									"end": 1197,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1114,
									"end": 1127,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1114,
									"end": 1127,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1171,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1156,
									"end": 1172,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1156,
									"end": 1172,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1146,
									"end": 1173,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1146,
									"end": 1173,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1136,
									"end": 1191,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 1136,
									"end": 1191,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1187,
									"end": 1188,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1184,
									"end": 1185,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1177,
									"end": 1189,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1136,
									"end": 1191,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 1136,
									"end": 1191,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1037,
									"end": 1197,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1037,
									"end": 1197,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1037,
									"end": 1197,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1037,
									"end": 1197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1379,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 1202,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1281,
									"end": 1294,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1281,
									"end": 1294,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1323,
									"end": 1354,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1323,
									"end": 1354,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1313,
									"end": 1355,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1313,
									"end": 1355,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1303,
									"end": 1373,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 1303,
									"end": 1373,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1369,
									"end": 1370,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1366,
									"end": 1367,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1359,
									"end": 1371,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 2644,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1384,
									"end": 2644,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1558,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1560,
									"end": 1566,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1574,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1576,
									"end": 1582,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1584,
									"end": 1590,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1592,
									"end": 1598,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1600,
									"end": 1606,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1608,
									"end": 1614,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1661,
									"end": 1664,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1649,
									"end": 1658,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 1640,
									"end": 1647,
									"name": "DUP12",
									"source": 1
								},
								{
									"begin": 1636,
									"end": 1659,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1665,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1682,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 1629,
									"end": 1682,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1678,
									"end": 1679,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1675,
									"end": 1676,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1668,
									"end": 1680,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1682,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 1629,
									"end": 1682,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1705,
									"end": 1721,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1705,
									"end": 1721,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1733,
									"end": 1763,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1733,
									"end": 1763,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1730,
									"end": 1780,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1730,
									"end": 1780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 1730,
									"end": 1780,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1776,
									"end": 1777,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1773,
									"end": 1774,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1766,
									"end": 1778,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1730,
									"end": 1780,
									"name": "tag",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 1730,
									"end": 1780,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1799,
									"end": 1860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 1852,
									"end": 1859,
									"name": "DUP12",
									"source": 1
								},
								{
									"begin": 1843,
									"end": 1849,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1832,
									"end": 1841,
									"name": "DUP13",
									"source": 1
								},
								{
									"begin": 1828,
									"end": 1850,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1799,
									"end": 1860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 1799,
									"end": 1860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1799,
									"end": 1860,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 1799,
									"end": 1860,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1906,
									"end": 1908,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1891,
									"end": 1909,
									"name": "DUP12",
									"source": 1
								},
								{
									"begin": 1891,
									"end": 1909,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1885,
									"end": 1910,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1789,
									"end": 1860,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1789,
									"end": 1860,
									"name": "SWAP10",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1885,
									"end": 1910,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1922,
									"end": 1954,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1954,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1919,
									"end": 1971,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1919,
									"end": 1971,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 1919,
									"end": 1971,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1967,
									"end": 1968,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1964,
									"end": 1965,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 1969,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1919,
									"end": 1971,
									"name": "tag",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 1919,
									"end": 1971,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1990,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 2045,
									"end": 2052,
									"name": "DUP12",
									"source": 1
								},
								{
									"begin": 2034,
									"end": 2042,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2023,
									"end": 2032,
									"name": "DUP13",
									"source": 1
								},
								{
									"begin": 2019,
									"end": 2043,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1990,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 1990,
									"end": 2053,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1990,
									"end": 2053,
									"name": "tag",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 1990,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2053,
									"name": "SWAP8",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2072,
									"end": 2119,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 2115,
									"end": 2117,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2104,
									"end": 2113,
									"name": "DUP11",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2118,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2072,
									"end": 2119,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 2072,
									"end": 2119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2072,
									"end": 2119,
									"name": "tag",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 2072,
									"end": 2119,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2181,
									"end": 2183,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2166,
									"end": 2184,
									"name": "DUP11",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2184,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2160,
									"end": 2185,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2275,
									"end": 2278,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 2260,
									"end": 2279,
									"name": "DUP12",
									"source": 1
								},
								{
									"begin": 2260,
									"end": 2279,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2254,
									"end": 2280,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2062,
									"end": 2119,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2062,
									"end": 2119,
									"name": "SWAP8",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2160,
									"end": 2185,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2254,
									"end": 2280,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2325,
									"end": 2375,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 2370,
									"end": 2373,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 2355,
									"end": 2374,
									"name": "DUP11",
									"source": 1
								},
								{
									"begin": 2355,
									"end": 2374,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2325,
									"end": 2375,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 2325,
									"end": 2375,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2325,
									"end": 2375,
									"name": "tag",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 2325,
									"end": 2375,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2421,
									"end": 2424,
									"name": "PUSH",
									"source": 1,
									"value": "C0"
								},
								{
									"begin": 2406,
									"end": 2425,
									"name": "DUP11",
									"source": 1
								},
								{
									"begin": 2406,
									"end": 2425,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2400,
									"end": 2426,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2315,
									"end": 2375,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2315,
									"end": 2375,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2438,
									"end": 2470,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2438,
									"end": 2470,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2435,
									"end": 2487,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2435,
									"end": 2487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 2435,
									"end": 2487,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2480,
									"end": 2481,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2473,
									"end": 2485,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2435,
									"end": 2487,
									"name": "tag",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 2435,
									"end": 2487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2569,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 2561,
									"end": 2568,
									"name": "DUP12",
									"source": 1
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2539,
									"end": 2548,
									"name": "DUP13",
									"source": 1
								},
								{
									"begin": 2535,
									"end": 2559,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2569,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 2506,
									"end": 2569,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2569,
									"name": "tag",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 2506,
									"end": 2569,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2496,
									"end": 2569,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2496,
									"end": 2569,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2496,
									"end": 2569,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2638,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2633,
									"end": 2636,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 2622,
									"end": 2631,
									"name": "DUP11",
									"source": 1
								},
								{
									"begin": 2618,
									"end": 2637,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2638,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 2588,
									"end": 2638,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2638,
									"name": "tag",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2588,
									"end": 2638,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2578,
									"end": 2638,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2578,
									"end": 2638,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 2644,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 2644,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 2644,
									"name": "SWAP9",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 2644,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 2644,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 2644,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 2644,
									"name": "SWAP9",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 2644,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 2644,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 2644,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 2644,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 2644,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2649,
									"end": 3029,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 2649,
									"end": 3029,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2728,
									"end": 2729,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2724,
									"end": 2736,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2724,
									"end": 2736,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2724,
									"end": 2736,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2724,
									"end": 2736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2771,
									"end": 2783,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2771,
									"end": 2783,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2771,
									"end": 2783,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 2853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 2792,
									"end": 2853,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2850,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 2838,
									"end": 2844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2834,
									"end": 2851,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2824,
									"end": 2851,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2824,
									"end": 2851,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 2853,
									"name": "tag",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 2792,
									"end": 2853,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2899,
									"end": 2901,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2891,
									"end": 2897,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2888,
									"end": 2902,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2868,
									"end": 2886,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2865,
									"end": 2903,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2862,
									"end": 3023,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 2862,
									"end": 3023,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2945,
									"end": 2955,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 2940,
									"end": 2943,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 2936,
									"end": 2956,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2933,
									"end": 2934,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2926,
									"end": 2957,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2980,
									"end": 2984,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2977,
									"end": 2978,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2970,
									"end": 2985,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3008,
									"end": 3012,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3005,
									"end": 3006,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2998,
									"end": 3013,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2862,
									"end": 3023,
									"name": "tag",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 2862,
									"end": 3023,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2862,
									"end": 3023,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2649,
									"end": 3029,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2649,
									"end": 3029,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2649,
									"end": 3029,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2649,
									"end": 3029,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3160,
									"end": 3678,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 3160,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3262,
									"end": 3264,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3257,
									"end": 3260,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3254,
									"end": 3265,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3672,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3672,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 3251,
									"end": 3672,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3298,
									"end": 3303,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3295,
									"end": 3296,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3288,
									"end": 3304,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3342,
									"end": 3346,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3339,
									"end": 3340,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3329,
									"end": 3347,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 3412,
									"end": 3414,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3400,
									"end": 3410,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3396,
									"end": 3415,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3393,
									"end": 3394,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3389,
									"end": 3416,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3383,
									"end": 3387,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3379,
									"end": 3417,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3448,
									"end": 3452,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3436,
									"end": 3446,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3433,
									"end": 3453,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3430,
									"end": 3477,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3430,
									"end": 3477,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 3430,
									"end": 3477,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3471,
									"end": 3475,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3430,
									"end": 3477,
									"name": "tag",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 3430,
									"end": 3477,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3526,
									"end": 3528,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3521,
									"end": 3524,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3517,
									"end": 3529,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3514,
									"end": 3515,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3510,
									"end": 3530,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3504,
									"end": 3508,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3500,
									"end": 3531,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3490,
									"end": 3531,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3490,
									"end": 3531,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3581,
									"end": 3662,
									"name": "tag",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 3581,
									"end": 3662,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3599,
									"end": 3601,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3592,
									"end": 3597,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3589,
									"end": 3602,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3581,
									"end": 3662,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3581,
									"end": 3662,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 3581,
									"end": 3662,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3658,
									"end": 3659,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3644,
									"end": 3660,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3644,
									"end": 3660,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3625,
									"end": 3626,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3614,
									"end": 3627,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3581,
									"end": 3662,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 3581,
									"end": 3662,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3581,
									"end": 3662,
									"name": "tag",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 3581,
									"end": 3662,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3585,
									"end": 3588,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3585,
									"end": 3588,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3160,
									"end": 3678,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3160,
									"end": 3678,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3160,
									"end": 3678,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3160,
									"end": 3678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3854,
									"end": 5153,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 3854,
									"end": 5153,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3974,
									"end": 3984,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3974,
									"end": 3984,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3996,
									"end": 4026,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3996,
									"end": 4026,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3993,
									"end": 4049,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3993,
									"end": 4049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 3993,
									"end": 4049,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4029,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 4029,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 4029,
									"end": 4047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4029,
									"end": 4047,
									"name": "tag",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 4029,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4058,
									"end": 4155,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 4148,
									"end": 4154,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4108,
									"end": 4146,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 4140,
									"end": 4144,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4134,
									"end": 4145,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 4108,
									"end": 4146,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 4108,
									"end": 4146,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4108,
									"end": 4146,
									"name": "tag",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 4108,
									"end": 4146,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4102,
									"end": 4106,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4058,
									"end": 4155,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 4058,
									"end": 4155,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4058,
									"end": 4155,
									"name": "tag",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 4058,
									"end": 4155,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4204,
									"end": 4208,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4235,
									"end": 4237,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4224,
									"end": 4238,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4224,
									"end": 4238,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4252,
									"end": 4253,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4247,
									"end": 4896,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4247,
									"end": 4896,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 4247,
									"end": 4896,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 4247,
									"end": 4896,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4940,
									"end": 4941,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4957,
									"end": 4963,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4954,
									"end": 5043,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4954,
									"end": 5043,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 4954,
									"end": 5043,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5009,
									"end": 5028,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5009,
									"end": 5028,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5009,
									"end": 5028,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5003,
									"end": 5029,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4954,
									"end": 5043,
									"name": "tag",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 4954,
									"end": 5043,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3811,
									"end": 3812,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3807,
									"end": 3818,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3807,
									"end": 3818,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3807,
									"end": 3818,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3803,
									"end": 3827,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3799,
									"end": 3828,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3789,
									"end": 3829,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3835,
									"end": 3836,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3831,
									"end": 3842,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3831,
									"end": 3842,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3831,
									"end": 3842,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3786,
									"end": 3843,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 5056,
									"end": 5137,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5056,
									"end": 5137,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4217,
									"end": 5147,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 4217,
									"end": 5147,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4247,
									"end": 4896,
									"name": "tag",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 4247,
									"end": 4896,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3107,
									"end": 3108,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3100,
									"end": 3114,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3100,
									"end": 3114,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3100,
									"end": 3114,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3144,
									"end": 3148,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3131,
									"end": 3149,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3131,
									"end": 3149,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4283,
									"end": 4303,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4283,
									"end": 4303,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4283,
									"end": 4303,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4401,
									"end": 4623,
									"name": "tag",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 4401,
									"end": 4623,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4415,
									"end": 4422,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4412,
									"end": 4413,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4409,
									"end": 4423,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4401,
									"end": 4623,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4401,
									"end": 4623,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 4401,
									"end": 4623,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4497,
									"end": 4516,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 4497,
									"end": 4516,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4497,
									"end": 4516,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4491,
									"end": 4517,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4476,
									"end": 4518,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4476,
									"end": 4518,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4604,
									"end": 4608,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4589,
									"end": 4609,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 4589,
									"end": 4609,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4589,
									"end": 4609,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4589,
									"end": 4609,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 4557,
									"end": 4558,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4545,
									"end": 4559,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4545,
									"end": 4559,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4545,
									"end": 4559,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4545,
									"end": 4559,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4443,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4401,
									"end": 4623,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 4401,
									"end": 4623,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4401,
									"end": 4623,
									"name": "tag",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 4401,
									"end": 4623,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4405,
									"end": 4408,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4651,
									"end": 4657,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4642,
									"end": 4649,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4639,
									"end": 4658,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4636,
									"end": 4837,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4636,
									"end": 4837,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 4636,
									"end": 4837,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4712,
									"end": 4731,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4712,
									"end": 4731,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4712,
									"end": 4731,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4706,
									"end": 4732,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4795,
									"end": 4796,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 4791,
									"end": 4805,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 4791,
									"end": 4805,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4791,
									"end": 4805,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 4807,
									"end": 4810,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 4787,
									"end": 4811,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4783,
									"end": 4820,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 4779,
									"end": 4821,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4764,
									"end": 4822,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4749,
									"end": 4823,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4749,
									"end": 4823,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4636,
									"end": 4837,
									"name": "tag",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 4636,
									"end": 4837,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4883,
									"end": 4884,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4867,
									"end": 4881,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4867,
									"end": 4881,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4867,
									"end": 4881,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 4863,
									"end": 4885,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4850,
									"end": 4886,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4850,
									"end": 4886,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3854,
									"end": 5153,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5158,
									"end": 5447,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 5158,
									"end": 5447,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5200,
									"end": 5203,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5238,
									"end": 5243,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5232,
									"end": 5244,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5265,
									"end": 5271,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5260,
									"end": 5263,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5253,
									"end": 5272,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5321,
									"end": 5327,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5314,
									"end": 5318,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5307,
									"end": 5312,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5303,
									"end": 5319,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5296,
									"end": 5300,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5291,
									"end": 5294,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5287,
									"end": 5301,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5281,
									"end": 5328,
									"name": "MCOPY",
									"source": 1
								},
								{
									"begin": 5373,
									"end": 5374,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5366,
									"end": 5370,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5357,
									"end": 5363,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5352,
									"end": 5355,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5348,
									"end": 5364,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5344,
									"end": 5371,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5337,
									"end": 5375,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5436,
									"end": 5440,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5429,
									"end": 5431,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5425,
									"end": 5432,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 5420,
									"end": 5422,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5412,
									"end": 5418,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5408,
									"end": 5423,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5404,
									"end": 5433,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5399,
									"end": 5402,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5395,
									"end": 5434,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5391,
									"end": 5441,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5384,
									"end": 5441,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5384,
									"end": 5441,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5384,
									"end": 5441,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5158,
									"end": 5447,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5158,
									"end": 5447,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5158,
									"end": 5447,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5158,
									"end": 5447,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5158,
									"end": 5447,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5452,
									"end": 5930,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 5452,
									"end": 5930,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5675,
									"end": 5677,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 5664,
									"end": 5673,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5657,
									"end": 5678,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5638,
									"end": 5642,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5701,
									"end": 5746,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 5742,
									"end": 5744,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 5731,
									"end": 5740,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5727,
									"end": 5745,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5725,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5701,
									"end": 5746,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 5701,
									"end": 5746,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5701,
									"end": 5746,
									"name": "tag",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 5701,
									"end": 5746,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5794,
									"end": 5803,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5786,
									"end": 5792,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5782,
									"end": 5804,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 5777,
									"end": 5779,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5766,
									"end": 5775,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5762,
									"end": 5780,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5755,
									"end": 5805,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5822,
									"end": 5855,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "129"
								},
								{
									"begin": 5848,
									"end": 5854,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5840,
									"end": 5846,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5822,
									"end": 5855,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 5822,
									"end": 5855,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5822,
									"end": 5855,
									"name": "tag",
									"source": 1,
									"value": "129"
								},
								{
									"begin": 5822,
									"end": 5855,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5814,
									"end": 5855,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5814,
									"end": 5855,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5814,
									"end": 5855,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5920,
									"end": 5921,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5916,
									"end": 5917,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5911,
									"end": 5914,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 5907,
									"end": 5918,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 5903,
									"end": 5922,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 5895,
									"end": 5901,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5891,
									"end": 5923,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5886,
									"end": 5888,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5875,
									"end": 5884,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5871,
									"end": 5889,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5864,
									"end": 5924,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5452,
									"end": 5930,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 5452,
									"end": 5930,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 5452,
									"end": 5930,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5452,
									"end": 5930,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5452,
									"end": 5930,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5452,
									"end": 5930,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5452,
									"end": 5930,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7541,
									"end": 7763,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 7541,
									"end": 7763,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7606,
									"end": 7615,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7606,
									"end": 7615,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7606,
									"end": 7615,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7627,
									"end": 7637,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7627,
									"end": 7637,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7627,
									"end": 7637,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 7624,
									"end": 7757,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7624,
									"end": 7757,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 7624,
									"end": 7757,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7679,
									"end": 7689,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 7674,
									"end": 7677,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 7670,
									"end": 7690,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7667,
									"end": 7668,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7660,
									"end": 7691,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7714,
									"end": 7718,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7711,
									"end": 7712,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7704,
									"end": 7719,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7742,
									"end": 7746,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 7739,
									"end": 7740,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7732,
									"end": 7747,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7624,
									"end": 7757,
									"name": "tag",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 7624,
									"end": 7757,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7541,
									"end": 7763,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7541,
									"end": 7763,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7541,
									"end": 7763,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7541,
									"end": 7763,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7541,
									"end": 7763,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7768,
									"end": 7945,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 7768,
									"end": 7945,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 27760,
									"end": 30046,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27760,
									"end": 30046,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27760,
									"end": 30046,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27760,
									"end": 30046,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27760,
									"end": 30046,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27760,
									"end": 30046,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27760,
									"end": 30046,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27760,
									"end": 30046,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "821"
								},
								{
									"begin": 27760,
									"end": 30046,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27760,
									"end": 30046,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27760,
									"end": 30046,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122012659be5dcbcb543bbd069a8d4751a0da57e397e950fbd65807c6bdc821fb52864736f6c634300081a0033",
									".code": [
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "B7BDA68F"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "B7BDA68F"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "C283CD12"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "C6D205FA"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "A1883D26"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "B7600F7A"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "26789993"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 30046,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 10711,
											"end": 10811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 10711,
											"end": 10811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 13062,
											"end": 13263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 13062,
											"end": 13263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1100,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 920,
											"end": 1107,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11831,
											"end": 11939,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11831,
											"end": 11939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11919,
											"end": 11931,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11919,
											"end": 11931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11831,
											"end": 11939,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 11831,
											"end": 11939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11831,
											"end": 11939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11831,
											"end": 11939,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11831,
											"end": 11939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29686,
											"end": 29906,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29686,
											"end": 29906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29686,
											"end": 29906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 29686,
											"end": 29906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 29686,
											"end": 29906,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29686,
											"end": 29906,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29686,
											"end": 29906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 29686,
											"end": 29906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29686,
											"end": 29906,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 29686,
											"end": 29906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29686,
											"end": 29906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 29686,
											"end": 29906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29374,
											"end": 29512,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29374,
											"end": 29512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29374,
											"end": 29512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 29374,
											"end": 29512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 29374,
											"end": 29512,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29374,
											"end": 29512,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29374,
											"end": 29512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 29374,
											"end": 29512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29374,
											"end": 29512,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 29374,
											"end": 29512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29374,
											"end": 29512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 29374,
											"end": 29512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29374,
											"end": 29512,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 29374,
											"end": 29512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29374,
											"end": 29512,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29914,
											"end": 30043,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 29914,
											"end": 30043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29914,
											"end": 30043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29914,
											"end": 30043,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2201,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 22484,
											"end": 22493,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "821"
										},
										{
											"begin": 2185,
											"end": 2202,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2203,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2140,
											"end": 2158,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29914,
											"end": 30043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2025,
											"end": 2209,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14547,
											"end": 14785,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 14547,
											"end": 14785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14547,
											"end": 14785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 14547,
											"end": 14785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 14547,
											"end": 14785,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14547,
											"end": 14785,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14547,
											"end": 14785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14547,
											"end": 14785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14547,
											"end": 14785,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 14547,
											"end": 14785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14547,
											"end": 14785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14547,
											"end": 14785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12002,
											"end": 12129,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 12002,
											"end": 12129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12002,
											"end": 12129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 12002,
											"end": 12129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 12002,
											"end": 12129,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12002,
											"end": 12129,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12002,
											"end": 12129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 12002,
											"end": 12129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12002,
											"end": 12129,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 12002,
											"end": 12129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12103,
											"end": 12121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12076,
											"end": 12083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12103,
											"end": 12121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12121,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12121,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12103,
											"end": 12121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12121,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12103,
											"end": 12121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12121,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12121,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12002,
											"end": 12129,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4140,
											"end": 4243,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4140,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4140,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4140,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4140,
											"end": 4243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3492,
											"end": 3579,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3492,
											"end": 3579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3571,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3565,
											"end": 3571,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3565,
											"end": 3571,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3492,
											"end": 3579,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3492,
											"end": 3579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3492,
											"end": 3579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3492,
											"end": 3579,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2569,
											"end": 2601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2601,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2601,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2602,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2602,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 2541,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2524,
											"end": 2542,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3492,
											"end": 3579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2405,
											"end": 2608,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10930,
											"end": 11034,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 10930,
											"end": 11034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10930,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 10930,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 10930,
											"end": 11034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29053,
											"end": 29158,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 29053,
											"end": 29158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29053,
											"end": 29158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 29053,
											"end": 29158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 29053,
											"end": 29158,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29053,
											"end": 29158,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29053,
											"end": 29158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 29053,
											"end": 29158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29053,
											"end": 29158,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 29053,
											"end": 29158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29053,
											"end": 29158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 29053,
											"end": 29158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15288,
											"end": 15724,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 15288,
											"end": 15724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15288,
											"end": 15724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 15288,
											"end": 15724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 15288,
											"end": 15724,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15288,
											"end": 15724,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15288,
											"end": 15724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 15288,
											"end": 15724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15288,
											"end": 15724,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 15288,
											"end": 15724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15288,
											"end": 15724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 15288,
											"end": 15724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29520,
											"end": 29678,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 29520,
											"end": 29678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29520,
											"end": 29678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 29520,
											"end": 29678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 29520,
											"end": 29678,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29520,
											"end": 29678,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29520,
											"end": 29678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 29520,
											"end": 29678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29520,
											"end": 29678,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 29520,
											"end": 29678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29520,
											"end": 29678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 29520,
											"end": 29678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28706,
											"end": 28820,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 28706,
											"end": 28820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28706,
											"end": 28820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 28706,
											"end": 28820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 28706,
											"end": 28820,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28706,
											"end": 28820,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28706,
											"end": 28820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 28706,
											"end": 28820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28706,
											"end": 28820,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 28706,
											"end": 28820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28706,
											"end": 28820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 28706,
											"end": 28820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25550,
											"end": 25639,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 25550,
											"end": 25639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 25631,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25620,
											"end": 25631,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25620,
											"end": 25631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25550,
											"end": 25639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 25550,
											"end": 25639,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25754,
											"end": 25884,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 25754,
											"end": 25884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25754,
											"end": 25884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 25754,
											"end": 25884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 25754,
											"end": 25884,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25754,
											"end": 25884,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25754,
											"end": 25884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 25754,
											"end": 25884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25754,
											"end": 25884,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 25754,
											"end": 25884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25846,
											"end": 25876,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25822,
											"end": 25826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25846,
											"end": 25876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25846,
											"end": 25876,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25846,
											"end": 25876,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25846,
											"end": 25867,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 25846,
											"end": 25876,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25846,
											"end": 25876,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25846,
											"end": 25876,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25846,
											"end": 25876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25846,
											"end": 25876,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25846,
											"end": 25876,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25846,
											"end": 25876,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 25846,
											"end": 25876,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25846,
											"end": 25876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25754,
											"end": 25884,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25384,
											"end": 25474,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25384,
											"end": 25474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25458,
											"end": 25466,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25458,
											"end": 25466,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25384,
											"end": 25474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 25384,
											"end": 25474,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12591,
											"end": 12742,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 12591,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12591,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 12591,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 12591,
											"end": 12742,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12591,
											"end": 12742,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12591,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 12591,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12591,
											"end": 12742,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 12591,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12591,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 12591,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4398,
											"end": 4599,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4398,
											"end": 4599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4398,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4398,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4398,
											"end": 4599,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4398,
											"end": 4599,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4398,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4398,
											"end": 4599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4398,
											"end": 4599,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4398,
											"end": 4599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4398,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4398,
											"end": 4599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10765,
											"end": 10778,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10798,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 10791,
											"end": 10803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 10791,
											"end": 10803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10711,
											"end": 10811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13145,
											"end": 13149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2135,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13201,
											"end": 13233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2125,
											"end": 2135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13217,
											"end": 13224,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13226,
											"end": 13232,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13201,
											"end": 13209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 13201,
											"end": 13233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13201,
											"end": 13233,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 13201,
											"end": 13233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13251,
											"end": 13255,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13244,
											"end": 13255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29686,
											"end": 29906,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 29686,
											"end": 29906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29838,
											"end": 29842,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29862,
											"end": 29898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 29881,
											"end": 29885,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29887,
											"end": 29889,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29891,
											"end": 29897,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29862,
											"end": 29880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 29862,
											"end": 29898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29862,
											"end": 29898,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 29862,
											"end": 29898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29855,
											"end": 29898,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 29686,
											"end": 29906,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29686,
											"end": 29906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29374,
											"end": 29512,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 29374,
											"end": 29512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3378,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 3378,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3378,
											"end": 3391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3378,
											"end": 3391,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 3378,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27005,
											"end": 27036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27005,
											"end": 27036,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27005,
											"end": 27036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27005,
											"end": 27036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27005,
											"end": 27036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27005,
											"end": 27036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27005,
											"end": 27026,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 27005,
											"end": 27036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27005,
											"end": 27036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27005,
											"end": 27036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27005,
											"end": 27036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27005,
											"end": 27036,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27005,
											"end": 27046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27005,
											"end": 27046,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 27005,
											"end": 27046,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27005,
											"end": 27046,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27005,
											"end": 27046,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27005,
											"end": 27046,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27005,
											"end": 27046,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 27005,
											"end": 27046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27005,
											"end": 27046,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29374,
											"end": 29512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29374,
											"end": 29512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29374,
											"end": 29512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14547,
											"end": 14785,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14547,
											"end": 14785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14635,
											"end": 14639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2135,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14691,
											"end": 14755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2125,
											"end": 2135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14714,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14744,
											"end": 14754,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14716,
											"end": 14741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2125,
											"end": 2135,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14714,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14716,
											"end": 14725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 14716,
											"end": 14741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14716,
											"end": 14741,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 14716,
											"end": 14741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14716,
											"end": 14754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 14716,
											"end": 14754,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14716,
											"end": 14754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14716,
											"end": 14754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 14716,
											"end": 14754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14716,
											"end": 14754,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 14716,
											"end": 14754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14691,
											"end": 14699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 14691,
											"end": 14755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4140,
											"end": 4243,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4140,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3378,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3378,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3378,
											"end": 3391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3378,
											"end": 3391,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3378,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4205,
											"end": 4235,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4232,
											"end": 4233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4205,
											"end": 4223,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4205,
											"end": 4235,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4205,
											"end": 4235,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4205,
											"end": 4235,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4140,
											"end": 4243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10930,
											"end": 11034,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 10930,
											"end": 11034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10986,
											"end": 10999,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11019,
											"end": 11026,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11012,
											"end": 11026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11012,
											"end": 11026,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11012,
											"end": 11026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 11012,
											"end": 11026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11012,
											"end": 11026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 11012,
											"end": 11026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29053,
											"end": 29158,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 29053,
											"end": 29158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3378,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3378,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3378,
											"end": 3391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3378,
											"end": 3391,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3378,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29124,
											"end": 29150,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 29139,
											"end": 29149,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29124,
											"end": 29138,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 29124,
											"end": 29150,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29124,
											"end": 29150,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 29124,
											"end": 29150,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29053,
											"end": 29158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29053,
											"end": 29158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15288,
											"end": 15724,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 15288,
											"end": 15724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15381,
											"end": 15385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2135,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15381,
											"end": 15385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15464,
											"end": 15489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2125,
											"end": 2135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15488,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15464,
											"end": 15473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 15464,
											"end": 15489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15464,
											"end": 15489,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 15464,
											"end": 15489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15437,
											"end": 15489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15437,
											"end": 15489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15528,
											"end": 15543,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15508,
											"end": 15524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15508,
											"end": 15543,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15508,
											"end": 15543,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3958,
											"end": 3960,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3940,
											"end": 3961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3997,
											"end": 3999,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3970,
											"end": 4000,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4036,
											"end": 4070,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4016,
											"end": 4034,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4016,
											"end": 4034,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4009,
											"end": 4071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4087,
											"end": 4105,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4087,
											"end": 4105,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4105,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4080,
											"end": 4115,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4151,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4132,
											"end": 4151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 15500,
											"end": 15585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15621,
											"end": 15681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 15630,
											"end": 15635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15637,
											"end": 15644,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15665,
											"end": 15680,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15646,
											"end": 15662,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15646,
											"end": 15680,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15621,
											"end": 15629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 15621,
											"end": 15681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15621,
											"end": 15681,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 15621,
											"end": 15681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15712,
											"end": 15716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15712,
											"end": 15716,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15288,
											"end": 15724,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15288,
											"end": 15724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29520,
											"end": 29678,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 29520,
											"end": 29678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29620,
											"end": 29624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29644,
											"end": 29670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 29659,
											"end": 29661,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 29669,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29644,
											"end": 29658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 29644,
											"end": 29670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29644,
											"end": 29670,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 29644,
											"end": 29670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29637,
											"end": 29670,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 29520,
											"end": 29678,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29520,
											"end": 29678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28706,
											"end": 28820,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 28706,
											"end": 28820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3378,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3378,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3378,
											"end": 3391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3378,
											"end": 3391,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3378,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28785,
											"end": 28812,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 28797,
											"end": 28811,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28785,
											"end": 28796,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 28785,
											"end": 28812,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12591,
											"end": 12742,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 12591,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12707,
											"end": 12725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12707,
											"end": 12725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12718,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12707,
											"end": 12725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12707,
											"end": 12725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12707,
											"end": 12725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12734,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12734,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12734,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12734,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12734,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12591,
											"end": 12742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4398,
											"end": 4599,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4398,
											"end": 4599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3378,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 3378,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3378,
											"end": 3391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3378,
											"end": 3391,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 3378,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4487,
											"end": 4509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4487,
											"end": 4509,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4479,
											"end": 4552,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 4479,
											"end": 4552,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4479,
											"end": 4552,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4479,
											"end": 4552,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4479,
											"end": 4552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4479,
											"end": 4552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4366,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4479,
											"end": 4552,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4479,
											"end": 4552,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4479,
											"end": 4552,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4346,
											"end": 4367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4403,
											"end": 4405,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4383,
											"end": 4401,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4383,
											"end": 4401,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4383,
											"end": 4401,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4376,
											"end": 4406,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4476,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 4422,
											"end": 4440,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4422,
											"end": 4440,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4422,
											"end": 4440,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4415,
											"end": 4477,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4493,
											"end": 4511,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4493,
											"end": 4511,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4493,
											"end": 4511,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4486,
											"end": 4522,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4539,
											"end": 4558,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4539,
											"end": 4558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4479,
											"end": 4552,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 4162,
											"end": 4564,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4479,
											"end": 4552,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 4479,
											"end": 4552,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4563,
											"end": 4591,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 4582,
											"end": 4590,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4563,
											"end": 4581,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4563,
											"end": 4591,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19315,
											"end": 19695,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 19315,
											"end": 19695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19451,
											"end": 19470,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19451,
											"end": 19470,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19443,
											"end": 19511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 19443,
											"end": 19511,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19443,
											"end": 19511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19443,
											"end": 19511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19443,
											"end": 19511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19443,
											"end": 19511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4771,
											"end": 4773,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19443,
											"end": 19511,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19443,
											"end": 19511,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19443,
											"end": 19511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4753,
											"end": 4774,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4812,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4790,
											"end": 4808,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4808,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4883,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4829,
											"end": 4847,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4829,
											"end": 4847,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4829,
											"end": 4847,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4893,
											"end": 4927,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4944,
											"end": 4963,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4944,
											"end": 4963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19443,
											"end": 19511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 4569,
											"end": 4969,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19443,
											"end": 19511,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 19443,
											"end": 19511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19530,
											"end": 19551,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19530,
											"end": 19551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19522,
											"end": 19590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 19522,
											"end": 19590,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19522,
											"end": 19590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19522,
											"end": 19590,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19522,
											"end": 19590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19522,
											"end": 19590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5176,
											"end": 5178,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19522,
											"end": 19590,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19522,
											"end": 19590,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19522,
											"end": 19590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5179,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5217,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5195,
											"end": 5213,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5195,
											"end": 5213,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5195,
											"end": 5213,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5218,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5288,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 5234,
											"end": 5252,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5234,
											"end": 5252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5234,
											"end": 5252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5227,
											"end": 5289,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5305,
											"end": 5323,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5305,
											"end": 5323,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5305,
											"end": 5323,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5298,
											"end": 5330,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5347,
											"end": 5366,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5347,
											"end": 5366,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19522,
											"end": 19590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 4974,
											"end": 5372,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19522,
											"end": 19590,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 19522,
											"end": 19590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19603,
											"end": 19621,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19621,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19621,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19603,
											"end": 19621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19621,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19614,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19603,
											"end": 19621,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19603,
											"end": 19621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19621,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19603,
											"end": 19621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19621,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19621,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19630,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19630,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19630,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19630,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19630,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19630,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19630,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19630,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19639,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19639,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19655,
											"end": 19687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19655,
											"end": 19687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19655,
											"end": 19687,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 19655,
											"end": 19687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19655,
											"end": 19687,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19655,
											"end": 19687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19655,
											"end": 19687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19655,
											"end": 19687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19655,
											"end": 19687,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19655,
											"end": 19687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19655,
											"end": 19687,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 19315,
											"end": 19695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19315,
											"end": 19695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19315,
											"end": 19695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19315,
											"end": 19695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24561,
											"end": 25191,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 24561,
											"end": 25191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24658,
											"end": 24662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2135,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24716,
											"end": 24754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 24732,
											"end": 24736,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24747,
											"end": 24753,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24716,
											"end": 24731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 24716,
											"end": 24754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24716,
											"end": 24754,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 24716,
											"end": 24754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24782,
											"end": 24783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24771,
											"end": 24779,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24771,
											"end": 24779,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24771,
											"end": 24783,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24771,
											"end": 24846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24771,
											"end": 24846,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24771,
											"end": 24846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 24771,
											"end": 24846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24789,
											"end": 24816,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24789,
											"end": 24816,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24789,
											"end": 24816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24789,
											"end": 24816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24789,
											"end": 24816,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24789,
											"end": 24816,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24789,
											"end": 24810,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24789,
											"end": 24816,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24789,
											"end": 24816,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24789,
											"end": 24816,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24789,
											"end": 24816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24789,
											"end": 24816,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24789,
											"end": 24816,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24789,
											"end": 24816,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 24789,
											"end": 24816,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24789,
											"end": 24816,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24789,
											"end": 24845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 24789,
											"end": 24845,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24820,
											"end": 24845,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24820,
											"end": 24845,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24820,
											"end": 24845,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24820,
											"end": 24845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24820,
											"end": 24845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24820,
											"end": 24845,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24820,
											"end": 24841,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24820,
											"end": 24845,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24820,
											"end": 24845,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24820,
											"end": 24845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24820,
											"end": 24845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24820,
											"end": 24845,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24820,
											"end": 24845,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24820,
											"end": 24845,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 24820,
											"end": 24845,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24789,
											"end": 24845,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 24789,
											"end": 24845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24787,
											"end": 24846,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24771,
											"end": 24846,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 24771,
											"end": 24846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24767,
											"end": 25120,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24767,
											"end": 25120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 24767,
											"end": 25120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24863,
											"end": 24880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24905,
											"end": 24909,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 24893,
											"end": 24901,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24893,
											"end": 24901,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 24890,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 24901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 24884,
											"end": 24901,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 24901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 24901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 24884,
											"end": 24901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 24901,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 24884,
											"end": 24901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24883,
											"end": 24909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 24883,
											"end": 24909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24883,
											"end": 24909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24883,
											"end": 24909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 24883,
											"end": 24909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24883,
											"end": 24909,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 24883,
											"end": 24909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24863,
											"end": 24909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24930,
											"end": 24943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24930,
											"end": 24943,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24926,
											"end": 25109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 24926,
											"end": 25109,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 24991,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24980,
											"end": 24991,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24964,
											"end": 25003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 24964,
											"end": 25003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24974,
											"end": 24978,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 24974,
											"end": 24978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24980,
											"end": 24991,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24993,
											"end": 25002,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24964,
											"end": 24973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 24964,
											"end": 25003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24964,
											"end": 25003,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 24964,
											"end": 25003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25065,
											"end": 25074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25055,
											"end": 25074,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25055,
											"end": 25074,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25055,
											"end": 25074,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25055,
											"end": 25074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24926,
											"end": 25109,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 24926,
											"end": 25109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24848,
											"end": 25120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24767,
											"end": 25120,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 24767,
											"end": 25120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25132,
											"end": 25159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 25142,
											"end": 25146,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25148,
											"end": 25150,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25152,
											"end": 25158,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25132,
											"end": 25141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 25132,
											"end": 25159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3789,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3657,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3571,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3565,
											"end": 3571,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3565,
											"end": 3571,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2135,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3721,
											"end": 3744,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3713,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 3713,
											"end": 3781,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3713,
											"end": 3781,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3713,
											"end": 3781,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3713,
											"end": 3781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3713,
											"end": 3781,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5974,
											"end": 5976,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3713,
											"end": 3781,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3713,
											"end": 3781,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3713,
											"end": 3781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5956,
											"end": 5977,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5977,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5993,
											"end": 6011,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5993,
											"end": 6011,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5993,
											"end": 6011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5986,
											"end": 6016,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6052,
											"end": 6086,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 6032,
											"end": 6050,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6032,
											"end": 6050,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6032,
											"end": 6050,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6025,
											"end": 6087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6104,
											"end": 6122,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6104,
											"end": 6122,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5772,
											"end": 6128,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 4858,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4852,
											"end": 4858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 4858,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4869,
											"end": 4886,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4869,
											"end": 4886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4869,
											"end": 4886,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4869,
											"end": 4886,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4869,
											"end": 4886,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4869,
											"end": 4886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4869,
											"end": 4886,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4869,
											"end": 4886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4869,
											"end": 4886,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4869,
											"end": 4886,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4902,
											"end": 4942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4942,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 4858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 4858,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 4858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4869,
											"end": 4886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 4858,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 4858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4902,
											"end": 4942,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 4902,
											"end": 4942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4833,
											"end": 4849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4902,
											"end": 4942,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 4822,
											"end": 4950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26470,
											"end": 26679,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 26470,
											"end": 26679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26551,
											"end": 26576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26551,
											"end": 26576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26543,
											"end": 26633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 26543,
											"end": 26633,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26543,
											"end": 26633,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26543,
											"end": 26633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26543,
											"end": 26633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26543,
											"end": 26633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6335,
											"end": 6337,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26543,
											"end": 26633,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26543,
											"end": 26633,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26543,
											"end": 26633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6317,
											"end": 6338,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6376,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 6354,
											"end": 6372,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6354,
											"end": 6372,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6354,
											"end": 6372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6447,
											"name": "PUSH",
											"source": 1,
											"value": "455243323054617861626C653A20746178416464726573735F2063616E6E6F74"
										},
										{
											"begin": 6393,
											"end": 6411,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6393,
											"end": 6411,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6393,
											"end": 6411,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20626520746865207A65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6464,
											"end": 6482,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6464,
											"end": 6482,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6464,
											"end": 6482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6524,
											"end": 6543,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6524,
											"end": 6543,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26543,
											"end": 26633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6133,
											"end": 6549,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26543,
											"end": 26633,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 26543,
											"end": 26633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26646,
											"end": 26657,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26646,
											"end": 26671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26646,
											"end": 26671,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 26646,
											"end": 26671,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26646,
											"end": 26671,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26646,
											"end": 26671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26646,
											"end": 26671,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26646,
											"end": 26671,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26646,
											"end": 26671,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26646,
											"end": 26671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26646,
											"end": 26671,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26646,
											"end": 26671,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 26646,
											"end": 26671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26646,
											"end": 26671,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26470,
											"end": 26679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23520,
											"end": 24084,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 23520,
											"end": 24084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23661,
											"end": 23669,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23661,
											"end": 23669,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23599,
											"end": 23603,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23599,
											"end": 23603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2135,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23661,
											"end": 23673,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23661,
											"end": 23673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23661,
											"end": 23673,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23661,
											"end": 23673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23661,
											"end": 23737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 23661,
											"end": 23737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23679,
											"end": 23707,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23679,
											"end": 23707,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23679,
											"end": 23707,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23679,
											"end": 23707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23679,
											"end": 23707,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23679,
											"end": 23707,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23679,
											"end": 23700,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 23679,
											"end": 23707,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23679,
											"end": 23707,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23679,
											"end": 23707,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23679,
											"end": 23707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23679,
											"end": 23707,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23679,
											"end": 23707,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23679,
											"end": 23707,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 23679,
											"end": 23707,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23679,
											"end": 23707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23679,
											"end": 23736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 23679,
											"end": 23736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23711,
											"end": 23736,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23711,
											"end": 23736,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23711,
											"end": 23736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23711,
											"end": 23736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23711,
											"end": 23736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23711,
											"end": 23736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23711,
											"end": 23732,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 23711,
											"end": 23736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23711,
											"end": 23736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23711,
											"end": 23736,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23711,
											"end": 23736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23711,
											"end": 23736,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23711,
											"end": 23736,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23711,
											"end": 23736,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 23711,
											"end": 23736,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23679,
											"end": 23736,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 23679,
											"end": 23736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23677,
											"end": 23737,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23661,
											"end": 23737,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 23661,
											"end": 23737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 24012,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 24012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 23657,
											"end": 24012,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23796,
											"end": 23800,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 23784,
											"end": 23792,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23784,
											"end": 23792,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23775,
											"end": 23781,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23775,
											"end": 23792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 23775,
											"end": 23792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23775,
											"end": 23792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23775,
											"end": 23792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 23775,
											"end": 23792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23775,
											"end": 23792,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 23775,
											"end": 23792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23774,
											"end": 23800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 23774,
											"end": 23800,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23774,
											"end": 23800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23774,
											"end": 23800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 23774,
											"end": 23800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23774,
											"end": 23800,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 23774,
											"end": 23800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23821,
											"end": 23834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23821,
											"end": 23834,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23817,
											"end": 24001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 23817,
											"end": 24001,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23872,
											"end": 23883,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 23872,
											"end": 23883,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23855,
											"end": 23895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 23855,
											"end": 23895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23865,
											"end": 23870,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23865,
											"end": 23870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23872,
											"end": 23883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23885,
											"end": 23894,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23855,
											"end": 23864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 23855,
											"end": 23895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23855,
											"end": 23895,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 23855,
											"end": 23895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23957,
											"end": 23966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23947,
											"end": 23966,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23947,
											"end": 23966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23947,
											"end": 23966,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23947,
											"end": 23966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23817,
											"end": 24001,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 23817,
											"end": 24001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 24012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 24012,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 23657,
											"end": 24012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24024,
											"end": 24052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 24034,
											"end": 24039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24041,
											"end": 24043,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24045,
											"end": 24051,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24024,
											"end": 24033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 24024,
											"end": 24052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26073,
											"end": 26281,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 26073,
											"end": 26281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26173,
											"end": 26177,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 26155,
											"end": 26170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26155,
											"end": 26177,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 26147,
											"end": 26234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26147,
											"end": 26234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26147,
											"end": 26234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6756,
											"end": 6758,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26147,
											"end": 26234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26147,
											"end": 26234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6738,
											"end": 6759,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6795,
											"end": 6797,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 6775,
											"end": 6793,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6775,
											"end": 6793,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6775,
											"end": 6793,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6798,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6868,
											"name": "PUSH",
											"source": 1,
											"value": "455243323054617861626C653A207461784665655065724D696C6C655F206D75"
										},
										{
											"begin": 6814,
											"end": 6832,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6814,
											"end": 6832,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6814,
											"end": 6832,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6807,
											"end": 6869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7374206265206C657373207468616E203130303"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "64"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6885,
											"end": 6903,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6885,
											"end": 6903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6885,
											"end": 6903,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6878,
											"end": 6928,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6964,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6945,
											"end": 6964,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26147,
											"end": 26234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6554,
											"end": 6970,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26147,
											"end": 26234,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 26147,
											"end": 26234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26247,
											"end": 26255,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26247,
											"end": 26273,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26073,
											"end": 26281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19986,
											"end": 20439,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 19986,
											"end": 20439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20121,
											"end": 20145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20148,
											"end": 20173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 20158,
											"end": 20163,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20165,
											"end": 20172,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20148,
											"end": 20157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 20148,
											"end": 20173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20148,
											"end": 20173,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 20148,
											"end": 20173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20121,
											"end": 20173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20121,
											"end": 20173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20188,
											"end": 20204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20225,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 20184,
											"end": 20432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20270,
											"end": 20276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20250,
											"end": 20266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20250,
											"end": 20276,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20250,
											"end": 20276,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20242,
											"end": 20310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 20242,
											"end": 20310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20242,
											"end": 20310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20242,
											"end": 20310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20242,
											"end": 20310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20242,
											"end": 20310,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7177,
											"end": 7179,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20242,
											"end": 20310,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20242,
											"end": 20310,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20242,
											"end": 20310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7159,
											"end": 7180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7216,
											"end": 7218,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 7196,
											"end": 7214,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7196,
											"end": 7214,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7196,
											"end": 7214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7219,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7255,
											"end": 7286,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 7235,
											"end": 7253,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7235,
											"end": 7253,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7235,
											"end": 7253,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7228,
											"end": 7287,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7304,
											"end": 7322,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7304,
											"end": 7322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20242,
											"end": 20310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6975,
											"end": 7328,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20242,
											"end": 20310,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 20242,
											"end": 20310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20354,
											"end": 20405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 20363,
											"end": 20368,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20370,
											"end": 20377,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20398,
											"end": 20404,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20379,
											"end": 20395,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20379,
											"end": 20404,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20354,
											"end": 20362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 20354,
											"end": 20405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20354,
											"end": 20405,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 20354,
											"end": 20405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20110,
											"end": 20439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19986,
											"end": 20439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19986,
											"end": 20439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19986,
											"end": 20439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19986,
											"end": 20439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16194,
											"end": 17034,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 16194,
											"end": 17034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16325,
											"end": 16343,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16325,
											"end": 16343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16317,
											"end": 16385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 16317,
											"end": 16385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16317,
											"end": 16385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16317,
											"end": 16385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16317,
											"end": 16385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16317,
											"end": 16385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7535,
											"end": 7537,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16317,
											"end": 16385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16317,
											"end": 16385,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16317,
											"end": 16385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7517,
											"end": 7538,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7574,
											"end": 7576,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 7554,
											"end": 7572,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7554,
											"end": 7572,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7554,
											"end": 7572,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7547,
											"end": 7577,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7613,
											"end": 7647,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7586,
											"end": 7648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7664,
											"end": 7682,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7664,
											"end": 7682,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7682,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 7692,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7709,
											"end": 7728,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7709,
											"end": 7728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16317,
											"end": 16385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7333,
											"end": 7734,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16317,
											"end": 16385,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 16317,
											"end": 16385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16404,
											"end": 16420,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16420,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16396,
											"end": 16460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 16396,
											"end": 16460,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16396,
											"end": 16460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16396,
											"end": 16460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16396,
											"end": 16460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16396,
											"end": 16460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7941,
											"end": 7943,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16396,
											"end": 16460,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16396,
											"end": 16460,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16396,
											"end": 16460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7923,
											"end": 7944,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7980,
											"end": 7982,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7953,
											"end": 7983,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8019,
											"end": 8053,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 7999,
											"end": 8017,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7999,
											"end": 8017,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7999,
											"end": 8017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7992,
											"end": 8054,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8070,
											"end": 8088,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8070,
											"end": 8088,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8070,
											"end": 8088,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8063,
											"end": 8096,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8113,
											"end": 8132,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8113,
											"end": 8132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16396,
											"end": 16460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7739,
											"end": 8138,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16396,
											"end": 16460,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 16396,
											"end": 16460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16546,
											"end": 16561,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16546,
											"end": 16561,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16546,
											"end": 16561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16546,
											"end": 16561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16546,
											"end": 16561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16546,
											"end": 16561,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16546,
											"end": 16561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16546,
											"end": 16561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16546,
											"end": 16561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16546,
											"end": 16561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16546,
											"end": 16561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16546,
											"end": 16561,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16546,
											"end": 16561,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16580,
											"end": 16601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16580,
											"end": 16601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16580,
											"end": 16601,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16580,
											"end": 16601,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16572,
											"end": 16644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 16572,
											"end": 16644,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16572,
											"end": 16644,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16572,
											"end": 16644,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16572,
											"end": 16644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16572,
											"end": 16644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8345,
											"end": 8347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16572,
											"end": 16644,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16572,
											"end": 16644,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16572,
											"end": 16644,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8348,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8384,
											"end": 8386,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 8364,
											"end": 8382,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8364,
											"end": 8382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8364,
											"end": 8382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8357,
											"end": 8387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8423,
											"end": 8457,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 8403,
											"end": 8421,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8403,
											"end": 8421,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8403,
											"end": 8421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8396,
											"end": 8458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8474,
											"end": 8492,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8474,
											"end": 8492,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8474,
											"end": 8492,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8467,
											"end": 8503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8520,
											"end": 8539,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8520,
											"end": 8539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16572,
											"end": 16644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 8143,
											"end": 8545,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16572,
											"end": 16644,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 16572,
											"end": 16644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16680,
											"end": 16695,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16680,
											"end": 16695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16695,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16680,
											"end": 16695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16680,
											"end": 16695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16695,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16695,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16698,
											"end": 16718,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16698,
											"end": 16718,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16698,
											"end": 16718,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16718,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16911,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16911,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16911,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16911,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16911,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16911,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16911,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16911,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16911,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16921,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16921,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16921,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16950,
											"end": 16976,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16950,
											"end": 16976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16898,
											"end": 16911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 16911,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16950,
											"end": 16976,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 16950,
											"end": 16976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16950,
											"end": 16976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16950,
											"end": 16976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16950,
											"end": 16976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16950,
											"end": 16976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16950,
											"end": 16976,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16950,
											"end": 16976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16950,
											"end": 16976,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 16989,
											"end": 17026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 21039,
											"end": 21164,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 437,
											"end": 610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 505,
											"end": 525,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 544,
											"end": 586,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 534,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 590,
											"end": 602,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 534,
											"end": 604,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 915,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 615,
											"end": 915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 683,
											"end": 689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 697,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 741,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 723,
											"end": 730,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 719,
											"end": 742,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 715,
											"end": 747,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 712,
											"end": 764,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 712,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 760,
											"end": 761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 750,
											"end": 762,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 712,
											"end": 764,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 783,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 783,
											"end": 812,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 783,
											"end": 812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 881,
											"end": 883,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 866,
											"end": 884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 853,
											"end": 885,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 853,
											"end": 885,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 615,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1442,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1426,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1443,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 1479,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 1561,
											"end": 1563,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1559,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1564,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 1527,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1634,
											"end": 1636,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 2020,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1673,
											"end": 2020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1744,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1799,
											"end": 1801,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1787,
											"end": 1796,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1785,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1774,
											"end": 1797,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1770,
											"end": 1802,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1819,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 1767,
											"end": 1819,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1812,
											"end": 1813,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1817,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1819,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 1767,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 1857,
											"end": 1866,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 1838,
											"end": 1867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1867,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 1838,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1917,
											"end": 1919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1906,
											"end": 1915,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 1921,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 1969,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1957,
											"end": 1970,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1971,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 1948,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1972,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1930,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 1930,
											"end": 1990,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 1987,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 1984,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1988,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1930,
											"end": 1990,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 1930,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2014,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2014,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 2020,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 2020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 2020,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 2020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 2020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 2020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2400,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2214,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2326,
											"end": 2328,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2314,
											"end": 2323,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2312,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2301,
											"end": 2324,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2329,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2294,
											"end": 2346,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2294,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 2294,
											"end": 2346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2342,
											"end": 2343,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2340,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2344,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2294,
											"end": 2346,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 2294,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2384,
											"end": 2393,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2365,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2839,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2613,
											"end": 2839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2725,
											"end": 2727,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2713,
											"end": 2722,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2711,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2696,
											"end": 2728,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2745,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 2693,
											"end": 2745,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2738,
											"end": 2739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 2743,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2745,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 2693,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2786,
											"end": 2809,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2809,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2613,
											"end": 2839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 3104,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2844,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 2918,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2920,
											"end": 2926,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2973,
											"end": 2975,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2961,
											"end": 2970,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2952,
											"end": 2959,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2948,
											"end": 2971,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2944,
											"end": 2976,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2993,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 2941,
											"end": 2993,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 2990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2986,
											"end": 2987,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 2991,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2993,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 2941,
											"end": 2993,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3012,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 3031,
											"end": 3040,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3012,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 3012,
											"end": 3041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3012,
											"end": 3041,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 3012,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3041,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3060,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 3094,
											"end": 3096,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3083,
											"end": 3092,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3060,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 3060,
											"end": 3098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3060,
											"end": 3098,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 3060,
											"end": 3098,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3098,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 3104,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 3104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 3104,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 3104,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 3104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 3104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3489,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3109,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3189,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3184,
											"end": 3196,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3184,
											"end": 3196,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3184,
											"end": 3196,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 3184,
											"end": 3196,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3243,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3243,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3243,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 3252,
											"end": 3313,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3306,
											"end": 3310,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 3298,
											"end": 3304,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3311,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3284,
											"end": 3311,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3284,
											"end": 3311,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3313,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 3252,
											"end": 3313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3361,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3351,
											"end": 3357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3348,
											"end": 3362,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3363,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 3322,
											"end": 3483,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3400,
											"end": 3403,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3386,
											"end": 3417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3444,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3437,
											"end": 3438,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3430,
											"end": 3445,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3472,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3465,
											"end": 3466,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3458,
											"end": 3473,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3483,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 3322,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3489,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3555,
											"end": 3565,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3550,
											"end": 3553,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3546,
											"end": 3566,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3543,
											"end": 3544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3586,
											"end": 3590,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3583,
											"end": 3584,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3576,
											"end": 3591,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3614,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3607,
											"end": 3608,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3626,
											"end": 3751,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3626,
											"end": 3751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 3700,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 3700,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 3700,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3712,
											"end": 3722,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3712,
											"end": 3722,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3712,
											"end": 3722,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3745,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3709,
											"end": 3745,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3725,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3725,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 3725,
											"end": 3743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5377,
											"end": 5545,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 5377,
											"end": 5545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5450,
											"end": 5459,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5450,
											"end": 5459,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5450,
											"end": 5459,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5481,
											"end": 5490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5481,
											"end": 5490,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5513,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5513,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5513,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5492,
											"end": 5514,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5492,
											"end": 5514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5515,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5468,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5468,
											"end": 5539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5519,
											"end": 5537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5519,
											"end": 5537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 5519,
											"end": 5537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5767,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 5550,
											"end": 5767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5591,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5616,
											"end": 5617,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5606,
											"end": 5738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 5606,
											"end": 5738,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5670,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5655,
											"end": 5658,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5651,
											"end": 5671,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5649,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5641,
											"end": 5672,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5695,
											"end": 5699,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5692,
											"end": 5693,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5685,
											"end": 5700,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5723,
											"end": 5727,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5720,
											"end": 5721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5713,
											"end": 5728,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5606,
											"end": 5738,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 5606,
											"end": 5738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5752,
											"end": 5761,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5761,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"isExcludedFromTaxFee(address)": "c283cd12",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setExclusionFromTaxFee(address,bool)": "26789993",
							"setTaxAddress(address)": "a1883d26",
							"setTaxFeePerMille(uint256)": "b7600f7a",
							"symbol()": "95d89b41",
							"taxAddress()": "b7bda68f",
							"taxFeePerMille()": "c6d205fa",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"initialBalance_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"taxFeePerMille_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"taxAddress_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature_\",\"type\":\"bytes\"},{\"internalType\":\"address payable\",\"name\":\"feeReceiver_\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromTaxFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setExclusionFromTaxFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"taxAddress\",\"type\":\"address\"}],\"name\":\"setTaxAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"taxFeePerMille\",\"type\":\"uint256\"}],\"name\":\"setTaxFeePerMille\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxFeePerMille\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the TaxableERC20\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"isExcludedFromTaxFee(address)\":{\"details\":\"Returns the status of exclusion from tax fee mechanism for a given account.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setExclusionFromTaxFee(address,bool)\":{\"details\":\"Set the exclusion status from tax fee mechanism (both sending and receiving) NOTE: restricting access to owner only. See {ERC20Taxable-_setExclusionFromTaxFee}.\"},\"setTaxAddress(address)\":{\"details\":\"Set the address where to collect tax fee NOTE: restricting access to owner only. See {ERC20Taxable-_setTaxAddress}.\",\"params\":{\"taxAddress\":\"The deposit address for tax\"}},\"setTaxFeePerMille(uint256)\":{\"details\":\"Set the amount of tax fee per mille NOTE: restricting access to owner only. See {ERC20Taxable-_setTaxRate}.\",\"params\":{\"taxFeePerMille\":\"The amount of tax fee per mille\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"taxAddress()\":{\"details\":\"Returns the deposit address for tax.\"},\"taxFeePerMille()\":{\"details\":\"Returns the per mille rate for taxable mechanism. For each transfer the per mille amount will be calculated and moved to deposit address.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"TaxableERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":\"TaxableERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol\":{\"keccak256\":\"0xcf20f4f41b0c587c32b56938933f8fe893b8491fa35a9c0a9d4f13ce36cf2672\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2f45ff573b7ab5d707f978209dec7bd84dbead1e32764af7549cbf430ca1314\",\"dweb:/ipfs/QmdYjizBwTM6kgwcY8BKTHH7NdRyD5wkPUiKMymJxf4ot6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 244,
								"contract": "0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol:TaxableERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 250,
								"contract": "0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol:TaxableERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 252,
								"contract": "0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol:TaxableERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 254,
								"contract": "0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol:TaxableERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 256,
								"contract": "0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol:TaxableERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 848,
								"contract": "0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol:TaxableERC20",
								"label": "_taxRate",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 850,
								"contract": "0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol:TaxableERC20",
								"label": "_taxAddress",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 854,
								"contract": "0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol:TaxableERC20",
								"label": "_isExcludedFromTaxFee",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 27,
								"contract": "0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol:TaxableERC20",
								"label": "_owner",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol": {
				"ast": {
					"absolutePath": "0x7cec6f214afabc001b316c949d64cb0d0b18b652-TaxableERC20/TaxableERC20.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"ERC20": [
							815
						],
						"ERC20Decimals": [
							842
						],
						"ERC20Taxable": [
							1106
						],
						"IERC20": [
							209
						],
						"IERC20Metadata": [
							232
						],
						"IPayable": [
							1117
						],
						"Ownable": [
							132
						],
						"ServicePayer": [
							1143
						],
						"TaxableERC20": [
							1301
						]
					},
					"id": 1302,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1478:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "1505:505:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "2030:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "2107:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2125:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2129:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2125:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "2118:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "2054:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2064:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "2098:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2098:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2097:9:0"
									},
									"scope": 21,
									"src": "2045:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "2218:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2236:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2240:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "2236:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "2229:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "2160:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2168:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "2202:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2202:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:16:0"
									},
									"scope": 21,
									"src": "2151:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1302,
							"src": "2012:243:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 22,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "2388:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 24,
										"name": "Context",
										"nameLocations": [
											"2951:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "2951:7:0"
									},
									"id": 25,
									"nodeType": "InheritanceSpecifier",
									"src": "2951:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 23,
								"nodeType": "StructuredDocumentation",
								"src": "2415:505:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 132,
							"linearizedBaseContracts": [
								132,
								21
							],
							"name": "Ownable",
							"nameLocation": "2940:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "2982:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 132,
									"src": "2966:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 26,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2966:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 33,
									"name": "OwnershipTransferred",
									"nameLocation": "3003:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "3040:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "3024:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3024:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3071:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "3055:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3055:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3023:57:0"
									},
									"src": "2997:84:0"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "3202:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 38,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "3232:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3232:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 37,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "3213:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "3213:32:0"
											}
										]
									},
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "3089:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 43,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3199:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3202:0:0"
									},
									"scope": 132,
									"src": "3188:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "3367:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 46,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "3378:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3378:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "3378:13:0"
											},
											{
												"id": 49,
												"nodeType": "PlaceholderStatement",
												"src": "3402:1:0"
											}
										]
									},
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "3261:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 51,
									"name": "onlyOwner",
									"nameLocation": "3355:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3364:2:0"
									},
									"src": "3346:65:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "3547:32:0",
										"statements": [
											{
												"expression": {
													"id": 57,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "3565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 56,
												"id": 58,
												"nodeType": "Return",
												"src": "3558:13:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "3419:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "3501:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3506:2:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "3538:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3538:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3537:9:0"
									},
									"scope": 132,
									"src": "3492:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "3702:87:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 65,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "3721:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3721:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 67,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "3732:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3732:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3721:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3746:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 64,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3713:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3713:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "3713:68:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "3587:64:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "3666:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3677:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3702:0:0"
									},
									"scope": 132,
									"src": "3657:132:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "4194:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 83,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4232:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4224:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 81,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4224:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4224:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 80,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "4205:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4205:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "4205:30:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "3797:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 78,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 77,
												"name": "onlyOwner",
												"nameLocations": [
													"4184:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "4184:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4184:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "4149:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4166:2:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4194:0:0"
									},
									"scope": 132,
									"src": "4140:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4468:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 97,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "4487:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4507:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 99,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4499:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 98,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4499:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4499:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4487:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4511:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 96,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4479:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4479:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "4479:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "4582:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 106,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "4563:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4563:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "4563:28:0"
											}
										]
									},
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "4251:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 94,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 93,
												"name": "onlyOwner",
												"nameLocations": [
													"4458:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "4458:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4458:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "4407:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "4433:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4425:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4424:18:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4468:0:0"
									},
									"scope": 132,
									"src": "4398:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "4822:128:0",
										"statements": [
											{
												"assignments": [
													118
												],
												"declarations": [
													{
														"constant": false,
														"id": 118,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "4841:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 130,
														"src": "4833:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 117,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4833:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 120,
												"initialValue": {
													"id": 119,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "4852:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4833:25:0"
											},
											{
												"expression": {
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 121,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "4869:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 122,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "4878:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4869:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "4869:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 126,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "4923:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 127,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "4933:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 125,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "4902:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4902:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 129,
												"nodeType": "EmitStatement",
												"src": "4897:45:0"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "4607:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "4768:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "4795:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4787:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4787:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4786:18:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4822:0:0"
									},
									"scope": 132,
									"src": "4759:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1302,
							"src": "2922:2031:0",
							"usedErrors": [],
							"usedEvents": [
								33
							]
						},
						{
							"id": 133,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "5094:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 134,
								"nodeType": "StructuredDocumentation",
								"src": "5121:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 209,
							"linearizedBaseContracts": [
								209
							],
							"name": "IERC20",
							"nameLocation": "5205:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "5219:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 143,
									"name": "Transfer",
									"nameLocation": "5394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "5403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "5425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "5445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5402:57:0"
									},
									"src": "5388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "5468:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 152,
									"name": "Approval",
									"nameLocation": "5631:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5656:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "5640:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5640:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5679:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "5663:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5696:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "5688:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5688:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5639:63:0"
									},
									"src": "5625:78:0"
								},
								{
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "5711:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "5794:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5805:2:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5831:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5831:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5830:9:0"
									},
									"scope": 209,
									"src": "5785:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "5848:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "5937:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5955:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "5947:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5947:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5946:17:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "5987:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5987:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5986:9:0"
									},
									"scope": 209,
									"src": "5928:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "6004:208:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 176,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "6227:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6244:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "6236:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6236:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6256:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "6248:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6248:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6235:28:0"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "6282:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 173,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6282:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6281:6:0"
									},
									"scope": 209,
									"src": "6218:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "6296:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "6581:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6599:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "6591:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6614:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "6606:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6606:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6590:32:0"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "6646:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6646:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6645:9:0"
									},
									"scope": 209,
									"src": "6572:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "6663:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 196,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "7333:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7349:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "7341:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7341:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7366:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "7358:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7358:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7340:33:0"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "7392:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 193,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7392:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7391:6:0"
									},
									"scope": 209,
									"src": "7324:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "7406:295:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "7716:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7747:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "7739:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7770:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "7762:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7762:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7791:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "7783:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7783:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7728:76:0"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "7823:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7823:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7822:6:0"
									},
									"scope": 209,
									"src": "7707:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1302,
							"src": "5195:2637:0",
							"usedErrors": [],
							"usedEvents": [
								143,
								152
							]
						},
						{
							"id": 210,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "7996:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 212,
										"name": "IERC20",
										"nameLocations": [
											"8173:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 209,
										"src": "8173:6:0"
									},
									"id": 213,
									"nodeType": "InheritanceSpecifier",
									"src": "8173:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 211,
								"nodeType": "StructuredDocumentation",
								"src": "8023:120:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 232,
							"linearizedBaseContracts": [
								232,
								209
							],
							"name": "IERC20Metadata",
							"nameLocation": "8155:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "8187:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "8258:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8262:2:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "8288:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 216,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8288:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8287:15:0"
									},
									"scope": 232,
									"src": "8249:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "8311:58:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 225,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "8384:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8390:2:0"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "8416:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 222,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8416:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8415:15:0"
									},
									"scope": 232,
									"src": "8375:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 226,
										"nodeType": "StructuredDocumentation",
										"src": "8439:67:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "8521:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8529:2:0"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "8555:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 228,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "8555:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8554:7:0"
									},
									"scope": 232,
									"src": "8512:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1302,
							"src": "8145:420:0",
							"usedErrors": [],
							"usedEvents": [
								143,
								152
							]
						},
						{
							"id": 233,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "8704:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 235,
										"name": "Context",
										"nameLocations": [
											"9949:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "9949:7:0"
									},
									"id": 236,
									"nodeType": "InheritanceSpecifier",
									"src": "9949:7:0"
								},
								{
									"baseName": {
										"id": 237,
										"name": "IERC20",
										"nameLocations": [
											"9958:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 209,
										"src": "9958:6:0"
									},
									"id": 238,
									"nodeType": "InheritanceSpecifier",
									"src": "9958:6:0"
								},
								{
									"baseName": {
										"id": 239,
										"name": "IERC20Metadata",
										"nameLocations": [
											"9966:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 232,
										"src": "9966:14:0"
									},
									"id": 240,
									"nodeType": "InheritanceSpecifier",
									"src": "9966:14:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 234,
								"nodeType": "StructuredDocumentation",
								"src": "8735:1194:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 815,
							"linearizedBaseContracts": [
								815,
								232,
								209,
								21
							],
							"name": "ERC20",
							"nameLocation": "9940:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 244,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "10024:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 815,
									"src": "9988:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 243,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 241,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "9996:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "9988:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 242,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "10007:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 250,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "10098:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 815,
									"src": "10042:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 249,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 245,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "10050:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "10042:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 248,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 246,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "10069:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "10061:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 247,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "10080:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 252,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "10134:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 815,
									"src": "10118:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 251,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10118:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 254,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "10170:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 815,
									"src": "10155:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 253,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "10155:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 256,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "10197:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 815,
									"src": "10182:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 255,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "10182:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "10581:60:0",
										"statements": [
											{
												"expression": {
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 264,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "10592:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 265,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "10600:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "10592:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 267,
												"nodeType": "ExpressionStatement",
												"src": "10592:13:0"
											},
											{
												"expression": {
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 268,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "10616:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 269,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "10626:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "10616:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "10616:17:0"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "10213:306:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 273,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "10551:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "10537:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 258,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10537:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "10572:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "10558:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 260,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10558:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10536:44:0"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10581:0:0"
									},
									"scope": 815,
									"src": "10525:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										219
									],
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "10780:31:0",
										"statements": [
											{
												"expression": {
													"id": 280,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 254,
													"src": "10798:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 279,
												"id": 281,
												"nodeType": "Return",
												"src": "10791:12:0"
											}
										]
									},
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "10649:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "10720:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 276,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10747:8:0"
									},
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10724:2:0"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "10765:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 277,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10765:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10764:15:0"
									},
									"scope": 815,
									"src": "10711:100:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										225
									],
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "11001:33:0",
										"statements": [
											{
												"expression": {
													"id": 290,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 256,
													"src": "11019:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 289,
												"id": 291,
												"nodeType": "Return",
												"src": "11012:14:0"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "10819:105:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "10939:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 286,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10968:8:0"
									},
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10945:2:0"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "10986:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 287,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10986:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10985:15:0"
									},
									"scope": 815,
									"src": "10930:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										231
									],
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "11738:28:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11756:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 299,
												"id": 301,
												"nodeType": "Return",
												"src": "11749:9:0"
											}
										]
									},
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "11042:625:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "11682:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 296,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11713:8:0"
									},
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11690:2:0"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "11731:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 297,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11731:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11730:7:0"
									},
									"scope": 815,
									"src": "11673:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										158
									],
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "11901:38:0",
										"statements": [
											{
												"expression": {
													"id": 310,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 252,
													"src": "11919:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 309,
												"id": 311,
												"nodeType": "Return",
												"src": "11912:19:0"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "11774:51:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "11840:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 306,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11874:8:0"
									},
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11851:2:0"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "11892:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11892:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11891:9:0"
									},
									"scope": 815,
									"src": "11831:108:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										166
									],
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "12085:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 322,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "12103:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 324,
													"indexExpression": {
														"id": 323,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "12113:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12103:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 321,
												"id": 325,
												"nodeType": "Return",
												"src": "12096:25:0"
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "11947:49:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "12011:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 318,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12058:8:0"
									},
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12029:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "12021:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12021:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12020:17:0"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "12076:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12076:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12075:9:0"
									},
									"scope": 815,
									"src": "12002:127:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										176
									],
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "12420:108:0",
										"statements": [
											{
												"assignments": [
													339
												],
												"declarations": [
													{
														"constant": false,
														"id": 339,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "12439:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 351,
														"src": "12431:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 338,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12431:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 342,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 340,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "12447:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12447:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12431:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 344,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "12480:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 345,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "12487:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 346,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "12491:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 343,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "12470:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12470:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "12470:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12516:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 337,
												"id": 350,
												"nodeType": "Return",
												"src": "12509:11:0"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "12137:192:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "12344:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 334,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12396:8:0"
									},
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12361:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "12353:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12353:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12373:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "12365:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12365:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12352:28:0"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "12414:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 335,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12414:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12413:6:0"
									},
									"scope": 815,
									"src": "12335:193:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										186
									],
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "12689:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 363,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "12707:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 365,
														"indexExpression": {
															"id": 364,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "12719:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12707:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 367,
													"indexExpression": {
														"id": 366,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "12726:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12707:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 362,
												"id": 368,
												"nodeType": "Return",
												"src": "12700:34:0"
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "12536:49:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "12600:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 359,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12662:8:0"
									},
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12618:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "12610:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12610:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12633:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "12625:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12625:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12609:32:0"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "12680:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12680:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12679:9:0"
									},
									"scope": 815,
									"src": "12591:151:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										196
									],
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "13151:112:0",
										"statements": [
											{
												"assignments": [
													382
												],
												"declarations": [
													{
														"constant": false,
														"id": 382,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "13170:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 394,
														"src": "13162:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 381,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13162:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 385,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 383,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "13178:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13178:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13162:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 387,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "13210:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 388,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "13217:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 389,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "13226:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 386,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "13201:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13201:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "13201:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13251:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 380,
												"id": 393,
												"nodeType": "Return",
												"src": "13244:11:0"
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "12750:306:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "13071:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 377,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13127:8:0"
									},
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13087:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "13079:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13079:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13104:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "13096:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13096:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13078:33:0"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "13145:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 378,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13145:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13144:6:0"
									},
									"scope": 815,
									"src": "13062:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										208
									],
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "13980:158:0",
										"statements": [
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "13999:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 427,
														"src": "13991:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 408,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13991:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 410,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "14009:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14009:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13991:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 414,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "14048:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "14054:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "14063:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 413,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "14032:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14032:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "14032:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 420,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "14091:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 421,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "14097:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 422,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "14101:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 419,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "14081:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14081:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "14081:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14126:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 407,
												"id": 426,
												"nodeType": "Return",
												"src": "14119:11:0"
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "13271:566:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "13852:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 404,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13956:8:0"
									},
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13883:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "13875:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13875:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13906:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "13898:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13927:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "13919:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13919:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13864:76:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "13974:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13974:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13973:6:0"
									},
									"scope": 815,
									"src": "13843:295:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "14641:144:0",
										"statements": [
											{
												"assignments": [
													439
												],
												"declarations": [
													{
														"constant": false,
														"id": 439,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14660:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 456,
														"src": "14652:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 438,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14652:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 442,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 440,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "14668:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14668:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14652:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 444,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "14700:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 445,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "14707:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 447,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 439,
																		"src": "14726:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 448,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 431,
																		"src": "14733:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 446,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "14716:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14716:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 450,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 433,
																"src": "14744:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14716:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 443,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "14691:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14691:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "14691:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14773:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 437,
												"id": 455,
												"nodeType": "Return",
												"src": "14766:11:0"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "14146:395:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "14556:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14582:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "14574:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14574:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "14599:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "14591:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14573:37:0"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "14635:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 435,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14635:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14634:6:0"
									},
									"scope": 815,
									"src": "14547:238:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "15387:337:0",
										"statements": [
											{
												"assignments": [
													468
												],
												"declarations": [
													{
														"constant": false,
														"id": 468,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "15406:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 497,
														"src": "15398:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 467,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15398:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 471,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 469,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "15414:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15414:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15398:28:0"
											},
											{
												"assignments": [
													473
												],
												"declarations": [
													{
														"constant": false,
														"id": 473,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "15445:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 497,
														"src": "15437:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 472,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15437:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 478,
												"initialValue": {
													"arguments": [
														{
															"id": 475,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "15474:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "15481:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 474,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "15464:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15464:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15437:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 480,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 473,
																"src": "15508:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 481,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "15528:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15508:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15545:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 479,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15500:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15500:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "15500:85:0"
											},
											{
												"id": 494,
												"nodeType": "UncheckedBlock",
												"src": "15596:97:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 487,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "15630:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 488,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 460,
																	"src": "15637:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 489,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 473,
																		"src": "15646:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 490,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 462,
																		"src": "15665:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15646:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 486,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "15621:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15621:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 493,
														"nodeType": "ExpressionStatement",
														"src": "15621:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15712:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 466,
												"id": 496,
												"nodeType": "Return",
												"src": "15705:11:0"
											}
										]
									},
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "14793:489:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "15297:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15323:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "15315:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15315:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "15340:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "15332:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15314:42:0"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "15381:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 464,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15381:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15380:6:0"
									},
									"scope": 815,
									"src": "15288:436:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "16306:728:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 509,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 501,
																"src": "16325:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16341:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16333:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 510,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16333:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16333:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "16325:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16345:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 508,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16317:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16317:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "16317:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 519,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 503,
																"src": "16404:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16418:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16410:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 520,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16410:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16410:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "16404:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16422:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 518,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16396:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16396:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "16396:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 529,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "16494:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 530,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "16500:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 531,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "16504:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 528,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "16473:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16473:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "16473:38:0"
											},
											{
												"assignments": [
													535
												],
												"declarations": [
													{
														"constant": false,
														"id": 535,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "16532:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "16524:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 534,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16524:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 539,
												"initialValue": {
													"baseExpression": {
														"id": 536,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "16546:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 538,
													"indexExpression": {
														"id": 537,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "16556:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "16546:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16524:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 541,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "16580:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 542,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "16595:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16580:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16603:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 540,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16572:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16572:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "16572:72:0"
											},
											{
												"id": 561,
												"nodeType": "UncheckedBlock",
												"src": "16655:278:0",
												"statements": [
													{
														"expression": {
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 547,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 244,
																	"src": "16680:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 549,
																"indexExpression": {
																	"id": 548,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "16690:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "16680:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 550,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "16698:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 551,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "16712:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16698:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16680:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 554,
														"nodeType": "ExpressionStatement",
														"src": "16680:38:0"
													},
													{
														"expression": {
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 555,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 244,
																	"src": "16898:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 557,
																"indexExpression": {
																	"id": 556,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 503,
																	"src": "16908:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "16898:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 558,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "16915:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16898:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 560,
														"nodeType": "ExpressionStatement",
														"src": "16898:23:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 563,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "16959:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 564,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "16965:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 565,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "16969:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 562,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "16950:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16950:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 567,
												"nodeType": "EmitStatement",
												"src": "16945:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 569,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "17009:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 570,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "17015:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 571,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "17019:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 568,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "16989:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16989:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "16989:37:0"
											}
										]
									},
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "15732:456:0",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16203:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16231:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "16223:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16223:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16254:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "16246:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16246:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16275:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "16267:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16267:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16212:76:0"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16306:0:0"
									},
									"scope": 815,
									"src": "16194:840:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "17386:483:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 584,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 578,
																"src": "17405:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17424:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17416:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 585,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "17416:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17416:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "17405:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17428:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 583,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17397:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17397:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "17397:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17504:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17496:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 594,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17496:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17496:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 598,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "17508:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 599,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "17517:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 593,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "17475:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17475:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "17475:49:0"
											},
											{
												"expression": {
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 602,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "17537:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 603,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "17553:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17537:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 605,
												"nodeType": "ExpressionStatement",
												"src": "17537:22:0"
											},
											{
												"id": 612,
												"nodeType": "UncheckedBlock",
												"src": "17570:178:0",
												"statements": [
													{
														"expression": {
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 606,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 244,
																	"src": "17708:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 608,
																"indexExpression": {
																	"id": 607,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 578,
																	"src": "17718:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "17708:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 609,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 580,
																"src": "17730:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17708:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 611,
														"nodeType": "ExpressionStatement",
														"src": "17708:28:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17780:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17772:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 614,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17772:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17772:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 618,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "17784:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 619,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "17793:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 613,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "17763:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17763:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 621,
												"nodeType": "EmitStatement",
												"src": "17758:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17841:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17833:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 623,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17833:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17833:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 627,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "17845:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 628,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "17854:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 622,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "17813:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17813:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "17813:48:0"
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "17042:273:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "17330:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "17344:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "17336:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17336:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17361:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "17353:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17353:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17335:33:0"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17386:0:0"
									},
									"scope": 815,
									"src": "17321:548:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "18267:610:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 641,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "18286:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18305:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18297:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 642,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18297:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18297:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18286:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18309:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 640,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18278:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18278:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "18278:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 651,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "18379:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18396:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18388:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 652,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18388:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18388:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "18400:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 650,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "18358:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18358:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 658,
												"nodeType": "ExpressionStatement",
												"src": "18358:49:0"
											},
											{
												"assignments": [
													660
												],
												"declarations": [
													{
														"constant": false,
														"id": 660,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "18428:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 703,
														"src": "18420:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 659,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18420:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 664,
												"initialValue": {
													"baseExpression": {
														"id": 661,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "18445:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 663,
													"indexExpression": {
														"id": 662,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "18455:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "18445:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18420:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 666,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 660,
																"src": "18482:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 667,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "18500:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18482:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18508:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 665,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18474:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18474:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 671,
												"nodeType": "ExpressionStatement",
												"src": "18474:71:0"
											},
											{
												"id": 684,
												"nodeType": "UncheckedBlock",
												"src": "18556:198:0",
												"statements": [
													{
														"expression": {
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 672,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 244,
																	"src": "18581:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 674,
																"indexExpression": {
																	"id": 673,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 635,
																	"src": "18591:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "18581:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 675,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 660,
																	"src": "18602:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 676,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "18619:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18602:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18581:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 679,
														"nodeType": "ExpressionStatement",
														"src": "18581:44:0"
													},
													{
														"expression": {
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 680,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "18720:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 681,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "18736:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18720:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 683,
														"nodeType": "ExpressionStatement",
														"src": "18720:22:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 686,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "18780:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18797:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18789:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 687,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18789:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18789:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 691,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "18801:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 685,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "18771:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18771:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 693,
												"nodeType": "EmitStatement",
												"src": "18766:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 695,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "18841:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18858:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18850:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 696,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18850:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18850:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "18862:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 694,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "18821:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18821:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "18821:48:0"
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "17877:319:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "18211:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18225:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "18217:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18217:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18242:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "18234:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18216:33:0"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18267:0:0"
									},
									"scope": 815,
									"src": "18202:675:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "19432:263:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 715,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "19451:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19468:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19460:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 716,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "19460:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19460:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "19451:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19472:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 714,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19443:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19443:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 723,
												"nodeType": "ExpressionStatement",
												"src": "19443:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 725,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 709,
																"src": "19530:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19549:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19541:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 726,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "19541:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19541:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "19530:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19553:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 724,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19522:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19522:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "19522:68:0"
											},
											{
												"expression": {
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 734,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 250,
																"src": "19603:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 737,
															"indexExpression": {
																"id": 735,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "19615:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19603:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 738,
														"indexExpression": {
															"id": 736,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "19622:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19603:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 739,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "19633:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19603:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 741,
												"nodeType": "ExpressionStatement",
												"src": "19603:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 743,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "19664:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 744,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "19671:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 745,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "19680:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 742,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "19655:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19655:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 747,
												"nodeType": "EmitStatement",
												"src": "19650:37:0"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "18885:424:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "19324:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19351:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "19343:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19343:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19375:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "19367:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19367:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "19401:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "19393:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19393:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19332:82:0"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19432:0:0"
									},
									"scope": 815,
									"src": "19315:380:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "20110:329:0",
										"statements": [
											{
												"assignments": [
													760
												],
												"declarations": [
													{
														"constant": false,
														"id": 760,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "20129:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 791,
														"src": "20121:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 759,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20121:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 765,
												"initialValue": {
													"arguments": [
														{
															"id": 762,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "20158:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 763,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "20165:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 761,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "20148:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20148:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20121:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 766,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "20188:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20213:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 768,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "20213:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 767,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "20208:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20208:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "20222:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "20208:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20188:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 790,
												"nodeType": "IfStatement",
												"src": "20184:248:0",
												"trueBody": {
													"id": 789,
													"nodeType": "Block",
													"src": "20227:205:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 774,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 760,
																			"src": "20250:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 775,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 756,
																			"src": "20270:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "20250:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20278:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 773,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "20242:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20242:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 779,
															"nodeType": "ExpressionStatement",
															"src": "20242:68:0"
														},
														{
															"id": 788,
															"nodeType": "UncheckedBlock",
															"src": "20325:96:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 781,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 752,
																				"src": "20363:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 782,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 754,
																				"src": "20370:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 785,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 783,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 760,
																					"src": "20379:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 784,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 756,
																					"src": "20398:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "20379:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 780,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 749,
																			"src": "20354:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20354:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 787,
																	"nodeType": "ExpressionStatement",
																	"src": "20354:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "19703:277:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "19995:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20029:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "20021:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20021:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20053:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "20045:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20045:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "20079:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "20071:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20071:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20010:82:0"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20110:0:0"
									},
									"scope": 815,
									"src": "19986:453:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "21162:2:0",
										"statements": []
									},
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "20447:586:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "21048:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "21087:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "21079:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21079:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "21110:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "21102:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "21131:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "21123:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21123:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21068:76:0"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21162:0:0"
									},
									"scope": 815,
									"src": "21039:125:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 813,
										"nodeType": "Block",
										"src": "21890:2:0",
										"statements": []
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "21172:590:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "21777:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "21815:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "21807:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21807:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "21838:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "21830:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21830:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "21859:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "21851:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21851:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21796:76:0"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21890:0:0"
									},
									"scope": 815,
									"src": "21768:124:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1302,
							"src": "9931:11964:0",
							"usedErrors": [],
							"usedEvents": [
								143,
								152
							]
						},
						{
							"id": 816,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "21966:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 818,
										"name": "ERC20",
										"nameLocations": [
											"22126:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 815,
										"src": "22126:5:0"
									},
									"id": 819,
									"nodeType": "InheritanceSpecifier",
									"src": "22126:5:0"
								}
							],
							"canonicalName": "ERC20Decimals",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 817,
								"nodeType": "StructuredDocumentation",
								"src": "21993:96:0",
								"text": " @title ERC20Decimals\n @dev Extension of {ERC20} that adds decimals storage slot."
							},
							"fullyImplemented": true,
							"id": 842,
							"linearizedBaseContracts": [
								842,
								815,
								232,
								209,
								21
							],
							"name": "ERC20Decimals",
							"nameLocation": "22109:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 821,
									"mutability": "immutable",
									"name": "_decimals",
									"nameLocation": "22163:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 842,
									"src": "22139:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 820,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "22139:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 831,
										"nodeType": "Block",
										"src": "22353:40:0",
										"statements": [
											{
												"expression": {
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 827,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "22364:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 828,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "22376:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "22364:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 830,
												"nodeType": "ExpressionStatement",
												"src": "22364:21:0"
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "22181:137:0",
										"text": " @dev Sets the value of the `decimals`. This value is immutable, it can only be\n set once during construction."
									},
									"id": 832,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "decimals_",
												"nameLocation": "22342:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "22336:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 823,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "22336:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22335:17:0"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22353:0:0"
									},
									"scope": 842,
									"src": "22324:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										303
									],
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "22466:35:0",
										"statements": [
											{
												"expression": {
													"id": 838,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 821,
													"src": "22484:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 837,
												"id": 839,
												"nodeType": "Return",
												"src": "22477:16:0"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "22410:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 834,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "22441:8:0"
									},
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22418:2:0"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "22459:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 835,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "22459:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22458:7:0"
									},
									"scope": 842,
									"src": "22401:100:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1302,
							"src": "22091:413:0",
							"usedErrors": [],
							"usedEvents": [
								143,
								152
							]
						},
						{
							"id": 843,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "22574:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 845,
										"name": "ERC20",
										"nameLocations": [
											"22731:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 815,
										"src": "22731:5:0"
									},
									"id": 846,
									"nodeType": "InheritanceSpecifier",
									"src": "22731:5:0"
								}
							],
							"canonicalName": "ERC20Taxable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 844,
								"nodeType": "StructuredDocumentation",
								"src": "22601:94:0",
								"text": " @title ERC20Taxable\n @dev Extension of {ERC20} that adds a tax rate per mille."
							},
							"fullyImplemented": true,
							"id": 1106,
							"linearizedBaseContracts": [
								1106,
								815,
								232,
								209,
								21
							],
							"name": "ERC20Taxable",
							"nameLocation": "22715:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 848,
									"mutability": "mutable",
									"name": "_taxRate",
									"nameLocation": "22760:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1106,
									"src": "22744:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 847,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "22744:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 850,
									"mutability": "mutable",
									"name": "_taxAddress",
									"nameLocation": "22791:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1106,
									"src": "22775:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 849,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "22775:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 854,
									"mutability": "mutable",
									"name": "_isExcludedFromTaxFee",
									"nameLocation": "22844:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 1106,
									"src": "22811:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 853,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 851,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "22819:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "22811:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 852,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "22830:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "23024:192:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 863,
															"name": "taxFeePerMille_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "23047:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 862,
														"name": "_setTaxRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "23035:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23035:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "23035:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 867,
															"name": "taxAddress_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "23089:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 866,
														"name": "_setTaxAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "23074:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23074:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 869,
												"nodeType": "ExpressionStatement",
												"src": "23074:27:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 871,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "23136:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23136:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23150:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 870,
														"name": "_setExclusionFromTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1105,
														"src": "23112:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23112:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 875,
												"nodeType": "ExpressionStatement",
												"src": "23112:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 877,
															"name": "taxAddress_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "23190:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23203:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 876,
														"name": "_setExclusionFromTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1105,
														"src": "23166:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23166:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 880,
												"nodeType": "ExpressionStatement",
												"src": "23166:42:0"
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "22874:86:0",
										"text": " @dev Sets the value of the `taxFeePerMille` and the `taxAddress`."
									},
									"id": 882,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "taxFeePerMille_",
												"nameLocation": "22986:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "22978:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22978:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "taxAddress_",
												"nameLocation": "23011:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "23003:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23003:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22977:46:0"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23024:0:0"
									},
									"scope": 1106,
									"src": "22966:250:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										352
									],
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "23605:479:0",
										"statements": [
											{
												"assignments": [
													894
												],
												"declarations": [
													{
														"constant": false,
														"id": 894,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "23624:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 946,
														"src": "23616:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 893,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "23616:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 897,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 895,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "23632:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23632:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23616:28:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 900,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 898,
															"name": "_taxRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "23661:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23672:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "23661:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 909,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "23677:60:0",
														"subExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 901,
																			"name": "_isExcludedFromTaxFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 854,
																			"src": "23679:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 903,
																		"indexExpression": {
																			"id": 902,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 894,
																			"src": "23701:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "23679:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"baseExpression": {
																			"id": 904,
																			"name": "_isExcludedFromTaxFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 854,
																			"src": "23711:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 906,
																		"indexExpression": {
																			"id": 905,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 885,
																			"src": "23733:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "23711:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "23679:57:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 908,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "23678:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "23661:76:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 937,
												"nodeType": "IfStatement",
												"src": "23657:355:0",
												"trueBody": {
													"id": 936,
													"nodeType": "Block",
													"src": "23739:273:0",
													"statements": [
														{
															"assignments": [
																912
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 912,
																	"mutability": "mutable",
																	"name": "taxAmount",
																	"nameLocation": "23762:9:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 936,
																	"src": "23754:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 911,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "23754:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 919,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 915,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 913,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 887,
																				"src": "23775:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 914,
																				"name": "_taxRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 848,
																				"src": "23784:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "23775:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 916,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "23774:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31303030",
																	"id": 917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23796:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"src": "23774:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "23754:46:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 920,
																	"name": "taxAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "23821:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23833:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "23821:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 935,
															"nodeType": "IfStatement",
															"src": "23817:184:0",
															"trueBody": {
																"id": 934,
																"nodeType": "Block",
																"src": "23836:165:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 924,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 894,
																					"src": "23865:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 925,
																					"name": "_taxAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 850,
																					"src": "23872:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 926,
																					"name": "taxAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 912,
																					"src": "23885:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 923,
																				"name": "_transfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 575,
																				"src": "23855:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 927,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23855:40:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 928,
																		"nodeType": "ExpressionStatement",
																		"src": "23855:40:0"
																	},
																	{
																		"id": 933,
																		"nodeType": "UncheckedBlock",
																		"src": "23914:72:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 931,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 929,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 887,
																						"src": "23947:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "-=",
																					"rightHandSide": {
																						"id": 930,
																						"name": "taxAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 912,
																						"src": "23957:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "23947:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 932,
																				"nodeType": "ExpressionStatement",
																				"src": "23947:19:0"
																			}
																		]
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 939,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "24034:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 940,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "24041:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "24045:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 938,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "24024:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24024:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "ExpressionStatement",
												"src": "24024:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "24072:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 892,
												"id": 945,
												"nodeType": "Return",
												"src": "24065:11:0"
											}
										]
									},
									"documentation": {
										"id": 883,
										"nodeType": "StructuredDocumentation",
										"src": "23224:290:0",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient` minus the tax fee.\n Moves the tax fee to a deposit address.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "23529:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 889,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "23581:8:0"
									},
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23546:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "23538:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23538:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "23558:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "23550:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23550:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23537:28:0"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "23599:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 890,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23599:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23598:6:0"
									},
									"scope": 1106,
									"src": "23520:564:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										428
									],
									"body": {
										"id": 1019,
										"nodeType": "Block",
										"src": "24664:527:0",
										"statements": [
											{
												"assignments": [
													961
												],
												"declarations": [
													{
														"constant": false,
														"id": 961,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "24683:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1019,
														"src": "24675:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 960,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "24675:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 964,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 962,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "24693:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24693:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24675:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 966,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "24732:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 967,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "24738:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 968,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "24747:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 965,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "24716:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24716:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "24716:38:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 971,
															"name": "_taxRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "24771:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24782:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "24771:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 982,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "24787:59:0",
														"subExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 980,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 974,
																			"name": "_isExcludedFromTaxFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 854,
																			"src": "24789:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 976,
																		"indexExpression": {
																			"id": 975,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 950,
																			"src": "24811:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "24789:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"baseExpression": {
																			"id": 977,
																			"name": "_isExcludedFromTaxFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 854,
																			"src": "24820:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 979,
																		"indexExpression": {
																			"id": 978,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 952,
																			"src": "24842:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "24820:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "24789:56:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 981,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "24788:58:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "24771:75:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1010,
												"nodeType": "IfStatement",
												"src": "24767:353:0",
												"trueBody": {
													"id": 1009,
													"nodeType": "Block",
													"src": "24848:272:0",
													"statements": [
														{
															"assignments": [
																985
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 985,
																	"mutability": "mutable",
																	"name": "taxAmount",
																	"nameLocation": "24871:9:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1009,
																	"src": "24863:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 984,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "24863:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 992,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 986,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 954,
																				"src": "24884:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 987,
																				"name": "_taxRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 848,
																				"src": "24893:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "24884:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 989,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "24883:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31303030",
																	"id": 990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24905:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"src": "24883:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "24863:46:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 993,
																	"name": "taxAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 985,
																	"src": "24930:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24942:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "24930:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1008,
															"nodeType": "IfStatement",
															"src": "24926:183:0",
															"trueBody": {
																"id": 1007,
																"nodeType": "Block",
																"src": "24945:164:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 997,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 950,
																					"src": "24974:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 998,
																					"name": "_taxAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 850,
																					"src": "24980:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 999,
																					"name": "taxAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 985,
																					"src": "24993:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 996,
																				"name": "_transfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 575,
																				"src": "24964:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1000,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "24964:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1001,
																		"nodeType": "ExpressionStatement",
																		"src": "24964:39:0"
																	},
																	{
																		"id": 1006,
																		"nodeType": "UncheckedBlock",
																		"src": "25022:72:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 1004,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1002,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 954,
																						"src": "25055:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "-=",
																					"rightHandSide": {
																						"id": 1003,
																						"name": "taxAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 985,
																						"src": "25065:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "25055:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1005,
																				"nodeType": "ExpressionStatement",
																				"src": "25055:19:0"
																			}
																		]
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1012,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "25142:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1013,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "25148:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1014,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "25152:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1011,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "25132:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25132:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1016,
												"nodeType": "ExpressionStatement",
												"src": "25132:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25179:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 959,
												"id": 1018,
												"nodeType": "Return",
												"src": "25172:11:0"
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "24092:463:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` minus the tax fee using the allowance mechanism.\n `amount` is then deducted from the caller's allowance.\n Moves the tax fee to a deposit address.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 1020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "24570:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 956,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24640:8:0"
									},
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24591:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "24583:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24583:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24605:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "24597:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24597:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "24617:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "24609:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24609:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24582:42:0"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "24658:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 957,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24658:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24657:6:0"
									},
									"scope": 1106,
									"src": "24561:630:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "25440:34:0",
										"statements": [
											{
												"expression": {
													"id": 1026,
													"name": "_taxRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 848,
													"src": "25458:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1025,
												"id": 1027,
												"nodeType": "Return",
												"src": "25451:15:0"
											}
										]
									},
									"documentation": {
										"id": 1021,
										"nodeType": "StructuredDocumentation",
										"src": "25199:179:0",
										"text": " @dev Returns the per mille rate for taxable mechanism.\n For each transfer the per mille amount will be calculated and moved to deposit address."
									},
									"functionSelector": "c6d205fa",
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "taxFeePerMille",
									"nameLocation": "25393:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25407:2:0"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "25431:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25431:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25430:9:0"
									},
									"scope": 1106,
									"src": "25384:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "25602:37:0",
										"statements": [
											{
												"expression": {
													"id": 1035,
													"name": "_taxAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 850,
													"src": "25620:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1034,
												"id": 1036,
												"nodeType": "Return",
												"src": "25613:18:0"
											}
										]
									},
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "25482:62:0",
										"text": " @dev Returns the deposit address for tax."
									},
									"functionSelector": "b7bda68f",
									"id": 1038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "taxAddress",
									"nameLocation": "25559:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25569:2:0"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "25593:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25593:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25592:9:0"
									},
									"scope": 1106,
									"src": "25550:89:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "25828:56:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1046,
														"name": "_isExcludedFromTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "25846:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1048,
													"indexExpression": {
														"id": 1047,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1041,
														"src": "25868:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "25846:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1045,
												"id": 1049,
												"nodeType": "Return",
												"src": "25839:37:0"
											}
										]
									},
									"documentation": {
										"id": 1039,
										"nodeType": "StructuredDocumentation",
										"src": "25647:101:0",
										"text": " @dev Returns the status of exclusion from tax fee mechanism for a given account."
									},
									"functionSelector": "c283cd12",
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isExcludedFromTaxFee",
									"nameLocation": "25763:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "25792:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "25784:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25783:17:0"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "25822:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1043,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25822:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25821:6:0"
									},
									"scope": 1106,
									"src": "25754:130:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "26136:145:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1058,
																"name": "taxFeePerMille_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "26155:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26173:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "26155:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243323054617861626c653a207461784665655065724d696c6c655f206d757374206265206c657373207468616e2031303030",
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26179:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_76c937e8541376b2ae2ed2ec41481ffb6ae85620be755d89da3704bd2719bbaa",
																"typeString": "literal_string \"ERC20Taxable: taxFeePerMille_ must be less than 1000\""
															},
															"value": "ERC20Taxable: taxFeePerMille_ must be less than 1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_76c937e8541376b2ae2ed2ec41481ffb6ae85620be755d89da3704bd2719bbaa",
																"typeString": "literal_string \"ERC20Taxable: taxFeePerMille_ must be less than 1000\""
															}
														],
														"id": 1057,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26147:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26147:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1063,
												"nodeType": "ExpressionStatement",
												"src": "26147:87:0"
											},
											{
												"expression": {
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1064,
														"name": "_taxRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "26247:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1065,
														"name": "taxFeePerMille_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "26258:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26247:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "26247:26:0"
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "25892:175:0",
										"text": " @dev Set the amount of tax fee per mille\n WARNING: it allows everyone to set the fee. Access controls MUST be defined in derived contracts."
									},
									"id": 1069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTaxRate",
									"nameLocation": "26082:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "taxFeePerMille_",
												"nameLocation": "26102:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "26094:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26094:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26093:25:0"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26136:0:0"
									},
									"scope": 1106,
									"src": "26073:208:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1089,
										"nodeType": "Block",
										"src": "26532:147:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1076,
																"name": "taxAddress_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1072,
																"src": "26551:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26574:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "26566:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1077,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "26566:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26566:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "26551:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243323054617861626c653a20746178416464726573735f2063616e6e6f7420626520746865207a65726f2061646472657373",
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26578:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ee77ba772060351314b1afc6b332478f67976de73404959e804d987fd557b6fd",
																"typeString": "literal_string \"ERC20Taxable: taxAddress_ cannot be the zero address\""
															},
															"value": "ERC20Taxable: taxAddress_ cannot be the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ee77ba772060351314b1afc6b332478f67976de73404959e804d987fd557b6fd",
																"typeString": "literal_string \"ERC20Taxable: taxAddress_ cannot be the zero address\""
															}
														],
														"id": 1075,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26543:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26543:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1084,
												"nodeType": "ExpressionStatement",
												"src": "26543:90:0"
											},
											{
												"expression": {
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1085,
														"name": "_taxAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "26646:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1086,
														"name": "taxAddress_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "26660:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "26646:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "26646:25:0"
											}
										]
									},
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "26289:175:0",
										"text": " @dev Set the deposit address for tax\n WARNING: it allows everyone to set the address. Access controls MUST be defined in derived contracts."
									},
									"id": 1090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTaxAddress",
									"nameLocation": "26479:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "taxAddress_",
												"nameLocation": "26502:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "26494:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26494:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26493:21:0"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26532:0:0"
									},
									"scope": 1106,
									"src": "26470:209:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1104,
										"nodeType": "Block",
										"src": "26994:60:0",
										"statements": [
											{
												"expression": {
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1098,
															"name": "_isExcludedFromTaxFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "27005:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1100,
														"indexExpression": {
															"id": 1099,
															"name": "account_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "27027:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "27005:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1101,
														"name": "status_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1095,
														"src": "27039:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "27005:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1103,
												"nodeType": "ExpressionStatement",
												"src": "27005:41:0"
											}
										]
									},
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "26687:219:0",
										"text": " @dev Set the exclusion status from tax fee mechanism (both sending and receiving)\n WARNING: it allows everyone to set the status. Access controls MUST be defined in derived contracts."
									},
									"id": 1105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setExclusionFromTaxFee",
									"nameLocation": "26921:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "account_",
												"nameLocation": "26953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "26945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "status_",
												"nameLocation": "26968:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "26963:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1094,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26963:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26944:32:0"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26994:0:0"
									},
									"scope": 1106,
									"src": "26912:142:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1302,
							"src": "22697:4360:0",
							"usedErrors": [],
							"usedEvents": [
								143,
								152
							]
						},
						{
							"id": 1107,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "27112:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPayable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1117,
							"linearizedBaseContracts": [
								1117
							],
							"name": "IPayable",
							"nameLocation": "27149:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "346386e1",
									"id": 1116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pay",
									"nameLocation": "27174:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "serviceName",
												"nameLocation": "27192:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "27178:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1108,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27178:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "27218:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "27205:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1110,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "27205:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "wallet",
												"nameLocation": "27237:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "27229:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27229:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27177:67:0"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27261:0:0"
									},
									"scope": 1117,
									"src": "27165:97:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1302,
							"src": "27139:126:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ServicePayer",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1118,
								"nodeType": "StructuredDocumentation",
								"src": "27269:76:0",
								"text": " @title ServicePayer\n @dev Implementation of the ServicePayer"
							},
							"fullyImplemented": true,
							"id": 1143,
							"linearizedBaseContracts": [
								1143
							],
							"name": "ServicePayer",
							"nameLocation": "27365:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "27498:91:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1136,
															"name": "serviceName",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "27550:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1137,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "27563:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1138,
															"name": "wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "27574:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1130,
																		"name": "receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1120,
																		"src": "27518:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 1129,
																	"name": "IPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1117,
																	"src": "27509:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IPayable_$1117_$",
																		"typeString": "type(contract IPayable)"
																	}
																},
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27509:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IPayable_$1117",
																	"typeString": "contract IPayable"
																}
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "27528:3:0",
															"memberName": "pay",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1116,
															"src": "27509:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
																"typeString": "function (string memory,bytes memory,address) payable external"
															}
														},
														"id": 1135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 1133,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "27539:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "27543:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "27539:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "27509:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$value",
															"typeString": "function (string memory,bytes memory,address) payable external"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27509:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "27509:72:0"
											}
										]
									},
									"id": 1142,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "27413:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "27397:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27397:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "serviceName",
												"nameLocation": "27437:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "27423:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1121,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27423:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "27463:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "27450:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1123,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "27450:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "wallet",
												"nameLocation": "27482:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "27474:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27474:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27396:93:0"
									},
									"returnParameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27498:0:0"
									},
									"scope": 1143,
									"src": "27385:204:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1302,
							"src": "27347:245:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1144,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "27651:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1146,
										"name": "ERC20Decimals",
										"nameLocations": [
											"27785:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 842,
										"src": "27785:13:0"
									},
									"id": 1147,
									"nodeType": "InheritanceSpecifier",
									"src": "27785:13:0"
								},
								{
									"baseName": {
										"id": 1148,
										"name": "ERC20Taxable",
										"nameLocations": [
											"27800:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1106,
										"src": "27800:12:0"
									},
									"id": 1149,
									"nodeType": "InheritanceSpecifier",
									"src": "27800:12:0"
								},
								{
									"baseName": {
										"id": 1150,
										"name": "Ownable",
										"nameLocations": [
											"27814:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 132,
										"src": "27814:7:0"
									},
									"id": 1151,
									"nodeType": "InheritanceSpecifier",
									"src": "27814:7:0"
								},
								{
									"baseName": {
										"id": 1152,
										"name": "ServicePayer",
										"nameLocations": [
											"27823:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1143,
										"src": "27823:12:0"
									},
									"id": 1153,
									"nodeType": "InheritanceSpecifier",
									"src": "27823:12:0"
								}
							],
							"canonicalName": "TaxableERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1145,
								"nodeType": "StructuredDocumentation",
								"src": "27682:76:0",
								"text": " @title TaxableERC20\n @dev Implementation of the TaxableERC20"
							},
							"fullyImplemented": true,
							"id": 1301,
							"linearizedBaseContracts": [
								1301,
								1143,
								132,
								1106,
								842,
								815,
								232,
								209,
								21
							],
							"name": "TaxableERC20",
							"nameLocation": "27769:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1203,
										"nodeType": "Block",
										"src": "28338:135:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1191,
																"name": "initialBalance_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1161,
																"src": "28357:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28375:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "28357:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54617861626c6545524332303a20737570706c792063616e6e6f74206265207a65726f",
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28378:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_13b0d23b78e36e0ca5d50799970a37145ee5efca8eea0a88562a540bb3e85734",
																"typeString": "literal_string \"TaxableERC20: supply cannot be zero\""
															},
															"value": "TaxableERC20: supply cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_13b0d23b78e36e0ca5d50799970a37145ee5efca8eea0a88562a540bb3e85734",
																"typeString": "literal_string \"TaxableERC20: supply cannot be zero\""
															}
														],
														"id": 1190,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28349:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28349:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1196,
												"nodeType": "ExpressionStatement",
												"src": "28349:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1198,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "28435:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28435:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1200,
															"name": "initialBalance_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "28449:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1197,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "28429:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28429:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1202,
												"nodeType": "ExpressionStatement",
												"src": "28429:36:0"
											}
										]
									},
									"id": 1204,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1172,
													"name": "name_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1155,
													"src": "28153:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1173,
													"name": "symbol_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1157,
													"src": "28160:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1174,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1171,
												"name": "ERC20",
												"nameLocations": [
													"28147:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 815,
												"src": "28147:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28147:21:0"
										},
										{
											"arguments": [
												{
													"id": 1176,
													"name": "decimals_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1159,
													"src": "28192:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												}
											],
											"id": 1177,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1175,
												"name": "ERC20Decimals",
												"nameLocations": [
													"28178:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 842,
												"src": "28178:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28178:24:0"
										},
										{
											"arguments": [
												{
													"id": 1179,
													"name": "taxFeePerMille_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1163,
													"src": "28225:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"id": 1180,
													"name": "taxAddress_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1165,
													"src": "28242:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1181,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1178,
												"name": "ERC20Taxable",
												"nameLocations": [
													"28212:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1106,
												"src": "28212:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28212:42:0"
										},
										{
											"arguments": [
												{
													"id": 1183,
													"name": "feeReceiver_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1169,
													"src": "28277:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												{
													"hexValue": "54617861626c654552433230",
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "28291:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_34d645e6fb515b9fd30e6f2c0bf9bb4379879cf12faed5fa439ac2cdaedd66aa",
														"typeString": "literal_string \"TaxableERC20\""
													},
													"value": "TaxableERC20"
												},
												{
													"id": 1185,
													"name": "signature_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1167,
													"src": "28307:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												{
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1186,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "28319:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28319:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1188,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1182,
												"name": "ServicePayer",
												"nameLocations": [
													"28264:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1143,
												"src": "28264:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28264:68:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "27879:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "27865:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1154,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27865:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "27909:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "27895:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1156,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27895:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "decimals_",
												"nameLocation": "27933:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "27927:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1158,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "27927:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "initialBalance_",
												"nameLocation": "27961:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "27953:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27953:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "taxFeePerMille_",
												"nameLocation": "27995:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "27987:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27987:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "taxAddress_",
												"nameLocation": "28029:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "28021:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28021:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "signature_",
												"nameLocation": "28064:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "28051:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1166,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28051:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "feeReceiver_",
												"nameLocation": "28101:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "28085:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28085:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27854:266:0"
									},
									"returnParameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28338:0:0"
									},
									"scope": 1301,
									"src": "27843:630:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1216,
										"nodeType": "Block",
										"src": "28774:46:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1213,
															"name": "taxFeePerMille",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1207,
															"src": "28797:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1212,
														"name": "_setTaxRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "28785:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28785:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "28785:27:0"
											}
										]
									},
									"documentation": {
										"id": 1205,
										"nodeType": "StructuredDocumentation",
										"src": "28481:219:0",
										"text": " @dev Set the amount of tax fee per mille\n NOTE: restricting access to owner only. See {ERC20Taxable-_setTaxRate}.\n @param taxFeePerMille The amount of tax fee per mille"
									},
									"functionSelector": "b7600f7a",
									"id": 1217,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1210,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1209,
												"name": "onlyOwner",
												"nameLocations": [
													"28764:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "28764:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28764:9:0"
										}
									],
									"name": "setTaxFeePerMille",
									"nameLocation": "28715:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "taxFeePerMille",
												"nameLocation": "28741:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "28733:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28733:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28732:24:0"
									},
									"returnParameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28774:0:0"
									},
									"scope": 1301,
									"src": "28706:114:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1229,
										"nodeType": "Block",
										"src": "29113:45:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1226,
															"name": "taxAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "29139:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1225,
														"name": "_setTaxAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "29124:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29124:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1228,
												"nodeType": "ExpressionStatement",
												"src": "29124:26:0"
											}
										]
									},
									"documentation": {
										"id": 1218,
										"nodeType": "StructuredDocumentation",
										"src": "28828:219:0",
										"text": " @dev Set the address where to collect tax fee\n NOTE: restricting access to owner only. See {ERC20Taxable-_setTaxAddress}.\n @param taxAddress The deposit address for tax"
									},
									"functionSelector": "a1883d26",
									"id": 1230,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1223,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1222,
												"name": "onlyOwner",
												"nameLocations": [
													"29103:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "29103:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "29103:9:0"
										}
									],
									"name": "setTaxAddress",
									"nameLocation": "29062:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "taxAddress",
												"nameLocation": "29084:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "29076:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29076:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29075:20:0"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29113:0:0"
									},
									"scope": 1301,
									"src": "29053:105:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "29453:59:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1241,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "29488:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1242,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "29497:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1240,
														"name": "_setExclusionFromTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1105,
														"src": "29464:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29464:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1244,
												"nodeType": "ExpressionStatement",
												"src": "29464:40:0"
											}
										]
									},
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "29166:202:0",
										"text": " @dev Set the exclusion status from tax fee mechanism (both sending and receiving)\n NOTE: restricting access to owner only. See {ERC20Taxable-_setExclusionFromTaxFee}."
									},
									"functionSelector": "26789993",
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1238,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1237,
												"name": "onlyOwner",
												"nameLocations": [
													"29443:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "29443:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "29443:9:0"
										}
									],
									"name": "setExclusionFromTaxFee",
									"nameLocation": "29383:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "29414:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "29406:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29406:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "29428:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "29423:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1234,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29423:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29405:30:0"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29453:0:0"
									},
									"scope": 1301,
									"src": "29374:138:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										352,
										947
									],
									"body": {
										"id": 1264,
										"nodeType": "Block",
										"src": "29626:52:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1260,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "29659:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1261,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "29663:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1258,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "29644:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_TaxableERC20_$1301_$",
																"typeString": "type(contract super TaxableERC20)"
															}
														},
														"id": 1259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "29650:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 947,
														"src": "29644:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29644:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1257,
												"id": 1263,
												"nodeType": "Return",
												"src": "29637:33:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "29529:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1254,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1252,
												"name": "ERC20",
												"nameLocations": [
													"29590:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 815,
												"src": "29590:5:0"
											},
											{
												"id": 1253,
												"name": "ERC20Taxable",
												"nameLocations": [
													"29597:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1106,
												"src": "29597:12:0"
											}
										],
										"src": "29581:29:0"
									},
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "29546:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "29538:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29538:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "29558:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "29550:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29550:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29537:28:0"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "29620:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1255,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29620:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29619:6:0"
									},
									"scope": 1301,
									"src": "29520:158:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										428,
										1020
									],
									"body": {
										"id": 1286,
										"nodeType": "Block",
										"src": "29844:62:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1281,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "29881:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1282,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "29887:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1283,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "29891:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1279,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "29862:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_TaxableERC20_$1301_$",
																"typeString": "type(contract super TaxableERC20)"
															}
														},
														"id": 1280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "29868:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1020,
														"src": "29862:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29862:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1278,
												"id": 1285,
												"nodeType": "Return",
												"src": "29855:43:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "29695:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1275,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1273,
												"name": "ERC20",
												"nameLocations": [
													"29808:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 815,
												"src": "29808:5:0"
											},
											{
												"id": 1274,
												"name": "ERC20Taxable",
												"nameLocations": [
													"29815:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1106,
												"src": "29815:12:0"
											}
										],
										"src": "29799:29:0"
									},
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "29726:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "29718:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "29749:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "29741:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "29770:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "29762:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29762:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29707:76:0"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "29838:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1276,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29838:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29837:6:0"
									},
									"scope": 1301,
									"src": "29686:220:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										303,
										841
									],
									"body": {
										"id": 1299,
										"nodeType": "Block",
										"src": "30001:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1295,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "30019:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_TaxableERC20_$1301_$",
																"typeString": "type(contract super TaxableERC20)"
															}
														},
														"id": 1296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "30025:8:0",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 841,
														"src": "30019:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
															"typeString": "function () view returns (uint8)"
														}
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30019:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1294,
												"id": 1298,
												"nodeType": "Return",
												"src": "30012:23:0"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "29923:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1291,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1289,
												"name": "ERC20",
												"nameLocations": [
													"29963:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 815,
												"src": "29963:5:0"
											},
											{
												"id": 1290,
												"name": "ERC20Decimals",
												"nameLocations": [
													"29970:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 842,
												"src": "29970:13:0"
											}
										],
										"src": "29954:30:0"
									},
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29931:2:0"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "29994:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1292,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "29994:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29993:7:0"
									},
									"scope": 1301,
									"src": "29914:129:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1302,
							"src": "27760:2286:0",
							"usedErrors": [],
							"usedEvents": [
								33,
								143,
								152
							]
						}
					],
					"src": "1478:28570:0"
				},
				"id": 0
			}
		}
	}
}