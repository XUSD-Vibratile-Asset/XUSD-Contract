{
	"id": "44275c1dde8bdf9f516f09da0df5368e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"solidity/dysnomia/00b_vmreq.sol": {
				"content": "// SPDX-License-Identifier: Sharia\npragma solidity ^0.8.21;\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"../addresses.sol\";\nimport \"../old/faung.sol\";\n\ncontract VMREQ is ERC20, ERC20Burnable {\n    uint64 constant public MotzkinPrime = 953467954114363;\n    Faung internal Mu;\n\n    constructor() ERC20(unicode\"VM RNG\", unicode\"VMRNG\") {\n        Mu.Rod.Base = 605841066431434;\n        Mu.Rod.Secret = 824993723223339;\n        Mu.Rod.Signal = 543871960643842;\n        Mu.Rod.Channel = 557333596760636;\n        Mu.Rod.Pole = 0;\n        Mu.Rod.Identity = 300042286926212;\n        Mu.Rod.Foundation = 804691440536685;\n        Mu.Rod.Element = 2223096358950737;\n        Mu.Rod.Dynamo = 74321454125268;\n        Mu.Rod.Manifold = 698756333169944;\n        Mu.Rod.Ring = 1755455813924379;\n        Mu.Rod.Barn = 844220612947355;\n        Mu.Rod.Coordinate = 926738386658776;\n        Mu.Rod.Tau = 0;\n        Mu.Rod.Eta = 38813039039961;\n        Mu.Rod.Kappa = 345924396891853;\n        Mu.Rod.Alpha = 316408593601476;\n        Mu.Rod.Nu = 0;\n\n        Mu.Cone.Base = 605841066431434;\n        Mu.Cone.Secret = 706190044965693;\n        Mu.Cone.Signal = 187758195120264;\n        Mu.Cone.Channel = 516233364000849;\n        Mu.Cone.Pole = 0;\n        Mu.Cone.Identity = 300042286926212;\n        Mu.Cone.Foundation = 804691440536685;\n        Mu.Cone.Element = 2223096358950737;\n        Mu.Cone.Dynamo = 1571827393266281;\n        Mu.Cone.Manifold = 698756333169944;\n        Mu.Cone.Ring = 1755455813924379;\n        Mu.Cone.Barn = 844220612947355;\n        Mu.Cone.Coordinate = 926738386658776;\n        Mu.Cone.Tau = 170826679451140;\n        Mu.Cone.Eta = 430717954009114;\n        Mu.Cone.Kappa = 492098102631864;\n        Mu.Cone.Alpha = 144212477102829;\n        Mu.Cone.Nu = 1;\n\n        Mu.Phi = 0;\n        Mu.Eta = 711883198963442;\n        Mu.Xi = 314267673176633;\n        Mu.Sigma = 1187934864136657;\n        Mu.Rho = 986251199832430;\n        Mu.Upsilon = 150187595599280;\n        Mu.Ohm = 45735626874294;\n        Mu.Pi = 144212477102829;\n        Mu.Omega = 492098102631864;\n        Mu.Omicron = 210604844317827;\n        Mu.Chi = 0;\n    }\n\n    function View() public view returns(Faung memory) {\n        return Mu;\n    }\n\n    function Torque(Fa storage Rod, uint64 Sigma) internal returns(uint64) {\n        Rod.Alpha = modExp64(Sigma, Rod.Element, Rod.Channel);\n        return Rod.Alpha;\n    }\n\n    function Amplify(Fa storage Rod, uint64 Upsilon) internal returns(uint64) {\n        return Torque(Rod, Upsilon);\n    }\n\n    function Sustain(Fa storage Rod, uint64 Ohm) internal returns(uint64) {\n        return Torque(Rod, Ohm);\n    }\n\n    function React(Fa storage Rod, uint64 Pi, uint64 Theta) internal {\n        Rod.Eta = modExp64(Pi, Rod.Channel, Theta);\n        Rod.Kappa = modExp64(Pi, Theta, Rod.Channel);\n        assert(Rod.Eta != 0 && Rod.Kappa != 0);\n    }\n\n    function Random() public returns(uint64) {\n        Amplify(Mu.Cone, Mu.Upsilon);\n        Mu.Ohm = Mu.Cone.Alpha;\n        Sustain(Mu.Cone, Mu.Ohm);\n        Mu.Pi = Mu.Cone.Alpha;\n        React(Mu.Cone, Mu.Pi, Mu.Cone.Dynamo);\n        Mu.Omicron = Mu.Cone.Kappa;\n        React(Mu.Rod, Mu.Pi, Mu.Rod.Dynamo);\n        Mu.Omega = Mu.Omega ^ Mu.Rod.Kappa;\n        \n        Mu.Upsilon = Mu.Upsilon ^ Mu.Ohm ^ Mu.Pi;\n        \n        return Mu.Upsilon;\n    }\n\n    function hashWith(address a, address b) public returns (uint256 hash) {        \n        hash = 0;\n        uint160 _a = uint160(a);\n        uint160 _b = uint160(b) / 15;\n        unchecked {\n            while(hash == 0) {\n                hash = (_a**_b)%MotzkinPrime;\n                _b = _b/2;\n            }\n        }\n        return modExp(uint256(uint160(a)), uint256(uint160(b)), MotzkinPrime);\n    }\n\n    function modExp64(uint64 _b, uint64 _e, uint64 _m) public returns(uint64 result) {\n        uint256 B = _b;\n        uint256 E = _e;\n        uint256 M = _m;\n        uint64 R = uint64(modExp(B, E, M) % 18446744073709551615);\n        return R;\n    }\n\n    function modExp(uint256 _b, uint256 _e, uint256 _m) public returns (uint256 result) {\n        assembly {\n            // Free memory pointer\n            let pointer := mload(0x40)\n\n            // Define length of base, exponent and modulus. 0x20 == 32 bytes\n            mstore(pointer, 0x20)\n            mstore(add(pointer, 0x20), 0x20)\n            mstore(add(pointer, 0x40), 0x20)\n\n            // Define variables base, exponent and modulus\n            mstore(add(pointer, 0x60), _b)\n            mstore(add(pointer, 0x80), _e)\n            mstore(add(pointer, 0xa0), _m)\n\n            // Store the result\n            let value := mload(0xc0)\n\n            // Call the precompiled contract 0x05 = bigModExp\n            if iszero(call(not(0), 0x05, 0, pointer, 0xc0, value, 0x20)) {\n                revert(0, 0)\n            }\n\n            result := mload(value)\n        }\n    }\n}"
			},
			"solidity/old/faung.sol": {
				"content": "// SPDX-License-Identifier: Sharia\npragma solidity ^0.8.21;\nimport \"./fa.sol\";\n\nstruct Faung {\n    Fa Rod;\n    Fa Cone;\n\n    uint64 Phi;\n    uint64 Eta;\n    uint64 Xi;\n    uint64 Sigma;\n    uint64 Rho;\n    uint64 Upsilon;\n    uint64 Ohm;\n    uint64 Pi;\n    uint64 Omicron;\n    uint64 Omega;\n\n    uint8 Chi;\n}"
			},
			"solidity/addresses.sol": {
				"content": "// SPDX-License-Identifier: Sharia\npragma solidity ^0.8.21;\n\naddress constant dead = address(0x000000000000000000000000000000000000dEaD);\naddress constant atropa = address(0x7a20189B297343CF26d8548764b04891f37F3414);\naddress constant trebizond = address(0x903030f7e2d6489F38B0f4F96F9b371ec7960F78);\n\naddress constant dai = address(0x6B175474E89094C44Da98b954EedeAC495271d0F);\naddress constant usdc = address(0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48);\naddress constant usdt = address(0xdAC17F958D2ee523a2206206994597C13D831ec7);\n\naddress constant AtropaContract = address(0xCc78A0acDF847A2C1714D2A925bB4477df5d48a6);\naddress constant EasternLightningContract = address(0xCD6159D0a1aaE415E0c1504E90A5d741A28afc98);\naddress constant FinalContract = address(0x50E72874dCd7C198d370ac27c7B3cce9f9a0defd);\naddress constant KaContract = address(0x83a918056aB9316837Dc48a216119D679D561d91);\naddress constant BuckinghamContract = address(0xe5d3A6e88590fc2A8037D9CCbd816C05B1ff5f11);\naddress constant WheelContract = address(0xb9A44De20f26a027e467CB6c2F98766F01904189);\naddress constant LibertyContract = address(0xFE9b99eCC43cb423408b975cc5ff439e5ABaCb61);\naddress constant CherokeeContract = address(0xb4C1248812dAbF72cb2e82175b4c0aCffE4D2b10);\naddress constant DreidelContract = address(0x8A03b032c5494219B212e5a74A49e2aa7F9d206F);\naddress constant MantissaContract = address(0x0EB4EE7d5Ff28cbF68565A174f7E5e186c36B4b3);\naddress constant NeptuneContract = address(0x9A3796Cf41B7CbA6921fd50c3f5204ED6506C3e7);\naddress constant HarContract = address(0x557F7e30aA6D909Cfe8a229A4CB178ab186EC622);         // ʁ \naddress constant ThetaContract = address(0xCd19062a6d3019b02A676D72e51D8de7A398dE25);       // Ө\naddress constant CROWSContract = address(0x203e366A1821570b2f84Ff5ae8B3BdeB48Dc4fa1);\naddress constant MonatsContract = address(0xf8AB3393b1f5CD6184Fb6800A1fC802043C4063e);\naddress constant LegalContract = address(0x0b1307dc5D90a0B60Be18D2634843343eBc098AF);\naddress constant ScissorsContract = address(0x1b8F9E19360D1dc94295D984b7Ca7eA9b810D9ee);\naddress constant ReadingContract = address(0xf69e9f943674027Cedf05564A8D5A01041d07c62);     // পঁদাে়নুিং\naddress constant DiContract = address(0x347BC40503E0CE23fE0F5587F232Cd2D07D4Eb89);          // 第作\naddress constant dOWNContract = address(0x2556F7f8d82EbcdD7b821b0981C38D9dA9439CdD);\naddress constant STAYContract = address(0x7674516ad438dd67A057fBc1119168d9A7d2a9B1);\naddress constant INDEPENDENCEContract = address(0x8B090509eAe0fEB4A0B934de1b4345161fA9a62d);\naddress constant LOLContract = address(0xA63F8061A67ecdbf147Cd1B60f91Cf95464E868D);         // ލ\naddress constant Bullion5Contract = address(0x77Bed67181CeF592472bcb7F97736c560340E006);\naddress constant Bullion8Contract = address(0x2959221675bdF0e59D0cC3dE834a998FA5fFb9F4);    // ⑧\naddress constant TreasuryBillContract = address(0x463413c579D29c26D59a65312657DFCe30D545A1);\naddress constant TeddyBearContract = address(0xd6c31bA0754C4383A41c0e9DF042C62b5e918f6d);\naddress constant PoppyContract = address(0xdE65090088Df0b2d80A5eC6A7B56ECE36ee83ce8);\naddress constant OjeonContract = address(0xFa4d9C6E012d946853386113ACbF166deC5465Bb);\naddress constant YuContract = address(0x52a4682880E990ebed5309764C7BD29c4aE22deB);          // 유\naddress constant YingContract = address(0x271197EFe41073681577CdbBFD6Ee1DA259BAa3c);        // 籯\naddress constant MetisContract = address(0x36d4Ac3DF7Bf8aa3843Ad40C8b3eB67e3d18b4e1);       // ไมิติซส์\naddress constant GaiContract = address(0xd6077A029Fb5BEF33b02391D7f0349c345F6DDb1);\naddress constant DiscoContract = address(0xb6936B8e82626405f6E601D54a8292881D86b47D);\naddress constant HOSTContract = address(0x1162104a7b8766784153Dd2D6aC0eCEAecD28117);\naddress constant DampfContract = address(0x08Fe5c72173044314A74705089d014a4416Ed71D);\naddress constant DEIContract = address(0xF77c946C18A77B5DdA5e839dA9818C4D1f087393);\naddress constant TlingitContract = address(0x54D88F0c4a738247DadF160923E1b1C5dc4F510f);\naddress constant AbUrbeConditaContract = address(0x7FB09EE1a2c0E8b6D1c4E19C0248B3CbC0113af6);\naddress constant SIMContract = address(0xBb341FD5C855c206f5538cc649f90d84Df19b65a);\naddress constant BinContract = address(0xf520404CF4fa5B633626333775b05F5dF94E1a9C);\naddress constant PhDContract = address(0x6236073377AC7e0aB694957dA5d7d4241e72EBc6);\naddress constant LilliesContract = address(0xE949a217809d1Fab4018E22d6810500399951dAE);\naddress constant KremlinContract = address(0x7F51FdB20246D7a673036f11C743E99A4AF01de0);\naddress constant TwoContract = address(0xDf6A16689A893095C721542e5d3CE55bBcc23aC6);         // ㉣\naddress constant TseContract = address(0x3d67511733d976800467119264C3d4Cd9FA23041);\naddress constant FrockContract = address(0x8B8b26bB6C5fD4867339ab2f0acf3aE5129BD2F0);\naddress constant QingDaoContract = address(0xE63191967735C52f5de78CE2471759a9963Ce118);\naddress constant TSFiContract = address(0x4243568Fa2bbad327ee36e06c16824cAd8B37819);\naddress constant GreenlandContract = address(0xdE4Ef7Ea464c7771803b9838AeA07cE41089b054);\naddress constant BuddhaghosaContract = address(0x840CBD20A70774BECAc4e932Fff6fb1f5417997F);\naddress constant ZuoContract = address(0x583d1C1427308f7f96BFd3E0d7A3F9674D8BF8ec);\naddress constant HegelBetContract = address(0x51C36aA04ffC2139F6d34436d0EDC7f5ffc6D6Fb);\naddress constant HahnarchContract = address(0x4a458D04909a42F79d31805762B2abc38ab9407d);\naddress constant RabContract = address(0x89E8cD6306AbbAB8e39eeD0D53566d8dC2E02c01);\naddress constant LoanContract = address(0xeE67825eF27588FAeE39cfefb465eB0A242A740c);\naddress constant FreebiesContract = address(0x48F628c079353ECC4DB75F0d05de9299e083f3C2);\n\naddress constant WMContract = address(0xA1BEe1daE9Af77dAC73aA0459eD63b4D93fC6d29);\naddress constant IRCContract = address(0xD64f26Bcf78df919D587b6743fcFf5b155815bd6);\naddress constant NoContract = address(0x1942Ba1EA7c21a070D70C4eFe64B21694283F23e);\naddress constant CallContract = address(0xD4FD96BA83d3E6FF1A0Baa44c32Def94e641D97c);        // 𐌎\n\naddress constant TeddyBear9Contract = address(0x1f737F7994811fE994Fe72957C374e5cD5D5418A);\n\naddress constant BondContract = address(0x25d53961a27791B9D8b2d74FB3e937c8EAEadc38);\naddress constant BailContract = address(0x8B16115fF716b4c52706122cb4e974f7a72E5Af1);\naddress constant WritingContract = address(0x26D5906c4Cdf8C9F09CBd94049f99deaa874fB0b);\naddress constant SukukContract = address(0x72f96a39AC9408b5458E5597BBC22060552dedF4);\n\n// address constant FAContract = address(0xF2be09EB43c1eD2791d0324BaA0649e62CdA4BBF);\naddress constant hhFaContract = address(0xa28e8aA4d6257157de64a547c90B38C3c540eF72);\naddress constant NoNukesContract = address(0x174A0ad99c60c20D9B3D94c3095BC1fb9ddEFd62);\naddress constant WenTiContract = address(0xA537d6F4c1c8F8C41f1004cc34C00e7Db40179Cc);\naddress constant TwoCentClubContract = address(0x6293373BF0DAE2050641973D49b7b2f71adC91a1);\naddress constant BFFContract = address(0xE35A842eb1EDca4C710B6c1B1565cE7df13f5996);\naddress constant SECURITYContract = address(0x2234da59c2D5EDB197594C95dbbA7a99Bcd91230);\n//\naddress constant TRSIContract = address(0x51A7aaBcCa69B3c0F82b3b9ce5104FDe3efAecE6);\naddress constant BELContract = address(0x4C1518286E1b8D5669Fe965EF174B8B4Ae2f017B);\naddress constant KLANContract = address(0xC196247AA267Db0DF216d5385bCD23e5cf25EA6A);\naddress constant SMGContract = address(0xa8e8412d9B4341239269cBA38ad949fE4870be34);\naddress constant iCEContract = address(0x2fA079d2dAA29Ec8925484F9E9021e9191fE4aE4);\naddress constant PWAContract = address(0x5d4cb28eA61125a1fD3c927162C6F1969DD26788);\naddress constant LITContract = address(0xf5E3Cc8d22B10d967bE49FE103e496F449C8604E);\naddress constant RZRContract = address(0x50e40e8555AaB6b9c6CFF691E14070b6F38142Cb);\naddress constant FLTContract = address(0x86F0985Cd6Ab3196ea8DceBa87B92a2e22124633);\naddress constant GokuldhamContract = address(0x920401FDce49Fc70A2D4cD70DB0dD90212a97f98);\naddress constant KPOPContract = address(0x982B52a54916B899c60031772cc85b041613510E);\naddress constant CiAContract = address(0x2e5898b2e107a3cAf4f0597aCFE5D2e6d73F2196);\naddress constant ACiDContract = address(0xf8b6e89b851e03c724aad1F5170230A60490b819);\naddress constant MaltaContract = address(0xee62EE9A354E55dF7C39209B4304161369333fF7);\naddress constant ACABContract = address(0x241DA2613b0A01C2f60acB636b21A8E082E2f2F0);\n\n//\naddress constant BillBurrContract = address(0xF7ebb9bc80fb6395373c6BbDF690fcFfb217a691);\n\n//\naddress constant BonusContract = address(0xB8FaCE58CB05C55BBBA9c564A550cc2402A40b5b);\n\n///\naddress constant LEPROSYContract = address(0x7759A6D283192ef2BA082923d28Bec6eBfAf9D68);\n\n// royalty tokens\n/*\n0xC6F085DE4f388a48ce2942857455147A37870086\n0x80C105217885707BA0003ffAe7Ab01466E5E8488\n0xF2563864C22022deb03ce929c26C54033a69E9d5\n0xA78feD26D175b4B2c83F69Ca3eA195123ca30381\n0xdF606c14351fd52bF502d5F60D105320CF5D99D5\n0xa9353a16cA53a2009fEBF62029F8555216588Fea\n0x7ec9043c321A8759Ee5F917Da943979EC70Cf8e3\n*/\n\n//\naddress constant PIContract = address(0xA2262D7728C689526693aE893D0fD8a352C7073C);\naddress constant G5Contract = address(0x2fc636E7fDF9f3E8d61033103052079781a6e7D2);\n\n//\naddress constant libAtropaMathContract = address(0xB680F0cc810317933F234f67EB6A9E923407f05D);\naddress constant AFFECTIONContract = address(0x24F0154C1dCe548AdF15da2098Fdd8B8A3B8151D);\naddress constant RESTRAININGORDERContract = address(0xEf2125f5d1f7A3d68038F27e681258d13a73E718);\naddress constant WITHOUTContract = address(0x173216Ed67eBF3E6767D86e8b3Ff32e0d64437bF);\n\n//\naddress constant mariarahelContract = address(0xD32c39fEE49391c7952d1b30b15921b0D3b42E69);"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"solidity/old/fa.sol": {
				"content": "// SPDX-License-Identifier: Sharia\npragma solidity ^0.8.21;\n\nstruct Fa {\n        uint64 Base;\n        uint64 Secret;\n        uint64 Signal;\n        uint64 Channel;\n        uint64 Pole;\n        uint64 Identity;\n        uint64 Foundation;\n        uint64 Element;\n        uint64 Dynamo;\n        uint64 Manifold;\n        uint64 Ring;\n        uint64 Barn;\n        uint64 Coordinate;\n\n        uint64 Tau;\n        uint64 Eta;\n        uint64 Kappa;\n//        uint64 Rho;\n//        uint64 Beta;\n//        uint64 Phi;\n        uint64 Alpha;\n\n        uint8 Nu;        \n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 100
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"solidity/dysnomia/00b_vmreq.sol": {
				"VMREQ": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MotzkinPrime",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Random",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "View",
							"outputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "uint64",
													"name": "Base",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "Secret",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "Signal",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "Channel",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "Pole",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "Identity",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "Foundation",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "Element",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "Dynamo",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "Manifold",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "Ring",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "Barn",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "Coordinate",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "Tau",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "Eta",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "Kappa",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "Alpha",
													"type": "uint64"
												},
												{
													"internalType": "uint8",
													"name": "Nu",
													"type": "uint8"
												}
											],
											"internalType": "struct Fa",
											"name": "Rod",
											"type": "tuple"
										},
										{
											"components": [
												{
													"internalType": "uint64",
													"name": "Base",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "Secret",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "Signal",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "Channel",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "Pole",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "Identity",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "Foundation",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "Element",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "Dynamo",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "Manifold",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "Ring",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "Barn",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "Coordinate",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "Tau",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "Eta",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "Kappa",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "Alpha",
													"type": "uint64"
												},
												{
													"internalType": "uint8",
													"name": "Nu",
													"type": "uint8"
												}
											],
											"internalType": "struct Fa",
											"name": "Cone",
											"type": "tuple"
										},
										{
											"internalType": "uint64",
											"name": "Phi",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "Eta",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "Xi",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "Sigma",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "Rho",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "Upsilon",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "Ohm",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "Pi",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "Omicron",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "Omega",
											"type": "uint64"
										},
										{
											"internalType": "uint8",
											"name": "Chi",
											"type": "uint8"
										}
									],
									"internalType": "struct Faung",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "a",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "b",
									"type": "address"
								}
							],
							"name": "hashWith",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "hash",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_b",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_e",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_m",
									"type": "uint256"
								}
							],
							"name": "modExp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "_b",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "_e",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "_m",
									"type": "uint64"
								}
							],
							"name": "modExp64",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "result",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"solidity/dysnomia/00b_vmreq.sol\":246:4928  contract VMREQ is ERC20, ERC20Burnable {... */\n  mstore(0x40, 0x80)\n    /* \"solidity/dysnomia/00b_vmreq.sol\":374:2207  constructor() ERC20(unicode\"VM RNG\", unicode\"VMRNG\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x06\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xd0, 0x564d20524e47)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xd8, 0x564d524e47)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n  pop\n    /* \"solidity/dysnomia/00b_vmreq.sol\":558:590  Mu.Rod.Channel = 557333596760636 */\n  0x01fae4570e6a3c0001eea60f0479020002ee53d1d08d2b000227025d8e13ca\n    /* \"solidity/dysnomia/00b_vmreq.sol\":437:439  Mu */\n  0x05\n    /* \"solidity/dysnomia/00b_vmreq.sol\":558:590  Mu.Rod.Channel = 557333596760636 */\n  sstore\n  pop\n    /* \"solidity/dysnomia/00b_vmreq.sol\":713:746  Mu.Rod.Element = 2223096358950737 */\n  0x07e5e4f4c6d7510002dbdcd3778c6d000110e309ee09840000000000000000\n    /* \"solidity/dysnomia/00b_vmreq.sol\":600:611  Mu.Rod.Pole */\n  0x06\n    /* \"solidity/dysnomia/00b_vmreq.sol\":713:746  Mu.Rod.Element = 2223096358950737 */\n  dup2\n  swap1\n  sstore\n    /* \"solidity/dysnomia/00b_vmreq.sol\":879:908  Mu.Rod.Barn = 844220612947355 */\n  0x02ffd06dbf2d9b00063c93e835361b00027b83e305ed18000043984fdf50d4\n    /* \"solidity/dysnomia/00b_vmreq.sol\":756:769  Mu.Rod.Dynamo */\n  0x07\n    /* \"solidity/dysnomia/00b_vmreq.sol\":879:908  Mu.Rod.Barn = 844220612947355 */\n  sstore\n    /* \"solidity/dysnomia/00b_vmreq.sol\":1024:1054  Mu.Rod.Kappa = 345924396891853 */\n  0x013a9dcccbbecd0000234cdd6795d9000000000000000000034add185625d8\n    /* \"solidity/dysnomia/00b_vmreq.sol\":476:489  Mu.Rod.Secret */\n  0x08\n    /* \"solidity/dysnomia/00b_vmreq.sol\":1024:1054  Mu.Rod.Kappa = 345924396891853 */\n  sstore\n    /* \"solidity/dysnomia/00b_vmreq.sol\":1064:1076  Mu.Rod.Alpha */\n  0x09\n    /* \"solidity/dysnomia/00b_vmreq.sol\":1064:1094  Mu.Rod.Alpha = 316408593601476 */\n  dup1\n  sload\n  not(sub(shl(0x48, 0x01), 0x01))\n    /* \"solidity/dysnomia/00b_vmreq.sol\":1104:1117  Mu.Rod.Nu = 0 */\n  swap1\n  dup2\n  and\n    /* \"solidity/dysnomia/00b_vmreq.sol\":1079:1094  316408593601476 */\n  0x011fc59dd353c4\n    /* \"solidity/dysnomia/00b_vmreq.sol\":1104:1117  Mu.Rod.Nu = 0 */\n  or\n  swap1\n  swap2\n  sstore\n    /* \"solidity/dysnomia/00b_vmreq.sol\":1252:1285  Mu.Cone.Channel = 516233364000849 */\n  0x01d582f24850510000aac3dc86188800028246aec62b3d000227025d8e13ca\n    /* \"solidity/dysnomia/00b_vmreq.sol\":1128:1135  Mu.Cone */\n  0x0a\n    /* \"solidity/dysnomia/00b_vmreq.sol\":1252:1285  Mu.Cone.Channel = 516233364000849 */\n  sstore\n    /* \"solidity/dysnomia/00b_vmreq.sol\":1295:1307  Mu.Cone.Pole */\n  0x0b\n    /* \"solidity/dysnomia/00b_vmreq.sol\":1411:1445  Mu.Cone.Element = 2223096358950737 */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"solidity/dysnomia/00b_vmreq.sol\":1583:1613  Mu.Cone.Barn = 844220612947355 */\n  0x02ffd06dbf2d9b00063c93e835361b00027b83e305ed1800059591956c8269\n    /* \"solidity/dysnomia/00b_vmreq.sol\":1455:1469  Mu.Cone.Dynamo */\n  0x0c\n    /* \"solidity/dysnomia/00b_vmreq.sol\":1583:1613  Mu.Cone.Barn = 844220612947355 */\n  sstore\n    /* \"solidity/dysnomia/00b_vmreq.sol\":1747:1778  Mu.Cone.Kappa = 492098102631864 */\n  0x01bf8f849a1db8000187bc56a5a81a00009b5daf8bfe0400034add185625d8\n    /* \"solidity/dysnomia/00b_vmreq.sol\":1623:1641  Mu.Cone.Coordinate */\n  0x0d\n    /* \"solidity/dysnomia/00b_vmreq.sol\":1747:1778  Mu.Cone.Kappa = 492098102631864 */\n  sstore\n    /* \"solidity/dysnomia/00b_vmreq.sol\":1788:1801  Mu.Cone.Alpha */\n  0x0e\n    /* \"solidity/dysnomia/00b_vmreq.sol\":1788:1819  Mu.Cone.Alpha = 144212477102829 */\n  dup1\n  sload\n    /* \"solidity/dysnomia/00b_vmreq.sol\":1829:1843  Mu.Cone.Nu = 1 */\n  0x010000832915784aed\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"solidity/dysnomia/00b_vmreq.sol\":1941:1968  Mu.Sigma = 1187934864136657 */\n  0x04386ba397d9d100011dd325062a390002877439321ef20000000000000000\n    /* \"solidity/dysnomia/00b_vmreq.sol\":1854:1860  Mu.Phi */\n  0x0f\n    /* \"solidity/dysnomia/00b_vmreq.sol\":1941:1968  Mu.Sigma = 1187934864136657 */\n  sstore\n    /* \"solidity/dysnomia/00b_vmreq.sol\":2083:2106  Mu.Pi = 144212477102829 */\n  0x832915784aed00002998a7cb1db60000889846490db0000380fd806ce16e\n    /* \"solidity/dysnomia/00b_vmreq.sol\":517:530  Mu.Rod.Signal */\n  0x10\n    /* \"solidity/dysnomia/00b_vmreq.sol\":2083:2106  Mu.Pi = 144212477102829 */\n  sstore\n    /* \"solidity/dysnomia/00b_vmreq.sol\":2116:2124  Mu.Omega */\n  0x11\n    /* \"solidity/dysnomia/00b_vmreq.sol\":2116:2142  Mu.Omega = 492098102631864 */\n  dup1\n  sload\n  not(sub(shl(0x88, 0x01), 0x01))\n    /* \"solidity/dysnomia/00b_vmreq.sol\":2190:2200  Mu.Chi = 0 */\n  and\n    /* \"solidity/dysnomia/00b_vmreq.sol\":2152:2180  Mu.Omicron = 210604844317827 */\n  0x01bf8f849a1db80000bf8b42eefc83\n    /* \"solidity/dysnomia/00b_vmreq.sol\":2190:2200  Mu.Chi = 0 */\n  or\n  swap1\n  sstore\n    /* \"solidity/dysnomia/00b_vmreq.sol\":246:4928  contract VMREQ is ERC20, ERC20Burnable {... */\n  jump(tag_15)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_11:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_18:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_19:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1175   */\ntag_13:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1169   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":795:800   */\n  dup1\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":785:801   */\n  mstore\n    /* \"#utility.yul\":839:843   */\n  0x20\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":826:844   */\n  keccak256\n    /* \"#utility.yul\":909:911   */\n  0x1f\n    /* \"#utility.yul\":897:907   */\n  dup5\n    /* \"#utility.yul\":893:912   */\n  add\n    /* \"#utility.yul\":890:891   */\n  0x05\n    /* \"#utility.yul\":886:913   */\n  shr\n    /* \"#utility.yul\":880:884   */\n  dup2\n    /* \"#utility.yul\":876:914   */\n  add\n    /* \"#utility.yul\":945:949   */\n  0x20\n    /* \"#utility.yul\":933:943   */\n  dup6\n    /* \"#utility.yul\":930:950   */\n  lt\n    /* \"#utility.yul\":927:974   */\n  iszero\n  tag_23\n  jumpi\n  pop\n    /* \"#utility.yul\":968:972   */\n  dup1\n    /* \"#utility.yul\":927:974   */\ntag_23:\n    /* \"#utility.yul\":1023:1025   */\n  0x1f\n    /* \"#utility.yul\":1018:1021   */\n  dup5\n    /* \"#utility.yul\":1014:1026   */\n  add\n    /* \"#utility.yul\":1011:1012   */\n  0x05\n    /* \"#utility.yul\":1007:1027   */\n  shr\n    /* \"#utility.yul\":1001:1005   */\n  dup3\n    /* \"#utility.yul\":997:1028   */\n  add\n    /* \"#utility.yul\":987:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":1078:1159   */\ntag_24:\n    /* \"#utility.yul\":1096:1098   */\n  dup2\n    /* \"#utility.yul\":1089:1094   */\n  dup2\n    /* \"#utility.yul\":1086:1099   */\n  lt\n    /* \"#utility.yul\":1078:1159   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1141:1157   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1122:1123   */\n  0x01\n    /* \"#utility.yul\":1111:1124   */\n  add\n    /* \"#utility.yul\":1078:1159   */\n  jump(tag_24)\ntag_26:\n    /* \"#utility.yul\":1082:1085   */\n  pop\n  pop\n    /* \"#utility.yul\":748:1169   */\ntag_22:\n    /* \"#utility.yul\":657:1175   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1351:2650   */\ntag_6:\n    /* \"#utility.yul\":1471:1481   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1493:1523   */\n  dup2\n  gt\n    /* \"#utility.yul\":1490:1546   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1526:1544   */\n  tag_30\n  tag_10\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1555:1652   */\n  tag_31\n    /* \"#utility.yul\":1645:1651   */\n  dup2\n    /* \"#utility.yul\":1605:1643   */\n  tag_32\n    /* \"#utility.yul\":1637:1641   */\n  dup5\n    /* \"#utility.yul\":1631:1642   */\n  sload\n    /* \"#utility.yul\":1605:1643   */\n  tag_11\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1599:1603   */\n  dup5\n    /* \"#utility.yul\":1555:1652   */\n  tag_13\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1701:1705   */\n  0x20\n    /* \"#utility.yul\":1732:1734   */\n  0x1f\n    /* \"#utility.yul\":1721:1735   */\n  dup3\n  gt\n    /* \"#utility.yul\":1749:1750   */\n  0x01\n    /* \"#utility.yul\":1744:2393   */\n  dup2\n  eq\n  tag_34\n  jumpi\n    /* \"#utility.yul\":2437:2438   */\n  0x00\n    /* \"#utility.yul\":2454:2460   */\n  dup4\n    /* \"#utility.yul\":2451:2540   */\n  iszero\n  tag_35\n  jumpi\n  pop\n    /* \"#utility.yul\":2506:2525   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":2500:2526   */\n  mload\n    /* \"#utility.yul\":2451:2540   */\ntag_35:\n  not(0x00)\n    /* \"#utility.yul\":1308:1309   */\n  0x03\n    /* \"#utility.yul\":1304:1315   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1300:1324   */\n  shr\n    /* \"#utility.yul\":1296:1325   */\n  not\n    /* \"#utility.yul\":1286:1326   */\n  and\n    /* \"#utility.yul\":1332:1333   */\n  0x01\n    /* \"#utility.yul\":1328:1339   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1283:1340   */\n  or\n    /* \"#utility.yul\":2553:2634   */\n  dup5\n  sstore\n    /* \"#utility.yul\":1714:2644   */\n  jump(tag_26)\n    /* \"#utility.yul\":1744:2393   */\ntag_34:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1780:1800   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":1898:2120   */\ntag_38:\n    /* \"#utility.yul\":1912:1919   */\n  dup3\n    /* \"#utility.yul\":1909:1910   */\n  dup2\n    /* \"#utility.yul\":1906:1920   */\n  lt\n    /* \"#utility.yul\":1898:2120   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1994:2013   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":1988:2014   */\n  mload\n    /* \"#utility.yul\":1973:2015   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2101:2105   */\n  0x20\n    /* \"#utility.yul\":2086:2106   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2054:2055   */\n  0x01\n    /* \"#utility.yul\":2042:2056   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":1928:1940   */\n  add\n    /* \"#utility.yul\":1898:2120   */\n  jump(tag_38)\ntag_40:\n    /* \"#utility.yul\":1902:1905   */\n  pop\n    /* \"#utility.yul\":2148:2154   */\n  dup5\n    /* \"#utility.yul\":2139:2146   */\n  dup3\n    /* \"#utility.yul\":2136:2155   */\n  lt\n    /* \"#utility.yul\":2133:2334   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":2209:2228   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2203:2229   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2292:2293   */\n  0x03\n    /* \"#utility.yul\":2288:2302   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2304:2307   */\n  0xf8\n    /* \"#utility.yul\":2284:2308   */\n  and\n    /* \"#utility.yul\":2280:2317   */\n  shr\n    /* \"#utility.yul\":2276:2318   */\n  not\n    /* \"#utility.yul\":2261:2319   */\n  and\n    /* \"#utility.yul\":2246:2320   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2133:2334   */\ntag_41:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2380:2381   */\n  0x01\n    /* \"#utility.yul\":2364:2378   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2360:2382   */\n  add\n    /* \"#utility.yul\":2347:2383   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1351:2650   */\n  jump\t// out\ntag_15:\n    /* \"solidity/dysnomia/00b_vmreq.sol\":246:4928  contract VMREQ is ERC20, ERC20Burnable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"solidity/dysnomia/00b_vmreq.sol\":246:4928  contract VMREQ is ERC20, ERC20Burnable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x53df6e35\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x53df6e35\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x604a6fa9\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd3dc2a0f\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xfa6bcfec\n      eq\n      tag_19\n      jumpi\n      revert(0x00, 0x00)\n    tag_20:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1686f265\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3148f14f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1085:1099   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1078:1100   */\n      iszero\n        /* \"#utility.yul\":1060:1101   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1048:1050   */\n      0x20\n        /* \"#utility.yul\":1033:1051   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_23\n        /* \"#utility.yul\":920:1107   */\n      jump\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2213:2289  function View() public view returns(Faung memory) {... */\n    tag_5:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_35:\n      mload(0x40)\n        /* \"#utility.yul\":5216:5241   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5204:5206   */\n      0x20\n        /* \"#utility.yul\":5189:5207   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      tag_23\n        /* \"#utility.yul\":5070:5247   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_25\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"#utility.yul\":5773:5809   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5761:5763   */\n      0x20\n        /* \"#utility.yul\":5746:5764   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      tag_23\n        /* \"#utility.yul\":5631:5815   */\n      jump\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4054:4926  function modExp(uint256 _b, uint256 _e, uint256 _m) public returns (uint256 result) {... */\n    tag_9:\n      tag_35\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_10:\n      tag_53\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      stop\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3803:4048  function modExp64(uint64 _b, uint64 _e, uint64 _m) public returns(uint64 result) {... */\n    tag_11:\n      tag_57\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":7193:7224   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":7175:7225   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7163:7165   */\n      0x20\n        /* \"#utility.yul\":7148:7166   */\n      add\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3803:4048  function modExp64(uint64 _b, uint64 _e, uint64 _m) public returns(uint64 result) {... */\n      tag_23\n        /* \"#utility.yul\":7031:7231   */\n      jump\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2940:3390  function Random() public returns(uint64) {... */\n    tag_12:\n      tag_57\n      tag_64\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_35\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_14:\n      tag_53\n      tag_72\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_15:\n      tag_21\n      tag_75\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_16:\n      tag_25\n      tag_78\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n        /* \"solidity/dysnomia/00b_vmreq.sol\":291:344  uint64 constant public MotzkinPrime = 953467954114363 */\n    tag_17:\n      tag_57\n        /* \"solidity/dysnomia/00b_vmreq.sol\":329:344  953467954114363 */\n      0x03632c8eb5af3b\n        /* \"solidity/dysnomia/00b_vmreq.sol\":291:344  uint64 constant public MotzkinPrime = 953467954114363 */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_18:\n      tag_35\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3396:3797  function hashWith(address a, address b) public returns (uint256 hash) {        ... */\n    tag_19:\n      tag_35\n      tag_90\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_94\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_96\n      swap1\n      tag_95\n      jump\t// in\n    tag_96:\n      dup1\n      iszero\n      tag_97\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_98\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_97)\n    tag_98:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_99:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_99\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_103\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_100:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2213:2289  function View() public view returns(Faung memory) {... */\n    tag_32:\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2249:2261  Faung memory */\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2280:2282  Mu */\n      0x05\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2273:2282  return Mu */\n      mload(0x40)\n      dup1\n      0x01a0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      mload(0x40)\n      dup1\n      0x0240\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x18\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x18\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      0x18\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x18\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      mload(0x40)\n      dup1\n      0x0240\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x18\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x18\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      0x18\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x18\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x0a\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x0a\n      dup3\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x0a\n      dup3\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x0a\n      dup3\n      add\n      0x18\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x0b\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x0b\n      dup3\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x0b\n      dup3\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x0b\n      dup3\n      add\n      0x18\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x0c\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x0c\n      dup3\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x0c\n      dup3\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2213:2289  function View() public view returns(Faung memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_113:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4054:4926  function modExp(uint256 _b, uint256 _e, uint256 _m) public returns (uint256 result) {... */\n    tag_51:\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4122:4136  uint256 result */\n      0x00\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4227:4231  0x40 */\n      0x40\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4221:4232  mload(0x40) */\n      mload\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4339:4343  0x20 */\n      0x20\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4330:4337  pointer */\n      dup2\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4323:4344  mstore(pointer, 0x20) */\n      mstore\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4384:4388  0x20 */\n      0x20\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4377:4381  0x20 */\n      dup1\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4368:4375  pointer */\n      dup3\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4364:4382  add(pointer, 0x20) */\n      add\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4357:4389  mstore(add(pointer, 0x20), 0x20) */\n      mstore\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4429:4433  0x20 */\n      0x20\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4422:4426  0x40 */\n      0x40\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4413:4420  pointer */\n      dup3\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4409:4427  add(pointer, 0x40) */\n      add\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4402:4434  mstore(add(pointer, 0x40), 0x20) */\n      mstore\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4534:4536  _b */\n      dup5\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4527:4531  0x60 */\n      0x60\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4518:4525  pointer */\n      dup3\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4514:4532  add(pointer, 0x60) */\n      add\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4507:4537  mstore(add(pointer, 0x60), _b) */\n      mstore\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4577:4579  _e */\n      dup4\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4570:4574  0x80 */\n      0x80\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4561:4568  pointer */\n      dup3\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4557:4575  add(pointer, 0x80) */\n      add\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4550:4580  mstore(add(pointer, 0x80), _e) */\n      mstore\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4620:4622  _m */\n      dup3\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4613:4617  0xa0 */\n      0xa0\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4604:4611  pointer */\n      dup3\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4600:4618  add(pointer, 0xa0) */\n      add\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4593:4623  mstore(add(pointer, 0xa0), _m) */\n      mstore\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4688:4692  0xc0 */\n      0xc0\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4682:4693  mload(0xc0) */\n      mload\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4823:4827  0x20 */\n      0x20\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4816:4821  value */\n      dup2\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4810:4814  0xc0 */\n      0xc0\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4801:4808  pointer */\n      dup5\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4798:4799  0 */\n      0x00\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4792:4796  0x05 */\n      0x05\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4788:4789  0 */\n      0x00\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4784:4790  not(0) */\n      not\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4779:4828  call(not(0), 0x05, 0, pointer, 0xc0, value, 0x20) */\n      call\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4769:4874  if iszero(call(not(0), 0x05, 0, pointer, 0xc0, value, 0x20)) {... */\n      tag_117\n      jumpi\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4858:4859  0 */\n      0x00\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4855:4856  0 */\n      0x00\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4848:4860  revert(0, 0) */\n      revert\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4769:4874  if iszero(call(not(0), 0x05, 0, pointer, 0xc0, value, 0x20)) {... */\n    tag_117:\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4898:4910  mload(value) */\n      mload\n      swap6\n        /* \"solidity/dysnomia/00b_vmreq.sol\":4054:4926  function modExp(uint256 _b, uint256 _e, uint256 _m) public returns (uint256 result) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_119\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3803:4048  function modExp64(uint64 _b, uint64 _e, uint64 _m) public returns(uint64 result) {... */\n    tag_60:\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3869:3882  uint64 result */\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3894:3908  uint256 B = _b */\n      dup1\n      dup6\n      and\n      swap1\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3918:3932  uint256 E = _e */\n      dup5\n      dup2\n      and\n      swap1\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3942:3956  uint256 M = _m */\n      dup5\n      dup2\n      and\n      swap1\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3869:3882  uint64 result */\n      dup5\n      swap1\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3984:3999  modExp(B, E, M) */\n      tag_123\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3894:3908  uint256 B = _b */\n      dup6\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3918:3932  uint256 E = _e */\n      dup6\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3942:3956  uint256 M = _m */\n      dup6\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3984:3990  modExp */\n      tag_51\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3984:3999  modExp(B, E, M) */\n      jump\t// in\n    tag_123:\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3984:4022  modExp(B, E, M) % 18446744073709551615 */\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3966:4023  uint64 R = uint64(modExp(B, E, M) % 18446744073709551615) */\n      swap9\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3803:4048  function modExp64(uint64 _b, uint64 _e, uint64 _m) public returns(uint64 result) {... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2940:3390  function Random() public returns(uint64) {... */\n    tag_64:\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3008:3018  Mu.Upsilon */\n      sload(0x10)\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2973:2979  uint64 */\n      0x00\n      swap1\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2991:3019  Amplify(Mu.Cone, Mu.Upsilon) */\n      tag_127\n      swap1\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2999:3006  Mu.Cone */\n      0x0a\n      swap1\n      shl(0x40, 0x01)\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3008:3018  Mu.Upsilon */\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2991:2998  Amplify */\n      tag_128\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2991:3019  Amplify(Mu.Cone, Mu.Upsilon) */\n      jump\t// in\n    tag_127:\n      pop\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3038:3051  Mu.Cone.Alpha */\n      sload(0x0e)\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3029:3035  Mu.Ohm */\n      0x10\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3029:3051  Mu.Ohm = Mu.Cone.Alpha */\n      dup1\n      sload\n      not(shl(0x80, 0xffffffffffffffff))\n      and\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3038:3051  Mu.Cone.Alpha */\n      swap3\n      dup4\n      and\n      shl(0x80, 0x01)\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3029:3051  Mu.Ohm = Mu.Cone.Alpha */\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      or\n      swap2\n      dup3\n      swap1\n      sstore\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3061:3085  Sustain(Mu.Cone, Mu.Ohm) */\n      tag_129\n      swap3\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3038:3045  Mu.Cone */\n      0x0a\n      swap3\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3078:3084  Mu.Ohm */\n      swap2\n      swap1\n      swap2\n      div\n      and\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3061:3068  Sustain */\n      tag_128\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3061:3085  Sustain(Mu.Cone, Mu.Ohm) */\n      jump\t// in\n    tag_129:\n      pop\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3103:3116  Mu.Cone.Alpha */\n      sload(0x0e)\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3095:3100  Mu.Pi */\n      0x10\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3095:3116  Mu.Pi = Mu.Cone.Alpha */\n      dup1\n      sload\n      sub(shl(0xc0, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3103:3116  Mu.Cone.Alpha */\n      swap3\n      dup4\n      and\n      shl(0xc0, 0x01)\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3095:3116  Mu.Pi = Mu.Cone.Alpha */\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      or\n      swap2\n      dup3\n      swap1\n      sstore\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3148:3162  Mu.Cone.Dynamo */\n      sload(0x0c)\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3126:3163  React(Mu.Cone, Mu.Pi, Mu.Cone.Dynamo) */\n      tag_131\n      swap4\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3103:3110  Mu.Cone */\n      0x0a\n      swap4\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3141:3146  Mu.Pi */\n      swap3\n      swap1\n      swap3\n      div\n      dup3\n      and\n      swap2\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3148:3162  Mu.Cone.Dynamo */\n      and\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3126:3131  React */\n      tag_132\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3126:3163  React(Mu.Cone, Mu.Pi, Mu.Cone.Dynamo) */\n      jump\t// in\n    tag_131:\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3186:3199  Mu.Cone.Kappa */\n      sload(0x0d)\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3173:3183  Mu.Omicron */\n      0x11\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3173:3199  Mu.Omicron = Mu.Cone.Kappa */\n      dup1\n      sload\n      not(0xffffffffffffffff)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      shl(0xc0, 0x01)\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3186:3199  Mu.Cone.Kappa */\n      swap4\n      dup5\n      swap1\n      div\n      dup2\n      and\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3173:3199  Mu.Omicron = Mu.Cone.Kappa */\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3223:3228  Mu.Pi */\n      sload(0x10)\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3230:3243  Mu.Rod.Dynamo */\n      sload(0x07)\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3209:3244  React(Mu.Rod, Mu.Pi, Mu.Rod.Dynamo) */\n      tag_133\n      swap4\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3186:3188  Mu */\n      0x05\n      swap4\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3223:3228  Mu.Pi */\n      swap3\n      div\n      dup3\n      and\n      swap2\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3230:3243  Mu.Rod.Dynamo */\n      and\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3209:3214  React */\n      tag_132\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3209:3244  React(Mu.Rod, Mu.Pi, Mu.Rod.Dynamo) */\n      jump\t// in\n    tag_133:\n      pop\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3276:3288  Mu.Rod.Kappa */\n      sload(0x08)\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3265:3273  Mu.Omega */\n      0x11\n      dup1\n      sload\n      shl(0x40, 0x01)\n      dup1\n      dup3\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      shl(0xc0, 0x01)\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3276:3288  Mu.Rod.Kappa */\n      swap6\n      dup7\n      swap1\n      div\n      dup3\n      and\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3265:3288  Mu.Omega ^ Mu.Rod.Kappa */\n      xor\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3254:3288  Mu.Omega = Mu.Omega ^ Mu.Rod.Kappa */\n      dup2\n      and\n      dup3\n      mul\n      not(shl(0x40, 0xffffffffffffffff))\n      swap4\n      dup5\n      and\n      or\n      swap1\n      swap4\n      sstore\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3342:3347  Mu.Pi */\n      0x10\n      dup1\n      sload\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3320:3330  Mu.Upsilon */\n      dup3\n      dup2\n      div\n      dup6\n      and\n      shl(0x80, 0x01)\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3333:3339  Mu.Ohm */\n      dup3\n      div\n      dup7\n      and\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3320:3339  Mu.Upsilon ^ Mu.Ohm */\n      xor\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3342:3347  Mu.Pi */\n      swap6\n      dup2\n      div\n      dup6\n      and\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3320:3347  Mu.Upsilon ^ Mu.Ohm ^ Mu.Pi */\n      swap6\n      swap1\n      swap6\n      xor\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3307:3347  Mu.Upsilon = Mu.Upsilon ^ Mu.Ohm ^ Mu.Pi */\n      dup5\n      and\n      dup3\n      mul\n      swap5\n      swap1\n      swap3\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      dup2\n      swap1\n      sstore\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3373:3383  Mu.Upsilon */\n      swap2\n      swap1\n      swap2\n      div\n      and\n      swap1\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2940:3390  function Random() public returns(uint64) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_94\n      swap1\n      tag_95\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_103\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_87:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3396:3797  function hashWith(address a, address b) public returns (uint256 hash) {        ... */\n    tag_91:\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3452:3464  uint256 hash */\n      0x00\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3523:3524  a */\n      dup3\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3452:3464  uint256 hash */\n      dup2\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3548:3563  uint160(b) / 15 */\n      tag_150\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3561:3563  15 */\n      0x0f\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3556:3557  b */\n      dup6\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3548:3563  uint160(b) / 15 */\n      tag_151\n      jump\t// in\n    tag_150:\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3535:3563  uint160 _b = uint160(b) / 15 */\n      swap1\n      pop\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3597:3702  while(hash == 0) {... */\n    tag_152:\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3603:3607  hash */\n      dup3\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3611:3612  0 */\n      0x00\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3603:3612  hash == 0 */\n      sub\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3597:3702  while(hash == 0) {... */\n      tag_153\n      jumpi\n        /* \"solidity/dysnomia/00b_vmreq.sol\":329:344  953467954114363 */\n      0x03632c8eb5af3b\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3640:3646  _a**_b */\n      dup1\n      dup4\n      and\n      dup5\n      dup3\n      and\n      exp\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3639:3660  (_a**_b)%MotzkinPrime */\n      and\n      mod\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3632:3660  hash = (_a**_b)%MotzkinPrime */\n      and\n      swap3\n      pop\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3686:3687  2 */\n      0x02\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3683:3685  _b */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3683:3687  _b/2 */\n      and\n      dup2\n      tag_158\n      jumpi\n      tag_158\n      tag_156\n      jump\t// in\n    tag_158:\n      div\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3678:3687  _b = _b/2 */\n      swap1\n      pop\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3597:3702  while(hash == 0) {... */\n      jump(tag_152)\n    tag_153:\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3728:3790  modExp(uint256(uint160(a)), uint256(uint160(b)), MotzkinPrime) */\n      tag_159\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3735:3754  uint256(uint160(a)) */\n      dup1\n      dup8\n      and\n      swap1\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3756:3775  uint256(uint160(b)) */\n      dup7\n      and\n        /* \"solidity/dysnomia/00b_vmreq.sol\":329:344  953467954114363 */\n      0x03632c8eb5af3b\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3728:3734  modExp */\n      tag_51\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3728:3790  modExp(uint256(uint160(a)), uint256(uint160(b)), MotzkinPrime) */\n      jump\t// in\n    tag_159:\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3721:3790  return modExp(uint256(uint160(a)), uint256(uint160(b)), MotzkinPrime) */\n      swap6\n        /* \"solidity/dysnomia/00b_vmreq.sol\":3396:3797  function hashWith(address a, address b) public returns (uint256 hash) {        ... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_167\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_172\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_172:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_175\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_121:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_180\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2468:2586  function Amplify(Fa storage Rod, uint64 Upsilon) internal returns(uint64) {... */\n    tag_128:\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2534:2540  uint64 */\n      0x00\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2559:2579  Torque(Rod, Upsilon) */\n      tag_184\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2566:2569  Rod */\n      dup4\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2571:2578  Upsilon */\n      dup4\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2559:2565  Torque */\n      tag_185\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2559:2579  Torque(Rod, Upsilon) */\n      jump\t// in\n    tag_184:\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2552:2579  return Torque(Rod, Upsilon) */\n      swap4\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2468:2586  function Amplify(Fa storage Rod, uint64 Upsilon) internal returns(uint64) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2708:2934  function React(Fa storage Rod, uint64 Pi, uint64 Theta) internal {... */\n    tag_132:\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2806:2817  Rod.Channel */\n      dup3\n      sload\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2793:2825  modExp64(Pi, Rod.Channel, Theta) */\n      tag_189\n      swap1\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2802:2804  Pi */\n      dup4\n      swap1\n      shl(0xc0, 0x01)\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2806:2817  Rod.Channel */\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2819:2824  Theta */\n      dup4\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2793:2801  modExp64 */\n      tag_60\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2793:2825  modExp64(Pi, Rod.Channel, Theta) */\n      jump\t// in\n    tag_189:\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2783:2790  Rod.Eta */\n      0x03\n      dup5\n      add\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2783:2825  Rod.Eta = modExp64(Pi, Rod.Channel, Theta) */\n      dup1\n      sload\n      not(shl(0x80, 0xffffffffffffffff))\n      and\n      shl(0x80, 0x01)\n      sub(shl(0x40, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      mul\n      or\n      swap1\n      sstore\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2867:2878  Rod.Channel */\n      dup4\n      sload\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2847:2879  modExp64(Pi, Theta, Rod.Channel) */\n      tag_190\n      swap2\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2856:2858  Pi */\n      dup5\n      swap2\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2860:2865  Theta */\n      dup5\n      swap2\n      shl(0xc0, 0x01)\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2867:2878  Rod.Channel */\n      swap1\n      swap2\n      div\n      and\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2847:2855  modExp64 */\n      tag_60\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2847:2879  modExp64(Pi, Theta, Rod.Channel) */\n      jump\t// in\n    tag_190:\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2835:2844  Rod.Kappa */\n      0x03\n      dup5\n      add\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2835:2879  Rod.Kappa = modExp64(Pi, Theta, Rod.Channel) */\n      dup1\n      sload\n      sub(shl(0xc0, 0x01), 0x01)\n      and\n      shl(0xc0, 0x01)\n      sub(shl(0x40, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      mul\n      or\n      swap1\n      dup2\n      swap1\n      sstore\n      shl(0x80, 0x01)\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2896:2903  Rod.Eta */\n      swap1\n      div\n      and\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2896:2908  Rod.Eta != 0 */\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2896:2926  Rod.Eta != 0 && Rod.Kappa != 0 */\n      tag_191\n      jumpi\n      pop\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2912:2921  Rod.Kappa */\n      0x03\n      dup4\n      add\n      sload\n      shl(0xc0, 0x01)\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2912:2926  Rod.Kappa != 0 */\n      iszero\n      iszero\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2896:2926  Rod.Eta != 0 && Rod.Kappa != 0 */\n    tag_191:\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2889:2927  assert(Rod.Eta != 0 && Rod.Kappa != 0) */\n      tag_162\n      jumpi\n      tag_162\n      tag_194\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_163:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_196:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_198\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_198:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_201\n      swap2\n        /* \"#utility.yul\":5216:5241   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5204:5206   */\n      0x20\n        /* \"#utility.yul\":5189:5207   */\n      add\n      swap1\n        /* \"#utility.yul\":5070:5247   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_178:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_203\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_204\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_206\n      swap1\n      pop\n      jump\n    tag_203:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_207:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_206:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_210)\n    tag_209:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_211\n      swap2\n        /* \"#utility.yul\":5216:5241   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5204:5206   */\n      0x20\n        /* \"#utility.yul\":5189:5207   */\n      add\n      swap1\n        /* \"#utility.yul\":5070:5247   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2295:2462  function Torque(Fa storage Rod, uint64 Sigma) internal returns(uint64) {... */\n    tag_185:\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2404:2415  Rod.Element */\n      0x01\n      dup3\n      add\n      sload\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2417:2428  Rod.Channel */\n      dup3\n      sload\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2358:2364  uint64 */\n      0x00\n      swap2\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2388:2429  modExp64(Sigma, Rod.Element, Rod.Channel) */\n      tag_213\n      swap2\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2397:2402  Sigma */\n      dup5\n      swap2\n      sub(shl(0x40, 0x01), 0x01)\n      shl(0xc0, 0x01)\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2404:2415  Rod.Element */\n      swap2\n      dup3\n      swap1\n      div\n      dup2\n      and\n      swap3\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2417:2428  Rod.Channel */\n      swap2\n      swap1\n      swap2\n      div\n      and\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2388:2396  modExp64 */\n      tag_60\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2388:2429  modExp64(Sigma, Rod.Element, Rod.Channel) */\n      jump\t// in\n    tag_213:\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2376:2385  Rod.Alpha */\n      0x04\n      dup5\n      add\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2376:2429  Rod.Alpha = modExp64(Sigma, Rod.Element, Rod.Channel) */\n      dup1\n      sload\n      sub(shl(0x40, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      not(0xffffffffffffffff)\n      swap1\n      swap3\n      and\n      dup3\n      or\n      swap1\n      sstore\n      swap1\n      pop\n        /* \"solidity/dysnomia/00b_vmreq.sol\":2295:2462  function Torque(Fa storage Rod, uint64 Sigma) internal returns(uint64) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_106:\n      mload(0x40)\n      dup1\n      0x01a0\n      add\n      0x40\n      mstore\n      dup1\n      tag_214\n      tag_215\n      jump\t// in\n    tag_214:\n      dup2\n      mstore\n      0x20\n      add\n      tag_216\n      tag_215\n      jump\t// in\n    tag_216:\n      dup2\n      mstore\n      0x00\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x60\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x80\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0xa0\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0xc0\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0xe0\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x0100\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x0120\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x0140\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x0160\n      swap1\n      swap2\n      add\n      mstore\n      swap1\n      jump\t// out\n    tag_215:\n      0x40\n      dup1\n      mload\n      0x0240\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x60\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x80\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0xa0\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0xc0\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0xe0\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x0100\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x0120\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x0140\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x0160\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x0180\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x01a0\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x01c0\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x01e0\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x0200\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x0220\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:432   */\n    tag_24:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:610   */\n    tag_217:\n        /* \"#utility.yul\":505:525   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":554:585   */\n      dup2\n      and\n        /* \"#utility.yul\":544:586   */\n      dup2\n      eq\n        /* \"#utility.yul\":534:604   */\n      tag_225\n      jumpi\n        /* \"#utility.yul\":600:601   */\n      0x00\n        /* \"#utility.yul\":597:598   */\n      0x00\n        /* \"#utility.yul\":590:602   */\n      revert\n        /* \"#utility.yul\":534:604   */\n    tag_225:\n        /* \"#utility.yul\":437:610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:915   */\n    tag_27:\n        /* \"#utility.yul\":683:689   */\n      0x00\n        /* \"#utility.yul\":691:697   */\n      0x00\n        /* \"#utility.yul\":744:746   */\n      0x40\n        /* \"#utility.yul\":732:741   */\n      dup4\n        /* \"#utility.yul\":723:730   */\n      dup6\n        /* \"#utility.yul\":719:742   */\n      sub\n        /* \"#utility.yul\":715:747   */\n      slt\n        /* \"#utility.yul\":712:764   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":760:761   */\n      0x00\n        /* \"#utility.yul\":757:758   */\n      0x00\n        /* \"#utility.yul\":750:762   */\n      revert\n        /* \"#utility.yul\":712:764   */\n    tag_227:\n        /* \"#utility.yul\":783:812   */\n      tag_228\n        /* \"#utility.yul\":802:811   */\n      dup4\n        /* \"#utility.yul\":783:812   */\n      tag_217\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":773:812   */\n      swap5\n        /* \"#utility.yul\":881:883   */\n      0x20\n        /* \"#utility.yul\":866:884   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":853:885   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":615:915   */\n      jump\t// out\n        /* \"#utility.yul\":1299:3350   */\n    tag_220:\n        /* \"#utility.yul\":1373:1385   */\n      dup1\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1177:1207   */\n      and\n        /* \"#utility.yul\":1165:1208   */\n      dup3\n      mstore\n        /* \"#utility.yul\":1437:1441   */\n      0x20\n        /* \"#utility.yul\":1430:1435   */\n      dup2\n        /* \"#utility.yul\":1426:1442   */\n      add\n        /* \"#utility.yul\":1420:1443   */\n      mload\n        /* \"#utility.yul\":1452:1499   */\n      tag_234\n        /* \"#utility.yul\":1493:1497   */\n      0x20\n        /* \"#utility.yul\":1488:1491   */\n      dup5\n        /* \"#utility.yul\":1484:1498   */\n      add\n        /* \"#utility.yul\":1470:1482   */\n      dup3\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1177:1207   */\n      and\n        /* \"#utility.yul\":1165:1208   */\n      swap1\n      mstore\n        /* \"#utility.yul\":1112:1214   */\n      jump\n        /* \"#utility.yul\":1452:1499   */\n    tag_234:\n      pop\n        /* \"#utility.yul\":1547:1551   */\n      0x40\n        /* \"#utility.yul\":1540:1545   */\n      dup2\n        /* \"#utility.yul\":1536:1552   */\n      add\n        /* \"#utility.yul\":1530:1553   */\n      mload\n        /* \"#utility.yul\":1562:1611   */\n      tag_235\n        /* \"#utility.yul\":1605:1609   */\n      0x40\n        /* \"#utility.yul\":1600:1603   */\n      dup5\n        /* \"#utility.yul\":1596:1610   */\n      add\n        /* \"#utility.yul\":1580:1594   */\n      dup3\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1177:1207   */\n      and\n        /* \"#utility.yul\":1165:1208   */\n      swap1\n      mstore\n        /* \"#utility.yul\":1112:1214   */\n      jump\n        /* \"#utility.yul\":1562:1611   */\n    tag_235:\n      pop\n        /* \"#utility.yul\":1659:1663   */\n      0x60\n        /* \"#utility.yul\":1652:1657   */\n      dup2\n        /* \"#utility.yul\":1648:1664   */\n      add\n        /* \"#utility.yul\":1642:1665   */\n      mload\n        /* \"#utility.yul\":1674:1723   */\n      tag_236\n        /* \"#utility.yul\":1717:1721   */\n      0x60\n        /* \"#utility.yul\":1712:1715   */\n      dup5\n        /* \"#utility.yul\":1708:1722   */\n      add\n        /* \"#utility.yul\":1692:1706   */\n      dup3\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1177:1207   */\n      and\n        /* \"#utility.yul\":1165:1208   */\n      swap1\n      mstore\n        /* \"#utility.yul\":1112:1214   */\n      jump\n        /* \"#utility.yul\":1674:1723   */\n    tag_236:\n      pop\n        /* \"#utility.yul\":1771:1775   */\n      0x80\n        /* \"#utility.yul\":1764:1769   */\n      dup2\n        /* \"#utility.yul\":1760:1776   */\n      add\n        /* \"#utility.yul\":1754:1777   */\n      mload\n        /* \"#utility.yul\":1786:1835   */\n      tag_237\n        /* \"#utility.yul\":1829:1833   */\n      0x80\n        /* \"#utility.yul\":1824:1827   */\n      dup5\n        /* \"#utility.yul\":1820:1834   */\n      add\n        /* \"#utility.yul\":1804:1818   */\n      dup3\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1177:1207   */\n      and\n        /* \"#utility.yul\":1165:1208   */\n      swap1\n      mstore\n        /* \"#utility.yul\":1112:1214   */\n      jump\n        /* \"#utility.yul\":1786:1835   */\n    tag_237:\n      pop\n        /* \"#utility.yul\":1883:1887   */\n      0xa0\n        /* \"#utility.yul\":1876:1881   */\n      dup2\n        /* \"#utility.yul\":1872:1888   */\n      add\n        /* \"#utility.yul\":1866:1889   */\n      mload\n        /* \"#utility.yul\":1898:1947   */\n      tag_238\n        /* \"#utility.yul\":1941:1945   */\n      0xa0\n        /* \"#utility.yul\":1936:1939   */\n      dup5\n        /* \"#utility.yul\":1932:1946   */\n      add\n        /* \"#utility.yul\":1916:1930   */\n      dup3\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1177:1207   */\n      and\n        /* \"#utility.yul\":1165:1208   */\n      swap1\n      mstore\n        /* \"#utility.yul\":1112:1214   */\n      jump\n        /* \"#utility.yul\":1898:1947   */\n    tag_238:\n      pop\n        /* \"#utility.yul\":1995:1999   */\n      0xc0\n        /* \"#utility.yul\":1988:1993   */\n      dup2\n        /* \"#utility.yul\":1984:2000   */\n      add\n        /* \"#utility.yul\":1978:2001   */\n      mload\n        /* \"#utility.yul\":2010:2059   */\n      tag_239\n        /* \"#utility.yul\":2053:2057   */\n      0xc0\n        /* \"#utility.yul\":2048:2051   */\n      dup5\n        /* \"#utility.yul\":2044:2058   */\n      add\n        /* \"#utility.yul\":2028:2042   */\n      dup3\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1177:1207   */\n      and\n        /* \"#utility.yul\":1165:1208   */\n      swap1\n      mstore\n        /* \"#utility.yul\":1112:1214   */\n      jump\n        /* \"#utility.yul\":2010:2059   */\n    tag_239:\n      pop\n        /* \"#utility.yul\":2107:2111   */\n      0xe0\n        /* \"#utility.yul\":2100:2105   */\n      dup2\n        /* \"#utility.yul\":2096:2112   */\n      add\n        /* \"#utility.yul\":2090:2113   */\n      mload\n        /* \"#utility.yul\":2122:2171   */\n      tag_240\n        /* \"#utility.yul\":2165:2169   */\n      0xe0\n        /* \"#utility.yul\":2160:2163   */\n      dup5\n        /* \"#utility.yul\":2156:2170   */\n      add\n        /* \"#utility.yul\":2140:2154   */\n      dup3\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1177:1207   */\n      and\n        /* \"#utility.yul\":1165:1208   */\n      swap1\n      mstore\n        /* \"#utility.yul\":1112:1214   */\n      jump\n        /* \"#utility.yul\":2122:2171   */\n    tag_240:\n      pop\n        /* \"#utility.yul\":2219:2225   */\n      0x0100\n        /* \"#utility.yul\":2212:2217   */\n      dup2\n        /* \"#utility.yul\":2208:2226   */\n      add\n        /* \"#utility.yul\":2202:2227   */\n      mload\n        /* \"#utility.yul\":2236:2287   */\n      tag_241\n        /* \"#utility.yul\":2279:2285   */\n      0x0100\n        /* \"#utility.yul\":2274:2277   */\n      dup5\n        /* \"#utility.yul\":2270:2286   */\n      add\n        /* \"#utility.yul\":2254:2268   */\n      dup3\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1177:1207   */\n      and\n        /* \"#utility.yul\":1165:1208   */\n      swap1\n      mstore\n        /* \"#utility.yul\":1112:1214   */\n      jump\n        /* \"#utility.yul\":2236:2287   */\n    tag_241:\n      pop\n        /* \"#utility.yul\":2335:2341   */\n      0x0120\n        /* \"#utility.yul\":2328:2333   */\n      dup2\n        /* \"#utility.yul\":2324:2342   */\n      add\n        /* \"#utility.yul\":2318:2343   */\n      mload\n        /* \"#utility.yul\":2352:2403   */\n      tag_242\n        /* \"#utility.yul\":2395:2401   */\n      0x0120\n        /* \"#utility.yul\":2390:2393   */\n      dup5\n        /* \"#utility.yul\":2386:2402   */\n      add\n        /* \"#utility.yul\":2370:2384   */\n      dup3\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1177:1207   */\n      and\n        /* \"#utility.yul\":1165:1208   */\n      swap1\n      mstore\n        /* \"#utility.yul\":1112:1214   */\n      jump\n        /* \"#utility.yul\":2352:2403   */\n    tag_242:\n      pop\n        /* \"#utility.yul\":2451:2457   */\n      0x0140\n        /* \"#utility.yul\":2444:2449   */\n      dup2\n        /* \"#utility.yul\":2440:2458   */\n      add\n        /* \"#utility.yul\":2434:2459   */\n      mload\n        /* \"#utility.yul\":2468:2519   */\n      tag_243\n        /* \"#utility.yul\":2511:2517   */\n      0x0140\n        /* \"#utility.yul\":2506:2509   */\n      dup5\n        /* \"#utility.yul\":2502:2518   */\n      add\n        /* \"#utility.yul\":2486:2500   */\n      dup3\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1177:1207   */\n      and\n        /* \"#utility.yul\":1165:1208   */\n      swap1\n      mstore\n        /* \"#utility.yul\":1112:1214   */\n      jump\n        /* \"#utility.yul\":2468:2519   */\n    tag_243:\n      pop\n        /* \"#utility.yul\":2568:2574   */\n      0x0160\n        /* \"#utility.yul\":2561:2566   */\n      dup2\n        /* \"#utility.yul\":2557:2575   */\n      add\n        /* \"#utility.yul\":2551:2576   */\n      mload\n        /* \"#utility.yul\":2585:2637   */\n      tag_244\n        /* \"#utility.yul\":2629:2635   */\n      0x0160\n        /* \"#utility.yul\":2624:2627   */\n      dup5\n        /* \"#utility.yul\":2620:2636   */\n      add\n        /* \"#utility.yul\":2603:2618   */\n      dup3\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1177:1207   */\n      and\n        /* \"#utility.yul\":1165:1208   */\n      swap1\n      mstore\n        /* \"#utility.yul\":1112:1214   */\n      jump\n        /* \"#utility.yul\":2585:2637   */\n    tag_244:\n      pop\n        /* \"#utility.yul\":2686:2692   */\n      0x0180\n        /* \"#utility.yul\":2679:2684   */\n      dup2\n        /* \"#utility.yul\":2675:2693   */\n      add\n        /* \"#utility.yul\":2669:2694   */\n      mload\n        /* \"#utility.yul\":2703:2755   */\n      tag_245\n        /* \"#utility.yul\":2747:2753   */\n      0x0180\n        /* \"#utility.yul\":2742:2745   */\n      dup5\n        /* \"#utility.yul\":2738:2754   */\n      add\n        /* \"#utility.yul\":2721:2736   */\n      dup3\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1177:1207   */\n      and\n        /* \"#utility.yul\":1165:1208   */\n      swap1\n      mstore\n        /* \"#utility.yul\":1112:1214   */\n      jump\n        /* \"#utility.yul\":2703:2755   */\n    tag_245:\n      pop\n        /* \"#utility.yul\":2804:2810   */\n      0x01a0\n        /* \"#utility.yul\":2797:2802   */\n      dup2\n        /* \"#utility.yul\":2793:2811   */\n      add\n        /* \"#utility.yul\":2787:2812   */\n      mload\n        /* \"#utility.yul\":2821:2873   */\n      tag_246\n        /* \"#utility.yul\":2865:2871   */\n      0x01a0\n        /* \"#utility.yul\":2860:2863   */\n      dup5\n        /* \"#utility.yul\":2856:2872   */\n      add\n        /* \"#utility.yul\":2839:2854   */\n      dup3\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1177:1207   */\n      and\n        /* \"#utility.yul\":1165:1208   */\n      swap1\n      mstore\n        /* \"#utility.yul\":1112:1214   */\n      jump\n        /* \"#utility.yul\":2821:2873   */\n    tag_246:\n      pop\n        /* \"#utility.yul\":2922:2928   */\n      0x01c0\n        /* \"#utility.yul\":2915:2920   */\n      dup2\n        /* \"#utility.yul\":2911:2929   */\n      add\n        /* \"#utility.yul\":2905:2930   */\n      mload\n        /* \"#utility.yul\":2939:2991   */\n      tag_247\n        /* \"#utility.yul\":2983:2989   */\n      0x01c0\n        /* \"#utility.yul\":2978:2981   */\n      dup5\n        /* \"#utility.yul\":2974:2990   */\n      add\n        /* \"#utility.yul\":2957:2972   */\n      dup3\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1177:1207   */\n      and\n        /* \"#utility.yul\":1165:1208   */\n      swap1\n      mstore\n        /* \"#utility.yul\":1112:1214   */\n      jump\n        /* \"#utility.yul\":2939:2991   */\n    tag_247:\n      pop\n        /* \"#utility.yul\":3040:3046   */\n      0x01e0\n        /* \"#utility.yul\":3033:3038   */\n      dup2\n        /* \"#utility.yul\":3029:3047   */\n      add\n        /* \"#utility.yul\":3023:3048   */\n      mload\n        /* \"#utility.yul\":3057:3109   */\n      tag_248\n        /* \"#utility.yul\":3101:3107   */\n      0x01e0\n        /* \"#utility.yul\":3096:3099   */\n      dup5\n        /* \"#utility.yul\":3092:3108   */\n      add\n        /* \"#utility.yul\":3075:3090   */\n      dup3\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1177:1207   */\n      and\n        /* \"#utility.yul\":1165:1208   */\n      swap1\n      mstore\n        /* \"#utility.yul\":1112:1214   */\n      jump\n        /* \"#utility.yul\":3057:3109   */\n    tag_248:\n      pop\n        /* \"#utility.yul\":3158:3164   */\n      0x0200\n        /* \"#utility.yul\":3151:3156   */\n      dup2\n        /* \"#utility.yul\":3147:3165   */\n      add\n        /* \"#utility.yul\":3141:3166   */\n      mload\n        /* \"#utility.yul\":3175:3227   */\n      tag_249\n        /* \"#utility.yul\":3219:3225   */\n      0x0200\n        /* \"#utility.yul\":3214:3217   */\n      dup5\n        /* \"#utility.yul\":3210:3226   */\n      add\n        /* \"#utility.yul\":3193:3208   */\n      dup3\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1177:1207   */\n      and\n        /* \"#utility.yul\":1165:1208   */\n      swap1\n      mstore\n        /* \"#utility.yul\":1112:1214   */\n      jump\n        /* \"#utility.yul\":3175:3227   */\n    tag_249:\n      pop\n        /* \"#utility.yul\":3276:3282   */\n      0x0220\n        /* \"#utility.yul\":3269:3274   */\n      dup2\n        /* \"#utility.yul\":3265:3283   */\n      add\n        /* \"#utility.yul\":3259:3284   */\n      mload\n        /* \"#utility.yul\":3293:3344   */\n      tag_162\n        /* \"#utility.yul\":3336:3342   */\n      0x0220\n        /* \"#utility.yul\":3331:3334   */\n      dup5\n        /* \"#utility.yul\":3327:3343   */\n      add\n        /* \"#utility.yul\":3310:3325   */\n      dup3\n        /* \"#utility.yul\":1286:1290   */\n      0xff\n        /* \"#utility.yul\":1275:1291   */\n      and\n        /* \"#utility.yul\":1263:1292   */\n      swap1\n      mstore\n        /* \"#utility.yul\":1219:1294   */\n      jump\n        /* \"#utility.yul\":3355:5065   */\n    tag_34:\n        /* \"#utility.yul\":3493:3497   */\n      0x00\n        /* \"#utility.yul\":3535:3539   */\n      0x05e0\n        /* \"#utility.yul\":3524:3533   */\n      dup3\n        /* \"#utility.yul\":3520:3540   */\n      add\n        /* \"#utility.yul\":3512:3540   */\n      swap1\n      pop\n        /* \"#utility.yul\":3549:3595   */\n      tag_252\n        /* \"#utility.yul\":3585:3594   */\n      dup3\n        /* \"#utility.yul\":3576:3582   */\n      dup5\n        /* \"#utility.yul\":3570:3583   */\n      mload\n        /* \"#utility.yul\":3549:3595   */\n      tag_220\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":3642:3646   */\n      0x20\n        /* \"#utility.yul\":3634:3640   */\n      dup4\n        /* \"#utility.yul\":3630:3647   */\n      add\n        /* \"#utility.yul\":3624:3648   */\n      mload\n        /* \"#utility.yul\":3657:3715   */\n      tag_253\n        /* \"#utility.yul\":3707:3713   */\n      0x0240\n        /* \"#utility.yul\":3696:3705   */\n      dup5\n        /* \"#utility.yul\":3692:3714   */\n      add\n        /* \"#utility.yul\":3678:3690   */\n      dup3\n        /* \"#utility.yul\":3657:3715   */\n      tag_220\n      jump\t// in\n    tag_253:\n      pop\n        /* \"#utility.yul\":3764:3768   */\n      0x40\n        /* \"#utility.yul\":3752:3769   */\n      dup4\n      add\n        /* \"#utility.yul\":3746:3770   */\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1177:1207   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":3828:3834   */\n      0x0480\n        /* \"#utility.yul\":3813:3835   */\n      dup5\n      add\n        /* \"#utility.yul\":1165:1208   */\n      mstore\n        /* \"#utility.yul\":3885:3889   */\n      0x60\n        /* \"#utility.yul\":3873:3890   */\n      dup5\n      add\n        /* \"#utility.yul\":3867:3891   */\n      mload\n        /* \"#utility.yul\":1177:1207   */\n      dup2\n      and\n        /* \"#utility.yul\":3949:3955   */\n      0x04a0\n        /* \"#utility.yul\":3934:3956   */\n      dup5\n      add\n        /* \"#utility.yul\":1165:1208   */\n      mstore\n        /* \"#utility.yul\":4006:4010   */\n      0x80\n        /* \"#utility.yul\":3994:4011   */\n      dup5\n      add\n        /* \"#utility.yul\":3988:4012   */\n      mload\n        /* \"#utility.yul\":1177:1207   */\n      dup2\n      and\n        /* \"#utility.yul\":4070:4076   */\n      0x04c0\n        /* \"#utility.yul\":4055:4077   */\n      dup5\n      add\n        /* \"#utility.yul\":1165:1208   */\n      mstore\n        /* \"#utility.yul\":4127:4131   */\n      0xa0\n        /* \"#utility.yul\":4115:4132   */\n      dup5\n      add\n        /* \"#utility.yul\":4109:4133   */\n      mload\n        /* \"#utility.yul\":1177:1207   */\n      dup2\n      and\n        /* \"#utility.yul\":4191:4197   */\n      0x04e0\n        /* \"#utility.yul\":4176:4198   */\n      dup5\n      add\n        /* \"#utility.yul\":1165:1208   */\n      mstore\n        /* \"#utility.yul\":4248:4252   */\n      0xc0\n        /* \"#utility.yul\":4236:4253   */\n      dup5\n      add\n        /* \"#utility.yul\":4230:4254   */\n      mload\n        /* \"#utility.yul\":1177:1207   */\n      dup2\n      and\n        /* \"#utility.yul\":4312:4318   */\n      0x0500\n        /* \"#utility.yul\":4297:4319   */\n      dup5\n      add\n        /* \"#utility.yul\":1165:1208   */\n      mstore\n        /* \"#utility.yul\":4369:4373   */\n      0xe0\n        /* \"#utility.yul\":4357:4374   */\n      dup5\n      add\n        /* \"#utility.yul\":4351:4375   */\n      mload\n        /* \"#utility.yul\":1177:1207   */\n      dup2\n      and\n        /* \"#utility.yul\":4433:4439   */\n      0x0520\n        /* \"#utility.yul\":4418:4440   */\n      dup5\n      add\n        /* \"#utility.yul\":1165:1208   */\n      mstore\n        /* \"#utility.yul\":4490:4496   */\n      0x0100\n        /* \"#utility.yul\":4478:4497   */\n      dup5\n      add\n        /* \"#utility.yul\":4472:4498   */\n      mload\n        /* \"#utility.yul\":1177:1207   */\n      dup2\n      and\n        /* \"#utility.yul\":4556:4562   */\n      0x0540\n        /* \"#utility.yul\":4541:4563   */\n      dup5\n      add\n        /* \"#utility.yul\":1165:1208   */\n      mstore\n        /* \"#utility.yul\":4613:4619   */\n      0x0120\n        /* \"#utility.yul\":4601:4620   */\n      dup5\n      add\n        /* \"#utility.yul\":4595:4621   */\n      mload\n        /* \"#utility.yul\":1177:1207   */\n      dup2\n      and\n        /* \"#utility.yul\":4679:4685   */\n      0x0560\n        /* \"#utility.yul\":4664:4686   */\n      dup5\n      add\n        /* \"#utility.yul\":1165:1208   */\n      mstore\n        /* \"#utility.yul\":4736:4742   */\n      0x0140\n        /* \"#utility.yul\":4724:4743   */\n      dup5\n      add\n        /* \"#utility.yul\":4718:4744   */\n      mload\n        /* \"#utility.yul\":1177:1207   */\n      dup2\n      and\n        /* \"#utility.yul\":4802:4808   */\n      0x0580\n        /* \"#utility.yul\":4787:4809   */\n      dup5\n      add\n        /* \"#utility.yul\":1165:1208   */\n      mstore\n        /* \"#utility.yul\":4860:4866   */\n      0x0160\n        /* \"#utility.yul\":4848:4867   */\n      dup5\n      add\n        /* \"#utility.yul\":4842:4868   */\n      mload\n        /* \"#utility.yul\":1177:1207   */\n      and\n        /* \"#utility.yul\":4927:4933   */\n      0x05a0\n        /* \"#utility.yul\":4912:4934   */\n      dup4\n      add\n        /* \"#utility.yul\":1165:1208   */\n      mstore\n        /* \"#utility.yul\":4985:4991   */\n      0x0180\n        /* \"#utility.yul\":4973:4992   */\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":4967:4993   */\n      mload\n        /* \"#utility.yul\":1286:1290   */\n      0xff\n        /* \"#utility.yul\":1275:1291   */\n      and\n        /* \"#utility.yul\":5051:5057   */\n      0x05c0\n        /* \"#utility.yul\":5036:5058   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1263:1292   */\n      mstore\n        /* \"#utility.yul\":3355:5065   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":5252:5626   */\n    tag_41:\n        /* \"#utility.yul\":5329:5335   */\n      0x00\n        /* \"#utility.yul\":5337:5343   */\n      0x00\n        /* \"#utility.yul\":5345:5351   */\n      0x00\n        /* \"#utility.yul\":5398:5400   */\n      0x60\n        /* \"#utility.yul\":5386:5395   */\n      dup5\n        /* \"#utility.yul\":5377:5384   */\n      dup7\n        /* \"#utility.yul\":5373:5396   */\n      sub\n        /* \"#utility.yul\":5369:5401   */\n      slt\n        /* \"#utility.yul\":5366:5418   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":5414:5415   */\n      0x00\n        /* \"#utility.yul\":5411:5412   */\n      0x00\n        /* \"#utility.yul\":5404:5416   */\n      revert\n        /* \"#utility.yul\":5366:5418   */\n    tag_267:\n        /* \"#utility.yul\":5437:5466   */\n      tag_268\n        /* \"#utility.yul\":5456:5465   */\n      dup5\n        /* \"#utility.yul\":5437:5466   */\n      tag_217\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":5427:5466   */\n      swap3\n      pop\n        /* \"#utility.yul\":5485:5523   */\n      tag_269\n        /* \"#utility.yul\":5519:5521   */\n      0x20\n        /* \"#utility.yul\":5508:5517   */\n      dup6\n        /* \"#utility.yul\":5504:5522   */\n      add\n        /* \"#utility.yul\":5485:5523   */\n      tag_217\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":5252:5626   */\n      swap3\n      swap6\n        /* \"#utility.yul\":5475:5523   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5592:5594   */\n      0x40\n        /* \"#utility.yul\":5577:5595   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":5564:5596   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":5252:5626   */\n      jump\t// out\n        /* \"#utility.yul\":5820:6286   */\n    tag_50:\n        /* \"#utility.yul\":5897:5903   */\n      0x00\n        /* \"#utility.yul\":5905:5911   */\n      0x00\n        /* \"#utility.yul\":5913:5919   */\n      0x00\n        /* \"#utility.yul\":5966:5968   */\n      0x60\n        /* \"#utility.yul\":5954:5963   */\n      dup5\n        /* \"#utility.yul\":5945:5952   */\n      dup7\n        /* \"#utility.yul\":5941:5964   */\n      sub\n        /* \"#utility.yul\":5937:5969   */\n      slt\n        /* \"#utility.yul\":5934:5986   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":5982:5983   */\n      0x00\n        /* \"#utility.yul\":5979:5980   */\n      0x00\n        /* \"#utility.yul\":5972:5984   */\n      revert\n        /* \"#utility.yul\":5934:5986   */\n    tag_272:\n      pop\n      pop\n        /* \"#utility.yul\":6027:6050   */\n      dup2\n      calldataload\n      swap4\n        /* \"#utility.yul\":6147:6149   */\n      0x20\n        /* \"#utility.yul\":6132:6150   */\n      dup4\n      add\n        /* \"#utility.yul\":6119:6151   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":6250:6252   */\n      0x40\n        /* \"#utility.yul\":6235:6253   */\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":6222:6254   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":5820:6286   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6291:6517   */\n    tag_55:\n        /* \"#utility.yul\":6350:6356   */\n      0x00\n        /* \"#utility.yul\":6403:6405   */\n      0x20\n        /* \"#utility.yul\":6391:6400   */\n      dup3\n        /* \"#utility.yul\":6382:6389   */\n      dup5\n        /* \"#utility.yul\":6378:6401   */\n      sub\n        /* \"#utility.yul\":6374:6406   */\n      slt\n        /* \"#utility.yul\":6371:6423   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":6419:6420   */\n      0x00\n        /* \"#utility.yul\":6416:6417   */\n      0x00\n        /* \"#utility.yul\":6409:6421   */\n      revert\n        /* \"#utility.yul\":6371:6423   */\n    tag_274:\n      pop\n        /* \"#utility.yul\":6464:6487   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":6291:6517   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6522:6693   */\n    tag_221:\n        /* \"#utility.yul\":6589:6609   */\n      dup1\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":6638:6668   */\n      dup2\n      and\n        /* \"#utility.yul\":6628:6669   */\n      dup2\n      eq\n        /* \"#utility.yul\":6618:6687   */\n      tag_225\n      jumpi\n        /* \"#utility.yul\":6683:6684   */\n      0x00\n        /* \"#utility.yul\":6680:6681   */\n      0x00\n        /* \"#utility.yul\":6673:6685   */\n      revert\n        /* \"#utility.yul\":6698:7026   */\n    tag_59:\n        /* \"#utility.yul\":6772:6778   */\n      0x00\n        /* \"#utility.yul\":6780:6786   */\n      0x00\n        /* \"#utility.yul\":6788:6794   */\n      0x00\n        /* \"#utility.yul\":6841:6843   */\n      0x60\n        /* \"#utility.yul\":6829:6838   */\n      dup5\n        /* \"#utility.yul\":6820:6827   */\n      dup7\n        /* \"#utility.yul\":6816:6839   */\n      sub\n        /* \"#utility.yul\":6812:6844   */\n      slt\n        /* \"#utility.yul\":6809:6861   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":6857:6858   */\n      0x00\n        /* \"#utility.yul\":6854:6855   */\n      0x00\n        /* \"#utility.yul\":6847:6859   */\n      revert\n        /* \"#utility.yul\":6809:6861   */\n    tag_278:\n        /* \"#utility.yul\":6880:6908   */\n      tag_279\n        /* \"#utility.yul\":6898:6907   */\n      dup5\n        /* \"#utility.yul\":6880:6908   */\n      tag_221\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":6870:6908   */\n      swap3\n      pop\n        /* \"#utility.yul\":6927:6964   */\n      tag_280\n        /* \"#utility.yul\":6960:6962   */\n      0x20\n        /* \"#utility.yul\":6949:6958   */\n      dup6\n        /* \"#utility.yul\":6945:6963   */\n      add\n        /* \"#utility.yul\":6927:6964   */\n      tag_221\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":6917:6964   */\n      swap2\n      pop\n        /* \"#utility.yul\":6983:7020   */\n      tag_281\n        /* \"#utility.yul\":7016:7018   */\n      0x40\n        /* \"#utility.yul\":7005:7014   */\n      dup6\n        /* \"#utility.yul\":7001:7019   */\n      add\n        /* \"#utility.yul\":6983:7020   */\n      tag_221\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":6973:7020   */\n      swap1\n      pop\n        /* \"#utility.yul\":6698:7026   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7236:7422   */\n    tag_68:\n        /* \"#utility.yul\":7295:7301   */\n      0x00\n        /* \"#utility.yul\":7348:7350   */\n      0x20\n        /* \"#utility.yul\":7336:7345   */\n      dup3\n        /* \"#utility.yul\":7327:7334   */\n      dup5\n        /* \"#utility.yul\":7323:7346   */\n      sub\n        /* \"#utility.yul\":7319:7351   */\n      slt\n        /* \"#utility.yul\":7316:7368   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":7364:7365   */\n      0x00\n        /* \"#utility.yul\":7361:7362   */\n      0x00\n        /* \"#utility.yul\":7354:7366   */\n      revert\n        /* \"#utility.yul\":7316:7368   */\n    tag_284:\n        /* \"#utility.yul\":7387:7416   */\n      tag_184\n        /* \"#utility.yul\":7406:7415   */\n      dup3\n        /* \"#utility.yul\":7387:7416   */\n      tag_217\n      jump\t// in\n        /* \"#utility.yul\":7427:7687   */\n    tag_86:\n        /* \"#utility.yul\":7495:7501   */\n      0x00\n        /* \"#utility.yul\":7503:7509   */\n      0x00\n        /* \"#utility.yul\":7556:7558   */\n      0x40\n        /* \"#utility.yul\":7544:7553   */\n      dup4\n        /* \"#utility.yul\":7535:7542   */\n      dup6\n        /* \"#utility.yul\":7531:7554   */\n      sub\n        /* \"#utility.yul\":7527:7559   */\n      slt\n        /* \"#utility.yul\":7524:7576   */\n      iszero\n      tag_287\n      jumpi\n        /* \"#utility.yul\":7572:7573   */\n      0x00\n        /* \"#utility.yul\":7569:7570   */\n      0x00\n        /* \"#utility.yul\":7562:7574   */\n      revert\n        /* \"#utility.yul\":7524:7576   */\n    tag_287:\n        /* \"#utility.yul\":7595:7624   */\n      tag_288\n        /* \"#utility.yul\":7614:7623   */\n      dup4\n        /* \"#utility.yul\":7595:7624   */\n      tag_217\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":7585:7624   */\n      swap2\n      pop\n        /* \"#utility.yul\":7643:7681   */\n      tag_289\n        /* \"#utility.yul\":7677:7679   */\n      0x20\n        /* \"#utility.yul\":7666:7675   */\n      dup5\n        /* \"#utility.yul\":7662:7680   */\n      add\n        /* \"#utility.yul\":7643:7681   */\n      tag_217\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":7633:7681   */\n      swap1\n      pop\n        /* \"#utility.yul\":7427:7687   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7692:8072   */\n    tag_95:\n        /* \"#utility.yul\":7771:7772   */\n      0x01\n        /* \"#utility.yul\":7767:7779   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":7814:7826   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":7835:7896   */\n      tag_291\n      jumpi\n        /* \"#utility.yul\":7889:7893   */\n      0x7f\n        /* \"#utility.yul\":7881:7887   */\n      dup3\n        /* \"#utility.yul\":7877:7894   */\n      and\n        /* \"#utility.yul\":7867:7894   */\n      swap2\n      pop\n        /* \"#utility.yul\":7835:7896   */\n    tag_291:\n        /* \"#utility.yul\":7942:7944   */\n      0x20\n        /* \"#utility.yul\":7934:7940   */\n      dup3\n        /* \"#utility.yul\":7931:7945   */\n      lt\n        /* \"#utility.yul\":7911:7929   */\n      dup2\n        /* \"#utility.yul\":7908:7946   */\n      sub\n        /* \"#utility.yul\":7905:8066   */\n      tag_292\n      jumpi\n        /* \"#utility.yul\":7988:7998   */\n      0x4e487b71\n        /* \"#utility.yul\":7983:7986   */\n      0xe0\n        /* \"#utility.yul\":7979:7999   */\n      shl\n        /* \"#utility.yul\":7976:7977   */\n      0x00\n        /* \"#utility.yul\":7969:8000   */\n      mstore\n        /* \"#utility.yul\":8023:8027   */\n      0x22\n        /* \"#utility.yul\":8020:8021   */\n      0x04\n        /* \"#utility.yul\":8013:8028   */\n      mstore\n        /* \"#utility.yul\":8051:8055   */\n      0x24\n        /* \"#utility.yul\":8048:8049   */\n      0x00\n        /* \"#utility.yul\":8041:8056   */\n      revert\n        /* \"#utility.yul\":7905:8066   */\n    tag_292:\n      pop\n        /* \"#utility.yul\":7692:8072   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8077:8204   */\n    tag_156:\n        /* \"#utility.yul\":8138:8148   */\n      0x4e487b71\n        /* \"#utility.yul\":8133:8136   */\n      0xe0\n        /* \"#utility.yul\":8129:8149   */\n      shl\n        /* \"#utility.yul\":8126:8127   */\n      0x00\n        /* \"#utility.yul\":8119:8150   */\n      mstore\n        /* \"#utility.yul\":8169:8173   */\n      0x12\n        /* \"#utility.yul\":8166:8167   */\n      0x04\n        /* \"#utility.yul\":8159:8174   */\n      mstore\n        /* \"#utility.yul\":8193:8197   */\n      0x24\n        /* \"#utility.yul\":8190:8191   */\n      0x00\n        /* \"#utility.yul\":8183:8198   */\n      revert\n        /* \"#utility.yul\":8209:8321   */\n    tag_125:\n        /* \"#utility.yul\":8241:8242   */\n      0x00\n        /* \"#utility.yul\":8267:8268   */\n      dup3\n        /* \"#utility.yul\":8257:8292   */\n      tag_296\n      jumpi\n        /* \"#utility.yul\":8272:8290   */\n      tag_296\n      tag_156\n      jump\t// in\n    tag_296:\n      pop\n        /* \"#utility.yul\":8306:8315   */\n      mod\n      swap1\n        /* \"#utility.yul\":8209:8321   */\n      jump\t// out\n        /* \"#utility.yul\":8326:8523   */\n    tag_151:\n        /* \"#utility.yul\":8366:8367   */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8393:8420   */\n      dup4\n      and\n      dup1\n        /* \"#utility.yul\":8429:8466   */\n      tag_299\n      jumpi\n        /* \"#utility.yul\":8446:8464   */\n      tag_299\n      tag_156\n      jump\t// in\n    tag_299:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8484:8511   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":8480:8517   */\n      swap2\n      swap1\n      swap2\n      div\n      swap3\n        /* \"#utility.yul\":8326:8523   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8528:8873   */\n    tag_169:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8748:8780   */\n      swap4\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":8730:8781   */\n      dup4\n      mstore\n        /* \"#utility.yul\":8812:8814   */\n      0x20\n        /* \"#utility.yul\":8797:8815   */\n      dup4\n      add\n        /* \"#utility.yul\":8790:8824   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":8855:8857   */\n      0x40\n        /* \"#utility.yul\":8840:8858   */\n      dup3\n      add\n        /* \"#utility.yul\":8833:8867   */\n      mstore\n        /* \"#utility.yul\":8718:8720   */\n      0x60\n        /* \"#utility.yul\":8703:8721   */\n      add\n      swap1\n        /* \"#utility.yul\":8528:8873   */\n      jump\t// out\n        /* \"#utility.yul\":8878:9081   */\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9042:9074   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":9024:9075   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9012:9014   */\n      0x20\n        /* \"#utility.yul\":8997:9015   */\n      add\n      swap1\n        /* \"#utility.yul\":8878:9081   */\n      jump\t// out\n        /* \"#utility.yul\":9086:9213   */\n    tag_194:\n        /* \"#utility.yul\":9147:9157   */\n      0x4e487b71\n        /* \"#utility.yul\":9142:9145   */\n      0xe0\n        /* \"#utility.yul\":9138:9158   */\n      shl\n        /* \"#utility.yul\":9135:9136   */\n      0x00\n        /* \"#utility.yul\":9128:9159   */\n      mstore\n        /* \"#utility.yul\":9178:9182   */\n      0x01\n        /* \"#utility.yul\":9175:9176   */\n      0x04\n        /* \"#utility.yul\":9168:9183   */\n      mstore\n        /* \"#utility.yul\":9202:9206   */\n      0x24\n        /* \"#utility.yul\":9199:9200   */\n      0x00\n        /* \"#utility.yul\":9192:9207   */\n      revert\n        /* \"#utility.yul\":9218:9440   */\n    tag_205:\n        /* \"#utility.yul\":9283:9292   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9304:9314   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":9301:9434   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":9356:9366   */\n      0x4e487b71\n        /* \"#utility.yul\":9351:9354   */\n      0xe0\n        /* \"#utility.yul\":9347:9367   */\n      shl\n        /* \"#utility.yul\":9344:9345   */\n      0x00\n        /* \"#utility.yul\":9337:9368   */\n      mstore\n        /* \"#utility.yul\":9391:9395   */\n      0x11\n        /* \"#utility.yul\":9388:9389   */\n      0x04\n        /* \"#utility.yul\":9381:9396   */\n      mstore\n        /* \"#utility.yul\":9419:9423   */\n      0x24\n        /* \"#utility.yul\":9416:9417   */\n      0x00\n        /* \"#utility.yul\":9409:9424   */\n      revert\n\n    auxdata: 0xa2646970667358221220725792d724027208497110626c83bb9f0c672002b7fb796b7931c788aa027f9a64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1829": {
									"entryPoint": null,
									"id": 1829,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 594,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 518,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2652:10",
										"nodeType": "YulBlock",
										"src": "0:2652:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:10",
													"nodeType": "YulBlock",
													"src": "46:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:10",
																		"nodeType": "YulLiteral",
																		"src": "63:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:10",
																				"nodeType": "YulLiteral",
																				"src": "70:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:10",
																				"nodeType": "YulLiteral",
																				"src": "75:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:10"
																		},
																		"nativeSrc": "66:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:10"
																},
																"nativeSrc": "56:31:10",
																"nodeType": "YulFunctionCall",
																"src": "56:31:10"
															},
															"nativeSrc": "56:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:10",
																		"nodeType": "YulLiteral",
																		"src": "103:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:10",
																		"nodeType": "YulLiteral",
																		"src": "106:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:10"
																},
																"nativeSrc": "96:15:10",
																"nodeType": "YulFunctionCall",
																"src": "96:15:10"
															},
															"nativeSrc": "96:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:10",
																		"nodeType": "YulLiteral",
																		"src": "127:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:10",
																		"nodeType": "YulLiteral",
																		"src": "130:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:10"
																},
																"nativeSrc": "120:15:10",
																"nodeType": "YulFunctionCall",
																"src": "120:15:10"
															},
															"nativeSrc": "120:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:10",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:10"
											},
											{
												"body": {
													"nativeSrc": "201:325:10",
													"nodeType": "YulBlock",
													"src": "201:325:10",
													"statements": [
														{
															"nativeSrc": "211:22:10",
															"nodeType": "YulAssignment",
															"src": "211:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:10",
																		"nodeType": "YulLiteral",
																		"src": "225:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:10"
																},
																"nativeSrc": "221:12:10",
																"nodeType": "YulFunctionCall",
																"src": "221:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:10"
																}
															]
														},
														{
															"nativeSrc": "242:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:10",
																		"nodeType": "YulLiteral",
																		"src": "278:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:10"
																},
																"nativeSrc": "268:12:10",
																"nodeType": "YulFunctionCall",
																"src": "268:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:10",
																	"nodeType": "YulTypedName",
																	"src": "246:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:10",
																"nodeType": "YulBlock",
																"src": "319:31:10",
																"statements": [
																	{
																		"nativeSrc": "321:27:10",
																		"nodeType": "YulAssignment",
																		"src": "321:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:10",
																					"nodeType": "YulLiteral",
																					"src": "343:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:10"
																			},
																			"nativeSrc": "331:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:10"
																},
																"nativeSrc": "292:26:10",
																"nodeType": "YulFunctionCall",
																"src": "292:26:10"
															},
															"nativeSrc": "289:61:10",
															"nodeType": "YulIf",
															"src": "289:61:10"
														},
														{
															"body": {
																"nativeSrc": "409:111:10",
																"nodeType": "YulBlock",
																"src": "409:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:10",
																					"nodeType": "YulLiteral",
																					"src": "430:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:10",
																							"nodeType": "YulLiteral",
																							"src": "437:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:10",
																							"nodeType": "YulLiteral",
																							"src": "442:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:10"
																					},
																					"nativeSrc": "433:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:10"
																			},
																			"nativeSrc": "423:31:10",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:10"
																		},
																		"nativeSrc": "423:31:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:10",
																					"nodeType": "YulLiteral",
																					"src": "474:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:10",
																					"nodeType": "YulLiteral",
																					"src": "477:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:10"
																			},
																			"nativeSrc": "467:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:10"
																		},
																		"nativeSrc": "467:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:10",
																					"nodeType": "YulLiteral",
																					"src": "502:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:10",
																					"nodeType": "YulLiteral",
																					"src": "505:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:10"
																			},
																			"nativeSrc": "495:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:10"
																		},
																		"nativeSrc": "495:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:10",
																				"nodeType": "YulLiteral",
																				"src": "396:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:10"
																		},
																		"nativeSrc": "385:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:10"
																},
																"nativeSrc": "362:38:10",
																"nodeType": "YulFunctionCall",
																"src": "362:38:10"
															},
															"nativeSrc": "359:161:10",
															"nodeType": "YulIf",
															"src": "359:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:10",
														"nodeType": "YulTypedName",
														"src": "181:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:10",
														"nodeType": "YulTypedName",
														"src": "190:6:10",
														"type": ""
													}
												],
												"src": "146:380:10"
											},
											{
												"body": {
													"nativeSrc": "587:65:10",
													"nodeType": "YulBlock",
													"src": "587:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:10",
																		"nodeType": "YulLiteral",
																		"src": "604:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:10"
																},
																"nativeSrc": "597:14:10",
																"nodeType": "YulFunctionCall",
																"src": "597:14:10"
															},
															"nativeSrc": "597:14:10",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:10"
														},
														{
															"nativeSrc": "620:26:10",
															"nodeType": "YulAssignment",
															"src": "620:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:10",
																		"nodeType": "YulLiteral",
																		"src": "638:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:10",
																		"nodeType": "YulLiteral",
																		"src": "641:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:10"
																},
																"nativeSrc": "628:18:10",
																"nodeType": "YulFunctionCall",
																"src": "628:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:10",
														"nodeType": "YulTypedName",
														"src": "570:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:10",
														"nodeType": "YulTypedName",
														"src": "578:4:10",
														"type": ""
													}
												],
												"src": "531:121:10"
											},
											{
												"body": {
													"nativeSrc": "738:437:10",
													"nodeType": "YulBlock",
													"src": "738:437:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:398:10",
																"nodeType": "YulBlock",
																"src": "771:398:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "792:1:10",
																					"nodeType": "YulLiteral",
																					"src": "792:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "795:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "795:5:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "785:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "785:6:10"
																			},
																			"nativeSrc": "785:16:10",
																			"nodeType": "YulFunctionCall",
																			"src": "785:16:10"
																		},
																		"nativeSrc": "785:16:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "785:16:10"
																	},
																	{
																		"nativeSrc": "814:30:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "814:30:10",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:10",
																					"nodeType": "YulLiteral",
																					"src": "836:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:4:10",
																					"nodeType": "YulLiteral",
																					"src": "839:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "826:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:10"
																			},
																			"nativeSrc": "826:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "826:18:10"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "818:4:10",
																				"nodeType": "YulTypedName",
																				"src": "818:4:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "857:57:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "857:57:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "880:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "880:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "890:1:10",
																							"nodeType": "YulLiteral",
																							"src": "890:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "897:10:10",
																									"nodeType": "YulIdentifier",
																									"src": "897:10:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "909:2:10",
																									"nodeType": "YulLiteral",
																									"src": "909:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "893:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "893:3:10"
																							},
																							"nativeSrc": "893:19:10",
																							"nodeType": "YulFunctionCall",
																							"src": "893:19:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "886:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "886:3:10"
																					},
																					"nativeSrc": "886:27:10",
																					"nodeType": "YulFunctionCall",
																					"src": "886:27:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "876:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "876:3:10"
																			},
																			"nativeSrc": "876:38:10",
																			"nodeType": "YulFunctionCall",
																			"src": "876:38:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "861:11:10",
																				"nodeType": "YulTypedName",
																				"src": "861:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "951:23:10",
																			"nodeType": "YulBlock",
																			"src": "951:23:10",
																			"statements": [
																				{
																					"nativeSrc": "953:19:10",
																					"nodeType": "YulAssignment",
																					"src": "953:19:10",
																					"value": {
																						"name": "data",
																						"nativeSrc": "968:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "968:4:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "953:11:10",
																							"nodeType": "YulIdentifier",
																							"src": "953:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "933:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "933:10:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "945:4:10",
																					"nodeType": "YulLiteral",
																					"src": "945:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "930:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "930:2:10"
																			},
																			"nativeSrc": "930:20:10",
																			"nodeType": "YulFunctionCall",
																			"src": "930:20:10"
																		},
																		"nativeSrc": "927:47:10",
																		"nodeType": "YulIf",
																		"src": "927:47:10"
																	},
																	{
																		"nativeSrc": "987:41:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "987:41:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1001:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "1001:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1011:1:10",
																							"nodeType": "YulLiteral",
																							"src": "1011:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1018:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "1018:3:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1023:2:10",
																									"nodeType": "YulLiteral",
																									"src": "1023:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1014:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "1014:3:10"
																							},
																							"nativeSrc": "1014:12:10",
																							"nodeType": "YulFunctionCall",
																							"src": "1014:12:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1007:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "1007:3:10"
																					},
																					"nativeSrc": "1007:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "1007:20:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "997:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "997:3:10"
																			},
																			"nativeSrc": "997:31:10",
																			"nodeType": "YulFunctionCall",
																			"src": "997:31:10"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "991:2:10",
																				"nodeType": "YulTypedName",
																				"src": "991:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1041:24:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1041:24:10",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1054:11:10",
																			"nodeType": "YulIdentifier",
																			"src": "1054:11:10"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1045:5:10",
																				"nodeType": "YulTypedName",
																				"src": "1045:5:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1139:20:10",
																			"nodeType": "YulBlock",
																			"src": "1139:20:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1148:5:10",
																								"nodeType": "YulIdentifier",
																								"src": "1148:5:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1155:1:10",
																								"nodeType": "YulLiteral",
																								"src": "1155:1:10",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1141:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "1141:6:10"
																						},
																						"nativeSrc": "1141:16:10",
																						"nodeType": "YulFunctionCall",
																						"src": "1141:16:10"
																					},
																					"nativeSrc": "1141:16:10",
																					"nodeType": "YulExpressionStatement",
																					"src": "1141:16:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1089:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "1089:5:10"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1096:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "1096:2:10"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1086:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "1086:2:10"
																			},
																			"nativeSrc": "1086:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1086:13:10"
																		},
																		"nativeSrc": "1078:81:10",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1100:26:10",
																			"nodeType": "YulBlock",
																			"src": "1100:26:10",
																			"statements": [
																				{
																					"nativeSrc": "1102:22:10",
																					"nodeType": "YulAssignment",
																					"src": "1102:22:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1115:5:10",
																								"nodeType": "YulIdentifier",
																								"src": "1115:5:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1122:1:10",
																								"nodeType": "YulLiteral",
																								"src": "1122:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1111:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "1111:3:10"
																						},
																						"nativeSrc": "1111:13:10",
																						"nodeType": "YulFunctionCall",
																						"src": "1111:13:10"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1102:5:10",
																							"nodeType": "YulIdentifier",
																							"src": "1102:5:10"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1082:3:10",
																			"nodeType": "YulBlock",
																			"src": "1082:3:10",
																			"statements": []
																		},
																		"src": "1078:81:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:10",
																		"nodeType": "YulLiteral",
																		"src": "759:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:10"
																},
																"nativeSrc": "751:11:10",
																"nodeType": "YulFunctionCall",
																"src": "751:11:10"
															},
															"nativeSrc": "748:421:10",
															"nodeType": "YulIf",
															"src": "748:421:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:518:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:10",
														"nodeType": "YulTypedName",
														"src": "710:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:10",
														"nodeType": "YulTypedName",
														"src": "717:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:10",
														"nodeType": "YulTypedName",
														"src": "722:10:10",
														"type": ""
													}
												],
												"src": "657:518:10"
											},
											{
												"body": {
													"nativeSrc": "1265:81:10",
													"nodeType": "YulBlock",
													"src": "1265:81:10",
													"statements": [
														{
															"nativeSrc": "1275:65:10",
															"nodeType": "YulAssignment",
															"src": "1275:65:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1290:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1290:4:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1308:1:10",
																										"nodeType": "YulLiteral",
																										"src": "1308:1:10",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1311:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "1311:3:10"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1304:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "1304:3:10"
																								},
																								"nativeSrc": "1304:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "1304:11:10"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1321:1:10",
																										"nodeType": "YulLiteral",
																										"src": "1321:1:10",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1317:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "1317:3:10"
																								},
																								"nativeSrc": "1317:6:10",
																								"nodeType": "YulFunctionCall",
																								"src": "1317:6:10"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1300:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:10"
																						},
																						"nativeSrc": "1300:24:10",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:24:10"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1296:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:10"
																				},
																				"nativeSrc": "1296:29:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1296:29:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1286:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1286:3:10"
																		},
																		"nativeSrc": "1286:40:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:40:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1332:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1332:1:10",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1335:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1335:3:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1328:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:10"
																		},
																		"nativeSrc": "1328:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1283:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1283:2:10"
																},
																"nativeSrc": "1283:57:10",
																"nodeType": "YulFunctionCall",
																"src": "1283:57:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1275:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1275:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1180:166:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1242:4:10",
														"nodeType": "YulTypedName",
														"src": "1242:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1248:3:10",
														"nodeType": "YulTypedName",
														"src": "1248:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1256:4:10",
														"nodeType": "YulTypedName",
														"src": "1256:4:10",
														"type": ""
													}
												],
												"src": "1180:166:10"
											},
											{
												"body": {
													"nativeSrc": "1447:1203:10",
													"nodeType": "YulBlock",
													"src": "1447:1203:10",
													"statements": [
														{
															"nativeSrc": "1457:24:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1457:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1477:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1477:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1471:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1471:5:10"
																},
																"nativeSrc": "1471:10:10",
																"nodeType": "YulFunctionCall",
																"src": "1471:10:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1461:6:10",
																	"nodeType": "YulTypedName",
																	"src": "1461:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1524:22:10",
																"nodeType": "YulBlock",
																"src": "1524:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1526:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "1526:16:10"
																			},
																			"nativeSrc": "1526:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1526:18:10"
																		},
																		"nativeSrc": "1526:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1496:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1496:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1512:2:10",
																						"nodeType": "YulLiteral",
																						"src": "1512:2:10",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1516:1:10",
																						"nodeType": "YulLiteral",
																						"src": "1516:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1508:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1508:3:10"
																				},
																				"nativeSrc": "1508:10:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1508:10:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1520:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1520:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1504:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:10"
																		},
																		"nativeSrc": "1504:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1504:18:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1493:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1493:2:10"
																},
																"nativeSrc": "1493:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1493:30:10"
															},
															"nativeSrc": "1490:56:10",
															"nodeType": "YulIf",
															"src": "1490:56:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1599:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1599:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1637:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "1637:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1631:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "1631:5:10"
																				},
																				"nativeSrc": "1631:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1631:11:10"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1605:25:10",
																			"nodeType": "YulIdentifier",
																			"src": "1605:25:10"
																		},
																		"nativeSrc": "1605:38:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1605:38:10"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1645:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1645:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1555:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:10"
																},
																"nativeSrc": "1555:97:10",
																"nodeType": "YulFunctionCall",
																"src": "1555:97:10"
															},
															"nativeSrc": "1555:97:10",
															"nodeType": "YulExpressionStatement",
															"src": "1555:97:10"
														},
														{
															"nativeSrc": "1661:18:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1661:18:10",
															"value": {
																"kind": "number",
																"nativeSrc": "1678:1:10",
																"nodeType": "YulLiteral",
																"src": "1678:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1665:9:10",
																	"nodeType": "YulTypedName",
																	"src": "1665:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1688:17:10",
															"nodeType": "YulAssignment",
															"src": "1688:17:10",
															"value": {
																"kind": "number",
																"nativeSrc": "1701:4:10",
																"nodeType": "YulLiteral",
																"src": "1701:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1688:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "1688:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1751:642:10",
																		"nodeType": "YulBlock",
																		"src": "1751:642:10",
																		"statements": [
																			{
																				"nativeSrc": "1765:35:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1765:35:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1784:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "1784:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1796:2:10",
																									"nodeType": "YulLiteral",
																									"src": "1796:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1792:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "1792:3:10"
																							},
																							"nativeSrc": "1792:7:10",
																							"nodeType": "YulFunctionCall",
																							"src": "1792:7:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1780:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "1780:3:10"
																					},
																					"nativeSrc": "1780:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "1780:20:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1769:7:10",
																						"nodeType": "YulTypedName",
																						"src": "1769:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1813:49:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1813:49:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1857:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "1857:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1827:29:10",
																						"nodeType": "YulIdentifier",
																						"src": "1827:29:10"
																					},
																					"nativeSrc": "1827:35:10",
																					"nodeType": "YulFunctionCall",
																					"src": "1827:35:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1817:6:10",
																						"nodeType": "YulTypedName",
																						"src": "1817:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1875:10:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1875:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1884:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1884:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1879:1:10",
																						"nodeType": "YulTypedName",
																						"src": "1879:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1955:165:10",
																					"nodeType": "YulBlock",
																					"src": "1955:165:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "1980:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "1980:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "1998:3:10",
																														"nodeType": "YulIdentifier",
																														"src": "1998:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2003:9:10",
																														"nodeType": "YulIdentifier",
																														"src": "2003:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "1994:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "1994:3:10"
																												},
																												"nativeSrc": "1994:19:10",
																												"nodeType": "YulFunctionCall",
																												"src": "1994:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "1988:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "1988:5:10"
																										},
																										"nativeSrc": "1988:26:10",
																										"nodeType": "YulFunctionCall",
																										"src": "1988:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "1973:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "1973:6:10"
																								},
																								"nativeSrc": "1973:42:10",
																								"nodeType": "YulFunctionCall",
																								"src": "1973:42:10"
																							},
																							"nativeSrc": "1973:42:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "1973:42:10"
																						},
																						{
																							"nativeSrc": "2032:24:10",
																							"nodeType": "YulAssignment",
																							"src": "2032:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2046:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "2046:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2054:1:10",
																										"nodeType": "YulLiteral",
																										"src": "2054:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2042:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "2042:3:10"
																								},
																								"nativeSrc": "2042:14:10",
																								"nodeType": "YulFunctionCall",
																								"src": "2042:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2032:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "2032:6:10"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2073:33:10",
																							"nodeType": "YulAssignment",
																							"src": "2073:33:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2090:9:10",
																										"nodeType": "YulIdentifier",
																										"src": "2090:9:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2101:4:10",
																										"nodeType": "YulLiteral",
																										"src": "2101:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2086:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "2086:3:10"
																								},
																								"nativeSrc": "2086:20:10",
																								"nodeType": "YulFunctionCall",
																								"src": "2086:20:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2073:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "2073:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1909:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "1909:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1912:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "1912:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1906:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "1906:2:10"
																					},
																					"nativeSrc": "1906:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "1906:14:10"
																				},
																				"nativeSrc": "1898:222:10",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1921:21:10",
																					"nodeType": "YulBlock",
																					"src": "1921:21:10",
																					"statements": [
																						{
																							"nativeSrc": "1923:17:10",
																							"nodeType": "YulAssignment",
																							"src": "1923:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1932:1:10",
																										"nodeType": "YulIdentifier",
																										"src": "1932:1:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1935:4:10",
																										"nodeType": "YulLiteral",
																										"src": "1935:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1928:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "1928:3:10"
																								},
																								"nativeSrc": "1928:12:10",
																								"nodeType": "YulFunctionCall",
																								"src": "1928:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1923:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "1923:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1902:3:10",
																					"nodeType": "YulBlock",
																					"src": "1902:3:10",
																					"statements": []
																				},
																				"src": "1898:222:10"
																			},
																			{
																				"body": {
																					"nativeSrc": "2168:166:10",
																					"nodeType": "YulBlock",
																					"src": "2168:166:10",
																					"statements": [
																						{
																							"nativeSrc": "2186:43:10",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2186:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2213:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "2213:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2218:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "2218:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2209:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "2209:3:10"
																										},
																										"nativeSrc": "2209:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "2209:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2203:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "2203:5:10"
																								},
																								"nativeSrc": "2203:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "2203:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2190:9:10",
																									"nodeType": "YulTypedName",
																									"src": "2190:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2253:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "2253:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2265:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "2265:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2292:1:10",
																																				"nodeType": "YulLiteral",
																																				"src": "2292:1:10",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2295:6:10",
																																				"nodeType": "YulIdentifier",
																																				"src": "2295:6:10"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2288:3:10",
																																			"nodeType": "YulIdentifier",
																																			"src": "2288:3:10"
																																		},
																																		"nativeSrc": "2288:14:10",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2288:14:10"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2304:3:10",
																																		"nodeType": "YulLiteral",
																																		"src": "2304:3:10",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2284:3:10",
																																	"nodeType": "YulIdentifier",
																																	"src": "2284:3:10"
																																},
																																"nativeSrc": "2284:24:10",
																																"nodeType": "YulFunctionCall",
																																"src": "2284:24:10"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2314:1:10",
																																		"nodeType": "YulLiteral",
																																		"src": "2314:1:10",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2310:3:10",
																																	"nodeType": "YulIdentifier",
																																	"src": "2310:3:10"
																																},
																																"nativeSrc": "2310:6:10",
																																"nodeType": "YulFunctionCall",
																																"src": "2310:6:10"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2280:3:10",
																															"nodeType": "YulIdentifier",
																															"src": "2280:3:10"
																														},
																														"nativeSrc": "2280:37:10",
																														"nodeType": "YulFunctionCall",
																														"src": "2280:37:10"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2276:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "2276:3:10"
																												},
																												"nativeSrc": "2276:42:10",
																												"nodeType": "YulFunctionCall",
																												"src": "2276:42:10"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2261:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "2261:3:10"
																										},
																										"nativeSrc": "2261:58:10",
																										"nodeType": "YulFunctionCall",
																										"src": "2261:58:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2246:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "2246:6:10"
																								},
																								"nativeSrc": "2246:74:10",
																								"nodeType": "YulFunctionCall",
																								"src": "2246:74:10"
																							},
																							"nativeSrc": "2246:74:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "2246:74:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2139:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "2139:7:10"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2148:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "2148:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2136:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "2136:2:10"
																					},
																					"nativeSrc": "2136:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2136:19:10"
																				},
																				"nativeSrc": "2133:201:10",
																				"nodeType": "YulIf",
																				"src": "2133:201:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2354:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "2354:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2368:1:10",
																											"nodeType": "YulLiteral",
																											"src": "2368:1:10",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2371:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "2371:6:10"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2364:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "2364:3:10"
																									},
																									"nativeSrc": "2364:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "2364:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2380:1:10",
																									"nodeType": "YulLiteral",
																									"src": "2380:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2360:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "2360:3:10"
																							},
																							"nativeSrc": "2360:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "2360:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2347:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2347:6:10"
																					},
																					"nativeSrc": "2347:36:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2347:36:10"
																				},
																				"nativeSrc": "2347:36:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "2347:36:10"
																			}
																		]
																	},
																	"nativeSrc": "1744:649:10",
																	"nodeType": "YulCase",
																	"src": "1744:649:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1749:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1749:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2410:234:10",
																		"nodeType": "YulBlock",
																		"src": "2410:234:10",
																		"statements": [
																			{
																				"nativeSrc": "2424:14:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2424:14:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2437:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2437:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2428:5:10",
																						"nodeType": "YulTypedName",
																						"src": "2428:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2473:67:10",
																					"nodeType": "YulBlock",
																					"src": "2473:67:10",
																					"statements": [
																						{
																							"nativeSrc": "2491:35:10",
																							"nodeType": "YulAssignment",
																							"src": "2491:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2510:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "2510:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2515:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "2515:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2506:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "2506:3:10"
																										},
																										"nativeSrc": "2506:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "2506:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2500:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "2500:5:10"
																								},
																								"nativeSrc": "2500:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "2500:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2491:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "2491:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2454:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "2454:6:10"
																				},
																				"nativeSrc": "2451:89:10",
																				"nodeType": "YulIf",
																				"src": "2451:89:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2560:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "2560:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2619:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "2619:5:10"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2626:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "2626:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2566:52:10",
																								"nodeType": "YulIdentifier",
																								"src": "2566:52:10"
																							},
																							"nativeSrc": "2566:67:10",
																							"nodeType": "YulFunctionCall",
																							"src": "2566:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2553:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2553:6:10"
																					},
																					"nativeSrc": "2553:81:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2553:81:10"
																				},
																				"nativeSrc": "2553:81:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "2553:81:10"
																			}
																		]
																	},
																	"nativeSrc": "2402:242:10",
																	"nodeType": "YulCase",
																	"src": "2402:242:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1724:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1724:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1732:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1732:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1721:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1721:2:10"
																},
																"nativeSrc": "1721:14:10",
																"nodeType": "YulFunctionCall",
																"src": "1721:14:10"
															},
															"nativeSrc": "1714:930:10",
															"nodeType": "YulSwitch",
															"src": "1714:930:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1351:1299:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1432:4:10",
														"nodeType": "YulTypedName",
														"src": "1432:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1438:3:10",
														"nodeType": "YulTypedName",
														"src": "1438:3:10",
														"type": ""
													}
												],
												"src": "1351:1299:10"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x564D20524E47 PUSH1 0xD0 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x564D524E47 PUSH1 0xD8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x5C SWAP2 SWAP1 PUSH2 0x29E JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x69 DUP3 DUP3 PUSH2 0x29E JUMP JUMPDEST POP POP PUSH31 0x1FAE4570E6A3C0001EEA60F0479020002EE53D1D08D2B000227025D8E13CA PUSH1 0x5 SSTORE POP PUSH31 0x7E5E4F4C6D7510002DBDCD3778C6D000110E309EE09840000000000000000 PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH31 0x2FFD06DBF2D9B00063C93E835361B00027B83E305ED18000043984FDF50D4 PUSH1 0x7 SSTORE PUSH31 0x13A9DCCCBBECD0000234CDD6795D9000000000000000000034ADD185625D8 PUSH1 0x8 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x48 SHL SUB NOT SWAP1 DUP2 AND PUSH7 0x11FC59DD353C4 OR SWAP1 SWAP2 SSTORE PUSH31 0x1D582F24850510000AAC3DC86188800028246AEC62B3D000227025D8E13CA PUSH1 0xA SSTORE PUSH1 0xB SWAP2 SWAP1 SWAP2 SSTORE PUSH31 0x2FFD06DBF2D9B00063C93E835361B00027B83E305ED1800059591956C8269 PUSH1 0xC SSTORE PUSH31 0x1BF8F849A1DB8000187BC56A5A81A00009B5DAF8BFE0400034ADD185625D8 PUSH1 0xD SSTORE PUSH1 0xE DUP1 SLOAD PUSH9 0x10000832915784AED SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH31 0x4386BA397D9D100011DD325062A390002877439321EF20000000000000000 PUSH1 0xF SSTORE PUSH30 0x832915784AED00002998A7CB1DB60000889846490DB0000380FD806CE16E PUSH1 0x10 SSTORE PUSH1 0x11 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x88 SHL SUB NOT AND PUSH15 0x1BF8F849A1DB80000BF8B42EEFC83 OR SWAP1 SSTORE PUSH2 0x358 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x22E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x24C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x299 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x277 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x296 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x283 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2B7 JUMPI PUSH2 0x2B7 PUSH2 0x206 JUMP JUMPDEST PUSH2 0x2CB DUP2 PUSH2 0x2C5 DUP5 SLOAD PUSH2 0x21A JUMP JUMPDEST DUP5 PUSH2 0x252 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2FD JUMPI PUSH0 DUP4 ISZERO PUSH2 0x2E6 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x296 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x32C JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x30C JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x349 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1906 DUP1 PUSH2 0x365 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x53DF6E35 GT PUSH2 0x8F JUMPI DUP1 PUSH4 0x53DF6E35 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x604A6FA9 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0xD3DC2A0F EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0xFA6BCFEC EQ PUSH2 0x248 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x1686F265 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x3148F14F EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x189 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xF4 PUSH2 0x25B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x139B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0x13EB JUMP JUMPDEST PUSH2 0x2EB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x101 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x304 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x101 JUMP JUMPDEST PUSH2 0x11D PUSH2 0x162 CALLDATASIZE PUSH1 0x4 PUSH2 0x16C1 JUMP JUMPDEST PUSH2 0xB9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x101 JUMP JUMPDEST PUSH2 0x146 PUSH2 0x184 CALLDATASIZE PUSH1 0x4 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0x1724 JUMP JUMPDEST PUSH2 0xC09 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B1 PUSH2 0x1AC CALLDATASIZE PUSH1 0x4 PUSH2 0x1751 JUMP JUMPDEST PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x101 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0xC4E JUMP JUMPDEST PUSH2 0x146 PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0x1791 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x13EB JUMP JUMPDEST PUSH2 0xDAB JUMP JUMPDEST PUSH2 0xF4 PUSH2 0xDC4 JUMP JUMPDEST PUSH2 0x11D PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0x13EB JUMP JUMPDEST PUSH2 0xDD3 JUMP JUMPDEST PUSH2 0x1B1 PUSH7 0x3632C8EB5AF3B DUP2 JUMP JUMPDEST PUSH2 0x146 PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0x17AA JUMP JUMPDEST PUSH2 0xDE0 JUMP JUMPDEST PUSH2 0x146 PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x17AA JUMP JUMPDEST PUSH2 0xE0A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x26A SWAP1 PUSH2 0x17DB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x296 SWAP1 PUSH2 0x17DB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2F8 DUP2 DUP6 DUP6 PUSH2 0xE8E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x30C PUSH2 0x1291 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x40 MLOAD DUP1 PUSH2 0x1A0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x240 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x240 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB DUP3 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0xBAB DUP6 DUP3 DUP6 PUSH2 0xEA0 JUMP JUMPDEST PUSH2 0xBB6 DUP6 DUP6 DUP6 PUSH2 0xEF9 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x60 DUP3 ADD MSTORE DUP4 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 MLOAD PUSH1 0x20 DUP2 PUSH1 0xC0 DUP5 PUSH0 PUSH1 0x5 PUSH0 NOT CALL PUSH2 0xBFF JUMPI PUSH0 PUSH0 REVERT JUMPDEST MLOAD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC13 CALLER DUP3 PUSH2 0xF56 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP6 AND SWAP1 DUP5 DUP2 AND SWAP1 DUP5 DUP2 AND SWAP1 DUP5 SWAP1 PUSH2 0xC38 DUP6 DUP6 DUP6 PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0xC42 SWAP2 SWAP1 PUSH2 0x1827 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH0 SWAP1 PUSH2 0xC6F SWAP1 PUSH1 0xA SWAP1 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0xF8A JUMP JUMPDEST POP PUSH1 0xE SLOAD PUSH1 0x10 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH2 0xCB1 SWAP3 PUSH1 0xA SWAP3 SWAP2 SWAP1 SWAP2 DIV AND PUSH2 0xF8A JUMP JUMPDEST POP PUSH1 0xE SLOAD PUSH1 0x10 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0xC SLOAD PUSH2 0xCF4 SWAP4 PUSH1 0xA SWAP4 SWAP3 SWAP1 SWAP3 DIV DUP3 AND SWAP2 AND PUSH2 0xF9C JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x11 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x1 PUSH1 0xC0 SHL SWAP4 DUP5 SWAP1 DIV DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x10 SLOAD PUSH1 0x7 SLOAD PUSH2 0xD38 SWAP4 PUSH1 0x5 SWAP4 SWAP3 DIV DUP3 AND SWAP2 AND PUSH2 0xF9C JUMP JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x11 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP1 DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xC0 SHL SWAP6 DUP7 SWAP1 DIV DUP3 AND XOR DUP2 AND DUP3 MUL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 SHL NOT SWAP4 DUP5 AND OR SWAP1 SWAP4 SSTORE PUSH1 0x10 DUP1 SLOAD DUP3 DUP2 DIV DUP6 AND PUSH1 0x1 PUSH1 0x80 SHL DUP3 DIV DUP7 AND XOR SWAP6 DUP2 DIV DUP6 AND SWAP6 SWAP1 SWAP6 XOR DUP5 AND DUP3 MUL SWAP5 SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP4 OR SWAP1 DUP2 SWAP1 SSTORE SWAP2 SWAP1 SWAP2 DIV AND SWAP1 JUMP JUMPDEST PUSH2 0xDB6 DUP3 CALLER DUP4 PUSH2 0xEA0 JUMP JUMPDEST PUSH2 0xDC0 DUP3 DUP3 PUSH2 0xF56 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x26A SWAP1 PUSH2 0x17DB JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2F8 DUP2 DUP6 DUP6 PUSH2 0xEF9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH0 DUP3 DUP2 PUSH2 0xE18 PUSH1 0xF DUP6 PUSH2 0x183A JUMP JUMPDEST SWAP1 POP JUMPDEST DUP3 PUSH0 SUB PUSH2 0xE67 JUMPI PUSH7 0x3632C8EB5AF3B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND DUP5 DUP3 AND EXP AND MOD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP PUSH1 0x2 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH2 0xE5F JUMPI PUSH2 0xE5F PUSH2 0x1813 JUMP JUMPDEST DIV SWAP1 POP PUSH2 0xE1B JUMP JUMPDEST PUSH2 0xE85 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP1 DUP7 AND PUSH7 0x3632C8EB5AF3B PUSH2 0xBC1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE9B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1054 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEAB DUP5 DUP5 PUSH2 0xDE0 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0xEF3 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xEE5 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEDC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1868 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEF3 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1054 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF22 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEDC SWAP2 SWAP1 PUSH2 0x1889 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF4B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEDC SWAP2 SWAP1 PUSH2 0x1889 JUMP JUMPDEST PUSH2 0xE9B DUP4 DUP4 DUP4 PUSH2 0x1126 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF7F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEDC SWAP2 SWAP1 PUSH2 0x1889 JUMP JUMPDEST PUSH2 0xDC0 DUP3 PUSH0 DUP4 PUSH2 0x1126 JUMP JUMPDEST PUSH0 PUSH2 0xF95 DUP4 DUP4 PUSH2 0x1239 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 SLOAD PUSH2 0xFBA SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP4 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x3 DUP5 ADD DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 DUP5 AND MUL OR SWAP1 SSTORE DUP4 SLOAD PUSH2 0xFFA SWAP2 DUP5 SWAP2 DUP5 SWAP2 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP2 DIV AND PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x3 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND PUSH1 0x1 PUSH1 0xC0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 DUP5 AND MUL OR SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1048 JUMPI POP PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND ISZERO ISZERO JUMPDEST PUSH2 0xE9B JUMPI PUSH2 0xE9B PUSH2 0x189D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x107D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEDC SWAP2 SWAP1 PUSH2 0x1889 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x10A6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEDC SWAP2 SWAP1 PUSH2 0x1889 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xEF3 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1118 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1150 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1145 SWAP2 SWAP1 PUSH2 0x18B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x11AD SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x118F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEDC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1868 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11C9 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x11E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x122C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD DUP3 SLOAD PUSH0 SWAP2 PUSH2 0x1266 SWAP2 DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x1 PUSH1 0xC0 SHL SWAP2 DUP3 SWAP1 DIV DUP2 AND SWAP3 SWAP2 SWAP1 SWAP2 DIV AND PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x4 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH8 0xFFFFFFFFFFFFFFFF NOT SWAP1 SWAP3 AND DUP3 OR SWAP1 SSTORE SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x12A5 PUSH2 0x1308 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12B2 PUSH2 0x1308 JUMP JUMPDEST DUP2 MSTORE PUSH0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x120 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x140 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x160 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x240 DUP2 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x140 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x160 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x180 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1A0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1C0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1E0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x200 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x220 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13E6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13FC JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1405 DUP4 PUSH2 0x13D0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0x143A PUSH1 0x20 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0x1455 PUSH1 0x40 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x60 DUP2 ADD MLOAD PUSH2 0x1470 PUSH1 0x60 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x80 DUP2 ADD MLOAD PUSH2 0x148B PUSH1 0x80 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xA0 DUP2 ADD MLOAD PUSH2 0x14A6 PUSH1 0xA0 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x14C1 PUSH1 0xC0 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0x14DC PUSH1 0xE0 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x14F9 PUSH2 0x100 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x1516 PUSH2 0x120 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x140 DUP2 ADD MLOAD PUSH2 0x1533 PUSH2 0x140 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x160 DUP2 ADD MLOAD PUSH2 0x1550 PUSH2 0x160 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x180 DUP2 ADD MLOAD PUSH2 0x156D PUSH2 0x180 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x1A0 DUP2 ADD MLOAD PUSH2 0x158A PUSH2 0x1A0 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x1C0 DUP2 ADD MLOAD PUSH2 0x15A7 PUSH2 0x1C0 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x1E0 DUP2 ADD MLOAD PUSH2 0x15C4 PUSH2 0x1E0 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x200 DUP2 ADD MLOAD PUSH2 0x15E1 PUSH2 0x200 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x220 DUP2 ADD MLOAD PUSH2 0xE9B PUSH2 0x220 DUP5 ADD DUP3 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH0 PUSH2 0x5E0 DUP3 ADD SWAP1 POP PUSH2 0x160B DUP3 DUP5 MLOAD PUSH2 0x1413 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x161E PUSH2 0x240 DUP5 ADD DUP3 PUSH2 0x1413 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND PUSH2 0x480 DUP5 ADD MSTORE PUSH1 0x60 DUP5 ADD MLOAD DUP2 AND PUSH2 0x4A0 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD MLOAD DUP2 AND PUSH2 0x4C0 DUP5 ADD MSTORE PUSH1 0xA0 DUP5 ADD MLOAD DUP2 AND PUSH2 0x4E0 DUP5 ADD MSTORE PUSH1 0xC0 DUP5 ADD MLOAD DUP2 AND PUSH2 0x500 DUP5 ADD MSTORE PUSH1 0xE0 DUP5 ADD MLOAD DUP2 AND PUSH2 0x520 DUP5 ADD MSTORE PUSH2 0x100 DUP5 ADD MLOAD DUP2 AND PUSH2 0x540 DUP5 ADD MSTORE PUSH2 0x120 DUP5 ADD MLOAD DUP2 AND PUSH2 0x560 DUP5 ADD MSTORE PUSH2 0x140 DUP5 ADD MLOAD DUP2 AND PUSH2 0x580 DUP5 ADD MSTORE PUSH2 0x160 DUP5 ADD MLOAD AND PUSH2 0x5A0 DUP4 ADD MSTORE PUSH2 0x180 SWAP1 SWAP3 ADD MLOAD PUSH1 0xFF AND PUSH2 0x5C0 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16D3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x16DC DUP5 PUSH2 0x13D0 JUMP JUMPDEST SWAP3 POP PUSH2 0x16EA PUSH1 0x20 DUP6 ADD PUSH2 0x13D0 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x170D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1734 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13E6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1763 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x176C DUP5 PUSH2 0x173B JUMP JUMPDEST SWAP3 POP PUSH2 0x177A PUSH1 0x20 DUP6 ADD PUSH2 0x173B JUMP JUMPDEST SWAP2 POP PUSH2 0x1788 PUSH1 0x40 DUP6 ADD PUSH2 0x173B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17A1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xF95 DUP3 PUSH2 0x13D0 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17BB JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x17C4 DUP4 PUSH2 0x13D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x17D2 PUSH1 0x20 DUP5 ADD PUSH2 0x13D0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x17EF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x180D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x1835 JUMPI PUSH2 0x1835 PUSH2 0x1813 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 PUSH2 0x1852 JUMPI PUSH2 0x1852 PUSH2 0x1813 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2FE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x5792D724027208497110626C83BB9F0C672002 0xB7 0xFB PUSH26 0x6B7931C788AA027F9A64736F6C634300081B0033000000000000 ",
							"sourceMap": "246:4682:7:-:0;;;374:1833;;;;;;;;;;1896:113:1;;;;;;;;;;;;;-1:-1:-1;;;1896:113:1;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:1;;;1970:5;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:1;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;558:32:7;437:2:::1;558:32:::0;-1:-1:-1;713:33:7;600:11;713:33;;;879:29;756:13;879:29;1024:30;476:13:::1;1024:30:::0;1064:12;:30;;-1:-1:-1;;;;;;1104:13:7;;;1079:15:::1;1104:13:::0;;;;1252:33;1128:7;1252:33;1295:12;1411:34;;;;1583:30;1455:14;1583:30;1747:31;1623:18;1747:31;1788:13;:31;;1829:14;;;;;;;;;1941:27;1854:6;1941:27;2083:23;517:13:::1;2083:23:::0;2116:8;:26;;-1:-1:-1;;;;;;2190:10:7;2152:28;2190:10;;;246:4682;;14:127:10;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:10;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1299::-;1471:10;;-1:-1:-1;;;;;1493:30:10;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1701:4;1732:2;1721:14;;1749:1;1744:649;;;;2437:1;2454:6;2451:89;;;-1:-1:-1;2506:19:10;;;2500:26;2451:89;-1:-1:-1;;1308:1:10;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2553:81;;1714:930;;1744:649;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1780:20:10;;;1898:222;1912:7;1909:1;1906:14;1898:222;;;1994:19;;;1988:26;1973:42;;2101:4;2086:20;;;;2054:1;2042:14;;;;1928:12;1898:222;;;1902:3;2148:6;2139:7;2136:19;2133:201;;;2209:19;;;2203:26;-1:-1:-1;;2292:1:10;2288:14;;;2304:3;2284:24;2280:37;2276:42;2261:58;2246:74;;2133:201;-1:-1:-1;;;;2380:1:10;2364:14;;;2360:22;2347:36;;-1:-1:-1;1351:1299:10:o;:::-;246:4682:7;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Amplify_1880": {
									"entryPoint": 3978,
									"id": 1880,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@MotzkinPrime_1464": {
									"entryPoint": null,
									"id": 1464,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Random_2032": {
									"entryPoint": 3150,
									"id": 2032,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@React_1941": {
									"entryPoint": 3996,
									"id": 1941,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@Sustain_1896": {
									"entryPoint": null,
									"id": 1896,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@Torque_1864": {
									"entryPoint": 4665,
									"id": 1864,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@View_1838": {
									"entryPoint": 772,
									"id": 1838,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_approve_542": {
									"entryPoint": 3726,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 4180,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_524": {
									"entryPoint": 3926,
									"id": 524,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_813": {
									"entryPoint": null,
									"id": 813,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 3744,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 3833,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 4390,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": 3552,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 747,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": null,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_774": {
									"entryPoint": 3499,
									"id": 774,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_753": {
									"entryPoint": 3081,
									"id": 753,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_215": {
									"entryPoint": null,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hashWith_2101": {
									"entryPoint": 3594,
									"id": 2101,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@modExp64_2140": {
									"entryPoint": 3094,
									"id": 2140,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@modExp_2153": {
									"entryPoint": 3009,
									"id": 2153,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@name_197": {
									"entryPoint": 603,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_206": {
									"entryPoint": 3524,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_224": {
									"entryPoint": null,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 2974,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 3539,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 5072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 5883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint64t_uint64t_uint64": {
									"entryPoint": 5969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_uint64": {
									"entryPoint": 5947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_struct_Fa": {
									"entryPoint": 5139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6248,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_Faung_$2225_memory_ptr__to_t_struct$_Faung_$2225_memory_ptr__fromStack_reversed": {
									"entryPoint": 5624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_uint64": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_uint8": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"checked_add_t_uint256": {
									"entryPoint": 6321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint160": {
									"entryPoint": 6202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 6107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 6183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x01": {
									"entryPoint": 6301,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6163,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9442:10",
										"nodeType": "YulBlock",
										"src": "0:9442:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:10",
													"nodeType": "YulBlock",
													"src": "135:297:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:10",
																		"nodeType": "YulLiteral",
																		"src": "163:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:10"
																},
																"nativeSrc": "145:21:10",
																"nodeType": "YulFunctionCall",
																"src": "145:21:10"
															},
															"nativeSrc": "145:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:10"
														},
														{
															"nativeSrc": "175:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:10"
																},
																"nativeSrc": "189:13:10",
																"nodeType": "YulFunctionCall",
																"src": "189:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:10",
																	"nodeType": "YulTypedName",
																	"src": "179:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:10",
																				"nodeType": "YulLiteral",
																				"src": "233:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:10"
																		},
																		"nativeSrc": "218:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:10"
																},
																"nativeSrc": "211:34:10",
																"nodeType": "YulFunctionCall",
																"src": "211:34:10"
															},
															"nativeSrc": "211:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:10",
																				"nodeType": "YulLiteral",
																				"src": "275:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:10"
																		},
																		"nativeSrc": "260:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:10",
																				"nodeType": "YulLiteral",
																				"src": "292:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:10"
																		},
																		"nativeSrc": "280:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:10"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:10"
																},
																"nativeSrc": "254:50:10",
																"nodeType": "YulFunctionCall",
																"src": "254:50:10"
															},
															"nativeSrc": "254:50:10",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:10"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:10"
																				},
																				"nativeSrc": "324:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:10",
																				"nodeType": "YulLiteral",
																				"src": "348:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:10"
																		},
																		"nativeSrc": "320:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:10",
																		"nodeType": "YulLiteral",
																		"src": "353:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:10"
																},
																"nativeSrc": "313:42:10",
																"nodeType": "YulFunctionCall",
																"src": "313:42:10"
															},
															"nativeSrc": "313:42:10",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:10"
														},
														{
															"nativeSrc": "364:62:10",
															"nodeType": "YulAssignment",
															"src": "364:62:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:10",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:10",
																								"nodeType": "YulLiteral",
																								"src": "407:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:10"
																						},
																						"nativeSrc": "395:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:10",
																								"nodeType": "YulLiteral",
																								"src": "416:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:10"
																						},
																						"nativeSrc": "412:7:10",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:10"
																				},
																				"nativeSrc": "391:29:10",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:10"
																		},
																		"nativeSrc": "376:45:10",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:10",
																		"nodeType": "YulLiteral",
																		"src": "423:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:10"
																},
																"nativeSrc": "372:54:10",
																"nodeType": "YulFunctionCall",
																"src": "372:54:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:10",
														"nodeType": "YulTypedName",
														"src": "104:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:10",
														"nodeType": "YulTypedName",
														"src": "115:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:10",
														"nodeType": "YulTypedName",
														"src": "126:4:10",
														"type": ""
													}
												],
												"src": "14:418:10"
											},
											{
												"body": {
													"nativeSrc": "486:124:10",
													"nodeType": "YulBlock",
													"src": "486:124:10",
													"statements": [
														{
															"nativeSrc": "496:29:10",
															"nodeType": "YulAssignment",
															"src": "496:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "518:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "518:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "505:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "505:12:10"
																},
																"nativeSrc": "505:20:10",
																"nodeType": "YulFunctionCall",
																"src": "505:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "496:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "588:16:10",
																"nodeType": "YulBlock",
																"src": "588:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "597:1:10",
																					"nodeType": "YulLiteral",
																					"src": "597:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "600:1:10",
																					"nodeType": "YulLiteral",
																					"src": "600:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "590:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "590:6:10"
																			},
																			"nativeSrc": "590:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "590:12:10"
																		},
																		"nativeSrc": "590:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "590:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "547:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "547:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "558:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "558:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "573:3:10",
																										"nodeType": "YulLiteral",
																										"src": "573:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "578:1:10",
																										"nodeType": "YulLiteral",
																										"src": "578:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "569:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "569:3:10"
																								},
																								"nativeSrc": "569:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "569:11:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "582:1:10",
																								"nodeType": "YulLiteral",
																								"src": "582:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "565:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "565:3:10"
																						},
																						"nativeSrc": "565:19:10",
																						"nodeType": "YulFunctionCall",
																						"src": "565:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "554:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "554:3:10"
																				},
																				"nativeSrc": "554:31:10",
																				"nodeType": "YulFunctionCall",
																				"src": "554:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "544:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "544:2:10"
																		},
																		"nativeSrc": "544:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "544:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "537:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:10"
																},
																"nativeSrc": "537:50:10",
																"nodeType": "YulFunctionCall",
																"src": "537:50:10"
															},
															"nativeSrc": "534:70:10",
															"nodeType": "YulIf",
															"src": "534:70:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "437:173:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "465:6:10",
														"nodeType": "YulTypedName",
														"src": "465:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "476:5:10",
														"nodeType": "YulTypedName",
														"src": "476:5:10",
														"type": ""
													}
												],
												"src": "437:173:10"
											},
											{
												"body": {
													"nativeSrc": "702:213:10",
													"nodeType": "YulBlock",
													"src": "702:213:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "748:16:10",
																"nodeType": "YulBlock",
																"src": "748:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "757:1:10",
																					"nodeType": "YulLiteral",
																					"src": "757:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "760:1:10",
																					"nodeType": "YulLiteral",
																					"src": "760:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "750:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:10"
																			},
																			"nativeSrc": "750:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "750:12:10"
																		},
																		"nativeSrc": "750:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "750:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "723:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "723:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "732:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "732:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "719:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:10"
																		},
																		"nativeSrc": "719:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "719:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "744:2:10",
																		"nodeType": "YulLiteral",
																		"src": "744:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "715:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "715:3:10"
																},
																"nativeSrc": "715:32:10",
																"nodeType": "YulFunctionCall",
																"src": "715:32:10"
															},
															"nativeSrc": "712:52:10",
															"nodeType": "YulIf",
															"src": "712:52:10"
														},
														{
															"nativeSrc": "773:39:10",
															"nodeType": "YulAssignment",
															"src": "773:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "783:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "783:18:10"
																},
																"nativeSrc": "783:29:10",
																"nodeType": "YulFunctionCall",
																"src": "783:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "773:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:10"
																}
															]
														},
														{
															"nativeSrc": "821:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "821:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "834:1:10",
																"nodeType": "YulLiteral",
																"src": "834:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "825:5:10",
																	"nodeType": "YulTypedName",
																	"src": "825:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "844:41:10",
															"nodeType": "YulAssignment",
															"src": "844:41:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "870:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "870:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "881:2:10",
																				"nodeType": "YulLiteral",
																				"src": "881:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "866:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "866:3:10"
																		},
																		"nativeSrc": "866:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "866:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "853:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "853:12:10"
																},
																"nativeSrc": "853:32:10",
																"nodeType": "YulFunctionCall",
																"src": "853:32:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "844:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "844:5:10"
																}
															]
														},
														{
															"nativeSrc": "894:15:10",
															"nodeType": "YulAssignment",
															"src": "894:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "904:5:10",
																"nodeType": "YulIdentifier",
																"src": "904:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "894:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "615:300:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "660:9:10",
														"nodeType": "YulTypedName",
														"src": "660:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "671:7:10",
														"nodeType": "YulTypedName",
														"src": "671:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "683:6:10",
														"nodeType": "YulTypedName",
														"src": "683:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "691:6:10",
														"nodeType": "YulTypedName",
														"src": "691:6:10",
														"type": ""
													}
												],
												"src": "615:300:10"
											},
											{
												"body": {
													"nativeSrc": "1015:92:10",
													"nodeType": "YulBlock",
													"src": "1015:92:10",
													"statements": [
														{
															"nativeSrc": "1025:26:10",
															"nodeType": "YulAssignment",
															"src": "1025:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1037:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1037:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1048:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1033:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1033:3:10"
																},
																"nativeSrc": "1033:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1033:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1025:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1025:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1067:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1092:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1092:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1085:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "1085:6:10"
																				},
																				"nativeSrc": "1085:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1085:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1078:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1078:6:10"
																		},
																		"nativeSrc": "1078:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1078:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1060:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:10"
																},
																"nativeSrc": "1060:41:10",
																"nodeType": "YulFunctionCall",
																"src": "1060:41:10"
															},
															"nativeSrc": "1060:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "1060:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "920:187:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "984:9:10",
														"nodeType": "YulTypedName",
														"src": "984:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "995:6:10",
														"nodeType": "YulTypedName",
														"src": "995:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1006:4:10",
														"nodeType": "YulTypedName",
														"src": "1006:4:10",
														"type": ""
													}
												],
												"src": "920:187:10"
											},
											{
												"body": {
													"nativeSrc": "1155:59:10",
													"nodeType": "YulBlock",
													"src": "1155:59:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1172:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1172:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1181:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1181:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1188:18:10",
																				"nodeType": "YulLiteral",
																				"src": "1188:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1177:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1177:3:10"
																		},
																		"nativeSrc": "1177:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1177:30:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1165:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1165:6:10"
																},
																"nativeSrc": "1165:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1165:43:10"
															},
															"nativeSrc": "1165:43:10",
															"nodeType": "YulExpressionStatement",
															"src": "1165:43:10"
														}
													]
												},
												"name": "abi_encode_uint64",
												"nativeSrc": "1112:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1139:5:10",
														"nodeType": "YulTypedName",
														"src": "1139:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1146:3:10",
														"nodeType": "YulTypedName",
														"src": "1146:3:10",
														"type": ""
													}
												],
												"src": "1112:102:10"
											},
											{
												"body": {
													"nativeSrc": "1261:33:10",
													"nodeType": "YulBlock",
													"src": "1261:33:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1270:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1270:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1279:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1279:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1286:4:10",
																				"nodeType": "YulLiteral",
																				"src": "1286:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1275:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1275:3:10"
																		},
																		"nativeSrc": "1275:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1275:16:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1263:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1263:6:10"
																},
																"nativeSrc": "1263:29:10",
																"nodeType": "YulFunctionCall",
																"src": "1263:29:10"
															},
															"nativeSrc": "1263:29:10",
															"nodeType": "YulExpressionStatement",
															"src": "1263:29:10"
														}
													]
												},
												"name": "abi_encode_uint8",
												"nativeSrc": "1219:75:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1245:5:10",
														"nodeType": "YulTypedName",
														"src": "1245:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1252:3:10",
														"nodeType": "YulTypedName",
														"src": "1252:3:10",
														"type": ""
													}
												],
												"src": "1219:75:10"
											},
											{
												"body": {
													"nativeSrc": "1345:2005:10",
													"nodeType": "YulBlock",
													"src": "1345:2005:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1379:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1379:5:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "1373:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "1373:5:10"
																		},
																		"nativeSrc": "1373:12:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1373:12:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1387:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1387:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint64",
																	"nativeSrc": "1355:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1355:17:10"
																},
																"nativeSrc": "1355:36:10",
																"nodeType": "YulFunctionCall",
																"src": "1355:36:10"
															},
															"nativeSrc": "1355:36:10",
															"nodeType": "YulExpressionStatement",
															"src": "1355:36:10"
														},
														{
															"nativeSrc": "1400:43:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1400:43:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1430:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1430:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1437:4:10",
																				"nodeType": "YulLiteral",
																				"src": "1437:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1426:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:10"
																		},
																		"nativeSrc": "1426:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1426:16:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1420:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1420:5:10"
																},
																"nativeSrc": "1420:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1420:23:10"
															},
															"variables": [
																{
																	"name": "memberValue0",
																	"nativeSrc": "1404:12:10",
																	"nodeType": "YulTypedName",
																	"src": "1404:12:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0",
																		"nativeSrc": "1470:12:10",
																		"nodeType": "YulIdentifier",
																		"src": "1470:12:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1488:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1488:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1493:4:10",
																				"nodeType": "YulLiteral",
																				"src": "1493:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1484:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1484:3:10"
																		},
																		"nativeSrc": "1484:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1484:14:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint64",
																	"nativeSrc": "1452:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1452:17:10"
																},
																"nativeSrc": "1452:47:10",
																"nodeType": "YulFunctionCall",
																"src": "1452:47:10"
															},
															"nativeSrc": "1452:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "1452:47:10"
														},
														{
															"nativeSrc": "1508:45:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1508:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1540:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1540:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1547:4:10",
																				"nodeType": "YulLiteral",
																				"src": "1547:4:10",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1536:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:10"
																		},
																		"nativeSrc": "1536:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:16:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1530:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1530:5:10"
																},
																"nativeSrc": "1530:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1530:23:10"
															},
															"variables": [
																{
																	"name": "memberValue0_1",
																	"nativeSrc": "1512:14:10",
																	"nodeType": "YulTypedName",
																	"src": "1512:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_1",
																		"nativeSrc": "1580:14:10",
																		"nodeType": "YulIdentifier",
																		"src": "1580:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1600:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1600:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1605:4:10",
																				"nodeType": "YulLiteral",
																				"src": "1605:4:10",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1596:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1596:3:10"
																		},
																		"nativeSrc": "1596:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1596:14:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint64",
																	"nativeSrc": "1562:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1562:17:10"
																},
																"nativeSrc": "1562:49:10",
																"nodeType": "YulFunctionCall",
																"src": "1562:49:10"
															},
															"nativeSrc": "1562:49:10",
															"nodeType": "YulExpressionStatement",
															"src": "1562:49:10"
														},
														{
															"nativeSrc": "1620:45:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1620:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1652:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1652:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1659:4:10",
																				"nodeType": "YulLiteral",
																				"src": "1659:4:10",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1648:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1648:3:10"
																		},
																		"nativeSrc": "1648:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1648:16:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1642:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1642:5:10"
																},
																"nativeSrc": "1642:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1642:23:10"
															},
															"variables": [
																{
																	"name": "memberValue0_2",
																	"nativeSrc": "1624:14:10",
																	"nodeType": "YulTypedName",
																	"src": "1624:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_2",
																		"nativeSrc": "1692:14:10",
																		"nodeType": "YulIdentifier",
																		"src": "1692:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1712:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1712:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1717:4:10",
																				"nodeType": "YulLiteral",
																				"src": "1717:4:10",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1708:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1708:3:10"
																		},
																		"nativeSrc": "1708:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1708:14:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint64",
																	"nativeSrc": "1674:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1674:17:10"
																},
																"nativeSrc": "1674:49:10",
																"nodeType": "YulFunctionCall",
																"src": "1674:49:10"
															},
															"nativeSrc": "1674:49:10",
															"nodeType": "YulExpressionStatement",
															"src": "1674:49:10"
														},
														{
															"nativeSrc": "1732:45:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1732:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1764:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1764:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1771:4:10",
																				"nodeType": "YulLiteral",
																				"src": "1771:4:10",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1760:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1760:3:10"
																		},
																		"nativeSrc": "1760:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1760:16:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1754:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1754:5:10"
																},
																"nativeSrc": "1754:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1754:23:10"
															},
															"variables": [
																{
																	"name": "memberValue0_3",
																	"nativeSrc": "1736:14:10",
																	"nodeType": "YulTypedName",
																	"src": "1736:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_3",
																		"nativeSrc": "1804:14:10",
																		"nodeType": "YulIdentifier",
																		"src": "1804:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1824:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1824:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1829:4:10",
																				"nodeType": "YulLiteral",
																				"src": "1829:4:10",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1820:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1820:3:10"
																		},
																		"nativeSrc": "1820:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1820:14:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint64",
																	"nativeSrc": "1786:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1786:17:10"
																},
																"nativeSrc": "1786:49:10",
																"nodeType": "YulFunctionCall",
																"src": "1786:49:10"
															},
															"nativeSrc": "1786:49:10",
															"nodeType": "YulExpressionStatement",
															"src": "1786:49:10"
														},
														{
															"nativeSrc": "1844:45:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1844:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1876:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1876:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1883:4:10",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:10",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1872:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1872:3:10"
																		},
																		"nativeSrc": "1872:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1872:16:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1866:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1866:5:10"
																},
																"nativeSrc": "1866:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1866:23:10"
															},
															"variables": [
																{
																	"name": "memberValue0_4",
																	"nativeSrc": "1848:14:10",
																	"nodeType": "YulTypedName",
																	"src": "1848:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_4",
																		"nativeSrc": "1916:14:10",
																		"nodeType": "YulIdentifier",
																		"src": "1916:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1936:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1936:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1941:4:10",
																				"nodeType": "YulLiteral",
																				"src": "1941:4:10",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1932:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:10"
																		},
																		"nativeSrc": "1932:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1932:14:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint64",
																	"nativeSrc": "1898:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1898:17:10"
																},
																"nativeSrc": "1898:49:10",
																"nodeType": "YulFunctionCall",
																"src": "1898:49:10"
															},
															"nativeSrc": "1898:49:10",
															"nodeType": "YulExpressionStatement",
															"src": "1898:49:10"
														},
														{
															"nativeSrc": "1956:45:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1956:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1988:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1988:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1995:4:10",
																				"nodeType": "YulLiteral",
																				"src": "1995:4:10",
																				"type": "",
																				"value": "0xc0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1984:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1984:3:10"
																		},
																		"nativeSrc": "1984:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1984:16:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1978:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1978:5:10"
																},
																"nativeSrc": "1978:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1978:23:10"
															},
															"variables": [
																{
																	"name": "memberValue0_5",
																	"nativeSrc": "1960:14:10",
																	"nodeType": "YulTypedName",
																	"src": "1960:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_5",
																		"nativeSrc": "2028:14:10",
																		"nodeType": "YulIdentifier",
																		"src": "2028:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "2048:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2048:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2053:4:10",
																				"nodeType": "YulLiteral",
																				"src": "2053:4:10",
																				"type": "",
																				"value": "0xc0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2044:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2044:3:10"
																		},
																		"nativeSrc": "2044:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2044:14:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint64",
																	"nativeSrc": "2010:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2010:17:10"
																},
																"nativeSrc": "2010:49:10",
																"nodeType": "YulFunctionCall",
																"src": "2010:49:10"
															},
															"nativeSrc": "2010:49:10",
															"nodeType": "YulExpressionStatement",
															"src": "2010:49:10"
														},
														{
															"nativeSrc": "2068:45:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2068:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2100:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2100:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2107:4:10",
																				"nodeType": "YulLiteral",
																				"src": "2107:4:10",
																				"type": "",
																				"value": "0xe0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2096:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2096:3:10"
																		},
																		"nativeSrc": "2096:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2096:16:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2090:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2090:5:10"
																},
																"nativeSrc": "2090:23:10",
																"nodeType": "YulFunctionCall",
																"src": "2090:23:10"
															},
															"variables": [
																{
																	"name": "memberValue0_6",
																	"nativeSrc": "2072:14:10",
																	"nodeType": "YulTypedName",
																	"src": "2072:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_6",
																		"nativeSrc": "2140:14:10",
																		"nodeType": "YulIdentifier",
																		"src": "2140:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "2160:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2160:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2165:4:10",
																				"nodeType": "YulLiteral",
																				"src": "2165:4:10",
																				"type": "",
																				"value": "0xe0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2156:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2156:3:10"
																		},
																		"nativeSrc": "2156:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2156:14:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint64",
																	"nativeSrc": "2122:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2122:17:10"
																},
																"nativeSrc": "2122:49:10",
																"nodeType": "YulFunctionCall",
																"src": "2122:49:10"
															},
															"nativeSrc": "2122:49:10",
															"nodeType": "YulExpressionStatement",
															"src": "2122:49:10"
														},
														{
															"nativeSrc": "2180:47:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2180:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2212:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2212:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2219:6:10",
																				"nodeType": "YulLiteral",
																				"src": "2219:6:10",
																				"type": "",
																				"value": "0x0100"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2208:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2208:3:10"
																		},
																		"nativeSrc": "2208:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2208:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2202:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2202:5:10"
																},
																"nativeSrc": "2202:25:10",
																"nodeType": "YulFunctionCall",
																"src": "2202:25:10"
															},
															"variables": [
																{
																	"name": "memberValue0_7",
																	"nativeSrc": "2184:14:10",
																	"nodeType": "YulTypedName",
																	"src": "2184:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_7",
																		"nativeSrc": "2254:14:10",
																		"nodeType": "YulIdentifier",
																		"src": "2254:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "2274:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2274:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2279:6:10",
																				"nodeType": "YulLiteral",
																				"src": "2279:6:10",
																				"type": "",
																				"value": "0x0100"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2270:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2270:3:10"
																		},
																		"nativeSrc": "2270:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2270:16:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint64",
																	"nativeSrc": "2236:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2236:17:10"
																},
																"nativeSrc": "2236:51:10",
																"nodeType": "YulFunctionCall",
																"src": "2236:51:10"
															},
															"nativeSrc": "2236:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "2236:51:10"
														},
														{
															"nativeSrc": "2296:47:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2296:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2328:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2328:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2335:6:10",
																				"nodeType": "YulLiteral",
																				"src": "2335:6:10",
																				"type": "",
																				"value": "0x0120"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2324:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2324:3:10"
																		},
																		"nativeSrc": "2324:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2324:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2318:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2318:5:10"
																},
																"nativeSrc": "2318:25:10",
																"nodeType": "YulFunctionCall",
																"src": "2318:25:10"
															},
															"variables": [
																{
																	"name": "memberValue0_8",
																	"nativeSrc": "2300:14:10",
																	"nodeType": "YulTypedName",
																	"src": "2300:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_8",
																		"nativeSrc": "2370:14:10",
																		"nodeType": "YulIdentifier",
																		"src": "2370:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "2390:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2390:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2395:6:10",
																				"nodeType": "YulLiteral",
																				"src": "2395:6:10",
																				"type": "",
																				"value": "0x0120"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2386:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2386:3:10"
																		},
																		"nativeSrc": "2386:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2386:16:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint64",
																	"nativeSrc": "2352:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2352:17:10"
																},
																"nativeSrc": "2352:51:10",
																"nodeType": "YulFunctionCall",
																"src": "2352:51:10"
															},
															"nativeSrc": "2352:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "2352:51:10"
														},
														{
															"nativeSrc": "2412:47:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2412:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2444:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2444:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2451:6:10",
																				"nodeType": "YulLiteral",
																				"src": "2451:6:10",
																				"type": "",
																				"value": "0x0140"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2440:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2440:3:10"
																		},
																		"nativeSrc": "2440:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2440:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2434:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2434:5:10"
																},
																"nativeSrc": "2434:25:10",
																"nodeType": "YulFunctionCall",
																"src": "2434:25:10"
															},
															"variables": [
																{
																	"name": "memberValue0_9",
																	"nativeSrc": "2416:14:10",
																	"nodeType": "YulTypedName",
																	"src": "2416:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_9",
																		"nativeSrc": "2486:14:10",
																		"nodeType": "YulIdentifier",
																		"src": "2486:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "2506:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2506:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2511:6:10",
																				"nodeType": "YulLiteral",
																				"src": "2511:6:10",
																				"type": "",
																				"value": "0x0140"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2502:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2502:3:10"
																		},
																		"nativeSrc": "2502:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2502:16:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint64",
																	"nativeSrc": "2468:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2468:17:10"
																},
																"nativeSrc": "2468:51:10",
																"nodeType": "YulFunctionCall",
																"src": "2468:51:10"
															},
															"nativeSrc": "2468:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "2468:51:10"
														},
														{
															"nativeSrc": "2528:48:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2528:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2561:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2561:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2568:6:10",
																				"nodeType": "YulLiteral",
																				"src": "2568:6:10",
																				"type": "",
																				"value": "0x0160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2557:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2557:3:10"
																		},
																		"nativeSrc": "2557:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2557:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2551:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2551:5:10"
																},
																"nativeSrc": "2551:25:10",
																"nodeType": "YulFunctionCall",
																"src": "2551:25:10"
															},
															"variables": [
																{
																	"name": "memberValue0_10",
																	"nativeSrc": "2532:15:10",
																	"nodeType": "YulTypedName",
																	"src": "2532:15:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_10",
																		"nativeSrc": "2603:15:10",
																		"nodeType": "YulIdentifier",
																		"src": "2603:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "2624:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2624:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2629:6:10",
																				"nodeType": "YulLiteral",
																				"src": "2629:6:10",
																				"type": "",
																				"value": "0x0160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2620:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2620:3:10"
																		},
																		"nativeSrc": "2620:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2620:16:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint64",
																	"nativeSrc": "2585:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2585:17:10"
																},
																"nativeSrc": "2585:52:10",
																"nodeType": "YulFunctionCall",
																"src": "2585:52:10"
															},
															"nativeSrc": "2585:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "2585:52:10"
														},
														{
															"nativeSrc": "2646:48:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2646:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2679:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2679:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2686:6:10",
																				"nodeType": "YulLiteral",
																				"src": "2686:6:10",
																				"type": "",
																				"value": "0x0180"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2675:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2675:3:10"
																		},
																		"nativeSrc": "2675:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2675:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2669:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2669:5:10"
																},
																"nativeSrc": "2669:25:10",
																"nodeType": "YulFunctionCall",
																"src": "2669:25:10"
															},
															"variables": [
																{
																	"name": "memberValue0_11",
																	"nativeSrc": "2650:15:10",
																	"nodeType": "YulTypedName",
																	"src": "2650:15:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_11",
																		"nativeSrc": "2721:15:10",
																		"nodeType": "YulIdentifier",
																		"src": "2721:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "2742:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2742:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2747:6:10",
																				"nodeType": "YulLiteral",
																				"src": "2747:6:10",
																				"type": "",
																				"value": "0x0180"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2738:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2738:3:10"
																		},
																		"nativeSrc": "2738:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2738:16:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint64",
																	"nativeSrc": "2703:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2703:17:10"
																},
																"nativeSrc": "2703:52:10",
																"nodeType": "YulFunctionCall",
																"src": "2703:52:10"
															},
															"nativeSrc": "2703:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "2703:52:10"
														},
														{
															"nativeSrc": "2764:48:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2764:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2797:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2797:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2804:6:10",
																				"nodeType": "YulLiteral",
																				"src": "2804:6:10",
																				"type": "",
																				"value": "0x01a0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2793:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2793:3:10"
																		},
																		"nativeSrc": "2793:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2793:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2787:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2787:5:10"
																},
																"nativeSrc": "2787:25:10",
																"nodeType": "YulFunctionCall",
																"src": "2787:25:10"
															},
															"variables": [
																{
																	"name": "memberValue0_12",
																	"nativeSrc": "2768:15:10",
																	"nodeType": "YulTypedName",
																	"src": "2768:15:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_12",
																		"nativeSrc": "2839:15:10",
																		"nodeType": "YulIdentifier",
																		"src": "2839:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "2860:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2860:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2865:6:10",
																				"nodeType": "YulLiteral",
																				"src": "2865:6:10",
																				"type": "",
																				"value": "0x01a0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2856:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2856:3:10"
																		},
																		"nativeSrc": "2856:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2856:16:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint64",
																	"nativeSrc": "2821:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2821:17:10"
																},
																"nativeSrc": "2821:52:10",
																"nodeType": "YulFunctionCall",
																"src": "2821:52:10"
															},
															"nativeSrc": "2821:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "2821:52:10"
														},
														{
															"nativeSrc": "2882:48:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2882:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2915:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2915:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2922:6:10",
																				"nodeType": "YulLiteral",
																				"src": "2922:6:10",
																				"type": "",
																				"value": "0x01c0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2911:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2911:3:10"
																		},
																		"nativeSrc": "2911:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2911:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2905:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2905:5:10"
																},
																"nativeSrc": "2905:25:10",
																"nodeType": "YulFunctionCall",
																"src": "2905:25:10"
															},
															"variables": [
																{
																	"name": "memberValue0_13",
																	"nativeSrc": "2886:15:10",
																	"nodeType": "YulTypedName",
																	"src": "2886:15:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_13",
																		"nativeSrc": "2957:15:10",
																		"nodeType": "YulIdentifier",
																		"src": "2957:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "2978:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2978:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2983:6:10",
																				"nodeType": "YulLiteral",
																				"src": "2983:6:10",
																				"type": "",
																				"value": "0x01c0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2974:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2974:3:10"
																		},
																		"nativeSrc": "2974:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2974:16:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint64",
																	"nativeSrc": "2939:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2939:17:10"
																},
																"nativeSrc": "2939:52:10",
																"nodeType": "YulFunctionCall",
																"src": "2939:52:10"
															},
															"nativeSrc": "2939:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "2939:52:10"
														},
														{
															"nativeSrc": "3000:48:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3000:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3033:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3033:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3040:6:10",
																				"nodeType": "YulLiteral",
																				"src": "3040:6:10",
																				"type": "",
																				"value": "0x01e0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3029:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3029:3:10"
																		},
																		"nativeSrc": "3029:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3029:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3023:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3023:5:10"
																},
																"nativeSrc": "3023:25:10",
																"nodeType": "YulFunctionCall",
																"src": "3023:25:10"
															},
															"variables": [
																{
																	"name": "memberValue0_14",
																	"nativeSrc": "3004:15:10",
																	"nodeType": "YulTypedName",
																	"src": "3004:15:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_14",
																		"nativeSrc": "3075:15:10",
																		"nodeType": "YulIdentifier",
																		"src": "3075:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "3096:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "3096:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3101:6:10",
																				"nodeType": "YulLiteral",
																				"src": "3101:6:10",
																				"type": "",
																				"value": "0x01e0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3092:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3092:3:10"
																		},
																		"nativeSrc": "3092:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3092:16:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint64",
																	"nativeSrc": "3057:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "3057:17:10"
																},
																"nativeSrc": "3057:52:10",
																"nodeType": "YulFunctionCall",
																"src": "3057:52:10"
															},
															"nativeSrc": "3057:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "3057:52:10"
														},
														{
															"nativeSrc": "3118:48:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3118:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3151:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3151:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3158:6:10",
																				"nodeType": "YulLiteral",
																				"src": "3158:6:10",
																				"type": "",
																				"value": "0x0200"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3147:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3147:3:10"
																		},
																		"nativeSrc": "3147:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3147:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3141:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3141:5:10"
																},
																"nativeSrc": "3141:25:10",
																"nodeType": "YulFunctionCall",
																"src": "3141:25:10"
															},
															"variables": [
																{
																	"name": "memberValue0_15",
																	"nativeSrc": "3122:15:10",
																	"nodeType": "YulTypedName",
																	"src": "3122:15:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_15",
																		"nativeSrc": "3193:15:10",
																		"nodeType": "YulIdentifier",
																		"src": "3193:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "3214:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "3214:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3219:6:10",
																				"nodeType": "YulLiteral",
																				"src": "3219:6:10",
																				"type": "",
																				"value": "0x0200"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3210:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3210:3:10"
																		},
																		"nativeSrc": "3210:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3210:16:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint64",
																	"nativeSrc": "3175:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "3175:17:10"
																},
																"nativeSrc": "3175:52:10",
																"nodeType": "YulFunctionCall",
																"src": "3175:52:10"
															},
															"nativeSrc": "3175:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "3175:52:10"
														},
														{
															"nativeSrc": "3236:48:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3236:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3269:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3269:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3276:6:10",
																				"nodeType": "YulLiteral",
																				"src": "3276:6:10",
																				"type": "",
																				"value": "0x0220"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3265:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3265:3:10"
																		},
																		"nativeSrc": "3265:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3265:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3259:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3259:5:10"
																},
																"nativeSrc": "3259:25:10",
																"nodeType": "YulFunctionCall",
																"src": "3259:25:10"
															},
															"variables": [
																{
																	"name": "memberValue0_16",
																	"nativeSrc": "3240:15:10",
																	"nodeType": "YulTypedName",
																	"src": "3240:15:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_16",
																		"nativeSrc": "3310:15:10",
																		"nodeType": "YulIdentifier",
																		"src": "3310:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "3331:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "3331:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3336:6:10",
																				"nodeType": "YulLiteral",
																				"src": "3336:6:10",
																				"type": "",
																				"value": "0x0220"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3327:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3327:3:10"
																		},
																		"nativeSrc": "3327:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3327:16:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint8",
																	"nativeSrc": "3293:16:10",
																	"nodeType": "YulIdentifier",
																	"src": "3293:16:10"
																},
																"nativeSrc": "3293:51:10",
																"nodeType": "YulFunctionCall",
																"src": "3293:51:10"
															},
															"nativeSrc": "3293:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "3293:51:10"
														}
													]
												},
												"name": "abi_encode_struct_Fa",
												"nativeSrc": "1299:2051:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1329:5:10",
														"nodeType": "YulTypedName",
														"src": "1329:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1336:3:10",
														"nodeType": "YulTypedName",
														"src": "1336:3:10",
														"type": ""
													}
												],
												"src": "1299:2051:10"
											},
											{
												"body": {
													"nativeSrc": "3502:1563:10",
													"nodeType": "YulBlock",
													"src": "3502:1563:10",
													"statements": [
														{
															"nativeSrc": "3512:28:10",
															"nodeType": "YulAssignment",
															"src": "3512:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3524:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3524:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3535:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3535:4:10",
																		"type": "",
																		"value": "1504"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3520:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3520:3:10"
																},
																"nativeSrc": "3520:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3520:20:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3512:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3512:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3576:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3576:6:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3570:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "3570:5:10"
																		},
																		"nativeSrc": "3570:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3570:13:10"
																	},
																	{
																		"name": "headStart",
																		"nativeSrc": "3585:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3585:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_Fa",
																	"nativeSrc": "3549:20:10",
																	"nodeType": "YulIdentifier",
																	"src": "3549:20:10"
																},
																"nativeSrc": "3549:46:10",
																"nodeType": "YulFunctionCall",
																"src": "3549:46:10"
															},
															"nativeSrc": "3549:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "3549:46:10"
														},
														{
															"nativeSrc": "3604:44:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3604:44:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3634:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3634:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3642:4:10",
																				"nodeType": "YulLiteral",
																				"src": "3642:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3630:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3630:3:10"
																		},
																		"nativeSrc": "3630:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3630:17:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3624:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3624:5:10"
																},
																"nativeSrc": "3624:24:10",
																"nodeType": "YulFunctionCall",
																"src": "3624:24:10"
															},
															"variables": [
																{
																	"name": "memberValue0",
																	"nativeSrc": "3608:12:10",
																	"nodeType": "YulTypedName",
																	"src": "3608:12:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0",
																		"nativeSrc": "3678:12:10",
																		"nodeType": "YulIdentifier",
																		"src": "3678:12:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3696:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3696:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3707:6:10",
																				"nodeType": "YulLiteral",
																				"src": "3707:6:10",
																				"type": "",
																				"value": "0x0240"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3692:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3692:3:10"
																		},
																		"nativeSrc": "3692:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3692:22:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_Fa",
																	"nativeSrc": "3657:20:10",
																	"nodeType": "YulIdentifier",
																	"src": "3657:20:10"
																},
																"nativeSrc": "3657:58:10",
																"nodeType": "YulFunctionCall",
																"src": "3657:58:10"
															},
															"nativeSrc": "3657:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "3657:58:10"
														},
														{
															"nativeSrc": "3724:46:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3724:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3756:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3756:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3764:4:10",
																				"nodeType": "YulLiteral",
																				"src": "3764:4:10",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3752:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3752:3:10"
																		},
																		"nativeSrc": "3752:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3752:17:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3746:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3746:5:10"
																},
																"nativeSrc": "3746:24:10",
																"nodeType": "YulFunctionCall",
																"src": "3746:24:10"
															},
															"variables": [
																{
																	"name": "memberValue0_1",
																	"nativeSrc": "3728:14:10",
																	"nodeType": "YulTypedName",
																	"src": "3728:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_1",
																		"nativeSrc": "3797:14:10",
																		"nodeType": "YulIdentifier",
																		"src": "3797:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3817:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3817:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3828:6:10",
																				"nodeType": "YulLiteral",
																				"src": "3828:6:10",
																				"type": "",
																				"value": "0x0480"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3813:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3813:3:10"
																		},
																		"nativeSrc": "3813:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3813:22:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint64",
																	"nativeSrc": "3779:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "3779:17:10"
																},
																"nativeSrc": "3779:57:10",
																"nodeType": "YulFunctionCall",
																"src": "3779:57:10"
															},
															"nativeSrc": "3779:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "3779:57:10"
														},
														{
															"nativeSrc": "3845:46:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3845:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3877:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3877:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3885:4:10",
																				"nodeType": "YulLiteral",
																				"src": "3885:4:10",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3873:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3873:3:10"
																		},
																		"nativeSrc": "3873:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3873:17:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3867:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3867:5:10"
																},
																"nativeSrc": "3867:24:10",
																"nodeType": "YulFunctionCall",
																"src": "3867:24:10"
															},
															"variables": [
																{
																	"name": "memberValue0_2",
																	"nativeSrc": "3849:14:10",
																	"nodeType": "YulTypedName",
																	"src": "3849:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_2",
																		"nativeSrc": "3918:14:10",
																		"nodeType": "YulIdentifier",
																		"src": "3918:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3938:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3938:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3949:6:10",
																				"nodeType": "YulLiteral",
																				"src": "3949:6:10",
																				"type": "",
																				"value": "0x04a0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3934:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3934:3:10"
																		},
																		"nativeSrc": "3934:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3934:22:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint64",
																	"nativeSrc": "3900:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "3900:17:10"
																},
																"nativeSrc": "3900:57:10",
																"nodeType": "YulFunctionCall",
																"src": "3900:57:10"
															},
															"nativeSrc": "3900:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "3900:57:10"
														},
														{
															"nativeSrc": "3966:46:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3966:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3998:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3998:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4006:4:10",
																				"nodeType": "YulLiteral",
																				"src": "4006:4:10",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3994:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3994:3:10"
																		},
																		"nativeSrc": "3994:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3994:17:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3988:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3988:5:10"
																},
																"nativeSrc": "3988:24:10",
																"nodeType": "YulFunctionCall",
																"src": "3988:24:10"
															},
															"variables": [
																{
																	"name": "memberValue0_3",
																	"nativeSrc": "3970:14:10",
																	"nodeType": "YulTypedName",
																	"src": "3970:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_3",
																		"nativeSrc": "4039:14:10",
																		"nodeType": "YulIdentifier",
																		"src": "4039:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4059:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4059:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4070:6:10",
																				"nodeType": "YulLiteral",
																				"src": "4070:6:10",
																				"type": "",
																				"value": "0x04c0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4055:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4055:3:10"
																		},
																		"nativeSrc": "4055:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4055:22:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint64",
																	"nativeSrc": "4021:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "4021:17:10"
																},
																"nativeSrc": "4021:57:10",
																"nodeType": "YulFunctionCall",
																"src": "4021:57:10"
															},
															"nativeSrc": "4021:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "4021:57:10"
														},
														{
															"nativeSrc": "4087:46:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4087:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4119:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4119:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4127:4:10",
																				"nodeType": "YulLiteral",
																				"src": "4127:4:10",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4115:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4115:3:10"
																		},
																		"nativeSrc": "4115:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4115:17:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4109:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4109:5:10"
																},
																"nativeSrc": "4109:24:10",
																"nodeType": "YulFunctionCall",
																"src": "4109:24:10"
															},
															"variables": [
																{
																	"name": "memberValue0_4",
																	"nativeSrc": "4091:14:10",
																	"nodeType": "YulTypedName",
																	"src": "4091:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_4",
																		"nativeSrc": "4160:14:10",
																		"nodeType": "YulIdentifier",
																		"src": "4160:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4180:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4180:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4191:6:10",
																				"nodeType": "YulLiteral",
																				"src": "4191:6:10",
																				"type": "",
																				"value": "0x04e0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4176:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4176:3:10"
																		},
																		"nativeSrc": "4176:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4176:22:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint64",
																	"nativeSrc": "4142:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "4142:17:10"
																},
																"nativeSrc": "4142:57:10",
																"nodeType": "YulFunctionCall",
																"src": "4142:57:10"
															},
															"nativeSrc": "4142:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "4142:57:10"
														},
														{
															"nativeSrc": "4208:46:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4208:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4240:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4240:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4248:4:10",
																				"nodeType": "YulLiteral",
																				"src": "4248:4:10",
																				"type": "",
																				"value": "0xc0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4236:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4236:3:10"
																		},
																		"nativeSrc": "4236:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4236:17:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4230:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4230:5:10"
																},
																"nativeSrc": "4230:24:10",
																"nodeType": "YulFunctionCall",
																"src": "4230:24:10"
															},
															"variables": [
																{
																	"name": "memberValue0_5",
																	"nativeSrc": "4212:14:10",
																	"nodeType": "YulTypedName",
																	"src": "4212:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_5",
																		"nativeSrc": "4281:14:10",
																		"nodeType": "YulIdentifier",
																		"src": "4281:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4301:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4301:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4312:6:10",
																				"nodeType": "YulLiteral",
																				"src": "4312:6:10",
																				"type": "",
																				"value": "0x0500"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4297:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4297:3:10"
																		},
																		"nativeSrc": "4297:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4297:22:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint64",
																	"nativeSrc": "4263:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "4263:17:10"
																},
																"nativeSrc": "4263:57:10",
																"nodeType": "YulFunctionCall",
																"src": "4263:57:10"
															},
															"nativeSrc": "4263:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "4263:57:10"
														},
														{
															"nativeSrc": "4329:46:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4329:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4361:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4361:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4369:4:10",
																				"nodeType": "YulLiteral",
																				"src": "4369:4:10",
																				"type": "",
																				"value": "0xe0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4357:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4357:3:10"
																		},
																		"nativeSrc": "4357:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4357:17:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4351:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4351:5:10"
																},
																"nativeSrc": "4351:24:10",
																"nodeType": "YulFunctionCall",
																"src": "4351:24:10"
															},
															"variables": [
																{
																	"name": "memberValue0_6",
																	"nativeSrc": "4333:14:10",
																	"nodeType": "YulTypedName",
																	"src": "4333:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_6",
																		"nativeSrc": "4402:14:10",
																		"nodeType": "YulIdentifier",
																		"src": "4402:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4422:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4422:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4433:6:10",
																				"nodeType": "YulLiteral",
																				"src": "4433:6:10",
																				"type": "",
																				"value": "0x0520"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4418:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4418:3:10"
																		},
																		"nativeSrc": "4418:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4418:22:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint64",
																	"nativeSrc": "4384:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "4384:17:10"
																},
																"nativeSrc": "4384:57:10",
																"nodeType": "YulFunctionCall",
																"src": "4384:57:10"
															},
															"nativeSrc": "4384:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "4384:57:10"
														},
														{
															"nativeSrc": "4450:48:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4450:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4482:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4482:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4490:6:10",
																				"nodeType": "YulLiteral",
																				"src": "4490:6:10",
																				"type": "",
																				"value": "0x0100"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4478:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4478:3:10"
																		},
																		"nativeSrc": "4478:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4478:19:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4472:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4472:5:10"
																},
																"nativeSrc": "4472:26:10",
																"nodeType": "YulFunctionCall",
																"src": "4472:26:10"
															},
															"variables": [
																{
																	"name": "memberValue0_7",
																	"nativeSrc": "4454:14:10",
																	"nodeType": "YulTypedName",
																	"src": "4454:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_7",
																		"nativeSrc": "4525:14:10",
																		"nodeType": "YulIdentifier",
																		"src": "4525:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4545:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4545:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4556:6:10",
																				"nodeType": "YulLiteral",
																				"src": "4556:6:10",
																				"type": "",
																				"value": "0x0540"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4541:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4541:3:10"
																		},
																		"nativeSrc": "4541:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4541:22:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint64",
																	"nativeSrc": "4507:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "4507:17:10"
																},
																"nativeSrc": "4507:57:10",
																"nodeType": "YulFunctionCall",
																"src": "4507:57:10"
															},
															"nativeSrc": "4507:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "4507:57:10"
														},
														{
															"nativeSrc": "4573:48:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4573:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4605:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4605:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4613:6:10",
																				"nodeType": "YulLiteral",
																				"src": "4613:6:10",
																				"type": "",
																				"value": "0x0120"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4601:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4601:3:10"
																		},
																		"nativeSrc": "4601:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4601:19:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4595:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4595:5:10"
																},
																"nativeSrc": "4595:26:10",
																"nodeType": "YulFunctionCall",
																"src": "4595:26:10"
															},
															"variables": [
																{
																	"name": "memberValue0_8",
																	"nativeSrc": "4577:14:10",
																	"nodeType": "YulTypedName",
																	"src": "4577:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_8",
																		"nativeSrc": "4648:14:10",
																		"nodeType": "YulIdentifier",
																		"src": "4648:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4668:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4668:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4679:6:10",
																				"nodeType": "YulLiteral",
																				"src": "4679:6:10",
																				"type": "",
																				"value": "0x0560"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4664:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4664:3:10"
																		},
																		"nativeSrc": "4664:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4664:22:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint64",
																	"nativeSrc": "4630:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "4630:17:10"
																},
																"nativeSrc": "4630:57:10",
																"nodeType": "YulFunctionCall",
																"src": "4630:57:10"
															},
															"nativeSrc": "4630:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "4630:57:10"
														},
														{
															"nativeSrc": "4696:48:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4696:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4728:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4728:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4736:6:10",
																				"nodeType": "YulLiteral",
																				"src": "4736:6:10",
																				"type": "",
																				"value": "0x0140"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4724:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4724:3:10"
																		},
																		"nativeSrc": "4724:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4724:19:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4718:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4718:5:10"
																},
																"nativeSrc": "4718:26:10",
																"nodeType": "YulFunctionCall",
																"src": "4718:26:10"
															},
															"variables": [
																{
																	"name": "memberValue0_9",
																	"nativeSrc": "4700:14:10",
																	"nodeType": "YulTypedName",
																	"src": "4700:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_9",
																		"nativeSrc": "4771:14:10",
																		"nodeType": "YulIdentifier",
																		"src": "4771:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4791:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4791:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4802:6:10",
																				"nodeType": "YulLiteral",
																				"src": "4802:6:10",
																				"type": "",
																				"value": "0x0580"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4787:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4787:3:10"
																		},
																		"nativeSrc": "4787:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4787:22:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint64",
																	"nativeSrc": "4753:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "4753:17:10"
																},
																"nativeSrc": "4753:57:10",
																"nodeType": "YulFunctionCall",
																"src": "4753:57:10"
															},
															"nativeSrc": "4753:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "4753:57:10"
														},
														{
															"nativeSrc": "4819:49:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4819:49:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4852:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4852:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4860:6:10",
																				"nodeType": "YulLiteral",
																				"src": "4860:6:10",
																				"type": "",
																				"value": "0x0160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4848:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4848:3:10"
																		},
																		"nativeSrc": "4848:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4848:19:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4842:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4842:5:10"
																},
																"nativeSrc": "4842:26:10",
																"nodeType": "YulFunctionCall",
																"src": "4842:26:10"
															},
															"variables": [
																{
																	"name": "memberValue0_10",
																	"nativeSrc": "4823:15:10",
																	"nodeType": "YulTypedName",
																	"src": "4823:15:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_10",
																		"nativeSrc": "4895:15:10",
																		"nodeType": "YulIdentifier",
																		"src": "4895:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4916:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4916:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4927:6:10",
																				"nodeType": "YulLiteral",
																				"src": "4927:6:10",
																				"type": "",
																				"value": "0x05a0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4912:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4912:3:10"
																		},
																		"nativeSrc": "4912:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4912:22:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint64",
																	"nativeSrc": "4877:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "4877:17:10"
																},
																"nativeSrc": "4877:58:10",
																"nodeType": "YulFunctionCall",
																"src": "4877:58:10"
															},
															"nativeSrc": "4877:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "4877:58:10"
														},
														{
															"nativeSrc": "4944:49:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4944:49:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4977:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4977:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4985:6:10",
																				"nodeType": "YulLiteral",
																				"src": "4985:6:10",
																				"type": "",
																				"value": "0x0180"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4973:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4973:3:10"
																		},
																		"nativeSrc": "4973:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4973:19:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4967:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4967:5:10"
																},
																"nativeSrc": "4967:26:10",
																"nodeType": "YulFunctionCall",
																"src": "4967:26:10"
															},
															"variables": [
																{
																	"name": "memberValue0_11",
																	"nativeSrc": "4948:15:10",
																	"nodeType": "YulTypedName",
																	"src": "4948:15:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_11",
																		"nativeSrc": "5019:15:10",
																		"nodeType": "YulIdentifier",
																		"src": "5019:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5040:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5040:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5051:6:10",
																				"nodeType": "YulLiteral",
																				"src": "5051:6:10",
																				"type": "",
																				"value": "0x05c0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5036:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5036:3:10"
																		},
																		"nativeSrc": "5036:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5036:22:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint8",
																	"nativeSrc": "5002:16:10",
																	"nodeType": "YulIdentifier",
																	"src": "5002:16:10"
																},
																"nativeSrc": "5002:57:10",
																"nodeType": "YulFunctionCall",
																"src": "5002:57:10"
															},
															"nativeSrc": "5002:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "5002:57:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_Faung_$2225_memory_ptr__to_t_struct$_Faung_$2225_memory_ptr__fromStack_reversed",
												"nativeSrc": "3355:1710:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3471:9:10",
														"nodeType": "YulTypedName",
														"src": "3471:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3482:6:10",
														"nodeType": "YulTypedName",
														"src": "3482:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3493:4:10",
														"nodeType": "YulTypedName",
														"src": "3493:4:10",
														"type": ""
													}
												],
												"src": "3355:1710:10"
											},
											{
												"body": {
													"nativeSrc": "5171:76:10",
													"nodeType": "YulBlock",
													"src": "5171:76:10",
													"statements": [
														{
															"nativeSrc": "5181:26:10",
															"nodeType": "YulAssignment",
															"src": "5181:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5193:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5193:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5204:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5204:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5189:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5189:3:10"
																},
																"nativeSrc": "5189:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5189:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5181:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5181:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5223:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5223:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5234:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5234:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5216:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5216:6:10"
																},
																"nativeSrc": "5216:25:10",
																"nodeType": "YulFunctionCall",
																"src": "5216:25:10"
															},
															"nativeSrc": "5216:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "5216:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5070:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5140:9:10",
														"nodeType": "YulTypedName",
														"src": "5140:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5151:6:10",
														"nodeType": "YulTypedName",
														"src": "5151:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5162:4:10",
														"nodeType": "YulTypedName",
														"src": "5162:4:10",
														"type": ""
													}
												],
												"src": "5070:177:10"
											},
											{
												"body": {
													"nativeSrc": "5356:270:10",
													"nodeType": "YulBlock",
													"src": "5356:270:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5402:16:10",
																"nodeType": "YulBlock",
																"src": "5402:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5411:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5411:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5414:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5414:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5404:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5404:6:10"
																			},
																			"nativeSrc": "5404:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5404:12:10"
																		},
																		"nativeSrc": "5404:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5404:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5377:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5377:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5386:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5386:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5373:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5373:3:10"
																		},
																		"nativeSrc": "5373:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5373:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5398:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5398:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5369:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5369:3:10"
																},
																"nativeSrc": "5369:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5369:32:10"
															},
															"nativeSrc": "5366:52:10",
															"nodeType": "YulIf",
															"src": "5366:52:10"
														},
														{
															"nativeSrc": "5427:39:10",
															"nodeType": "YulAssignment",
															"src": "5427:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5456:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5456:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5437:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "5437:18:10"
																},
																"nativeSrc": "5437:29:10",
																"nodeType": "YulFunctionCall",
																"src": "5437:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5427:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5427:6:10"
																}
															]
														},
														{
															"nativeSrc": "5475:48:10",
															"nodeType": "YulAssignment",
															"src": "5475:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5508:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5508:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5519:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5519:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5504:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5504:3:10"
																		},
																		"nativeSrc": "5504:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5504:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5485:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "5485:18:10"
																},
																"nativeSrc": "5485:38:10",
																"nodeType": "YulFunctionCall",
																"src": "5485:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5475:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5475:6:10"
																}
															]
														},
														{
															"nativeSrc": "5532:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5532:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "5545:1:10",
																"nodeType": "YulLiteral",
																"src": "5545:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5536:5:10",
																	"nodeType": "YulTypedName",
																	"src": "5536:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5555:41:10",
															"nodeType": "YulAssignment",
															"src": "5555:41:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5581:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5581:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5592:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5592:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5577:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5577:3:10"
																		},
																		"nativeSrc": "5577:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5577:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5564:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "5564:12:10"
																},
																"nativeSrc": "5564:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5564:32:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5555:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "5555:5:10"
																}
															]
														},
														{
															"nativeSrc": "5605:15:10",
															"nodeType": "YulAssignment",
															"src": "5605:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "5615:5:10",
																"nodeType": "YulIdentifier",
																"src": "5615:5:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "5605:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5605:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5252:374:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5306:9:10",
														"nodeType": "YulTypedName",
														"src": "5306:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5317:7:10",
														"nodeType": "YulTypedName",
														"src": "5317:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5329:6:10",
														"nodeType": "YulTypedName",
														"src": "5329:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5337:6:10",
														"nodeType": "YulTypedName",
														"src": "5337:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5345:6:10",
														"nodeType": "YulTypedName",
														"src": "5345:6:10",
														"type": ""
													}
												],
												"src": "5252:374:10"
											},
											{
												"body": {
													"nativeSrc": "5728:87:10",
													"nodeType": "YulBlock",
													"src": "5728:87:10",
													"statements": [
														{
															"nativeSrc": "5738:26:10",
															"nodeType": "YulAssignment",
															"src": "5738:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5750:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5750:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5761:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5761:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5746:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5746:3:10"
																},
																"nativeSrc": "5746:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5746:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5738:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5738:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5780:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5780:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5795:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5795:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5803:4:10",
																				"nodeType": "YulLiteral",
																				"src": "5803:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5791:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5791:3:10"
																		},
																		"nativeSrc": "5791:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5791:17:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5773:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5773:6:10"
																},
																"nativeSrc": "5773:36:10",
																"nodeType": "YulFunctionCall",
																"src": "5773:36:10"
															},
															"nativeSrc": "5773:36:10",
															"nodeType": "YulExpressionStatement",
															"src": "5773:36:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5631:184:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5697:9:10",
														"nodeType": "YulTypedName",
														"src": "5697:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5708:6:10",
														"nodeType": "YulTypedName",
														"src": "5708:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5719:4:10",
														"nodeType": "YulTypedName",
														"src": "5719:4:10",
														"type": ""
													}
												],
												"src": "5631:184:10"
											},
											{
												"body": {
													"nativeSrc": "5924:362:10",
													"nodeType": "YulBlock",
													"src": "5924:362:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5970:16:10",
																"nodeType": "YulBlock",
																"src": "5970:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5979:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5979:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5982:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5982:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5972:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5972:6:10"
																			},
																			"nativeSrc": "5972:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5972:12:10"
																		},
																		"nativeSrc": "5972:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5972:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5945:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5945:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5954:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5954:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5941:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5941:3:10"
																		},
																		"nativeSrc": "5941:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5941:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5966:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5966:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5937:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5937:3:10"
																},
																"nativeSrc": "5937:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5937:32:10"
															},
															"nativeSrc": "5934:52:10",
															"nodeType": "YulIf",
															"src": "5934:52:10"
														},
														{
															"nativeSrc": "5995:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5995:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "6008:1:10",
																"nodeType": "YulLiteral",
																"src": "6008:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5999:5:10",
																	"nodeType": "YulTypedName",
																	"src": "5999:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6018:32:10",
															"nodeType": "YulAssignment",
															"src": "6018:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6040:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6040:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6027:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "6027:12:10"
																},
																"nativeSrc": "6027:23:10",
																"nodeType": "YulFunctionCall",
																"src": "6027:23:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6018:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6018:5:10"
																}
															]
														},
														{
															"nativeSrc": "6059:15:10",
															"nodeType": "YulAssignment",
															"src": "6059:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "6069:5:10",
																"nodeType": "YulIdentifier",
																"src": "6069:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6059:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6059:6:10"
																}
															]
														},
														{
															"nativeSrc": "6083:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6083:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "6098:1:10",
																"nodeType": "YulLiteral",
																"src": "6098:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "6087:7:10",
																	"nodeType": "YulTypedName",
																	"src": "6087:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6108:43:10",
															"nodeType": "YulAssignment",
															"src": "6108:43:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6136:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6136:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6147:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6147:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6132:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6132:3:10"
																		},
																		"nativeSrc": "6132:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6132:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6119:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "6119:12:10"
																},
																"nativeSrc": "6119:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6119:32:10"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "6108:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "6108:7:10"
																}
															]
														},
														{
															"nativeSrc": "6160:17:10",
															"nodeType": "YulAssignment",
															"src": "6160:17:10",
															"value": {
																"name": "value_1",
																"nativeSrc": "6170:7:10",
																"nodeType": "YulIdentifier",
																"src": "6170:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6160:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6160:6:10"
																}
															]
														},
														{
															"nativeSrc": "6186:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6186:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "6201:1:10",
																"nodeType": "YulLiteral",
																"src": "6201:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "6190:7:10",
																	"nodeType": "YulTypedName",
																	"src": "6190:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6211:43:10",
															"nodeType": "YulAssignment",
															"src": "6211:43:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6239:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6239:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6250:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6250:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6235:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6235:3:10"
																		},
																		"nativeSrc": "6235:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6235:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6222:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "6222:12:10"
																},
																"nativeSrc": "6222:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6222:32:10"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "6211:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "6211:7:10"
																}
															]
														},
														{
															"nativeSrc": "6263:17:10",
															"nodeType": "YulAssignment",
															"src": "6263:17:10",
															"value": {
																"name": "value_2",
																"nativeSrc": "6273:7:10",
																"nodeType": "YulIdentifier",
																"src": "6273:7:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "6263:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6263:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nativeSrc": "5820:466:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5874:9:10",
														"nodeType": "YulTypedName",
														"src": "5874:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5885:7:10",
														"nodeType": "YulTypedName",
														"src": "5885:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5897:6:10",
														"nodeType": "YulTypedName",
														"src": "5897:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5905:6:10",
														"nodeType": "YulTypedName",
														"src": "5905:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5913:6:10",
														"nodeType": "YulTypedName",
														"src": "5913:6:10",
														"type": ""
													}
												],
												"src": "5820:466:10"
											},
											{
												"body": {
													"nativeSrc": "6361:156:10",
													"nodeType": "YulBlock",
													"src": "6361:156:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6407:16:10",
																"nodeType": "YulBlock",
																"src": "6407:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6416:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6416:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6419:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6419:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6409:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6409:6:10"
																			},
																			"nativeSrc": "6409:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6409:12:10"
																		},
																		"nativeSrc": "6409:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6409:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6382:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6382:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6391:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6391:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6378:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6378:3:10"
																		},
																		"nativeSrc": "6378:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6378:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6403:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6403:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6374:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6374:3:10"
																},
																"nativeSrc": "6374:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6374:32:10"
															},
															"nativeSrc": "6371:52:10",
															"nodeType": "YulIf",
															"src": "6371:52:10"
														},
														{
															"nativeSrc": "6432:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6432:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "6445:1:10",
																"nodeType": "YulLiteral",
																"src": "6445:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6436:5:10",
																	"nodeType": "YulTypedName",
																	"src": "6436:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6455:32:10",
															"nodeType": "YulAssignment",
															"src": "6455:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6477:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6477:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6464:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "6464:12:10"
																},
																"nativeSrc": "6464:23:10",
																"nodeType": "YulFunctionCall",
																"src": "6464:23:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6455:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6455:5:10"
																}
															]
														},
														{
															"nativeSrc": "6496:15:10",
															"nodeType": "YulAssignment",
															"src": "6496:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "6506:5:10",
																"nodeType": "YulIdentifier",
																"src": "6506:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6496:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6496:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "6291:226:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6327:9:10",
														"nodeType": "YulTypedName",
														"src": "6327:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6338:7:10",
														"nodeType": "YulTypedName",
														"src": "6338:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6350:6:10",
														"nodeType": "YulTypedName",
														"src": "6350:6:10",
														"type": ""
													}
												],
												"src": "6291:226:10"
											},
											{
												"body": {
													"nativeSrc": "6570:123:10",
													"nodeType": "YulBlock",
													"src": "6570:123:10",
													"statements": [
														{
															"nativeSrc": "6580:29:10",
															"nodeType": "YulAssignment",
															"src": "6580:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6602:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6602:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6589:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "6589:12:10"
																},
																"nativeSrc": "6589:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6589:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6580:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6580:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6671:16:10",
																"nodeType": "YulBlock",
																"src": "6671:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6680:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6680:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6683:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6683:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6673:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6673:6:10"
																			},
																			"nativeSrc": "6673:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6673:12:10"
																		},
																		"nativeSrc": "6673:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6673:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6631:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6631:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6642:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "6642:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6649:18:10",
																						"nodeType": "YulLiteral",
																						"src": "6649:18:10",
																						"type": "",
																						"value": "0xffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "6638:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6638:3:10"
																				},
																				"nativeSrc": "6638:30:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6638:30:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6628:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "6628:2:10"
																		},
																		"nativeSrc": "6628:41:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6628:41:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6621:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6621:6:10"
																},
																"nativeSrc": "6621:49:10",
																"nodeType": "YulFunctionCall",
																"src": "6621:49:10"
															},
															"nativeSrc": "6618:69:10",
															"nodeType": "YulIf",
															"src": "6618:69:10"
														}
													]
												},
												"name": "abi_decode_uint64",
												"nativeSrc": "6522:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6549:6:10",
														"nodeType": "YulTypedName",
														"src": "6549:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6560:5:10",
														"nodeType": "YulTypedName",
														"src": "6560:5:10",
														"type": ""
													}
												],
												"src": "6522:171:10"
											},
											{
												"body": {
													"nativeSrc": "6799:227:10",
													"nodeType": "YulBlock",
													"src": "6799:227:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6845:16:10",
																"nodeType": "YulBlock",
																"src": "6845:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6854:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6854:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6857:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6857:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6847:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6847:6:10"
																			},
																			"nativeSrc": "6847:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6847:12:10"
																		},
																		"nativeSrc": "6847:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6847:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6820:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6820:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6829:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6829:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6816:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6816:3:10"
																		},
																		"nativeSrc": "6816:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6816:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6841:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6841:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6812:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6812:3:10"
																},
																"nativeSrc": "6812:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6812:32:10"
															},
															"nativeSrc": "6809:52:10",
															"nodeType": "YulIf",
															"src": "6809:52:10"
														},
														{
															"nativeSrc": "6870:38:10",
															"nodeType": "YulAssignment",
															"src": "6870:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6898:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6898:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint64",
																	"nativeSrc": "6880:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "6880:17:10"
																},
																"nativeSrc": "6880:28:10",
																"nodeType": "YulFunctionCall",
																"src": "6880:28:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6870:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6870:6:10"
																}
															]
														},
														{
															"nativeSrc": "6917:47:10",
															"nodeType": "YulAssignment",
															"src": "6917:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6949:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6949:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6960:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6960:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6945:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6945:3:10"
																		},
																		"nativeSrc": "6945:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6945:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint64",
																	"nativeSrc": "6927:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "6927:17:10"
																},
																"nativeSrc": "6927:37:10",
																"nodeType": "YulFunctionCall",
																"src": "6927:37:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6917:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6917:6:10"
																}
															]
														},
														{
															"nativeSrc": "6973:47:10",
															"nodeType": "YulAssignment",
															"src": "6973:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7005:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7005:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7016:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7016:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7001:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7001:3:10"
																		},
																		"nativeSrc": "7001:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7001:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint64",
																	"nativeSrc": "6983:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "6983:17:10"
																},
																"nativeSrc": "6983:37:10",
																"nodeType": "YulFunctionCall",
																"src": "6983:37:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "6973:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6973:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint64t_uint64t_uint64",
												"nativeSrc": "6698:328:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6749:9:10",
														"nodeType": "YulTypedName",
														"src": "6749:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6760:7:10",
														"nodeType": "YulTypedName",
														"src": "6760:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6772:6:10",
														"nodeType": "YulTypedName",
														"src": "6772:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6780:6:10",
														"nodeType": "YulTypedName",
														"src": "6780:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6788:6:10",
														"nodeType": "YulTypedName",
														"src": "6788:6:10",
														"type": ""
													}
												],
												"src": "6698:328:10"
											},
											{
												"body": {
													"nativeSrc": "7130:101:10",
													"nodeType": "YulBlock",
													"src": "7130:101:10",
													"statements": [
														{
															"nativeSrc": "7140:26:10",
															"nodeType": "YulAssignment",
															"src": "7140:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7152:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7152:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7163:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7163:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7148:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7148:3:10"
																},
																"nativeSrc": "7148:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7148:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7140:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7140:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7182:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7182:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7197:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7197:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7205:18:10",
																				"nodeType": "YulLiteral",
																				"src": "7205:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7193:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7193:3:10"
																		},
																		"nativeSrc": "7193:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7193:31:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7175:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7175:6:10"
																},
																"nativeSrc": "7175:50:10",
																"nodeType": "YulFunctionCall",
																"src": "7175:50:10"
															},
															"nativeSrc": "7175:50:10",
															"nodeType": "YulExpressionStatement",
															"src": "7175:50:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nativeSrc": "7031:200:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7099:9:10",
														"nodeType": "YulTypedName",
														"src": "7099:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7110:6:10",
														"nodeType": "YulTypedName",
														"src": "7110:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7121:4:10",
														"nodeType": "YulTypedName",
														"src": "7121:4:10",
														"type": ""
													}
												],
												"src": "7031:200:10"
											},
											{
												"body": {
													"nativeSrc": "7306:116:10",
													"nodeType": "YulBlock",
													"src": "7306:116:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7352:16:10",
																"nodeType": "YulBlock",
																"src": "7352:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7361:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7361:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7364:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7364:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7354:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7354:6:10"
																			},
																			"nativeSrc": "7354:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7354:12:10"
																		},
																		"nativeSrc": "7354:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7354:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7327:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7327:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7336:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7336:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7323:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7323:3:10"
																		},
																		"nativeSrc": "7323:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7323:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7348:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7348:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7319:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7319:3:10"
																},
																"nativeSrc": "7319:32:10",
																"nodeType": "YulFunctionCall",
																"src": "7319:32:10"
															},
															"nativeSrc": "7316:52:10",
															"nodeType": "YulIf",
															"src": "7316:52:10"
														},
														{
															"nativeSrc": "7377:39:10",
															"nodeType": "YulAssignment",
															"src": "7377:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7406:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7406:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "7387:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "7387:18:10"
																},
																"nativeSrc": "7387:29:10",
																"nodeType": "YulFunctionCall",
																"src": "7387:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7377:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7377:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7236:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7272:9:10",
														"nodeType": "YulTypedName",
														"src": "7272:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7283:7:10",
														"nodeType": "YulTypedName",
														"src": "7283:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7295:6:10",
														"nodeType": "YulTypedName",
														"src": "7295:6:10",
														"type": ""
													}
												],
												"src": "7236:186:10"
											},
											{
												"body": {
													"nativeSrc": "7514:173:10",
													"nodeType": "YulBlock",
													"src": "7514:173:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7560:16:10",
																"nodeType": "YulBlock",
																"src": "7560:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7569:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7569:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7572:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7572:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7562:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7562:6:10"
																			},
																			"nativeSrc": "7562:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7562:12:10"
																		},
																		"nativeSrc": "7562:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7562:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7535:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7535:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7544:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7544:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7531:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7531:3:10"
																		},
																		"nativeSrc": "7531:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7531:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7556:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7556:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7527:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7527:3:10"
																},
																"nativeSrc": "7527:32:10",
																"nodeType": "YulFunctionCall",
																"src": "7527:32:10"
															},
															"nativeSrc": "7524:52:10",
															"nodeType": "YulIf",
															"src": "7524:52:10"
														},
														{
															"nativeSrc": "7585:39:10",
															"nodeType": "YulAssignment",
															"src": "7585:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7614:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7614:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "7595:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "7595:18:10"
																},
																"nativeSrc": "7595:29:10",
																"nodeType": "YulFunctionCall",
																"src": "7595:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7585:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7585:6:10"
																}
															]
														},
														{
															"nativeSrc": "7633:48:10",
															"nodeType": "YulAssignment",
															"src": "7633:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7666:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7666:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7677:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7677:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7662:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7662:3:10"
																		},
																		"nativeSrc": "7662:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7662:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "7643:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "7643:18:10"
																},
																"nativeSrc": "7643:38:10",
																"nodeType": "YulFunctionCall",
																"src": "7643:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "7633:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7633:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7427:260:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7472:9:10",
														"nodeType": "YulTypedName",
														"src": "7472:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7483:7:10",
														"nodeType": "YulTypedName",
														"src": "7483:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7495:6:10",
														"nodeType": "YulTypedName",
														"src": "7495:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7503:6:10",
														"nodeType": "YulTypedName",
														"src": "7503:6:10",
														"type": ""
													}
												],
												"src": "7427:260:10"
											},
											{
												"body": {
													"nativeSrc": "7747:325:10",
													"nodeType": "YulBlock",
													"src": "7747:325:10",
													"statements": [
														{
															"nativeSrc": "7757:22:10",
															"nodeType": "YulAssignment",
															"src": "7757:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7771:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7771:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "7774:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7774:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7767:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7767:3:10"
																},
																"nativeSrc": "7767:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7767:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7757:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7757:6:10"
																}
															]
														},
														{
															"nativeSrc": "7788:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7788:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7818:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7818:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7824:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7824:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7814:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7814:3:10"
																},
																"nativeSrc": "7814:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7814:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7792:18:10",
																	"nodeType": "YulTypedName",
																	"src": "7792:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7865:31:10",
																"nodeType": "YulBlock",
																"src": "7865:31:10",
																"statements": [
																	{
																		"nativeSrc": "7867:27:10",
																		"nodeType": "YulAssignment",
																		"src": "7867:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7881:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "7881:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7889:4:10",
																					"nodeType": "YulLiteral",
																					"src": "7889:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7877:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7877:3:10"
																			},
																			"nativeSrc": "7877:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7877:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7867:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7867:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7845:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "7845:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7838:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7838:6:10"
																},
																"nativeSrc": "7838:26:10",
																"nodeType": "YulFunctionCall",
																"src": "7838:26:10"
															},
															"nativeSrc": "7835:61:10",
															"nodeType": "YulIf",
															"src": "7835:61:10"
														},
														{
															"body": {
																"nativeSrc": "7955:111:10",
																"nodeType": "YulBlock",
																"src": "7955:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7976:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7976:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7983:3:10",
																							"nodeType": "YulLiteral",
																							"src": "7983:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7988:10:10",
																							"nodeType": "YulLiteral",
																							"src": "7988:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "7979:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "7979:3:10"
																					},
																					"nativeSrc": "7979:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "7979:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7969:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7969:6:10"
																			},
																			"nativeSrc": "7969:31:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7969:31:10"
																		},
																		"nativeSrc": "7969:31:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7969:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8020:1:10",
																					"nodeType": "YulLiteral",
																					"src": "8020:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8023:4:10",
																					"nodeType": "YulLiteral",
																					"src": "8023:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8013:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8013:6:10"
																			},
																			"nativeSrc": "8013:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8013:15:10"
																		},
																		"nativeSrc": "8013:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8013:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8048:1:10",
																					"nodeType": "YulLiteral",
																					"src": "8048:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8051:4:10",
																					"nodeType": "YulLiteral",
																					"src": "8051:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8041:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8041:6:10"
																			},
																			"nativeSrc": "8041:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8041:15:10"
																		},
																		"nativeSrc": "8041:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8041:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7911:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "7911:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7934:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7934:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7942:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7942:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7931:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "7931:2:10"
																		},
																		"nativeSrc": "7931:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7931:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7908:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7908:2:10"
																},
																"nativeSrc": "7908:38:10",
																"nodeType": "YulFunctionCall",
																"src": "7908:38:10"
															},
															"nativeSrc": "7905:161:10",
															"nodeType": "YulIf",
															"src": "7905:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "7692:380:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7727:4:10",
														"nodeType": "YulTypedName",
														"src": "7727:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7736:6:10",
														"nodeType": "YulTypedName",
														"src": "7736:6:10",
														"type": ""
													}
												],
												"src": "7692:380:10"
											},
											{
												"body": {
													"nativeSrc": "8109:95:10",
													"nodeType": "YulBlock",
													"src": "8109:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8126:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8126:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8133:3:10",
																				"nodeType": "YulLiteral",
																				"src": "8133:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8138:10:10",
																				"nodeType": "YulLiteral",
																				"src": "8138:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8129:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8129:3:10"
																		},
																		"nativeSrc": "8129:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8129:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8119:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8119:6:10"
																},
																"nativeSrc": "8119:31:10",
																"nodeType": "YulFunctionCall",
																"src": "8119:31:10"
															},
															"nativeSrc": "8119:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "8119:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8166:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8166:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8169:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8169:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8159:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8159:6:10"
																},
																"nativeSrc": "8159:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8159:15:10"
															},
															"nativeSrc": "8159:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8159:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8190:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8190:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8193:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8193:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8183:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8183:6:10"
																},
																"nativeSrc": "8183:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8183:15:10"
															},
															"nativeSrc": "8183:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8183:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "8077:127:10",
												"nodeType": "YulFunctionDefinition",
												"src": "8077:127:10"
											},
											{
												"body": {
													"nativeSrc": "8247:74:10",
													"nodeType": "YulBlock",
													"src": "8247:74:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "8270:22:10",
																"nodeType": "YulBlock",
																"src": "8270:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "8272:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8272:16:10"
																			},
																			"nativeSrc": "8272:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8272:18:10"
																		},
																		"nativeSrc": "8272:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8272:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8267:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8267:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8260:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8260:6:10"
																},
																"nativeSrc": "8260:9:10",
																"nodeType": "YulFunctionCall",
																"src": "8260:9:10"
															},
															"nativeSrc": "8257:35:10",
															"nodeType": "YulIf",
															"src": "8257:35:10"
														},
														{
															"nativeSrc": "8301:14:10",
															"nodeType": "YulAssignment",
															"src": "8301:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8310:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8310:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8313:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8313:1:10"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "8306:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8306:3:10"
																},
																"nativeSrc": "8306:9:10",
																"nodeType": "YulFunctionCall",
																"src": "8306:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8301:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "8301:1:10"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "8209:112:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8232:1:10",
														"nodeType": "YulTypedName",
														"src": "8232:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8235:1:10",
														"nodeType": "YulTypedName",
														"src": "8235:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "8241:1:10",
														"nodeType": "YulTypedName",
														"src": "8241:1:10",
														"type": ""
													}
												],
												"src": "8209:112:10"
											},
											{
												"body": {
													"nativeSrc": "8372:151:10",
													"nodeType": "YulBlock",
													"src": "8372:151:10",
													"statements": [
														{
															"nativeSrc": "8382:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8382:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8397:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8397:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8408:3:10",
																						"nodeType": "YulLiteral",
																						"src": "8408:3:10",
																						"type": "",
																						"value": "160"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8413:1:10",
																						"nodeType": "YulLiteral",
																						"src": "8413:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "8404:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8404:3:10"
																				},
																				"nativeSrc": "8404:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8404:11:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8417:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8417:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8400:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8400:3:10"
																		},
																		"nativeSrc": "8400:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8400:19:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8393:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8393:3:10"
																},
																"nativeSrc": "8393:27:10",
																"nodeType": "YulFunctionCall",
																"src": "8393:27:10"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nativeSrc": "8386:3:10",
																	"nodeType": "YulTypedName",
																	"src": "8386:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8444:22:10",
																"nodeType": "YulBlock",
																"src": "8444:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "8446:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8446:16:10"
																			},
																			"nativeSrc": "8446:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8446:18:10"
																		},
																		"nativeSrc": "8446:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8446:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y_1",
																		"nativeSrc": "8439:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8439:3:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8432:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:10"
																},
																"nativeSrc": "8432:11:10",
																"nodeType": "YulFunctionCall",
																"src": "8432:11:10"
															},
															"nativeSrc": "8429:37:10",
															"nodeType": "YulIf",
															"src": "8429:37:10"
														},
														{
															"nativeSrc": "8475:42:10",
															"nodeType": "YulAssignment",
															"src": "8475:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "8488:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "8488:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8499:3:10",
																								"nodeType": "YulLiteral",
																								"src": "8499:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8504:1:10",
																								"nodeType": "YulLiteral",
																								"src": "8504:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8495:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "8495:3:10"
																						},
																						"nativeSrc": "8495:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "8495:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8508:1:10",
																						"nodeType": "YulLiteral",
																						"src": "8508:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8491:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8491:3:10"
																				},
																				"nativeSrc": "8491:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8491:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8484:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8484:3:10"
																		},
																		"nativeSrc": "8484:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8484:27:10"
																	},
																	{
																		"name": "y_1",
																		"nativeSrc": "8513:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8513:3:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8480:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8480:3:10"
																},
																"nativeSrc": "8480:37:10",
																"nodeType": "YulFunctionCall",
																"src": "8480:37:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8475:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "8475:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint160",
												"nativeSrc": "8326:197:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8357:1:10",
														"nodeType": "YulTypedName",
														"src": "8357:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8360:1:10",
														"nodeType": "YulTypedName",
														"src": "8360:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "8366:1:10",
														"nodeType": "YulTypedName",
														"src": "8366:1:10",
														"type": ""
													}
												],
												"src": "8326:197:10"
											},
											{
												"body": {
													"nativeSrc": "8685:188:10",
													"nodeType": "YulBlock",
													"src": "8685:188:10",
													"statements": [
														{
															"nativeSrc": "8695:26:10",
															"nodeType": "YulAssignment",
															"src": "8695:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8707:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8707:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8718:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8718:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8703:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8703:3:10"
																},
																"nativeSrc": "8703:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8703:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8695:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8695:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8737:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8737:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8752:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8752:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8768:3:10",
																								"nodeType": "YulLiteral",
																								"src": "8768:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8773:1:10",
																								"nodeType": "YulLiteral",
																								"src": "8773:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8764:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "8764:3:10"
																						},
																						"nativeSrc": "8764:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "8764:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8777:1:10",
																						"nodeType": "YulLiteral",
																						"src": "8777:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8760:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8760:3:10"
																				},
																				"nativeSrc": "8760:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8760:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8748:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8748:3:10"
																		},
																		"nativeSrc": "8748:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8748:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8730:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8730:6:10"
																},
																"nativeSrc": "8730:51:10",
																"nodeType": "YulFunctionCall",
																"src": "8730:51:10"
															},
															"nativeSrc": "8730:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "8730:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8801:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8801:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8812:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8812:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8797:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8797:3:10"
																		},
																		"nativeSrc": "8797:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8797:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8817:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8817:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8790:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8790:6:10"
																},
																"nativeSrc": "8790:34:10",
																"nodeType": "YulFunctionCall",
																"src": "8790:34:10"
															},
															"nativeSrc": "8790:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "8790:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8844:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8844:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8855:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8855:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8840:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8840:3:10"
																		},
																		"nativeSrc": "8840:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8840:18:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "8860:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8860:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8833:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8833:6:10"
																},
																"nativeSrc": "8833:34:10",
																"nodeType": "YulFunctionCall",
																"src": "8833:34:10"
															},
															"nativeSrc": "8833:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "8833:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8528:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8638:9:10",
														"nodeType": "YulTypedName",
														"src": "8638:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8649:6:10",
														"nodeType": "YulTypedName",
														"src": "8649:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8657:6:10",
														"nodeType": "YulTypedName",
														"src": "8657:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8665:6:10",
														"nodeType": "YulTypedName",
														"src": "8665:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8676:4:10",
														"nodeType": "YulTypedName",
														"src": "8676:4:10",
														"type": ""
													}
												],
												"src": "8528:345:10"
											},
											{
												"body": {
													"nativeSrc": "8979:102:10",
													"nodeType": "YulBlock",
													"src": "8979:102:10",
													"statements": [
														{
															"nativeSrc": "8989:26:10",
															"nodeType": "YulAssignment",
															"src": "8989:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9001:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9001:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9012:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9012:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8997:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8997:3:10"
																},
																"nativeSrc": "8997:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8997:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8989:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8989:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9031:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9031:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9046:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9046:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9062:3:10",
																								"nodeType": "YulLiteral",
																								"src": "9062:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9067:1:10",
																								"nodeType": "YulLiteral",
																								"src": "9067:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9058:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "9058:3:10"
																						},
																						"nativeSrc": "9058:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "9058:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9071:1:10",
																						"nodeType": "YulLiteral",
																						"src": "9071:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9054:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9054:3:10"
																				},
																				"nativeSrc": "9054:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9054:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9042:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9042:3:10"
																		},
																		"nativeSrc": "9042:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9042:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9024:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9024:6:10"
																},
																"nativeSrc": "9024:51:10",
																"nodeType": "YulFunctionCall",
																"src": "9024:51:10"
															},
															"nativeSrc": "9024:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "9024:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8878:203:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8948:9:10",
														"nodeType": "YulTypedName",
														"src": "8948:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8959:6:10",
														"nodeType": "YulTypedName",
														"src": "8959:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8970:4:10",
														"nodeType": "YulTypedName",
														"src": "8970:4:10",
														"type": ""
													}
												],
												"src": "8878:203:10"
											},
											{
												"body": {
													"nativeSrc": "9118:95:10",
													"nodeType": "YulBlock",
													"src": "9118:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9135:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9135:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9142:3:10",
																				"nodeType": "YulLiteral",
																				"src": "9142:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9147:10:10",
																				"nodeType": "YulLiteral",
																				"src": "9147:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9138:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9138:3:10"
																		},
																		"nativeSrc": "9138:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9138:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9128:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9128:6:10"
																},
																"nativeSrc": "9128:31:10",
																"nodeType": "YulFunctionCall",
																"src": "9128:31:10"
															},
															"nativeSrc": "9128:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "9128:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9175:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9175:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9178:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9178:4:10",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9168:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9168:6:10"
																},
																"nativeSrc": "9168:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9168:15:10"
															},
															"nativeSrc": "9168:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "9168:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9199:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9199:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9202:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9202:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9192:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9192:6:10"
																},
																"nativeSrc": "9192:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9192:15:10"
															},
															"nativeSrc": "9192:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "9192:15:10"
														}
													]
												},
												"name": "panic_error_0x01",
												"nativeSrc": "9086:127:10",
												"nodeType": "YulFunctionDefinition",
												"src": "9086:127:10"
											},
											{
												"body": {
													"nativeSrc": "9266:174:10",
													"nodeType": "YulBlock",
													"src": "9266:174:10",
													"statements": [
														{
															"nativeSrc": "9276:16:10",
															"nodeType": "YulAssignment",
															"src": "9276:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9287:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9287:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9290:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9290:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9283:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9283:3:10"
																},
																"nativeSrc": "9283:9:10",
																"nodeType": "YulFunctionCall",
																"src": "9283:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9276:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9276:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9323:111:10",
																"nodeType": "YulBlock",
																"src": "9323:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9344:1:10",
																					"nodeType": "YulLiteral",
																					"src": "9344:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9351:3:10",
																							"nodeType": "YulLiteral",
																							"src": "9351:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "9356:10:10",
																							"nodeType": "YulLiteral",
																							"src": "9356:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "9347:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "9347:3:10"
																					},
																					"nativeSrc": "9347:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "9347:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9337:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9337:6:10"
																			},
																			"nativeSrc": "9337:31:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9337:31:10"
																		},
																		"nativeSrc": "9337:31:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9337:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9388:1:10",
																					"nodeType": "YulLiteral",
																					"src": "9388:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9391:4:10",
																					"nodeType": "YulLiteral",
																					"src": "9391:4:10",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9381:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9381:6:10"
																			},
																			"nativeSrc": "9381:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9381:15:10"
																		},
																		"nativeSrc": "9381:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9381:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9416:1:10",
																					"nodeType": "YulLiteral",
																					"src": "9416:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9419:4:10",
																					"nodeType": "YulLiteral",
																					"src": "9419:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9409:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9409:6:10"
																			},
																			"nativeSrc": "9409:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9409:15:10"
																		},
																		"nativeSrc": "9409:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9409:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9307:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9307:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9310:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9310:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9304:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "9304:2:10"
																},
																"nativeSrc": "9304:10:10",
																"nodeType": "YulFunctionCall",
																"src": "9304:10:10"
															},
															"nativeSrc": "9301:133:10",
															"nodeType": "YulIf",
															"src": "9301:133:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9218:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9249:1:10",
														"nodeType": "YulTypedName",
														"src": "9249:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9252:1:10",
														"nodeType": "YulTypedName",
														"src": "9252:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9258:3:10",
														"nodeType": "YulTypedName",
														"src": "9258:3:10",
														"type": ""
													}
												],
												"src": "9218:222:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_uint64(value, pos)\n    {\n        mstore(pos, and(value, 0xffffffffffffffff))\n    }\n    function abi_encode_uint8(value, pos)\n    { mstore(pos, and(value, 0xff)) }\n    function abi_encode_struct_Fa(value, pos)\n    {\n        abi_encode_uint64(mload(value), pos)\n        let memberValue0 := mload(add(value, 0x20))\n        abi_encode_uint64(memberValue0, add(pos, 0x20))\n        let memberValue0_1 := mload(add(value, 0x40))\n        abi_encode_uint64(memberValue0_1, add(pos, 0x40))\n        let memberValue0_2 := mload(add(value, 0x60))\n        abi_encode_uint64(memberValue0_2, add(pos, 0x60))\n        let memberValue0_3 := mload(add(value, 0x80))\n        abi_encode_uint64(memberValue0_3, add(pos, 0x80))\n        let memberValue0_4 := mload(add(value, 0xa0))\n        abi_encode_uint64(memberValue0_4, add(pos, 0xa0))\n        let memberValue0_5 := mload(add(value, 0xc0))\n        abi_encode_uint64(memberValue0_5, add(pos, 0xc0))\n        let memberValue0_6 := mload(add(value, 0xe0))\n        abi_encode_uint64(memberValue0_6, add(pos, 0xe0))\n        let memberValue0_7 := mload(add(value, 0x0100))\n        abi_encode_uint64(memberValue0_7, add(pos, 0x0100))\n        let memberValue0_8 := mload(add(value, 0x0120))\n        abi_encode_uint64(memberValue0_8, add(pos, 0x0120))\n        let memberValue0_9 := mload(add(value, 0x0140))\n        abi_encode_uint64(memberValue0_9, add(pos, 0x0140))\n        let memberValue0_10 := mload(add(value, 0x0160))\n        abi_encode_uint64(memberValue0_10, add(pos, 0x0160))\n        let memberValue0_11 := mload(add(value, 0x0180))\n        abi_encode_uint64(memberValue0_11, add(pos, 0x0180))\n        let memberValue0_12 := mload(add(value, 0x01a0))\n        abi_encode_uint64(memberValue0_12, add(pos, 0x01a0))\n        let memberValue0_13 := mload(add(value, 0x01c0))\n        abi_encode_uint64(memberValue0_13, add(pos, 0x01c0))\n        let memberValue0_14 := mload(add(value, 0x01e0))\n        abi_encode_uint64(memberValue0_14, add(pos, 0x01e0))\n        let memberValue0_15 := mload(add(value, 0x0200))\n        abi_encode_uint64(memberValue0_15, add(pos, 0x0200))\n        let memberValue0_16 := mload(add(value, 0x0220))\n        abi_encode_uint8(memberValue0_16, add(pos, 0x0220))\n    }\n    function abi_encode_tuple_t_struct$_Faung_$2225_memory_ptr__to_t_struct$_Faung_$2225_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 1504)\n        abi_encode_struct_Fa(mload(value0), headStart)\n        let memberValue0 := mload(add(value0, 0x20))\n        abi_encode_struct_Fa(memberValue0, add(headStart, 0x0240))\n        let memberValue0_1 := mload(add(value0, 0x40))\n        abi_encode_uint64(memberValue0_1, add(headStart, 0x0480))\n        let memberValue0_2 := mload(add(value0, 0x60))\n        abi_encode_uint64(memberValue0_2, add(headStart, 0x04a0))\n        let memberValue0_3 := mload(add(value0, 0x80))\n        abi_encode_uint64(memberValue0_3, add(headStart, 0x04c0))\n        let memberValue0_4 := mload(add(value0, 0xa0))\n        abi_encode_uint64(memberValue0_4, add(headStart, 0x04e0))\n        let memberValue0_5 := mload(add(value0, 0xc0))\n        abi_encode_uint64(memberValue0_5, add(headStart, 0x0500))\n        let memberValue0_6 := mload(add(value0, 0xe0))\n        abi_encode_uint64(memberValue0_6, add(headStart, 0x0520))\n        let memberValue0_7 := mload(add(value0, 0x0100))\n        abi_encode_uint64(memberValue0_7, add(headStart, 0x0540))\n        let memberValue0_8 := mload(add(value0, 0x0120))\n        abi_encode_uint64(memberValue0_8, add(headStart, 0x0560))\n        let memberValue0_9 := mload(add(value0, 0x0140))\n        abi_encode_uint64(memberValue0_9, add(headStart, 0x0580))\n        let memberValue0_10 := mload(add(value0, 0x0160))\n        abi_encode_uint64(memberValue0_10, add(headStart, 0x05a0))\n        let memberValue0_11 := mload(add(value0, 0x0180))\n        abi_encode_uint8(memberValue0_11, add(headStart, 0x05c0))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_uint64(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint64t_uint64t_uint64(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_uint64(headStart)\n        value1 := abi_decode_uint64(add(headStart, 32))\n        value2 := abi_decode_uint64(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function checked_div_t_uint160(x, y) -> r\n    {\n        let y_1 := and(y, sub(shl(160, 1), 1))\n        if iszero(y_1) { panic_error_0x12() }\n        r := div(and(x, sub(shl(160, 1), 1)), y_1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x01()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100e8575f3560e01c806353df6e351161008f57806353df6e351461019e578063604a6fa9146101c957806370a08231146101d157806379cc6790146101f957806395d89b411461020c578063a9059cbb14610214578063d3dc2a0f14610227578063dd62ed3e14610235578063fa6bcfec14610248575f5ffd5b806306fdde03146100ec578063095ea7b31461010a5780631686f2651461012d57806318160ddd1461014257806323b872dd14610154578063313ce567146101675780633148f14f1461017657806342966c6814610189575b5f5ffd5b6100f461025b565b604051610101919061139b565b60405180910390f35b61011d6101183660046113eb565b6102eb565b6040519015158152602001610101565b610135610304565b60405161010191906115f8565b6002545b604051908152602001610101565b61011d6101623660046116c1565b610b9e565b60405160128152602001610101565b6101466101843660046116fb565b610bc1565b61019c610197366004611724565b610c09565b005b6101b16101ac366004611751565b610c16565b6040516001600160401b039091168152602001610101565b6101b1610c4e565b6101466101df366004611791565b6001600160a01b03165f9081526020819052604090205490565b61019c6102073660046113eb565b610dab565b6100f4610dc4565b61011d6102223660046113eb565b610dd3565b6101b16603632c8eb5af3b81565b6101466102433660046117aa565b610de0565b6101466102563660046117aa565b610e0a565b60606003805461026a906117db565b80601f0160208091040260200160405190810160405280929190818152602001828054610296906117db565b80156102e15780601f106102b8576101008083540402835291602001916102e1565b820191905f5260205f20905b8154815290600101906020018083116102c457829003601f168201915b5050505050905090565b5f336102f8818585610e8e565b60019150505b92915050565b61030c611291565b6005604051806101a00160405290815f8201604051806102400160405290815f82015f9054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020015f820160089054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020015f820160109054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020015f820160189054906101000a90046001600160401b03166001600160401b03166001600160401b03168152602001600182015f9054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020016001820160089054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020016001820160109054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020016001820160189054906101000a90046001600160401b03166001600160401b03166001600160401b03168152602001600282015f9054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020016002820160089054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020016002820160109054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020016002820160189054906101000a90046001600160401b03166001600160401b03166001600160401b03168152602001600382015f9054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020016003820160089054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020016003820160109054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020016003820160189054906101000a90046001600160401b03166001600160401b03166001600160401b03168152602001600482015f9054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020016004820160089054906101000a900460ff1660ff1660ff1681525050815260200160058201604051806102400160405290815f82015f9054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020015f820160089054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020015f820160109054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020015f820160189054906101000a90046001600160401b03166001600160401b03166001600160401b03168152602001600182015f9054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020016001820160089054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020016001820160109054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020016001820160189054906101000a90046001600160401b03166001600160401b03166001600160401b03168152602001600282015f9054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020016002820160089054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020016002820160109054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020016002820160189054906101000a90046001600160401b03166001600160401b03166001600160401b03168152602001600382015f9054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020016003820160089054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020016003820160109054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020016003820160189054906101000a90046001600160401b03166001600160401b03166001600160401b03168152602001600482015f9054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020016004820160089054906101000a900460ff1660ff1660ff16815250508152602001600a82015f9054906101000a90046001600160401b03166001600160401b03166001600160401b03168152602001600a820160089054906101000a90046001600160401b03166001600160401b03166001600160401b03168152602001600a820160109054906101000a90046001600160401b03166001600160401b03166001600160401b03168152602001600a820160189054906101000a90046001600160401b03166001600160401b03166001600160401b03168152602001600b82015f9054906101000a90046001600160401b03166001600160401b03166001600160401b03168152602001600b820160089054906101000a90046001600160401b03166001600160401b03166001600160401b03168152602001600b820160109054906101000a90046001600160401b03166001600160401b03166001600160401b03168152602001600b820160189054906101000a90046001600160401b03166001600160401b03166001600160401b03168152602001600c82015f9054906101000a90046001600160401b03166001600160401b03166001600160401b03168152602001600c820160089054906101000a90046001600160401b03166001600160401b03166001600160401b03168152602001600c820160109054906101000a900460ff1660ff1660ff1681525050905090565b5f33610bab858285610ea0565b610bb6858585610ef9565b506001949350505050565b5f60405160208152602080820152602060408201528460608201528360808201528260a082015260c05160208160c0845f60055f19f1610bff575f5ffd5b5195945050505050565b610c133382610f56565b50565b5f6001600160401b038085169084811690848116908490610c38858585610bc1565b610c429190611827565b98975050505050505050565b6010545f90610c6f90600a90600160401b90046001600160401b0316610f8a565b50600e546010805467ffffffffffffffff60801b19166001600160401b03928316600160801b9081029190911791829055610cb192600a929190910416610f8a565b50600e54601080546001600160c01b03166001600160401b03928316600160c01b9081029190911791829055600c54610cf493600a939290920482169116610f9c565b600d546011805467ffffffffffffffff19166001600160401b03600160c01b93849004811691909117909155601054600754610d3893600593920482169116610f9c565b5060085460118054600160401b8082046001600160401b03908116600160c01b958690048216188116820267ffffffffffffffff60401b1993841617909355601080548281048516600160801b820486161895810485169590951884168202949092169390931790819055919091041690565b610db6823383610ea0565b610dc08282610f56565b5050565b60606004805461026a906117db565b5f336102f8818585610ef9565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b5f8281610e18600f8561183a565b90505b825f03610e67576603632c8eb5af3b6001600160a01b038083168482160a16066001600160a01b031692506002816001600160a01b031681610e5f57610e5f611813565b049050610e1b565b610e856001600160a01b038087169086166603632c8eb5af3b610bc1565b95945050505050565b610e9b8383836001611054565b505050565b5f610eab8484610de0565b90505f198114610ef35781811015610ee557828183604051637dc7a0d960e11b8152600401610edc93929190611868565b60405180910390fd5b610ef384848484035f611054565b50505050565b6001600160a01b038316610f22575f604051634b637e8f60e11b8152600401610edc9190611889565b6001600160a01b038216610f4b575f60405163ec442f0560e01b8152600401610edc9190611889565b610e9b838383611126565b6001600160a01b038216610f7f575f604051634b637e8f60e11b8152600401610edc9190611889565b610dc0825f83611126565b5f610f958383611239565b9392505050565b8254610fba908390600160c01b90046001600160401b031683610c16565b60038401805467ffffffffffffffff60801b1916600160801b6001600160401b03938416021790558354610ffa9184918491600160c01b90910416610c16565b6003840180546001600160c01b0316600160c01b6001600160401b03938416021790819055600160801b9004161580159061104857506003830154600160c01b90046001600160401b031615155b610e9b57610e9b61189d565b6001600160a01b03841661107d575f60405163e602df0560e01b8152600401610edc9190611889565b6001600160a01b0383166110a6575f604051634a1406b160e11b8152600401610edc9190611889565b6001600160a01b038085165f9081526001602090815260408083209387168352929052208290558015610ef357826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161111891815260200190565b60405180910390a350505050565b6001600160a01b038316611150578060025f82825461114591906118b1565b909155506111ad9050565b6001600160a01b0383165f908152602081905260409020548181101561118f5783818360405163391434e360e21b8152600401610edc93929190611868565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166111c9576002805482900390556111e7565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161122c91815260200190565b60405180910390a3505050565b600182015482545f916112669184916001600160401b03600160c01b918290048116929190910416610c16565b6004840180546001600160401b039290921667ffffffffffffffff1990921682179055905092915050565b604051806101a001604052806112a5611308565b81526020016112b2611308565b81525f6020820181905260408201819052606082018190526080820181905260a0820181905260c0820181905260e082018190526101008201819052610120820181905261014082018190526101609091015290565b60408051610240810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081018290526101c081018290526101e08101829052610200810182905261022081019190915290565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146113e6575f5ffd5b919050565b5f5f604083850312156113fc575f5ffd5b611405836113d0565b946020939093013593505050565b80516001600160401b03168252602081015161143a60208401826001600160401b03169052565b50604081015161145560408401826001600160401b03169052565b50606081015161147060608401826001600160401b03169052565b50608081015161148b60808401826001600160401b03169052565b5060a08101516114a660a08401826001600160401b03169052565b5060c08101516114c160c08401826001600160401b03169052565b5060e08101516114dc60e08401826001600160401b03169052565b506101008101516114f96101008401826001600160401b03169052565b506101208101516115166101208401826001600160401b03169052565b506101408101516115336101408401826001600160401b03169052565b506101608101516115506101608401826001600160401b03169052565b5061018081015161156d6101808401826001600160401b03169052565b506101a081015161158a6101a08401826001600160401b03169052565b506101c08101516115a76101c08401826001600160401b03169052565b506101e08101516115c46101e08401826001600160401b03169052565b506102008101516115e16102008401826001600160401b03169052565b50610220810151610e9b61022084018260ff169052565b5f6105e08201905061160b828451611413565b602083015161161e610240840182611413565b5060408301516001600160401b03908116610480840152606084015181166104a0840152608084015181166104c084015260a084015181166104e084015260c0840151811661050084015260e08401518116610520840152610100840151811661054084015261012084015181166105608401526101408401518116610580840152610160840151166105a08301526101809092015160ff166105c09091015290565b5f5f5f606084860312156116d3575f5ffd5b6116dc846113d0565b92506116ea602085016113d0565b929592945050506040919091013590565b5f5f5f6060848603121561170d575f5ffd5b505081359360208301359350604090920135919050565b5f60208284031215611734575f5ffd5b5035919050565b80356001600160401b03811681146113e6575f5ffd5b5f5f5f60608486031215611763575f5ffd5b61176c8461173b565b925061177a6020850161173b565b91506117886040850161173b565b90509250925092565b5f602082840312156117a1575f5ffd5b610f95826113d0565b5f5f604083850312156117bb575f5ffd5b6117c4836113d0565b91506117d2602084016113d0565b90509250929050565b600181811c908216806117ef57607f821691505b60208210810361180d57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601260045260245ffd5b5f8261183557611835611813565b500690565b5f6001600160a01b0383168061185257611852611813565b6001600160a01b03929092169190910492915050565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b0391909116815260200190565b634e487b7160e01b5f52600160045260245ffd5b808201808211156102fe57634e487b7160e01b5f52601160045260245ffdfea2646970667358221220725792d724027208497110626c83bb9f0c672002b7fb796b7931c788aa027f9a64736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x53DF6E35 GT PUSH2 0x8F JUMPI DUP1 PUSH4 0x53DF6E35 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x604A6FA9 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0xD3DC2A0F EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0xFA6BCFEC EQ PUSH2 0x248 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x1686F265 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x3148F14F EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x189 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xF4 PUSH2 0x25B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x139B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0x13EB JUMP JUMPDEST PUSH2 0x2EB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x101 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x304 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x101 JUMP JUMPDEST PUSH2 0x11D PUSH2 0x162 CALLDATASIZE PUSH1 0x4 PUSH2 0x16C1 JUMP JUMPDEST PUSH2 0xB9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x101 JUMP JUMPDEST PUSH2 0x146 PUSH2 0x184 CALLDATASIZE PUSH1 0x4 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0x1724 JUMP JUMPDEST PUSH2 0xC09 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B1 PUSH2 0x1AC CALLDATASIZE PUSH1 0x4 PUSH2 0x1751 JUMP JUMPDEST PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x101 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0xC4E JUMP JUMPDEST PUSH2 0x146 PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0x1791 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x13EB JUMP JUMPDEST PUSH2 0xDAB JUMP JUMPDEST PUSH2 0xF4 PUSH2 0xDC4 JUMP JUMPDEST PUSH2 0x11D PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0x13EB JUMP JUMPDEST PUSH2 0xDD3 JUMP JUMPDEST PUSH2 0x1B1 PUSH7 0x3632C8EB5AF3B DUP2 JUMP JUMPDEST PUSH2 0x146 PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0x17AA JUMP JUMPDEST PUSH2 0xDE0 JUMP JUMPDEST PUSH2 0x146 PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x17AA JUMP JUMPDEST PUSH2 0xE0A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x26A SWAP1 PUSH2 0x17DB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x296 SWAP1 PUSH2 0x17DB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2F8 DUP2 DUP6 DUP6 PUSH2 0xE8E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x30C PUSH2 0x1291 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x40 MLOAD DUP1 PUSH2 0x1A0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x240 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x240 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB DUP3 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0xBAB DUP6 DUP3 DUP6 PUSH2 0xEA0 JUMP JUMPDEST PUSH2 0xBB6 DUP6 DUP6 DUP6 PUSH2 0xEF9 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x60 DUP3 ADD MSTORE DUP4 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 MLOAD PUSH1 0x20 DUP2 PUSH1 0xC0 DUP5 PUSH0 PUSH1 0x5 PUSH0 NOT CALL PUSH2 0xBFF JUMPI PUSH0 PUSH0 REVERT JUMPDEST MLOAD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC13 CALLER DUP3 PUSH2 0xF56 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP6 AND SWAP1 DUP5 DUP2 AND SWAP1 DUP5 DUP2 AND SWAP1 DUP5 SWAP1 PUSH2 0xC38 DUP6 DUP6 DUP6 PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0xC42 SWAP2 SWAP1 PUSH2 0x1827 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH0 SWAP1 PUSH2 0xC6F SWAP1 PUSH1 0xA SWAP1 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0xF8A JUMP JUMPDEST POP PUSH1 0xE SLOAD PUSH1 0x10 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH2 0xCB1 SWAP3 PUSH1 0xA SWAP3 SWAP2 SWAP1 SWAP2 DIV AND PUSH2 0xF8A JUMP JUMPDEST POP PUSH1 0xE SLOAD PUSH1 0x10 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0xC SLOAD PUSH2 0xCF4 SWAP4 PUSH1 0xA SWAP4 SWAP3 SWAP1 SWAP3 DIV DUP3 AND SWAP2 AND PUSH2 0xF9C JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x11 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x1 PUSH1 0xC0 SHL SWAP4 DUP5 SWAP1 DIV DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x10 SLOAD PUSH1 0x7 SLOAD PUSH2 0xD38 SWAP4 PUSH1 0x5 SWAP4 SWAP3 DIV DUP3 AND SWAP2 AND PUSH2 0xF9C JUMP JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x11 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP1 DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xC0 SHL SWAP6 DUP7 SWAP1 DIV DUP3 AND XOR DUP2 AND DUP3 MUL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 SHL NOT SWAP4 DUP5 AND OR SWAP1 SWAP4 SSTORE PUSH1 0x10 DUP1 SLOAD DUP3 DUP2 DIV DUP6 AND PUSH1 0x1 PUSH1 0x80 SHL DUP3 DIV DUP7 AND XOR SWAP6 DUP2 DIV DUP6 AND SWAP6 SWAP1 SWAP6 XOR DUP5 AND DUP3 MUL SWAP5 SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP4 OR SWAP1 DUP2 SWAP1 SSTORE SWAP2 SWAP1 SWAP2 DIV AND SWAP1 JUMP JUMPDEST PUSH2 0xDB6 DUP3 CALLER DUP4 PUSH2 0xEA0 JUMP JUMPDEST PUSH2 0xDC0 DUP3 DUP3 PUSH2 0xF56 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x26A SWAP1 PUSH2 0x17DB JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2F8 DUP2 DUP6 DUP6 PUSH2 0xEF9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH0 DUP3 DUP2 PUSH2 0xE18 PUSH1 0xF DUP6 PUSH2 0x183A JUMP JUMPDEST SWAP1 POP JUMPDEST DUP3 PUSH0 SUB PUSH2 0xE67 JUMPI PUSH7 0x3632C8EB5AF3B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND DUP5 DUP3 AND EXP AND MOD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP PUSH1 0x2 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH2 0xE5F JUMPI PUSH2 0xE5F PUSH2 0x1813 JUMP JUMPDEST DIV SWAP1 POP PUSH2 0xE1B JUMP JUMPDEST PUSH2 0xE85 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP1 DUP7 AND PUSH7 0x3632C8EB5AF3B PUSH2 0xBC1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE9B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1054 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEAB DUP5 DUP5 PUSH2 0xDE0 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0xEF3 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xEE5 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEDC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1868 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEF3 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1054 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF22 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEDC SWAP2 SWAP1 PUSH2 0x1889 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF4B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEDC SWAP2 SWAP1 PUSH2 0x1889 JUMP JUMPDEST PUSH2 0xE9B DUP4 DUP4 DUP4 PUSH2 0x1126 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF7F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEDC SWAP2 SWAP1 PUSH2 0x1889 JUMP JUMPDEST PUSH2 0xDC0 DUP3 PUSH0 DUP4 PUSH2 0x1126 JUMP JUMPDEST PUSH0 PUSH2 0xF95 DUP4 DUP4 PUSH2 0x1239 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 SLOAD PUSH2 0xFBA SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP4 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x3 DUP5 ADD DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 DUP5 AND MUL OR SWAP1 SSTORE DUP4 SLOAD PUSH2 0xFFA SWAP2 DUP5 SWAP2 DUP5 SWAP2 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP2 DIV AND PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x3 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND PUSH1 0x1 PUSH1 0xC0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 DUP5 AND MUL OR SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1048 JUMPI POP PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND ISZERO ISZERO JUMPDEST PUSH2 0xE9B JUMPI PUSH2 0xE9B PUSH2 0x189D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x107D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEDC SWAP2 SWAP1 PUSH2 0x1889 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x10A6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEDC SWAP2 SWAP1 PUSH2 0x1889 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xEF3 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1118 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1150 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1145 SWAP2 SWAP1 PUSH2 0x18B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x11AD SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x118F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEDC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1868 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11C9 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x11E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x122C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD DUP3 SLOAD PUSH0 SWAP2 PUSH2 0x1266 SWAP2 DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x1 PUSH1 0xC0 SHL SWAP2 DUP3 SWAP1 DIV DUP2 AND SWAP3 SWAP2 SWAP1 SWAP2 DIV AND PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x4 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH8 0xFFFFFFFFFFFFFFFF NOT SWAP1 SWAP3 AND DUP3 OR SWAP1 SSTORE SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x12A5 PUSH2 0x1308 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12B2 PUSH2 0x1308 JUMP JUMPDEST DUP2 MSTORE PUSH0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x120 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x140 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x160 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x240 DUP2 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x140 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x160 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x180 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1A0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1C0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1E0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x200 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x220 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13E6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13FC JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1405 DUP4 PUSH2 0x13D0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0x143A PUSH1 0x20 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0x1455 PUSH1 0x40 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x60 DUP2 ADD MLOAD PUSH2 0x1470 PUSH1 0x60 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x80 DUP2 ADD MLOAD PUSH2 0x148B PUSH1 0x80 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xA0 DUP2 ADD MLOAD PUSH2 0x14A6 PUSH1 0xA0 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x14C1 PUSH1 0xC0 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0x14DC PUSH1 0xE0 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x14F9 PUSH2 0x100 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x1516 PUSH2 0x120 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x140 DUP2 ADD MLOAD PUSH2 0x1533 PUSH2 0x140 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x160 DUP2 ADD MLOAD PUSH2 0x1550 PUSH2 0x160 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x180 DUP2 ADD MLOAD PUSH2 0x156D PUSH2 0x180 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x1A0 DUP2 ADD MLOAD PUSH2 0x158A PUSH2 0x1A0 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x1C0 DUP2 ADD MLOAD PUSH2 0x15A7 PUSH2 0x1C0 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x1E0 DUP2 ADD MLOAD PUSH2 0x15C4 PUSH2 0x1E0 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x200 DUP2 ADD MLOAD PUSH2 0x15E1 PUSH2 0x200 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x220 DUP2 ADD MLOAD PUSH2 0xE9B PUSH2 0x220 DUP5 ADD DUP3 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH0 PUSH2 0x5E0 DUP3 ADD SWAP1 POP PUSH2 0x160B DUP3 DUP5 MLOAD PUSH2 0x1413 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x161E PUSH2 0x240 DUP5 ADD DUP3 PUSH2 0x1413 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND PUSH2 0x480 DUP5 ADD MSTORE PUSH1 0x60 DUP5 ADD MLOAD DUP2 AND PUSH2 0x4A0 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD MLOAD DUP2 AND PUSH2 0x4C0 DUP5 ADD MSTORE PUSH1 0xA0 DUP5 ADD MLOAD DUP2 AND PUSH2 0x4E0 DUP5 ADD MSTORE PUSH1 0xC0 DUP5 ADD MLOAD DUP2 AND PUSH2 0x500 DUP5 ADD MSTORE PUSH1 0xE0 DUP5 ADD MLOAD DUP2 AND PUSH2 0x520 DUP5 ADD MSTORE PUSH2 0x100 DUP5 ADD MLOAD DUP2 AND PUSH2 0x540 DUP5 ADD MSTORE PUSH2 0x120 DUP5 ADD MLOAD DUP2 AND PUSH2 0x560 DUP5 ADD MSTORE PUSH2 0x140 DUP5 ADD MLOAD DUP2 AND PUSH2 0x580 DUP5 ADD MSTORE PUSH2 0x160 DUP5 ADD MLOAD AND PUSH2 0x5A0 DUP4 ADD MSTORE PUSH2 0x180 SWAP1 SWAP3 ADD MLOAD PUSH1 0xFF AND PUSH2 0x5C0 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16D3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x16DC DUP5 PUSH2 0x13D0 JUMP JUMPDEST SWAP3 POP PUSH2 0x16EA PUSH1 0x20 DUP6 ADD PUSH2 0x13D0 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x170D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1734 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13E6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1763 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x176C DUP5 PUSH2 0x173B JUMP JUMPDEST SWAP3 POP PUSH2 0x177A PUSH1 0x20 DUP6 ADD PUSH2 0x173B JUMP JUMPDEST SWAP2 POP PUSH2 0x1788 PUSH1 0x40 DUP6 ADD PUSH2 0x173B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17A1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xF95 DUP3 PUSH2 0x13D0 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17BB JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x17C4 DUP4 PUSH2 0x13D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x17D2 PUSH1 0x20 DUP5 ADD PUSH2 0x13D0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x17EF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x180D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x1835 JUMPI PUSH2 0x1835 PUSH2 0x1813 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 PUSH2 0x1852 JUMPI PUSH2 0x1852 PUSH2 0x1813 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2FE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x5792D724027208497110626C83BB9F0C672002 0xB7 0xFB PUSH26 0x6B7931C788AA027F9A64736F6C634300081B0033000000000000 ",
							"sourceMap": "246:4682:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;:::i;:::-;;:::i;:::-;;;1085:14:10;;1078:22;1060:41;;1048:2;1033:18;4293:186:1;920:187:10;2213:76:7;;;:::i;:::-;;;;;;;:::i;3144:97:1:-;3222:12;;3144:97;;;5216:25:10;;;5204:2;5189:18;3144:97:1;5070:177:10;5039:244:1;;;;;;:::i;:::-;;:::i;3002:82::-;;;3075:2;5773:36:10;;5761:2;5746:18;3002:82:1;5631:184:10;4054:872:7;;;;;;:::i;:::-;;:::i;618:87:3:-;;;;;;:::i;:::-;;:::i;:::-;;3803:245:7;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;7193:31:10;;;7175:50;;7163:2;7148:18;3803:245:7;7031:200:10;2940:450:7;;;:::i;3299:116:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:1;3364:7;3390:18;;;;;;;;;;;;3299:116;1021:158:3;;;;;;:::i;:::-;;:::i;2276:93:1:-;;;:::i;3610:178::-;;;;;;:::i;:::-;;:::i;291:53:7:-;;329:15;291:53;;3846:140:1;;;;;;:::i;:::-;;:::i;3396:401:7:-;;;;;;:::i;:::-;;:::i;2074:89:1:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:5;4420:31:1;735:10:5;4436:7:1;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;2213:76:7:-;2249:12;;:::i;:::-;2280:2;2273:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;-1:-1:-1;;;;;2273:9:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;2213:76;:::o;5039:244:1:-;5126:4;735:10:5;5182:37:1;5198:4;735:10:5;5213:5:1;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:1;;5039:244;-1:-1:-1;;;;5039:244:1:o;4054:872:7:-;4122:14;4227:4;4221:11;4339:4;4330:7;4323:21;4384:4;4377;4368:7;4364:18;4357:32;4429:4;4422;4413:7;4409:18;4402:32;4534:2;4527:4;4518:7;4514:18;4507:30;4577:2;4570:4;4561:7;4557:18;4550:30;4620:2;4613:4;4604:7;4600:18;4593:30;4688:4;4682:11;4823:4;4816:5;4810:4;4801:7;4798:1;4792:4;4788:1;4784:6;4779:49;4769:105;;4858:1;4855;4848:12;4769:105;4898:12;;4054:872;-1:-1:-1;;;;;4054:872:7:o;618:87:3:-;672:26;735:10:5;692:5:3;672;:26::i;:::-;618:87;:::o;3803:245:7:-;3869:13;-1:-1:-1;;;;;3894:14:7;;;;3918;;;;3942;;;;3869:13;;3984:15;3894:14;3918;3942;3984:6;:15::i;:::-;:38;;;;:::i;:::-;3966:57;3803:245;-1:-1:-1;;;;;;;;3803:245:7:o;2940:450::-;3008:10;;2973:6;;2991:28;;2999:7;;-1:-1:-1;;;3008:10:7;;-1:-1:-1;;;;;3008:10:7;2991:7;:28::i;:::-;-1:-1:-1;3038:13:7;;3029:6;:22;;-1:-1:-1;;;;3029:22:7;-1:-1:-1;;;;;3038:13:7;;;-1:-1:-1;;;3029:22:7;;;;;;;;;;;3061:24;;3038:7;;3078:6;;;;;3061:7;:24::i;:::-;-1:-1:-1;3103:13:7;;3095:5;:21;;-1:-1:-1;;;;;3095:21:7;-1:-1:-1;;;;;3103:13:7;;;-1:-1:-1;;;3095:21:7;;;;;;;;;;;3148:14;;3126:37;;3103:7;;3141:5;;;;;;;3148:14;3126:5;:37::i;:::-;3186:13;;3173:10;:26;;-1:-1:-1;;3173:26:7;-1:-1:-1;;;;;;;;3186:13:7;;;;;;3173:26;;;;;;;3223:5;;3230:13;;3209:35;;3186:2;;3223:5;;;;;3230:13;3209:5;:35::i;:::-;-1:-1:-1;3276:12:7;;3265:8;;;-1:-1:-1;;;3265:8:7;;;-1:-1:-1;;;;;3265:8:7;;;-1:-1:-1;;;3276:12:7;;;;;;3265:23;3254:34;;;;-1:-1:-1;;;;3254:34:7;;;;;;;3342:5;;;3320:10;;;;;-1:-1:-1;;;3333:6:7;;;;3320:19;3342:5;;;;;3320:27;;;;3307:40;;;;;;;;;;;;;;;;3373:10;;;;;;2940:450::o;1021:158:3:-;1096:45;1112:7;735:10:5;1135:5:3;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;2276:93:1:-;2323:13;2355:7;2348:14;;;;;:::i;3610:178::-;3679:4;735:10:5;3733:27:1;735:10:5;3750:2:1;3754:5;3733:9;:27::i;3846:140::-;-1:-1:-1;;;;;3952:18:1;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140::o;3396:401:7:-;3452:12;3523:1;3452:12;3548:15;3561:2;3556:1;3548:15;:::i;:::-;3535:28;;3597:105;3603:4;3611:1;3603:9;3597:105;;329:15;-1:-1:-1;;;;;3640:6:7;;;;;;;3639:21;;-1:-1:-1;;;;;3632:28:7;;;3686:1;3683:2;-1:-1:-1;;;;;3683:4:7;;;;;;:::i;:::-;;3678:9;;3597:105;;;3728:62;-1:-1:-1;;;;;3735:19:7;;;;3756;;329:15;3728:6;:62::i;:::-;3721:69;3396:401;-1:-1:-1;;;;;3396:401:7:o;8989:128:1:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;-1:-1:-1;;10828:16:1;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;-1:-1:-1;;;10936:60:1;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:1;;5735:86;;5807:1;5780:30;;-1:-1:-1;;;5780:30:1;;;;;;;;:::i;5735:86::-;-1:-1:-1;;;;;5834:16:1;;5830:86;;5902:1;5873:32;;-1:-1:-1;;;5873:32:1;;;;;;;;:::i;5830:86::-;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;8247:206::-;-1:-1:-1;;;;;8317:21:1;;8313:89;;8388:1;8361:30;;-1:-1:-1;;;8361:30:1;;;;;;;;:::i;8313:89::-;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;2468:118:7:-;2534:6;2559:20;2566:3;2571:7;2559:6;:20::i;:::-;2552:27;2468:118;-1:-1:-1;;;2468:118:7:o;2708:226::-;2806:11;;2793:32;;2802:2;;-1:-1:-1;;;2806:11:7;;-1:-1:-1;;;;;2806:11:7;2819:5;2793:8;:32::i;:::-;2783:7;;;:42;;-1:-1:-1;;;;2783:42:7;-1:-1:-1;;;;;;;;2783:42:7;;;;;;;2867:11;;2847:32;;2856:2;;2860:5;;-1:-1:-1;;;2867:11:7;;;;2847:8;:32::i;:::-;2835:9;;;:44;;-1:-1:-1;;;;;2835:44:7;-1:-1:-1;;;;;;;;2835:44:7;;;;;;;;;-1:-1:-1;;;2896:7:7;;;:12;;;;:30;;-1:-1:-1;2912:9:7;;;;-1:-1:-1;;;2912:9:7;;-1:-1:-1;;;;;2912:9:7;:14;;2896:30;2889:38;;;;:::i;9949:432:1:-;-1:-1:-1;;;;;10061:19:1;;10057:89;;10132:1;10103:32;;-1:-1:-1;;;10103:32:1;;;;;;;;:::i;10057:89::-;-1:-1:-1;;;;;10159:21:1;;10155:90;;10231:1;10203:31;;-1:-1:-1;;;10203:31:1;;;;;;;;:::i;10155:90::-;-1:-1:-1;;;;;10254:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:1;10342:5;-1:-1:-1;;;;;10333:31:1;;10358:5;10333:31;;;;5216:25:10;;5204:2;5189:18;;5070:177;10333:31:1;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:1;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:1;;-1:-1:-1;6356:540:1;;-1:-1:-1;;;;;6570:15:1;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6674:4;6680:11;6693:5;6649:50;;-1:-1:-1;;;6649:50:1;;;;;;;;;;:::i;6599:115::-;-1:-1:-1;;;;;6834:15:1;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:1;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:1;7355:4;-1:-1:-1;;;;;7346:25:1;;7365:5;7346:25;;;;5216::10;;5204:2;5189:18;;5070:177;7346:25:1;;;;;;;;6271:1107;;;:::o;2295:167:7:-;2404:11;;;;2417;;2358:6;;2388:41;;2397:5;;-1:-1:-1;;;;;;;;2404:11:7;;;;;;;2417;;;;;2388:8;:41::i;:::-;2376:9;;;:53;;-1:-1:-1;;;;;2376:53:7;;;;-1:-1:-1;;2376:53:7;;;;;;;;-1:-1:-1;2295:167:7;;;;:::o;-1:-1:-1:-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:418:10:-;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:173::-;505:20;;-1:-1:-1;;;;;554:31:10;;544:42;;534:70;;600:1;597;590:12;534:70;437:173;;;:::o;615:300::-;683:6;691;744:2;732:9;723:7;719:23;715:32;712:52;;;760:1;757;750:12;712:52;783:29;802:9;783:29;:::i;:::-;773:39;881:2;866:18;;;;853:32;;-1:-1:-1;;;615:300:10:o;1299:2051::-;1373:12;;-1:-1:-1;;;;;1177:30:10;1165:43;;1437:4;1430:5;1426:16;1420:23;1452:47;1493:4;1488:3;1484:14;1470:12;-1:-1:-1;;;;;1177:30:10;1165:43;;1112:102;1452:47;;1547:4;1540:5;1536:16;1530:23;1562:49;1605:4;1600:3;1596:14;1580;-1:-1:-1;;;;;1177:30:10;1165:43;;1112:102;1562:49;;1659:4;1652:5;1648:16;1642:23;1674:49;1717:4;1712:3;1708:14;1692;-1:-1:-1;;;;;1177:30:10;1165:43;;1112:102;1674:49;;1771:4;1764:5;1760:16;1754:23;1786:49;1829:4;1824:3;1820:14;1804;-1:-1:-1;;;;;1177:30:10;1165:43;;1112:102;1786:49;;1883:4;1876:5;1872:16;1866:23;1898:49;1941:4;1936:3;1932:14;1916;-1:-1:-1;;;;;1177:30:10;1165:43;;1112:102;1898:49;;1995:4;1988:5;1984:16;1978:23;2010:49;2053:4;2048:3;2044:14;2028;-1:-1:-1;;;;;1177:30:10;1165:43;;1112:102;2010:49;;2107:4;2100:5;2096:16;2090:23;2122:49;2165:4;2160:3;2156:14;2140;-1:-1:-1;;;;;1177:30:10;1165:43;;1112:102;2122:49;;2219:6;2212:5;2208:18;2202:25;2236:51;2279:6;2274:3;2270:16;2254:14;-1:-1:-1;;;;;1177:30:10;1165:43;;1112:102;2236:51;;2335:6;2328:5;2324:18;2318:25;2352:51;2395:6;2390:3;2386:16;2370:14;-1:-1:-1;;;;;1177:30:10;1165:43;;1112:102;2352:51;;2451:6;2444:5;2440:18;2434:25;2468:51;2511:6;2506:3;2502:16;2486:14;-1:-1:-1;;;;;1177:30:10;1165:43;;1112:102;2468:51;;2568:6;2561:5;2557:18;2551:25;2585:52;2629:6;2624:3;2620:16;2603:15;-1:-1:-1;;;;;1177:30:10;1165:43;;1112:102;2585:52;;2686:6;2679:5;2675:18;2669:25;2703:52;2747:6;2742:3;2738:16;2721:15;-1:-1:-1;;;;;1177:30:10;1165:43;;1112:102;2703:52;;2804:6;2797:5;2793:18;2787:25;2821:52;2865:6;2860:3;2856:16;2839:15;-1:-1:-1;;;;;1177:30:10;1165:43;;1112:102;2821:52;;2922:6;2915:5;2911:18;2905:25;2939:52;2983:6;2978:3;2974:16;2957:15;-1:-1:-1;;;;;1177:30:10;1165:43;;1112:102;2939:52;;3040:6;3033:5;3029:18;3023:25;3057:52;3101:6;3096:3;3092:16;3075:15;-1:-1:-1;;;;;1177:30:10;1165:43;;1112:102;3057:52;;3158:6;3151:5;3147:18;3141:25;3175:52;3219:6;3214:3;3210:16;3193:15;-1:-1:-1;;;;;1177:30:10;1165:43;;1112:102;3175:52;;3276:6;3269:5;3265:18;3259:25;3293:51;3336:6;3331:3;3327:16;3310:15;1286:4;1275:16;1263:29;;1219:75;3355:1710;3493:4;3535;3524:9;3520:20;3512:28;;3549:46;3585:9;3576:6;3570:13;3549:46;:::i;:::-;3642:4;3634:6;3630:17;3624:24;3657:58;3707:6;3696:9;3692:22;3678:12;3657:58;:::i;:::-;-1:-1:-1;3764:4:10;3752:17;;3746:24;-1:-1:-1;;;;;1177:30:10;;;3828:6;3813:22;;1165:43;3885:4;3873:17;;3867:24;1177:30;;3949:6;3934:22;;1165:43;4006:4;3994:17;;3988:24;1177:30;;4070:6;4055:22;;1165:43;4127:4;4115:17;;4109:24;1177:30;;4191:6;4176:22;;1165:43;4248:4;4236:17;;4230:24;1177:30;;4312:6;4297:22;;1165:43;4369:4;4357:17;;4351:24;1177:30;;4433:6;4418:22;;1165:43;4490:6;4478:19;;4472:26;1177:30;;4556:6;4541:22;;1165:43;4613:6;4601:19;;4595:26;1177:30;;4679:6;4664:22;;1165:43;4736:6;4724:19;;4718:26;1177:30;;4802:6;4787:22;;1165:43;4860:6;4848:19;;4842:26;1177:30;4927:6;4912:22;;1165:43;4985:6;4973:19;;;4967:26;1286:4;1275:16;5051:6;5036:22;;;1263:29;3355:1710;:::o;5252:374::-;5329:6;5337;5345;5398:2;5386:9;5377:7;5373:23;5369:32;5366:52;;;5414:1;5411;5404:12;5366:52;5437:29;5456:9;5437:29;:::i;:::-;5427:39;;5485:38;5519:2;5508:9;5504:18;5485:38;:::i;:::-;5252:374;;5475:48;;-1:-1:-1;;;5592:2:10;5577:18;;;;5564:32;;5252:374::o;5820:466::-;5897:6;5905;5913;5966:2;5954:9;5945:7;5941:23;5937:32;5934:52;;;5982:1;5979;5972:12;5934:52;-1:-1:-1;;6027:23:10;;;6147:2;6132:18;;6119:32;;-1:-1:-1;6250:2:10;6235:18;;;6222:32;;5820:466;-1:-1:-1;5820:466:10:o;6291:226::-;6350:6;6403:2;6391:9;6382:7;6378:23;6374:32;6371:52;;;6419:1;6416;6409:12;6371:52;-1:-1:-1;6464:23:10;;6291:226;-1:-1:-1;6291:226:10:o;6522:171::-;6589:20;;-1:-1:-1;;;;;6638:30:10;;6628:41;;6618:69;;6683:1;6680;6673:12;6698:328;6772:6;6780;6788;6841:2;6829:9;6820:7;6816:23;6812:32;6809:52;;;6857:1;6854;6847:12;6809:52;6880:28;6898:9;6880:28;:::i;:::-;6870:38;;6927:37;6960:2;6949:9;6945:18;6927:37;:::i;:::-;6917:47;;6983:37;7016:2;7005:9;7001:18;6983:37;:::i;:::-;6973:47;;6698:328;;;;;:::o;7236:186::-;7295:6;7348:2;7336:9;7327:7;7323:23;7319:32;7316:52;;;7364:1;7361;7354:12;7316:52;7387:29;7406:9;7387:29;:::i;7427:260::-;7495:6;7503;7556:2;7544:9;7535:7;7531:23;7527:32;7524:52;;;7572:1;7569;7562:12;7524:52;7595:29;7614:9;7595:29;:::i;:::-;7585:39;;7643:38;7677:2;7666:9;7662:18;7643:38;:::i;:::-;7633:48;;7427:260;;;;;:::o;7692:380::-;7771:1;7767:12;;;;7814;;;7835:61;;7889:4;7881:6;7877:17;7867:27;;7835:61;7942:2;7934:6;7931:14;7911:18;7908:38;7905:161;;7988:10;7983:3;7979:20;7976:1;7969:31;8023:4;8020:1;8013:15;8051:4;8048:1;8041:15;7905:161;;7692:380;;;:::o;8077:127::-;8138:10;8133:3;8129:20;8126:1;8119:31;8169:4;8166:1;8159:15;8193:4;8190:1;8183:15;8209:112;8241:1;8267;8257:35;;8272:18;;:::i;:::-;-1:-1:-1;8306:9:10;;8209:112::o;8326:197::-;8366:1;-1:-1:-1;;;;;8393:27:10;;;8429:37;;8446:18;;:::i;:::-;-1:-1:-1;;;;;8484:27:10;;;;8480:37;;;;;8326:197;-1:-1:-1;;8326:197:10:o;8528:345::-;-1:-1:-1;;;;;8748:32:10;;;;8730:51;;8812:2;8797:18;;8790:34;;;;8855:2;8840:18;;8833:34;8718:2;8703:18;;8528:345::o;8878:203::-;-1:-1:-1;;;;;9042:32:10;;;;9024:51;;9012:2;8997:18;;8878:203::o;9086:127::-;9147:10;9142:3;9138:20;9135:1;9128:31;9178:4;9175:1;9168:15;9202:4;9199:1;9192:15;9218:222;9283:9;;;9304:10;;;9301:133;;;9356:10;9351:3;9347:20;9344:1;9337:31;9391:4;9388:1;9381:15;9419:4;9416:1;9409:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1281200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MotzkinPrime()": "347",
								"Random()": "infinite",
								"View()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24734",
								"balanceOf(address)": "2581",
								"burn(uint256)": "51071",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "287",
								"hashWith(address,address)": "infinite",
								"modExp(uint256,uint256,uint256)": "infinite",
								"modExp64(uint64,uint64,uint64)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2347",
								"transfer(address,uint256)": "51325",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"Amplify(struct Fa storage pointer,uint64)": "infinite",
								"React(struct Fa storage pointer,uint64,uint64)": "infinite",
								"Sustain(struct Fa storage pointer,uint64)": "infinite",
								"Torque(struct Fa storage pointer,uint64)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 246,
									"end": 4928,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 246,
									"end": 4928,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 246,
									"end": 4928,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 374,
									"end": 2207,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 374,
									"end": 2207,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 374,
									"end": 2207,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 374,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 374,
									"end": 2207,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 374,
									"end": 2207,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 374,
									"end": 2207,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 374,
									"end": 2207,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 374,
									"end": 2207,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 374,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 374,
									"end": 2207,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "564D20524E47"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "564D524E47"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 558,
									"end": 590,
									"name": "PUSH",
									"source": 7,
									"value": "1FAE4570E6A3C0001EEA60F0479020002EE53D1D08D2B000227025D8E13CA"
								},
								{
									"begin": 437,
									"end": 439,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 558,
									"end": 590,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 713,
									"end": 746,
									"name": "PUSH",
									"source": 7,
									"value": "7E5E4F4C6D7510002DBDCD3778C6D000110E309EE09840000000000000000"
								},
								{
									"begin": 600,
									"end": 611,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 713,
									"end": 746,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 713,
									"end": 746,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 713,
									"end": 746,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 879,
									"end": 908,
									"name": "PUSH",
									"source": 7,
									"value": "2FFD06DBF2D9B00063C93E835361B00027B83E305ED18000043984FDF50D4"
								},
								{
									"begin": 756,
									"end": 769,
									"name": "PUSH",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 879,
									"end": 908,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1024,
									"end": 1054,
									"name": "PUSH",
									"source": 7,
									"value": "13A9DCCCBBECD0000234CDD6795D9000000000000000000034ADD185625D8"
								},
								{
									"begin": 476,
									"end": 489,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1024,
									"end": 1054,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1064,
									"end": 1076,
									"name": "PUSH",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1064,
									"end": 1094,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1064,
									"end": 1094,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "48"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1104,
									"end": 1117,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1104,
									"end": 1117,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1104,
									"end": 1117,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1079,
									"end": 1094,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "11FC59DD353C4"
								},
								{
									"begin": 1104,
									"end": 1117,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1104,
									"end": 1117,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1104,
									"end": 1117,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1104,
									"end": 1117,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1252,
									"end": 1285,
									"name": "PUSH",
									"source": 7,
									"value": "1D582F24850510000AAC3DC86188800028246AEC62B3D000227025D8E13CA"
								},
								{
									"begin": 1128,
									"end": 1135,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 1252,
									"end": 1285,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1295,
									"end": 1307,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 1411,
									"end": 1445,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1411,
									"end": 1445,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1411,
									"end": 1445,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1411,
									"end": 1445,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1583,
									"end": 1613,
									"name": "PUSH",
									"source": 7,
									"value": "2FFD06DBF2D9B00063C93E835361B00027B83E305ED1800059591956C8269"
								},
								{
									"begin": 1455,
									"end": 1469,
									"name": "PUSH",
									"source": 7,
									"value": "C"
								},
								{
									"begin": 1583,
									"end": 1613,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1747,
									"end": 1778,
									"name": "PUSH",
									"source": 7,
									"value": "1BF8F849A1DB8000187BC56A5A81A00009B5DAF8BFE0400034ADD185625D8"
								},
								{
									"begin": 1623,
									"end": 1641,
									"name": "PUSH",
									"source": 7,
									"value": "D"
								},
								{
									"begin": 1747,
									"end": 1778,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1788,
									"end": 1801,
									"name": "PUSH",
									"source": 7,
									"value": "E"
								},
								{
									"begin": 1788,
									"end": 1819,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1788,
									"end": 1819,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1829,
									"end": 1843,
									"name": "PUSH",
									"source": 7,
									"value": "10000832915784AED"
								},
								{
									"begin": 1829,
									"end": 1843,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1829,
									"end": 1843,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1829,
									"end": 1843,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1829,
									"end": 1843,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1829,
									"end": 1843,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1829,
									"end": 1843,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1829,
									"end": 1843,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1829,
									"end": 1843,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1941,
									"end": 1968,
									"name": "PUSH",
									"source": 7,
									"value": "4386BA397D9D100011DD325062A390002877439321EF20000000000000000"
								},
								{
									"begin": 1854,
									"end": 1860,
									"name": "PUSH",
									"source": 7,
									"value": "F"
								},
								{
									"begin": 1941,
									"end": 1968,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2083,
									"end": 2106,
									"name": "PUSH",
									"source": 7,
									"value": "832915784AED00002998A7CB1DB60000889846490DB0000380FD806CE16E"
								},
								{
									"begin": 517,
									"end": 530,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 2083,
									"end": 2106,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2116,
									"end": 2124,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 2116,
									"end": 2142,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2116,
									"end": 2142,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "88"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2190,
									"end": 2200,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2152,
									"end": 2180,
									"name": "PUSH",
									"source": 7,
									"value": "1BF8F849A1DB80000BF8B42EEFC83"
								},
								{
									"begin": 2190,
									"end": 2200,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2200,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2200,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 246,
									"end": 4928,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 246,
									"end": 4928,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 795,
									"end": 800,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 801,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 839,
									"end": 843,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 826,
									"end": 844,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 909,
									"end": 911,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 893,
									"end": 912,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 886,
									"end": 913,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 880,
									"end": 884,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 876,
									"end": 914,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 930,
									"end": 950,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 927,
									"end": 974,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 927,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 968,
									"end": 972,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 927,
									"end": 974,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1023,
									"end": 1025,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1018,
									"end": 1021,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1014,
									"end": 1026,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 1007,
									"end": 1027,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1001,
									"end": 1005,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 997,
									"end": 1028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1096,
									"end": 1098,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1089,
									"end": 1094,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1086,
									"end": 1099,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1122,
									"end": 1123,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1111,
									"end": 1124,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 657,
									"end": 1175,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "tag",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 1526,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 1645,
									"end": 1651,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 1637,
									"end": 1641,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1631,
									"end": 1642,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 1605,
									"end": 1643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1599,
									"end": 1603,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 1555,
									"end": 1652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1705,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1732,
									"end": 1734,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1721,
									"end": 1735,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1721,
									"end": 1735,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1749,
									"end": 1750,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2437,
									"end": 2438,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2454,
									"end": 2460,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2500,
									"end": 2526,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1308,
									"end": 1309,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1300,
									"end": 1324,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1325,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1286,
									"end": 1326,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1332,
									"end": 1333,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1283,
									"end": 1340,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2553,
									"end": 2634,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2553,
									"end": 2634,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1714,
									"end": 2644,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 1714,
									"end": 2644,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1912,
									"end": 1919,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1909,
									"end": 1910,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 1920,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1988,
									"end": 2014,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1973,
									"end": 2015,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1973,
									"end": 2015,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2101,
									"end": 2105,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 2054,
									"end": 2055,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1902,
									"end": 1905,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2148,
									"end": 2154,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2139,
									"end": 2146,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2136,
									"end": 2155,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2203,
									"end": 2229,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2292,
									"end": 2293,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2304,
									"end": 2307,
									"name": "PUSH",
									"source": 10,
									"value": "F8"
								},
								{
									"begin": 2284,
									"end": 2308,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2280,
									"end": 2317,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2276,
									"end": 2318,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 2261,
									"end": 2319,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2246,
									"end": 2320,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2246,
									"end": 2320,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2380,
									"end": 2381,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2360,
									"end": 2382,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2347,
									"end": 2383,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2347,
									"end": 2383,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1351,
									"end": 2650,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 246,
									"end": 4928,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 246,
									"end": 4928,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 246,
									"end": 4928,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 246,
									"end": 4928,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 246,
									"end": 4928,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 246,
									"end": 4928,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 246,
									"end": 4928,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220725792d724027208497110626c83bb9f0c672002b7fb796b7931c788aa027f9a64736f6c634300081b0033",
									".code": [
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH",
											"source": 7,
											"value": "53DF6E35"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH",
											"source": 7,
											"value": "53DF6E35"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH",
											"source": 7,
											"value": "604A6FA9"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH",
											"source": 7,
											"value": "79CC6790"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH",
											"source": 7,
											"value": "D3DC2A0F"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH",
											"source": 7,
											"value": "FA6BCFEC"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH",
											"source": 7,
											"value": "1686F265"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH",
											"source": 7,
											"value": "3148F14F"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH",
											"source": 7,
											"value": "42966C68"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 4928,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1078,
											"end": 1100,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 920,
											"end": 1107,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2213,
											"end": 2289,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2213,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 2213,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 2213,
											"end": 2289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2289,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 2213,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2289,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2213,
											"end": 2289,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 2213,
											"end": 2289,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2289,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 2213,
											"end": 2289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5216,
											"end": 5241,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5216,
											"end": 5241,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5216,
											"end": 5241,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5204,
											"end": 5206,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5189,
											"end": 5207,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5070,
											"end": 5247,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5773,
											"end": 5809,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5773,
											"end": 5809,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5761,
											"end": 5763,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5746,
											"end": 5764,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5631,
											"end": 5815,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4054,
											"end": 4926,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 4054,
											"end": 4926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4054,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 4054,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 4054,
											"end": 4926,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4054,
											"end": 4926,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4054,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 4054,
											"end": 4926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4054,
											"end": 4926,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 4054,
											"end": 4926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4054,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 4054,
											"end": 4926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 618,
											"end": 705,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 4048,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 3803,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 3803,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 3803,
											"end": 4048,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 4048,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3803,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 3803,
											"end": 4048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 4048,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 3803,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3803,
											"end": 4048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 4048,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 3803,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 4048,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3803,
											"end": 4048,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7193,
											"end": 7224,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7193,
											"end": 7224,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7193,
											"end": 7224,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7175,
											"end": 7225,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7175,
											"end": 7225,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7163,
											"end": 7165,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7148,
											"end": 7166,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 7031,
											"end": 7231,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 3390,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 2940,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2940,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 2940,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2940,
											"end": 3390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 291,
											"end": 344,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 291,
											"end": 344,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 291,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 329,
											"end": 344,
											"name": "PUSH",
											"source": 7,
											"value": "3632C8EB5AF3B"
										},
										{
											"begin": 291,
											"end": 344,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 291,
											"end": 344,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3797,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 3396,
											"end": 3797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3396,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 3396,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 3396,
											"end": 3797,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3396,
											"end": 3797,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3396,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 3396,
											"end": 3797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3396,
											"end": 3797,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 3396,
											"end": 3797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3396,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 3396,
											"end": 3797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2289,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 2213,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 2249,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 2249,
											"end": 2261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2261,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 2249,
											"end": 2261,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2280,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "1A0"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2289,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4926,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 4054,
											"end": 4926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4136,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4227,
											"end": 4231,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4221,
											"end": 4232,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4339,
											"end": 4343,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4330,
											"end": 4337,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4344,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4388,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4377,
											"end": 4381,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4368,
											"end": 4375,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4364,
											"end": 4382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4357,
											"end": 4389,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4433,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4422,
											"end": 4426,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4413,
											"end": 4420,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4409,
											"end": 4427,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4402,
											"end": 4434,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4534,
											"end": 4536,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4518,
											"end": 4525,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4514,
											"end": 4532,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4507,
											"end": 4537,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4577,
											"end": 4579,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4574,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4561,
											"end": 4568,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4557,
											"end": 4575,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4550,
											"end": 4580,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4622,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4613,
											"end": 4617,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 4604,
											"end": 4611,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4618,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4593,
											"end": 4623,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 4682,
											"end": 4693,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4823,
											"end": 4827,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4816,
											"end": 4821,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4810,
											"end": 4814,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 4801,
											"end": 4808,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4798,
											"end": 4799,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4792,
											"end": 4796,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4788,
											"end": 4789,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4784,
											"end": 4790,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4779,
											"end": 4828,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 4769,
											"end": 4874,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 4769,
											"end": 4874,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4858,
											"end": 4859,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4855,
											"end": 4856,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4848,
											"end": 4860,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4769,
											"end": 4874,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 4769,
											"end": 4874,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 4054,
											"end": 4926,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4054,
											"end": 4926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 672,
											"end": 698,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 672,
											"end": 698,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 4048,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3803,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3869,
											"end": 3882,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3894,
											"end": 3908,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3908,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3908,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3908,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 3932,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 3932,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 3932,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 3932,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3942,
											"end": 3956,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3942,
											"end": 3956,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3942,
											"end": 3956,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3942,
											"end": 3956,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3869,
											"end": 3882,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3869,
											"end": 3882,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 3999,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 3894,
											"end": 3908,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 3932,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3942,
											"end": 3956,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 3984,
											"end": 3999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 3999,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 3984,
											"end": 3999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 3984,
											"end": 4022,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 3984,
											"end": 4022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4022,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 3984,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3966,
											"end": 4023,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 4048,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3803,
											"end": 4048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2940,
											"end": 3390,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2940,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3018,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 3008,
											"end": 3018,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2973,
											"end": 2979,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 2979,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2991,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 2991,
											"end": 3019,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2999,
											"end": 3006,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2999,
											"end": 3006,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3008,
											"end": 3018,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3018,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3008,
											"end": 3018,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2991,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 2991,
											"end": 3019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2991,
											"end": 3019,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 2991,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3038,
											"end": 3051,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 3038,
											"end": 3051,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3035,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 3029,
											"end": 3051,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3051,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3029,
											"end": 3051,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3038,
											"end": 3051,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3038,
											"end": 3051,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3038,
											"end": 3051,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3029,
											"end": 3051,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3051,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3051,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3051,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3051,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3051,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3051,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3051,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3051,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3051,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3051,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3061,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 3061,
											"end": 3085,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3038,
											"end": 3045,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 3038,
											"end": 3045,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3078,
											"end": 3084,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3078,
											"end": 3084,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3078,
											"end": 3084,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3078,
											"end": 3084,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3078,
											"end": 3084,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3061,
											"end": 3068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 3061,
											"end": 3085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3061,
											"end": 3085,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 3061,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3103,
											"end": 3116,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 3103,
											"end": 3116,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3095,
											"end": 3100,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 3095,
											"end": 3116,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3095,
											"end": 3116,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3095,
											"end": 3116,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3103,
											"end": 3116,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3116,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3116,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3095,
											"end": 3116,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3095,
											"end": 3116,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3095,
											"end": 3116,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3095,
											"end": 3116,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3095,
											"end": 3116,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3095,
											"end": 3116,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3095,
											"end": 3116,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3095,
											"end": 3116,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3095,
											"end": 3116,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3095,
											"end": 3116,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3095,
											"end": 3116,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3148,
											"end": 3162,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 3148,
											"end": 3162,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 3126,
											"end": 3163,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3110,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 3103,
											"end": 3110,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3141,
											"end": 3146,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3141,
											"end": 3146,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3141,
											"end": 3146,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3141,
											"end": 3146,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3141,
											"end": 3146,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3141,
											"end": 3146,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3141,
											"end": 3146,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3148,
											"end": 3162,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 3126,
											"end": 3163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3163,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 3126,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3186,
											"end": 3199,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 3186,
											"end": 3199,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3173,
											"end": 3183,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 3173,
											"end": 3199,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3173,
											"end": 3199,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3173,
											"end": 3199,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3186,
											"end": 3199,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3186,
											"end": 3199,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3186,
											"end": 3199,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3186,
											"end": 3199,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3186,
											"end": 3199,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3186,
											"end": 3199,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3173,
											"end": 3199,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3173,
											"end": 3199,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3173,
											"end": 3199,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3173,
											"end": 3199,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3173,
											"end": 3199,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3173,
											"end": 3199,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3173,
											"end": 3199,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3223,
											"end": 3228,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 3223,
											"end": 3228,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3243,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3230,
											"end": 3243,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 3209,
											"end": 3244,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3223,
											"end": 3228,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3223,
											"end": 3228,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3223,
											"end": 3228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3223,
											"end": 3228,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3223,
											"end": 3228,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3243,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 3209,
											"end": 3244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3244,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 3209,
											"end": 3244,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3276,
											"end": 3288,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3276,
											"end": 3288,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3265,
											"end": 3273,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 3265,
											"end": 3273,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3265,
											"end": 3273,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3265,
											"end": 3273,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3265,
											"end": 3273,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3265,
											"end": 3273,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3265,
											"end": 3273,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3265,
											"end": 3273,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3265,
											"end": 3273,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3276,
											"end": 3288,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 3276,
											"end": 3288,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3276,
											"end": 3288,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3276,
											"end": 3288,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3276,
											"end": 3288,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3276,
											"end": 3288,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3265,
											"end": 3288,
											"name": "XOR",
											"source": 7
										},
										{
											"begin": 3254,
											"end": 3288,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3254,
											"end": 3288,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3254,
											"end": 3288,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3254,
											"end": 3288,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3254,
											"end": 3288,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3254,
											"end": 3288,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3254,
											"end": 3288,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3254,
											"end": 3288,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3254,
											"end": 3288,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3254,
											"end": 3288,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3254,
											"end": 3288,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3342,
											"end": 3347,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 3342,
											"end": 3347,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3342,
											"end": 3347,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3320,
											"end": 3330,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3320,
											"end": 3330,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3320,
											"end": 3330,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3320,
											"end": 3330,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3320,
											"end": 3330,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3333,
											"end": 3339,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3333,
											"end": 3339,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3333,
											"end": 3339,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3333,
											"end": 3339,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3320,
											"end": 3339,
											"name": "XOR",
											"source": 7
										},
										{
											"begin": 3342,
											"end": 3347,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 3342,
											"end": 3347,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3342,
											"end": 3347,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3342,
											"end": 3347,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3342,
											"end": 3347,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3320,
											"end": 3347,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 3320,
											"end": 3347,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3320,
											"end": 3347,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 3320,
											"end": 3347,
											"name": "XOR",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3347,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3347,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3347,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3347,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3347,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3347,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3347,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3347,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3347,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3347,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3347,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3347,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3347,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3347,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3347,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3347,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3373,
											"end": 3383,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3373,
											"end": 3383,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3373,
											"end": 3383,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3373,
											"end": 3383,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3373,
											"end": 3383,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3373,
											"end": 3383,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2940,
											"end": 3390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3797,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 3396,
											"end": 3797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3452,
											"end": 3464,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3523,
											"end": 3524,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3452,
											"end": 3464,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3548,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 3561,
											"end": 3563,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 3556,
											"end": 3557,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3548,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 3548,
											"end": 3563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3548,
											"end": 3563,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 3548,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3563,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3563,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3597,
											"end": 3702,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 3597,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3603,
											"end": 3607,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3611,
											"end": 3612,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3603,
											"end": 3612,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3597,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 3597,
											"end": 3702,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 329,
											"end": 344,
											"name": "PUSH",
											"source": 7,
											"value": "3632C8EB5AF3B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3640,
											"end": 3646,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3646,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3646,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3646,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3646,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3646,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3646,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3639,
											"end": 3660,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3639,
											"end": 3660,
											"name": "MOD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3632,
											"end": 3660,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3632,
											"end": 3660,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3632,
											"end": 3660,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3686,
											"end": 3687,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3683,
											"end": 3685,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3683,
											"end": 3687,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3683,
											"end": 3687,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3683,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 3683,
											"end": 3687,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3683,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 3683,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 3683,
											"end": 3687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3683,
											"end": 3687,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 3683,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3683,
											"end": 3687,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3678,
											"end": 3687,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3678,
											"end": 3687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3597,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 3597,
											"end": 3702,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3597,
											"end": 3702,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 3597,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3728,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3735,
											"end": 3754,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3735,
											"end": 3754,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3735,
											"end": 3754,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3735,
											"end": 3754,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3756,
											"end": 3775,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3756,
											"end": 3775,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 329,
											"end": 344,
											"name": "PUSH",
											"source": 7,
											"value": "3632C8EB5AF3B"
										},
										{
											"begin": 3728,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 3728,
											"end": 3790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3728,
											"end": 3790,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 3728,
											"end": 3790,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3721,
											"end": 3790,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 3396,
											"end": 3797,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3396,
											"end": 3797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2586,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 2468,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2559,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 2566,
											"end": 2569,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2571,
											"end": 2578,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2559,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 2559,
											"end": 2579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2559,
											"end": 2579,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 2559,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2552,
											"end": 2579,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2468,
											"end": 2586,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2468,
											"end": 2586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2934,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 2708,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2806,
											"end": 2817,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2806,
											"end": 2817,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2793,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 2793,
											"end": 2825,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2802,
											"end": 2804,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2802,
											"end": 2804,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2806,
											"end": 2817,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2806,
											"end": 2817,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2806,
											"end": 2817,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2819,
											"end": 2824,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2793,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2793,
											"end": 2825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2793,
											"end": 2825,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 2793,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2790,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2783,
											"end": 2790,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2790,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2825,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2825,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2783,
											"end": 2825,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2783,
											"end": 2825,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2825,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2825,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2825,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2825,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2825,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2825,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2878,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2878,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2856,
											"end": 2858,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2856,
											"end": 2858,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2860,
											"end": 2865,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2860,
											"end": 2865,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2867,
											"end": 2878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2878,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2878,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2878,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2847,
											"end": 2855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2847,
											"end": 2879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2844,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2835,
											"end": 2844,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2844,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2879,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2879,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2835,
											"end": 2879,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2835,
											"end": 2879,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2879,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2879,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2879,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2879,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2879,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2896,
											"end": 2903,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2903,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2903,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2908,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2908,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2908,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2908,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 2896,
											"end": 2926,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2912,
											"end": 2921,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2912,
											"end": 2921,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 2921,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 2921,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2912,
											"end": 2921,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 2921,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2912,
											"end": 2921,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 2926,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 2926,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2926,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 2896,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2889,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 2889,
											"end": 2927,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2889,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 2889,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 2889,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5216,
											"end": 5241,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5216,
											"end": 5241,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5204,
											"end": 5206,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5189,
											"end": 5207,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5189,
											"end": 5207,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5070,
											"end": 5247,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5216,
											"end": 5241,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5216,
											"end": 5241,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5204,
											"end": 5206,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5189,
											"end": 5207,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5189,
											"end": 5207,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5070,
											"end": 5247,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2462,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 2295,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2404,
											"end": 2415,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2404,
											"end": 2415,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2404,
											"end": 2415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2404,
											"end": 2415,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2428,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2428,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2388,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 2388,
											"end": 2429,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2402,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2402,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2404,
											"end": 2415,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2404,
											"end": 2415,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2404,
											"end": 2415,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2404,
											"end": 2415,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2404,
											"end": 2415,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2404,
											"end": 2415,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2404,
											"end": 2415,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2428,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2428,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2428,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2428,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2428,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2388,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2388,
											"end": 2429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2388,
											"end": 2429,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 2388,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2376,
											"end": 2385,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2385,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2429,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2429,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2376,
											"end": 2429,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2429,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2429,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2429,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2376,
											"end": 2429,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2429,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2429,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2429,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2429,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2429,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2429,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2429,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2295,
											"end": 2462,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2295,
											"end": 2462,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2295,
											"end": 2462,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2295,
											"end": 2462,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2295,
											"end": 2462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "106"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "214"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "215"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "214"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "216"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "215"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "216"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "120"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "140"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "160"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "215"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "240"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "120"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "140"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "160"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "180"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "200"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "220"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 10
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 437,
											"end": 610,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 437,
											"end": 610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 505,
											"end": 525,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 554,
											"end": 585,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 544,
											"end": 586,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 534,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 602,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 534,
											"end": 604,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 437,
											"end": 610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 437,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 615,
											"end": 915,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 615,
											"end": 915,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 683,
											"end": 689,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 697,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 741,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 723,
											"end": 730,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 719,
											"end": 742,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 715,
											"end": 747,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 712,
											"end": 764,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 712,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 760,
											"end": 761,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 758,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 762,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 712,
											"end": 764,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 783,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 783,
											"end": 812,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 783,
											"end": 812,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 881,
											"end": 883,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 866,
											"end": 884,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 853,
											"end": 885,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 853,
											"end": 885,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 615,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 3350,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 1299,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1373,
											"end": 1385,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1373,
											"end": 1385,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1437,
											"end": 1441,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1430,
											"end": 1435,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1426,
											"end": 1442,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1420,
											"end": 1443,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1452,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 1493,
											"end": 1497,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1488,
											"end": 1491,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1484,
											"end": 1498,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1470,
											"end": 1482,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1112,
											"end": 1214,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1452,
											"end": 1499,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 1452,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1452,
											"end": 1499,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1547,
											"end": 1551,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1540,
											"end": 1545,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1536,
											"end": 1552,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1530,
											"end": 1553,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1562,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 1605,
											"end": 1609,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1600,
											"end": 1603,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1596,
											"end": 1610,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1580,
											"end": 1594,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1112,
											"end": 1214,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1562,
											"end": 1611,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 1562,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1562,
											"end": 1611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1659,
											"end": 1663,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1652,
											"end": 1657,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1648,
											"end": 1664,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1665,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 1717,
											"end": 1721,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1712,
											"end": 1715,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1708,
											"end": 1722,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1692,
											"end": 1706,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1112,
											"end": 1214,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1723,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 1674,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1723,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1771,
											"end": 1775,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1764,
											"end": 1769,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1760,
											"end": 1776,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1754,
											"end": 1777,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1786,
											"end": 1835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 1829,
											"end": 1833,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1824,
											"end": 1827,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1820,
											"end": 1834,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1804,
											"end": 1818,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1112,
											"end": 1214,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1786,
											"end": 1835,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 1786,
											"end": 1835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1786,
											"end": 1835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1883,
											"end": 1887,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 1876,
											"end": 1881,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1888,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1866,
											"end": 1889,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1898,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 1941,
											"end": 1945,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 1936,
											"end": 1939,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1946,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1916,
											"end": 1930,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1112,
											"end": 1214,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1898,
											"end": 1947,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 1898,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1898,
											"end": 1947,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1995,
											"end": 1999,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 1988,
											"end": 1993,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1984,
											"end": 2000,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1978,
											"end": 2001,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2010,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 2053,
											"end": 2057,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 2048,
											"end": 2051,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2044,
											"end": 2058,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2028,
											"end": 2042,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1112,
											"end": 1214,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2010,
											"end": 2059,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 2010,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2010,
											"end": 2059,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2111,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2100,
											"end": 2105,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2090,
											"end": 2113,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 2165,
											"end": 2169,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2160,
											"end": 2163,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2156,
											"end": 2170,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2140,
											"end": 2154,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1112,
											"end": 1214,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2171,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 2122,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2171,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2225,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2212,
											"end": 2217,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2208,
											"end": 2226,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2202,
											"end": 2227,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2274,
											"end": 2277,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2270,
											"end": 2286,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1112,
											"end": 1214,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2287,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 2236,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2287,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2335,
											"end": 2341,
											"name": "PUSH",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 2328,
											"end": 2333,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2342,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2318,
											"end": 2343,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2352,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 2395,
											"end": 2401,
											"name": "PUSH",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 2390,
											"end": 2393,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2386,
											"end": 2402,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2384,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1112,
											"end": 1214,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2352,
											"end": 2403,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 2352,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2352,
											"end": 2403,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2451,
											"end": 2457,
											"name": "PUSH",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 2444,
											"end": 2449,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2440,
											"end": 2458,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2434,
											"end": 2459,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2468,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 2506,
											"end": 2509,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2502,
											"end": 2518,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2486,
											"end": 2500,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1112,
											"end": 1214,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2468,
											"end": 2519,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 2468,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2468,
											"end": 2519,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2568,
											"end": 2574,
											"name": "PUSH",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 2561,
											"end": 2566,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2557,
											"end": 2575,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2576,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2585,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 2629,
											"end": 2635,
											"name": "PUSH",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 2624,
											"end": 2627,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2620,
											"end": 2636,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2603,
											"end": 2618,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1112,
											"end": 1214,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2585,
											"end": 2637,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 2585,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2585,
											"end": 2637,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2692,
											"name": "PUSH",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 2679,
											"end": 2684,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2675,
											"end": 2693,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2669,
											"end": 2694,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2703,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 2747,
											"end": 2753,
											"name": "PUSH",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 2742,
											"end": 2745,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2721,
											"end": 2736,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1112,
											"end": 1214,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2703,
											"end": 2755,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 2703,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2703,
											"end": 2755,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2804,
											"end": 2810,
											"name": "PUSH",
											"source": 10,
											"value": "1A0"
										},
										{
											"begin": 2797,
											"end": 2802,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2793,
											"end": 2811,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2787,
											"end": 2812,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 2865,
											"end": 2871,
											"name": "PUSH",
											"source": 10,
											"value": "1A0"
										},
										{
											"begin": 2860,
											"end": 2863,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2856,
											"end": 2872,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2839,
											"end": 2854,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1112,
											"end": 1214,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 2873,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 2821,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 2873,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2922,
											"end": 2928,
											"name": "PUSH",
											"source": 10,
											"value": "1C0"
										},
										{
											"begin": 2915,
											"end": 2920,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2911,
											"end": 2929,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2905,
											"end": 2930,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2939,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 2983,
											"end": 2989,
											"name": "PUSH",
											"source": 10,
											"value": "1C0"
										},
										{
											"begin": 2978,
											"end": 2981,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2974,
											"end": 2990,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2957,
											"end": 2972,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1112,
											"end": 1214,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2939,
											"end": 2991,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 2939,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2939,
											"end": 2991,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3040,
											"end": 3046,
											"name": "PUSH",
											"source": 10,
											"value": "1E0"
										},
										{
											"begin": 3033,
											"end": 3038,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3029,
											"end": 3047,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3023,
											"end": 3048,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3057,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH",
											"source": 10,
											"value": "1E0"
										},
										{
											"begin": 3096,
											"end": 3099,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3075,
											"end": 3090,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1112,
											"end": 1214,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3057,
											"end": 3109,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 3057,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3057,
											"end": 3109,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3158,
											"end": 3164,
											"name": "PUSH",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 3151,
											"end": 3156,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3147,
											"end": 3165,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3141,
											"end": 3166,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3175,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 3219,
											"end": 3225,
											"name": "PUSH",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 3214,
											"end": 3217,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3210,
											"end": 3226,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3193,
											"end": 3208,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1112,
											"end": 1214,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3175,
											"end": 3227,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 3175,
											"end": 3227,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3175,
											"end": 3227,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3276,
											"end": 3282,
											"name": "PUSH",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 3269,
											"end": 3274,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3259,
											"end": 3284,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3293,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 3336,
											"end": 3342,
											"name": "PUSH",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 3331,
											"end": 3334,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3327,
											"end": 3343,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3325,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1286,
											"end": 1290,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1275,
											"end": 1291,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1263,
											"end": 1292,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1263,
											"end": 1292,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1219,
											"end": 1294,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3355,
											"end": 5065,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 3355,
											"end": 5065,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3497,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3535,
											"end": 3539,
											"name": "PUSH",
											"source": 10,
											"value": "5E0"
										},
										{
											"begin": 3524,
											"end": 3533,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3520,
											"end": 3540,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3512,
											"end": 3540,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3512,
											"end": 3540,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3549,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 3585,
											"end": 3594,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3576,
											"end": 3582,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3583,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3549,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 3549,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3549,
											"end": 3595,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 3549,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3642,
											"end": 3646,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3634,
											"end": 3640,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3630,
											"end": 3647,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3624,
											"end": 3648,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 3707,
											"end": 3713,
											"name": "PUSH",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 3696,
											"end": 3705,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3692,
											"end": 3714,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3678,
											"end": 3690,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 3657,
											"end": 3715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3715,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 3657,
											"end": 3715,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3764,
											"end": 3768,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3752,
											"end": 3769,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3752,
											"end": 3769,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3746,
											"end": 3770,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3828,
											"end": 3834,
											"name": "PUSH",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 3813,
											"end": 3835,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3813,
											"end": 3835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3885,
											"end": 3889,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3873,
											"end": 3890,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3873,
											"end": 3890,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3867,
											"end": 3891,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3949,
											"end": 3955,
											"name": "PUSH",
											"source": 10,
											"value": "4A0"
										},
										{
											"begin": 3934,
											"end": 3956,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 3956,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4006,
											"end": 4010,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3994,
											"end": 4011,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3994,
											"end": 4011,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3988,
											"end": 4012,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4070,
											"end": 4076,
											"name": "PUSH",
											"source": 10,
											"value": "4C0"
										},
										{
											"begin": 4055,
											"end": 4077,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4055,
											"end": 4077,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4127,
											"end": 4131,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 4115,
											"end": 4132,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4115,
											"end": 4132,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4133,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4191,
											"end": 4197,
											"name": "PUSH",
											"source": 10,
											"value": "4E0"
										},
										{
											"begin": 4176,
											"end": 4198,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4176,
											"end": 4198,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4248,
											"end": 4252,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 4236,
											"end": 4253,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4236,
											"end": 4253,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4230,
											"end": 4254,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4312,
											"end": 4318,
											"name": "PUSH",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 4297,
											"end": 4319,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4319,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4369,
											"end": 4373,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 4357,
											"end": 4374,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4357,
											"end": 4374,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4351,
											"end": 4375,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4433,
											"end": 4439,
											"name": "PUSH",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 4418,
											"end": 4440,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4418,
											"end": 4440,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4490,
											"end": 4496,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4478,
											"end": 4497,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4478,
											"end": 4497,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4498,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4556,
											"end": 4562,
											"name": "PUSH",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 4541,
											"end": 4563,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4541,
											"end": 4563,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4613,
											"end": 4619,
											"name": "PUSH",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 4601,
											"end": 4620,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4601,
											"end": 4620,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4595,
											"end": 4621,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4679,
											"end": 4685,
											"name": "PUSH",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 4664,
											"end": 4686,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4664,
											"end": 4686,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4736,
											"end": 4742,
											"name": "PUSH",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 4724,
											"end": 4743,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4724,
											"end": 4743,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4718,
											"end": 4744,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4802,
											"end": 4808,
											"name": "PUSH",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 4787,
											"end": 4809,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4787,
											"end": 4809,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "PUSH",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 4848,
											"end": 4867,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4848,
											"end": 4867,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4842,
											"end": 4868,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1207,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4927,
											"end": 4933,
											"name": "PUSH",
											"source": 10,
											"value": "5A0"
										},
										{
											"begin": 4912,
											"end": 4934,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4912,
											"end": 4934,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4985,
											"end": 4991,
											"name": "PUSH",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 4973,
											"end": 4992,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4973,
											"end": 4992,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4973,
											"end": 4992,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 4993,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1286,
											"end": 1290,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1275,
											"end": 1291,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5051,
											"end": 5057,
											"name": "PUSH",
											"source": 10,
											"value": "5C0"
										},
										{
											"begin": 5036,
											"end": 5058,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5036,
											"end": 5058,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5036,
											"end": 5058,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1263,
											"end": 1292,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3355,
											"end": 5065,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3355,
											"end": 5065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5252,
											"end": 5626,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 5252,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5329,
											"end": 5335,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5337,
											"end": 5343,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5345,
											"end": 5351,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5398,
											"end": 5400,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5386,
											"end": 5395,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5377,
											"end": 5384,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5373,
											"end": 5396,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5369,
											"end": 5401,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5366,
											"end": 5418,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5366,
											"end": 5418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 5366,
											"end": 5418,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5414,
											"end": 5415,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5411,
											"end": 5412,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5404,
											"end": 5416,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5366,
											"end": 5418,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 5366,
											"end": 5418,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5437,
											"end": 5466,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 5456,
											"end": 5465,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5437,
											"end": 5466,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 5437,
											"end": 5466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5437,
											"end": 5466,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 5437,
											"end": 5466,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5427,
											"end": 5466,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5427,
											"end": 5466,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5485,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 5519,
											"end": 5521,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5508,
											"end": 5517,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5522,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5485,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 5485,
											"end": 5523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5485,
											"end": 5523,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 5485,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5252,
											"end": 5626,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5252,
											"end": 5626,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5523,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5523,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5592,
											"end": 5594,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5577,
											"end": 5595,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5577,
											"end": 5595,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5577,
											"end": 5595,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5577,
											"end": 5595,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5564,
											"end": 5596,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5564,
											"end": 5596,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5252,
											"end": 5626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5820,
											"end": 6286,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 5820,
											"end": 6286,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5897,
											"end": 5903,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5905,
											"end": 5911,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5913,
											"end": 5919,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5966,
											"end": 5968,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5954,
											"end": 5963,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5945,
											"end": 5952,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5941,
											"end": 5964,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5937,
											"end": 5969,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5934,
											"end": 5986,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5934,
											"end": 5986,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 5934,
											"end": 5986,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5982,
											"end": 5983,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5979,
											"end": 5980,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5972,
											"end": 5984,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5934,
											"end": 5986,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 5934,
											"end": 5986,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6027,
											"end": 6050,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6027,
											"end": 6050,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6027,
											"end": 6050,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6147,
											"end": 6149,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6132,
											"end": 6150,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6132,
											"end": 6150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6119,
											"end": 6151,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6119,
											"end": 6151,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6250,
											"end": 6252,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6235,
											"end": 6253,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6235,
											"end": 6253,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6235,
											"end": 6253,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6254,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6254,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5820,
											"end": 6286,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5820,
											"end": 6286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6517,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 6291,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6350,
											"end": 6356,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6403,
											"end": 6405,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6391,
											"end": 6400,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6382,
											"end": 6389,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6378,
											"end": 6401,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6374,
											"end": 6406,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6371,
											"end": 6423,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6371,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 6371,
											"end": 6423,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6419,
											"end": 6420,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6416,
											"end": 6417,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6371,
											"end": 6423,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 6371,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6464,
											"end": 6487,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6487,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6517,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6291,
											"end": 6517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6693,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 6522,
											"end": 6693,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6589,
											"end": 6609,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6589,
											"end": 6609,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6638,
											"end": 6668,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6638,
											"end": 6668,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6628,
											"end": 6669,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6628,
											"end": 6669,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 6618,
											"end": 6687,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 6618,
											"end": 6687,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6683,
											"end": 6684,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6680,
											"end": 6681,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6673,
											"end": 6685,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6698,
											"end": 7026,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 6698,
											"end": 7026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6788,
											"end": 6794,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6841,
											"end": 6843,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6829,
											"end": 6838,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6820,
											"end": 6827,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6816,
											"end": 6839,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6812,
											"end": 6844,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6809,
											"end": 6861,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6809,
											"end": 6861,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 6809,
											"end": 6861,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6857,
											"end": 6858,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6854,
											"end": 6855,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6847,
											"end": 6859,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6809,
											"end": 6861,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 6809,
											"end": 6861,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6880,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 6898,
											"end": 6907,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6880,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 6880,
											"end": 6908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6880,
											"end": 6908,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 6880,
											"end": 6908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6870,
											"end": 6908,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6870,
											"end": 6908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6927,
											"end": 6964,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 6960,
											"end": 6962,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6949,
											"end": 6958,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6927,
											"end": 6964,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 6927,
											"end": 6964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6927,
											"end": 6964,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 6927,
											"end": 6964,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6917,
											"end": 6964,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6917,
											"end": 6964,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 7016,
											"end": 7018,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7005,
											"end": 7014,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7001,
											"end": 7019,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 6983,
											"end": 7020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7020,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 6983,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6698,
											"end": 7026,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6698,
											"end": 7026,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6698,
											"end": 7026,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6698,
											"end": 7026,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6698,
											"end": 7026,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6698,
											"end": 7026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7236,
											"end": 7422,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 7236,
											"end": 7422,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7295,
											"end": 7301,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7350,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7336,
											"end": 7345,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7327,
											"end": 7334,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7323,
											"end": 7346,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7319,
											"end": 7351,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7316,
											"end": 7368,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7316,
											"end": 7368,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 7316,
											"end": 7368,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7364,
											"end": 7365,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7361,
											"end": 7362,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7354,
											"end": 7366,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7316,
											"end": 7368,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 7316,
											"end": 7368,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7387,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 7406,
											"end": 7415,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7387,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 7387,
											"end": 7416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7427,
											"end": 7687,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 7427,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7495,
											"end": 7501,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7503,
											"end": 7509,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7556,
											"end": 7558,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7553,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7535,
											"end": 7542,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7531,
											"end": 7554,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7527,
											"end": 7559,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7524,
											"end": 7576,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7524,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 7524,
											"end": 7576,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7572,
											"end": 7573,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7569,
											"end": 7570,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7562,
											"end": 7574,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7524,
											"end": 7576,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 7524,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 7614,
											"end": 7623,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 7595,
											"end": 7624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7585,
											"end": 7624,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7585,
											"end": 7624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7643,
											"end": 7681,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 7677,
											"end": 7679,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7666,
											"end": 7675,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7662,
											"end": 7680,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7643,
											"end": 7681,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 7643,
											"end": 7681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7643,
											"end": 7681,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 7643,
											"end": 7681,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7633,
											"end": 7681,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7633,
											"end": 7681,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7427,
											"end": 7687,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7427,
											"end": 7687,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7427,
											"end": 7687,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7427,
											"end": 7687,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7427,
											"end": 7687,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7427,
											"end": 7687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7692,
											"end": 8072,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 7692,
											"end": 8072,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7771,
											"end": 7772,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7767,
											"end": 7779,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7767,
											"end": 7779,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7767,
											"end": 7779,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 7767,
											"end": 7779,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7835,
											"end": 7896,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 7835,
											"end": 7896,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7889,
											"end": 7893,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 7881,
											"end": 7887,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7877,
											"end": 7894,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7867,
											"end": 7894,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7867,
											"end": 7894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7835,
											"end": 7896,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 7835,
											"end": 7896,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7942,
											"end": 7944,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7931,
											"end": 7945,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7911,
											"end": 7929,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7908,
											"end": 7946,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7905,
											"end": 8066,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 7905,
											"end": 8066,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7988,
											"end": 7998,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 7983,
											"end": 7986,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 7979,
											"end": 7999,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 7976,
											"end": 7977,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7969,
											"end": 8000,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8023,
											"end": 8027,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 8020,
											"end": 8021,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8013,
											"end": 8028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8051,
											"end": 8055,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8048,
											"end": 8049,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8041,
											"end": 8056,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7905,
											"end": 8066,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 7905,
											"end": 8066,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7905,
											"end": 8066,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7692,
											"end": 8072,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7692,
											"end": 8072,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7692,
											"end": 8072,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7692,
											"end": 8072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8077,
											"end": 8204,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 8077,
											"end": 8204,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8138,
											"end": 8148,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 8133,
											"end": 8136,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 8129,
											"end": 8149,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 8126,
											"end": 8127,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8119,
											"end": 8150,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8169,
											"end": 8173,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 8166,
											"end": 8167,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8159,
											"end": 8174,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8197,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8190,
											"end": 8191,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8183,
											"end": 8198,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8209,
											"end": 8321,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 8209,
											"end": 8321,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8242,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8267,
											"end": 8268,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8257,
											"end": 8292,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 8257,
											"end": 8292,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8272,
											"end": 8290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 8272,
											"end": 8290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 8272,
											"end": 8290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8272,
											"end": 8290,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 8272,
											"end": 8290,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8306,
											"end": 8315,
											"name": "MOD",
											"source": 10
										},
										{
											"begin": 8306,
											"end": 8315,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8209,
											"end": 8321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8326,
											"end": 8523,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 8326,
											"end": 8523,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8366,
											"end": 8367,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8393,
											"end": 8420,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8393,
											"end": 8420,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8393,
											"end": 8420,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8429,
											"end": 8466,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 8429,
											"end": 8466,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8446,
											"end": 8464,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 8446,
											"end": 8464,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 8446,
											"end": 8464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8446,
											"end": 8464,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 8446,
											"end": 8464,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8484,
											"end": 8511,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8484,
											"end": 8511,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8484,
											"end": 8511,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8484,
											"end": 8511,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8480,
											"end": 8517,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8480,
											"end": 8517,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8480,
											"end": 8517,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8480,
											"end": 8517,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8480,
											"end": 8517,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8326,
											"end": 8523,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8326,
											"end": 8523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8528,
											"end": 8873,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 8528,
											"end": 8873,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8748,
											"end": 8780,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8748,
											"end": 8780,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8748,
											"end": 8780,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8748,
											"end": 8780,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8730,
											"end": 8781,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8730,
											"end": 8781,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8812,
											"end": 8814,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8797,
											"end": 8815,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8797,
											"end": 8815,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8790,
											"end": 8824,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8790,
											"end": 8824,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8790,
											"end": 8824,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8790,
											"end": 8824,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8855,
											"end": 8857,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8840,
											"end": 8858,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8840,
											"end": 8858,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8833,
											"end": 8867,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8718,
											"end": 8720,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8528,
											"end": 8873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8878,
											"end": 9081,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 8878,
											"end": 9081,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9042,
											"end": 9074,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9042,
											"end": 9074,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9042,
											"end": 9074,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9042,
											"end": 9074,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9024,
											"end": 9075,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9024,
											"end": 9075,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9012,
											"end": 9014,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8997,
											"end": 9015,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8997,
											"end": 9015,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8878,
											"end": 9081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9086,
											"end": 9213,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 9086,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9147,
											"end": 9157,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 9142,
											"end": 9145,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 9138,
											"end": 9158,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 9135,
											"end": 9136,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9128,
											"end": 9159,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9178,
											"end": 9182,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 9175,
											"end": 9176,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9168,
											"end": 9183,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9202,
											"end": 9206,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9199,
											"end": 9200,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9192,
											"end": 9207,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9218,
											"end": 9440,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 9218,
											"end": 9440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9283,
											"end": 9292,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9283,
											"end": 9292,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9283,
											"end": 9292,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9304,
											"end": 9314,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9304,
											"end": 9314,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9304,
											"end": 9314,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9301,
											"end": 9434,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9301,
											"end": 9434,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9301,
											"end": 9434,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9356,
											"end": 9366,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 9351,
											"end": 9354,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 9347,
											"end": 9367,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 9344,
											"end": 9345,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9337,
											"end": 9368,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9391,
											"end": 9395,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 9388,
											"end": 9389,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9381,
											"end": 9396,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9419,
											"end": 9423,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9416,
											"end": 9417,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9409,
											"end": 9424,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"solidity/addresses.sol",
								"solidity/dysnomia/00b_vmreq.sol",
								"solidity/old/fa.sol",
								"solidity/old/faung.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"MotzkinPrime()": "d3dc2a0f",
							"Random()": "604a6fa9",
							"View()": "1686f265",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"hashWith(address,address)": "fa6bcfec",
							"modExp(uint256,uint256,uint256)": "3148f14f",
							"modExp64(uint64,uint64,uint64)": "53df6e35",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MotzkinPrime\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Random\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"View\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"Base\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Secret\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Signal\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Channel\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Pole\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Identity\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Foundation\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Element\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Dynamo\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Manifold\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Ring\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Barn\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Coordinate\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Tau\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Eta\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Kappa\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Alpha\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"Nu\",\"type\":\"uint8\"}],\"internalType\":\"struct Fa\",\"name\":\"Rod\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"Base\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Secret\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Signal\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Channel\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Pole\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Identity\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Foundation\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Element\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Dynamo\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Manifold\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Ring\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Barn\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Coordinate\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Tau\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Eta\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Kappa\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Alpha\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"Nu\",\"type\":\"uint8\"}],\"internalType\":\"struct Fa\",\"name\":\"Cone\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"Phi\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Eta\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Xi\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Sigma\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Rho\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Upsilon\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Ohm\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Pi\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Omicron\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Omega\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"Chi\",\"type\":\"uint8\"}],\"internalType\":\"struct Faung\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"b\",\"type\":\"address\"}],\"name\":\"hashWith\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"hash\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_b\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_e\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_m\",\"type\":\"uint256\"}],\"name\":\"modExp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_b\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"_e\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"_m\",\"type\":\"uint64\"}],\"name\":\"modExp64\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"result\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity/dysnomia/00b_vmreq.sol\":\"VMREQ\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"solidity/addresses.sol\":{\"keccak256\":\"0x50980b80d294629034ffb9d090df35ee17c6625420532faa3de39ed35dee9056\",\"license\":\"Sharia\",\"urls\":[\"bzz-raw://b8dbf60cbd6a274ba086df217462f13e07447e40f09611191318961675ecab23\",\"dweb:/ipfs/QmcgnABjQFddfcWvcS6KpV5kRCbr1tLMVswYjiunqHwcNZ\"]},\"solidity/dysnomia/00b_vmreq.sol\":{\"keccak256\":\"0x432647235d33fc47db709451499484657d5bce1a93d204db5629558db5edb0cd\",\"license\":\"Sharia\",\"urls\":[\"bzz-raw://a8c2e9b7d33563eace2ac37db5a71b5a18c7fd0652479244a86e11cf33c7c76e\",\"dweb:/ipfs/QmbYcYX9T8Lpxa4p1bZ5sGByHJpFKZ3mqph49kidGzX68i\"]},\"solidity/old/fa.sol\":{\"keccak256\":\"0x91dde640be339c0530968ee39856c1d685212d221c205e1ad3864e65022c7964\",\"license\":\"Sharia\",\"urls\":[\"bzz-raw://ca907e251f9e1d3116b67549b376f5ec2f719c4fb1e9cba6066660d628338df6\",\"dweb:/ipfs/QmZCsx6iKYxv3HHaemoUnw1HTrogcYid7A5PuPRDhJtgwz\"]},\"solidity/old/faung.sol\":{\"keccak256\":\"0xf4bb980eb872a4e981fc2ca5c465d0dd5029e151686f1066a8f854fee86e23fe\",\"license\":\"Sharia\",\"urls\":[\"bzz-raw://75b67644e0890ae390904077de47609ab9539cfd6c371837ba37d13053674f1e\",\"dweb:/ipfs/Qme3xG9pHcUXzs9YtoJWD4ztJnHCezmReitavMPepesaGk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1467,
								"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
								"label": "Mu",
								"offset": 0,
								"slot": "5",
								"type": "t_struct(Faung)2225_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Fa)2193_storage": {
								"encoding": "inplace",
								"label": "struct Fa",
								"members": [
									{
										"astId": 2158,
										"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
										"label": "Base",
										"offset": 0,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 2160,
										"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
										"label": "Secret",
										"offset": 8,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 2162,
										"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
										"label": "Signal",
										"offset": 16,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 2164,
										"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
										"label": "Channel",
										"offset": 24,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 2166,
										"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
										"label": "Pole",
										"offset": 0,
										"slot": "1",
										"type": "t_uint64"
									},
									{
										"astId": 2168,
										"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
										"label": "Identity",
										"offset": 8,
										"slot": "1",
										"type": "t_uint64"
									},
									{
										"astId": 2170,
										"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
										"label": "Foundation",
										"offset": 16,
										"slot": "1",
										"type": "t_uint64"
									},
									{
										"astId": 2172,
										"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
										"label": "Element",
										"offset": 24,
										"slot": "1",
										"type": "t_uint64"
									},
									{
										"astId": 2174,
										"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
										"label": "Dynamo",
										"offset": 0,
										"slot": "2",
										"type": "t_uint64"
									},
									{
										"astId": 2176,
										"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
										"label": "Manifold",
										"offset": 8,
										"slot": "2",
										"type": "t_uint64"
									},
									{
										"astId": 2178,
										"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
										"label": "Ring",
										"offset": 16,
										"slot": "2",
										"type": "t_uint64"
									},
									{
										"astId": 2180,
										"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
										"label": "Barn",
										"offset": 24,
										"slot": "2",
										"type": "t_uint64"
									},
									{
										"astId": 2182,
										"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
										"label": "Coordinate",
										"offset": 0,
										"slot": "3",
										"type": "t_uint64"
									},
									{
										"astId": 2184,
										"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
										"label": "Tau",
										"offset": 8,
										"slot": "3",
										"type": "t_uint64"
									},
									{
										"astId": 2186,
										"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
										"label": "Eta",
										"offset": 16,
										"slot": "3",
										"type": "t_uint64"
									},
									{
										"astId": 2188,
										"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
										"label": "Kappa",
										"offset": 24,
										"slot": "3",
										"type": "t_uint64"
									},
									{
										"astId": 2190,
										"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
										"label": "Alpha",
										"offset": 0,
										"slot": "4",
										"type": "t_uint64"
									},
									{
										"astId": 2192,
										"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
										"label": "Nu",
										"offset": 8,
										"slot": "4",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(Faung)2225_storage": {
								"encoding": "inplace",
								"label": "struct Faung",
								"members": [
									{
										"astId": 2199,
										"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
										"label": "Rod",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Fa)2193_storage"
									},
									{
										"astId": 2202,
										"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
										"label": "Cone",
										"offset": 0,
										"slot": "5",
										"type": "t_struct(Fa)2193_storage"
									},
									{
										"astId": 2204,
										"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
										"label": "Phi",
										"offset": 0,
										"slot": "10",
										"type": "t_uint64"
									},
									{
										"astId": 2206,
										"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
										"label": "Eta",
										"offset": 8,
										"slot": "10",
										"type": "t_uint64"
									},
									{
										"astId": 2208,
										"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
										"label": "Xi",
										"offset": 16,
										"slot": "10",
										"type": "t_uint64"
									},
									{
										"astId": 2210,
										"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
										"label": "Sigma",
										"offset": 24,
										"slot": "10",
										"type": "t_uint64"
									},
									{
										"astId": 2212,
										"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
										"label": "Rho",
										"offset": 0,
										"slot": "11",
										"type": "t_uint64"
									},
									{
										"astId": 2214,
										"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
										"label": "Upsilon",
										"offset": 8,
										"slot": "11",
										"type": "t_uint64"
									},
									{
										"astId": 2216,
										"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
										"label": "Ohm",
										"offset": 16,
										"slot": "11",
										"type": "t_uint64"
									},
									{
										"astId": 2218,
										"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
										"label": "Pi",
										"offset": 24,
										"slot": "11",
										"type": "t_uint64"
									},
									{
										"astId": 2220,
										"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
										"label": "Omicron",
										"offset": 0,
										"slot": "12",
										"type": "t_uint64"
									},
									{
										"astId": 2222,
										"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
										"label": "Omega",
										"offset": 8,
										"slot": "12",
										"type": "t_uint64"
									},
									{
										"astId": 2224,
										"contract": "solidity/dysnomia/00b_vmreq.sol:VMREQ",
										"label": "Chi",
										"offset": 16,
										"slot": "12",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "416"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							831
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							801
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 802,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 801,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 832,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 831,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1428:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 831,
										"src": "1428:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1437:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 801,
										"src": "1445:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1461:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								801,
								729,
								831
							],
							"name": "ERC20",
							"nameLocation": "1419:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1480:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1496:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1540:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1556:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1583:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1630:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1665:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1691:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1952:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1962:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1985:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1908:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1929:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:1"
									},
									"scope": 651,
									"src": "1896:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										788
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2134:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "2144:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2119:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:1"
									},
									"scope": 651,
									"src": "2074:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										794
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2338:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2348:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2323:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:1"
									},
									"scope": 651,
									"src": "2276:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										800
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3058:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "3068:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3051:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:1"
									},
									"scope": 651,
									"src": "3002:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3205:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3222:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "3215:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3196:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:1"
									},
									"scope": 651,
									"src": "3144:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3373:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3390:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3400:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3383:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3318:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3364:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:1"
									},
									"scope": 651,
									"src": "3299:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3685:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3695:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "3711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3743:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3750:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3754:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3733:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3770:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3628:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3640:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3679:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:1"
									},
									"scope": 651,
									"src": "3610:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3935:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3952:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3964:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3971:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3945:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3865:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3880:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:1"
									},
									"scope": 651,
									"src": "3846:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4372:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4382:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "4398:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4436:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4445:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4420:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4461:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4310:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4327:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4366:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:1"
									},
									"scope": 651,
									"src": "4293:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "5132:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "5142:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "5160:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5198:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5204:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5213:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5182:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5239:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5245:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5249:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "5229:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5265:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5061:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5075:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5087:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5126:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:1"
									},
									"scope": 651,
									"src": "5039:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5725:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5739:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5735:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5759:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5780:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5773:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5834:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5830:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5852:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5873:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5866:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5933:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5939:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5943:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5925:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5675:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5689:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5701:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:1"
									},
									"scope": 651,
									"src": "5656:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6346:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6360:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6534:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6548:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6570:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6580:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6603:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6617:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6599:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6624:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6674:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6680:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6693:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6649:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6834:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6844:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6852:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6866:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6356:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6380:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6496:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6512:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6910:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "7125:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7284:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7294:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7301:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6906:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6928:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "7073:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7089:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7355:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7361:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7346:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7341:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6288:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6302:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6314:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:1"
									},
									"scope": 651,
									"src": "6271:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7777:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7791:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7787:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7814:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7835:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7828:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7916:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7887:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7736:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7753:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:1"
									},
									"scope": 651,
									"src": "7721:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8303:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8313:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8340:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8361:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8354:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8419:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8411:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8279:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:1"
									},
									"scope": 651,
									"src": "8247:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "9063:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9089:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9098:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "9073:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9007:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9022:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9039:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:1"
									},
									"scope": 651,
									"src": "8989:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "10047:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "10061:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "10057:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "10082:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10103:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "10096:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "10159:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "10155:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "10182:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10203:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "10196:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10254:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10266:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10273:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10284:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10303:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10299:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10314:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10342:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10349:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10358:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10333:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10328:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9999:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10014:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:1"
									},
									"scope": 651,
									"src": "9949:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10752:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10762:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10799:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10789:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10828:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10824:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10867:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10885:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10904:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10881:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10911:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10963:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10972:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10990:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10936:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "11061:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "11068:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "11077:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "11096:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "11052:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10688:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10720:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:1"
									},
									"scope": 651,
									"src": "10663:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1401:9741:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:11038:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 729,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 729,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 729,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 729,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 729,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 729,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							831
						],
						"ERC20": [
							651
						],
						"ERC20Burnable": [
							775
						]
					},
					"id": 776,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 776,
							"sourceUnit": 652,
							"src": "150:35:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 651,
										"src": "158:5:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 735,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 776,
							"sourceUnit": 832,
							"src": "186:51:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 734,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 831,
										"src": "194:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 737,
										"name": "Context",
										"nameLocations": [
											"483:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 831,
										"src": "483:7:3"
									},
									"id": 738,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:3"
								},
								{
									"baseName": {
										"id": 739,
										"name": "ERC20",
										"nameLocations": [
											"492:5:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "492:5:3"
									},
									"id": 740,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:3"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 736,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:3",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 775,
							"linearizedBaseContracts": [
								775,
								651,
								41,
								801,
								729,
								831
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "662:43:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 747,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 813,
																"src": "678:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "692:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 746,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "672:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "672:26:3"
											}
										]
									},
									"documentation": {
										"id": 741,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:3",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "632:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:3"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:3"
									},
									"scope": 775,
									"src": "618:87:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 773,
										"nodeType": "Block",
										"src": "1086:93:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 762,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "1112:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 763,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 813,
																"src": "1121:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 765,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "1135:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 761,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "1096:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 767,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 769,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "1157:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 770,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "1166:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 768,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "1151:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:3"
											}
										]
									},
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "1039:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "1056:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:3"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:3"
									},
									"scope": 775,
									"src": "1021:158:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 776,
							"src": "448:733:3",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "124:1058:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							801
						]
					},
					"id": 802,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 777,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 779,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 802,
							"sourceUnit": 730,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 778,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 781,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "305:6:4"
									},
									"id": 782,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 780,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 801,
							"linearizedBaseContracts": [
								801,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 788,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 785,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 801,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 794,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 791,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 801,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 800,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 797,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 801,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 802,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							831
						]
					},
					"id": 832,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 803,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 804,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 831,
							"linearizedBaseContracts": [
								831
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 809,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 808,
												"id": 811,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 831,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 818,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 817,
												"id": 820,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 815,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 831,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 826,
												"id": 828,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 831,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 832,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"solidity/addresses.sol": {
				"ast": {
					"absolutePath": "solidity/addresses.sol",
					"exportedSymbols": {
						"ACABContract": [
							1391
						],
						"ACiDContract": [
							1379
						],
						"AFFECTIONContract": [
							1433
						],
						"AbUrbeConditaContract": [
							1103
						],
						"AtropaContract": [
							875
						],
						"BELContract": [
							1313
						],
						"BFFContract": [
							1295
						],
						"BailContract": [
							1253
						],
						"BillBurrContract": [
							1397
						],
						"BinContract": [
							1115
						],
						"BondContract": [
							1247
						],
						"BonusContract": [
							1403
						],
						"BuckinghamContract": [
							899
						],
						"BuddhaghosaContract": [
							1175
						],
						"Bullion5Contract": [
							1013
						],
						"Bullion8Contract": [
							1019
						],
						"CROWSContract": [
							953
						],
						"CallContract": [
							1235
						],
						"CherokeeContract": [
							917
						],
						"CiAContract": [
							1373
						],
						"DEIContract": [
							1091
						],
						"DampfContract": [
							1085
						],
						"DiContract": [
							983
						],
						"DiscoContract": [
							1073
						],
						"DreidelContract": [
							923
						],
						"EasternLightningContract": [
							881
						],
						"FLTContract": [
							1355
						],
						"FinalContract": [
							887
						],
						"FreebiesContract": [
							1211
						],
						"FrockContract": [
							1151
						],
						"G5Contract": [
							1421
						],
						"GaiContract": [
							1067
						],
						"GokuldhamContract": [
							1361
						],
						"GreenlandContract": [
							1169
						],
						"HOSTContract": [
							1079
						],
						"HahnarchContract": [
							1193
						],
						"HarContract": [
							941
						],
						"HegelBetContract": [
							1187
						],
						"INDEPENDENCEContract": [
							1001
						],
						"IRCContract": [
							1223
						],
						"KLANContract": [
							1319
						],
						"KPOPContract": [
							1367
						],
						"KaContract": [
							893
						],
						"KremlinContract": [
							1133
						],
						"LEPROSYContract": [
							1409
						],
						"LITContract": [
							1343
						],
						"LOLContract": [
							1007
						],
						"LegalContract": [
							965
						],
						"LibertyContract": [
							911
						],
						"LilliesContract": [
							1127
						],
						"LoanContract": [
							1205
						],
						"MaltaContract": [
							1385
						],
						"MantissaContract": [
							929
						],
						"MetisContract": [
							1061
						],
						"MonatsContract": [
							959
						],
						"NeptuneContract": [
							935
						],
						"NoContract": [
							1229
						],
						"NoNukesContract": [
							1277
						],
						"OjeonContract": [
							1043
						],
						"PIContract": [
							1415
						],
						"PWAContract": [
							1337
						],
						"PhDContract": [
							1121
						],
						"PoppyContract": [
							1037
						],
						"QingDaoContract": [
							1157
						],
						"RESTRAININGORDERContract": [
							1439
						],
						"RZRContract": [
							1349
						],
						"RabContract": [
							1199
						],
						"ReadingContract": [
							977
						],
						"SECURITYContract": [
							1301
						],
						"SIMContract": [
							1109
						],
						"SMGContract": [
							1325
						],
						"STAYContract": [
							995
						],
						"ScissorsContract": [
							971
						],
						"SukukContract": [
							1265
						],
						"TRSIContract": [
							1307
						],
						"TSFiContract": [
							1163
						],
						"TeddyBear9Contract": [
							1241
						],
						"TeddyBearContract": [
							1031
						],
						"ThetaContract": [
							947
						],
						"TlingitContract": [
							1097
						],
						"TreasuryBillContract": [
							1025
						],
						"TseContract": [
							1145
						],
						"TwoCentClubContract": [
							1289
						],
						"TwoContract": [
							1139
						],
						"WITHOUTContract": [
							1445
						],
						"WMContract": [
							1217
						],
						"WenTiContract": [
							1283
						],
						"WheelContract": [
							905
						],
						"WritingContract": [
							1259
						],
						"YingContract": [
							1055
						],
						"YuContract": [
							1049
						],
						"ZuoContract": [
							1181
						],
						"atropa": [
							845
						],
						"dOWNContract": [
							989
						],
						"dai": [
							857
						],
						"dead": [
							839
						],
						"hhFaContract": [
							1271
						],
						"iCEContract": [
							1331
						],
						"libAtropaMathContract": [
							1427
						],
						"mariarahelContract": [
							1451
						],
						"trebizond": [
							851
						],
						"usdc": [
							863
						],
						"usdt": [
							869
						]
					},
					"id": 1452,
					"license": "Sharia",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 833,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:6"
						},
						{
							"constant": true,
							"id": 839,
							"mutability": "constant",
							"name": "dead",
							"nameLocation": "78:4:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "61:75:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 834,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "61:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
										"id": 837,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "93:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x000000000000000000000000000000000000dEaD"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 836,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "85:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 835,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "85:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 838,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "85:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 845,
							"mutability": "constant",
							"name": "atropa",
							"nameLocation": "155:6:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "138:77:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 840,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "138:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307837613230313839423239373334334346323664383534383736346230343839316633374633343134",
										"id": 843,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "172:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x7a20189B297343CF26d8548764b04891f37F3414"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 842,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "164:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 841,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "164:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 844,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "164:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 851,
							"mutability": "constant",
							"name": "trebizond",
							"nameLocation": "234:9:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "217:80:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 846,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "217:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307839303330333066376532643634383946333842306634463936463962333731656337393630463738",
										"id": 849,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "254:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x903030f7e2d6489F38B0f4F96F9b371ec7960F78"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 848,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "246:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 847,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "246:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 850,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "246:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 857,
							"mutability": "constant",
							"name": "dai",
							"nameLocation": "317:3:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "300:74:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 852,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "300:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307836423137353437344538393039344334344461393862393534456564654143343935323731643046",
										"id": 855,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "331:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x6B175474E89094C44Da98b954EedeAC495271d0F"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 854,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "323:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 853,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "323:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 856,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "323:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 863,
							"mutability": "constant",
							"name": "usdc",
							"nameLocation": "393:4:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "376:75:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 858,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "376:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307841306238363939316336323138623336633164313944346132653945623063453336303665423438",
										"id": 861,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "408:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 860,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "400:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 859,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "400:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 862,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "400:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 869,
							"mutability": "constant",
							"name": "usdt",
							"nameLocation": "470:4:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "453:75:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 864,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "453:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307864414331374639353844326565353233613232303632303639393435393743313344383331656337",
										"id": 867,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "485:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xdAC17F958D2ee523a2206206994597C13D831ec7"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 866,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "477:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 865,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "477:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 868,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "477:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 875,
							"mutability": "constant",
							"name": "AtropaContract",
							"nameLocation": "548:14:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "531:85:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 870,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "531:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307843633738413061634446383437413243313731344432413932356242343437376466356434386136",
										"id": 873,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "573:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xCc78A0acDF847A2C1714D2A925bB4477df5d48a6"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 872,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "565:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 871,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "565:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 874,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "565:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 881,
							"mutability": "constant",
							"name": "EasternLightningContract",
							"nameLocation": "635:24:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "618:95:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 876,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "618:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307843443631353944306131616145343135453063313530344539304135643734314132386166633938",
										"id": 879,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "670:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xCD6159D0a1aaE415E0c1504E90A5d741A28afc98"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 878,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "662:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 877,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "662:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 880,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "662:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 887,
							"mutability": "constant",
							"name": "FinalContract",
							"nameLocation": "732:13:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "715:84:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 882,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "715:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307835304537323837346443643743313938643337306163323763374233636365396639613064656664",
										"id": 885,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "756:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x50E72874dCd7C198d370ac27c7B3cce9f9a0defd"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 884,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "748:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 883,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "748:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 886,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "748:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 893,
							"mutability": "constant",
							"name": "KaContract",
							"nameLocation": "818:10:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "801:81:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 888,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "801:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307838336139313830353661423933313638333744633438613231363131394436373944353631643931",
										"id": 891,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "839:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x83a918056aB9316837Dc48a216119D679D561d91"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 890,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "831:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 889,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "831:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 892,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "831:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 899,
							"mutability": "constant",
							"name": "BuckinghamContract",
							"nameLocation": "901:18:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "884:89:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 894,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "884:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307865356433413665383835393066633241383033374439434362643831364330354231666635663131",
										"id": 897,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "930:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xe5d3A6e88590fc2A8037D9CCbd816C05B1ff5f11"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 896,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "922:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 895,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "922:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 898,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "922:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 905,
							"mutability": "constant",
							"name": "WheelContract",
							"nameLocation": "992:13:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "975:84:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 900,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "975:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307862394134344465323066323661303237653436374342366332463938373636463031393034313839",
										"id": 903,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1016:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xb9A44De20f26a027e467CB6c2F98766F01904189"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 902,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "1008:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 901,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1008:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 904,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "1008:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 911,
							"mutability": "constant",
							"name": "LibertyContract",
							"nameLocation": "1078:15:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "1061:86:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 906,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "1061:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307846453962393965434334336362343233343038623937356363356666343339653541426143623631",
										"id": 909,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1104:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xFE9b99eCC43cb423408b975cc5ff439e5ABaCb61"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 908,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "1096:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 907,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1096:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 910,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "1096:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 917,
							"mutability": "constant",
							"name": "CherokeeContract",
							"nameLocation": "1166:16:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "1149:87:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 912,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "1149:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307862344331323438383132644162463732636232653832313735623463306143666645344432623130",
										"id": 915,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1193:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xb4C1248812dAbF72cb2e82175b4c0aCffE4D2b10"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 914,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "1185:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 913,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1185:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 916,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "1185:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 923,
							"mutability": "constant",
							"name": "DreidelContract",
							"nameLocation": "1255:15:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "1238:86:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 918,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "1238:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307838413033623033326335343934323139423231326535613734413439653261613746396432303646",
										"id": 921,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1281:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x8A03b032c5494219B212e5a74A49e2aa7F9d206F"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 920,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "1273:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 919,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1273:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 922,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "1273:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 929,
							"mutability": "constant",
							"name": "MantissaContract",
							"nameLocation": "1343:16:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "1326:87:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 924,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "1326:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307830454234454537643546663238636246363835363541313734663745356531383663333642346233",
										"id": 927,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1370:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x0EB4EE7d5Ff28cbF68565A174f7E5e186c36B4b3"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 926,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "1362:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 925,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1362:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 928,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "1362:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 935,
							"mutability": "constant",
							"name": "NeptuneContract",
							"nameLocation": "1432:15:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "1415:86:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 930,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "1415:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307839413337393643663431423743624136393231666435306333663532303445443635303643336537",
										"id": 933,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1458:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x9A3796Cf41B7CbA6921fd50c3f5204ED6506C3e7"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 932,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "1450:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 931,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1450:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 934,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "1450:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 941,
							"mutability": "constant",
							"name": "HarContract",
							"nameLocation": "1520:11:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "1503:82:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 936,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "1503:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307835353746376533306141364439303943666538613232394134434231373861623138364543363232",
										"id": 939,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1542:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x557F7e30aA6D909Cfe8a229A4CB178ab186EC622"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 938,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "1534:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 937,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1534:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 940,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "1534:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 947,
							"mutability": "constant",
							"name": "ThetaContract",
							"nameLocation": "1619:13:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "1602:84:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 942,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "1602:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307843643139303632613664333031396230324136373644373265353144386465374133393864453235",
										"id": 945,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1643:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xCd19062a6d3019b02A676D72e51D8de7A398dE25"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 944,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "1635:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 943,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1635:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 946,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "1635:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 953,
							"mutability": "constant",
							"name": "CROWSContract",
							"nameLocation": "1717:13:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "1700:84:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 948,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "1700:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307832303365333636413138323135373062326638344666356165384233426465423438446334666131",
										"id": 951,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1741:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x203e366A1821570b2f84Ff5ae8B3BdeB48Dc4fa1"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 950,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "1733:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 949,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1733:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 952,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "1733:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 959,
							"mutability": "constant",
							"name": "MonatsContract",
							"nameLocation": "1803:14:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "1786:85:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 954,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "1786:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307866384142333339336231663543443631383446623638303041316643383032303433433430363365",
										"id": 957,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1828:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xf8AB3393b1f5CD6184Fb6800A1fC802043C4063e"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 956,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "1820:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 955,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1820:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 958,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "1820:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 965,
							"mutability": "constant",
							"name": "LegalContract",
							"nameLocation": "1890:13:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "1873:84:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 960,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "1873:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307830623133303764633544393061304236304265313844323633343834333334336542633039384146",
										"id": 963,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1914:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x0b1307dc5D90a0B60Be18D2634843343eBc098AF"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 962,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "1906:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 961,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1906:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 964,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "1906:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 971,
							"mutability": "constant",
							"name": "ScissorsContract",
							"nameLocation": "1976:16:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "1959:87:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 966,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "1959:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307831623846394531393336304431646339343239354439383462374361376541396238313044396565",
										"id": 969,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2003:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x1b8F9E19360D1dc94295D984b7Ca7eA9b810D9ee"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 968,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "1995:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 967,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1995:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 970,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "1995:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 977,
							"mutability": "constant",
							"name": "ReadingContract",
							"nameLocation": "2065:15:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "2048:86:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 972,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "2048:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307866363965396639343336373430323743656466303535363441384435413031303431643037633632",
										"id": 975,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2091:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xf69e9f943674027Cedf05564A8D5A01041d07c62"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 974,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "2083:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 973,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2083:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 976,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "2083:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 983,
							"mutability": "constant",
							"name": "DiContract",
							"nameLocation": "2191:10:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "2174:81:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 978,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "2174:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307833343742433430353033453043453233664530463535383746323332436432443037443445623839",
										"id": 981,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2212:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x347BC40503E0CE23fE0F5587F232Cd2D07D4Eb89"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 980,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "2204:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 979,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2204:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 982,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "2204:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 989,
							"mutability": "constant",
							"name": "dOWNContract",
							"nameLocation": "2293:12:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "2276:83:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 984,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "2276:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307832353536463766386438324562636444376238323162303938314333384439644139343339436444",
										"id": 987,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2316:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x2556F7f8d82EbcdD7b821b0981C38D9dA9439CdD"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 986,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "2308:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 985,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2308:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 988,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "2308:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 995,
							"mutability": "constant",
							"name": "STAYContract",
							"nameLocation": "2378:12:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "2361:83:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 990,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "2361:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307837363734353136616434333864643637413035376642633131313931363864394137643261394231",
										"id": 993,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2401:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x7674516ad438dd67A057fBc1119168d9A7d2a9B1"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 992,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "2393:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 991,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2393:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 994,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "2393:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1001,
							"mutability": "constant",
							"name": "INDEPENDENCEContract",
							"nameLocation": "2463:20:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "2446:91:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 996,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "2446:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307838423039303530396541653066454234413042393334646531623433343531363166413961363264",
										"id": 999,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2494:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x8B090509eAe0fEB4A0B934de1b4345161fA9a62d"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 998,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "2486:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 997,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2486:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1000,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "2486:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1007,
							"mutability": "constant",
							"name": "LOLContract",
							"nameLocation": "2556:11:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "2539:82:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1002,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "2539:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307841363346383036314136376563646266313437436431423630663931436639353436344538363844",
										"id": 1005,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2578:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xA63F8061A67ecdbf147Cd1B60f91Cf95464E868D"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1004,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "2570:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1003,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2570:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1006,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "2570:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1013,
							"mutability": "constant",
							"name": "Bullion5Contract",
							"nameLocation": "2654:16:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "2637:87:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1008,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "2637:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307837374265643637313831436546353932343732626362374639373733366335363033343045303036",
										"id": 1011,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2681:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x77Bed67181CeF592472bcb7F97736c560340E006"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1010,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "2673:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1009,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2673:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1012,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "2673:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1019,
							"mutability": "constant",
							"name": "Bullion8Contract",
							"nameLocation": "2743:16:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "2726:87:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1014,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "2726:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307832393539323231363735626446306535394430634333644538333461393938464135664662394634",
										"id": 1017,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2770:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x2959221675bdF0e59D0cC3dE834a998FA5fFb9F4"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1016,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "2762:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1015,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2762:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1018,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "2762:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1025,
							"mutability": "constant",
							"name": "TreasuryBillContract",
							"nameLocation": "2842:20:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "2825:91:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1020,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "2825:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307834363334313363353739443239633236443539613635333132363537444643653330443534354131",
										"id": 1023,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2873:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x463413c579D29c26D59a65312657DFCe30D545A1"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1022,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "2865:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1021,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2865:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1024,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "2865:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1031,
							"mutability": "constant",
							"name": "TeddyBearContract",
							"nameLocation": "2935:17:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "2918:88:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1026,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "2918:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307864366333316241303735344334333833413431633065394446303432433632623565393138663664",
										"id": 1029,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2963:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xd6c31bA0754C4383A41c0e9DF042C62b5e918f6d"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1028,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "2955:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1027,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2955:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1030,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "2955:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1037,
							"mutability": "constant",
							"name": "PoppyContract",
							"nameLocation": "3025:13:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "3008:84:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1032,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "3008:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307864453635303930303838446630623264383041356543364137423536454345333665653833636538",
										"id": 1035,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3049:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xdE65090088Df0b2d80A5eC6A7B56ECE36ee83ce8"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1034,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "3041:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1033,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3041:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1036,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "3041:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1043,
							"mutability": "constant",
							"name": "OjeonContract",
							"nameLocation": "3111:13:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "3094:84:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1038,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "3094:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307846613464394336453031326439343638353333383631313341436246313636646543353436354262",
										"id": 1041,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3135:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xFa4d9C6E012d946853386113ACbF166deC5465Bb"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1040,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "3127:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1039,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3127:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1042,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "3127:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1049,
							"mutability": "constant",
							"name": "YuContract",
							"nameLocation": "3197:10:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "3180:81:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1044,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "3180:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307835326134363832383830453939306562656435333039373634433742443239633461453232646542",
										"id": 1047,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3218:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x52a4682880E990ebed5309764C7BD29c4aE22deB"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1046,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "3210:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1045,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3210:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1048,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "3210:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1055,
							"mutability": "constant",
							"name": "YingContract",
							"nameLocation": "3296:12:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "3279:83:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1050,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "3279:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307832373131393745466534313037333638313537374364624246443645653144413235394241613363",
										"id": 1053,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3319:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x271197EFe41073681577CdbBFD6Ee1DA259BAa3c"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1052,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "3311:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1051,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3311:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1054,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "3311:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1061,
							"mutability": "constant",
							"name": "MetisContract",
							"nameLocation": "3395:13:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "3378:84:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1056,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "3378:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307833366434416333444637426638616133383433416434304338623365423637653364313862346531",
										"id": 1059,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3419:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x36d4Ac3DF7Bf8aa3843Ad40C8b3eB67e3d18b4e1"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1058,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "3411:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1057,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3411:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1060,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "3411:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1067,
							"mutability": "constant",
							"name": "GaiContract",
							"nameLocation": "3515:11:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "3498:82:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1062,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "3498:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307864363037374130323946623542454633336230323339314437663033343963333435463644446231",
										"id": 1065,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3537:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xd6077A029Fb5BEF33b02391D7f0349c345F6DDb1"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1064,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "3529:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1063,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3529:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1066,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "3529:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1073,
							"mutability": "constant",
							"name": "DiscoContract",
							"nameLocation": "3599:13:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "3582:84:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1068,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "3582:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307862363933364238653832363236343035663645363031443534613832393238383144383662343744",
										"id": 1071,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3623:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xb6936B8e82626405f6E601D54a8292881D86b47D"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1070,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "3615:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1069,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3615:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1072,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "3615:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1079,
							"mutability": "constant",
							"name": "HOSTContract",
							"nameLocation": "3685:12:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "3668:83:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1074,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "3668:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307831313632313034613762383736363738343135334464324436614330654345416563443238313137",
										"id": 1077,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3708:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x1162104a7b8766784153Dd2D6aC0eCEAecD28117"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1076,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "3700:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1075,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3700:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1078,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "3700:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1085,
							"mutability": "constant",
							"name": "DampfContract",
							"nameLocation": "3770:13:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "3753:84:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1080,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "3753:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307830384665356337323137333034343331344137343730353038396430313461343431364564373144",
										"id": 1083,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3794:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x08Fe5c72173044314A74705089d014a4416Ed71D"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1082,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "3786:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1081,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3786:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1084,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "3786:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1091,
							"mutability": "constant",
							"name": "DEIContract",
							"nameLocation": "3856:11:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "3839:82:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1086,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "3839:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307846373763393436433138413737423544644135653833396441393831384334443166303837333933",
										"id": 1089,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3878:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xF77c946C18A77B5DdA5e839dA9818C4D1f087393"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1088,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "3870:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1087,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3870:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1090,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "3870:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1097,
							"mutability": "constant",
							"name": "TlingitContract",
							"nameLocation": "3940:15:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "3923:86:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1092,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "3923:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307835344438384630633461373338323437446164463136303932334531623143356463344635313066",
										"id": 1095,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3966:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x54D88F0c4a738247DadF160923E1b1C5dc4F510f"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1094,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "3958:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1093,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3958:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1096,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "3958:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1103,
							"mutability": "constant",
							"name": "AbUrbeConditaContract",
							"nameLocation": "4028:21:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "4011:92:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1098,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "4011:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307837464230394545316132633045386236443163344531394330323438423343624330313133616636",
										"id": 1101,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4060:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x7FB09EE1a2c0E8b6D1c4E19C0248B3CbC0113af6"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1100,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "4052:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1099,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4052:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1102,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "4052:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1109,
							"mutability": "constant",
							"name": "SIMContract",
							"nameLocation": "4122:11:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "4105:82:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1104,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "4105:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307842623334314644354338353563323036663535333863633634396639306438344466313962363561",
										"id": 1107,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4144:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xBb341FD5C855c206f5538cc649f90d84Df19b65a"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1106,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "4136:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1105,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4136:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1108,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "4136:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1115,
							"mutability": "constant",
							"name": "BinContract",
							"nameLocation": "4206:11:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "4189:82:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1110,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "4189:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307866353230343034434634666135423633333632363333333737356230354635644639344531613943",
										"id": 1113,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4228:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xf520404CF4fa5B633626333775b05F5dF94E1a9C"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1112,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "4220:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1111,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4220:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1114,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "4220:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1121,
							"mutability": "constant",
							"name": "PhDContract",
							"nameLocation": "4290:11:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "4273:82:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1116,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "4273:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307836323336303733333737414337653061423639343935376441356437643432343165373245426336",
										"id": 1119,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4312:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x6236073377AC7e0aB694957dA5d7d4241e72EBc6"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1118,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "4304:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1117,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4304:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1120,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "4304:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1127,
							"mutability": "constant",
							"name": "LilliesContract",
							"nameLocation": "4374:15:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "4357:86:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1122,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "4357:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307845393439613231373830396431466162343031384532326436383130353030333939393531644145",
										"id": 1125,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4400:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xE949a217809d1Fab4018E22d6810500399951dAE"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1124,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "4392:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1123,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4392:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1126,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "4392:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1133,
							"mutability": "constant",
							"name": "KremlinContract",
							"nameLocation": "4462:15:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "4445:86:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1128,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "4445:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307837463531466442323032343644376136373330333666313143373433453939413441463031646530",
										"id": 1131,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4488:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x7F51FdB20246D7a673036f11C743E99A4AF01de0"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1130,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "4480:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1129,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4480:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1132,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "4480:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1139,
							"mutability": "constant",
							"name": "TwoContract",
							"nameLocation": "4550:11:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "4533:82:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1134,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "4533:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307844663641313636383941383933303935433732313534326535643343453535624263633233614336",
										"id": 1137,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4572:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xDf6A16689A893095C721542e5d3CE55bBcc23aC6"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1136,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "4564:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1135,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4564:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1138,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "4564:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1145,
							"mutability": "constant",
							"name": "TseContract",
							"nameLocation": "4649:11:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "4632:82:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1140,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "4632:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307833643637353131373333643937363830303436373131393236344333643443643946413233303431",
										"id": 1143,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4671:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x3d67511733d976800467119264C3d4Cd9FA23041"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1142,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "4663:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1141,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4663:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1144,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "4663:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1151,
							"mutability": "constant",
							"name": "FrockContract",
							"nameLocation": "4733:13:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "4716:84:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1146,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "4716:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307838423862323662423643356644343836373333396162326630616366336145353132394244324630",
										"id": 1149,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4757:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x8B8b26bB6C5fD4867339ab2f0acf3aE5129BD2F0"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1148,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "4749:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1147,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4749:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1150,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "4749:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1157,
							"mutability": "constant",
							"name": "QingDaoContract",
							"nameLocation": "4819:15:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "4802:86:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1152,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "4802:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307845363331393139363737333543353266356465373843453234373137353961393936334365313138",
										"id": 1155,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4845:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xE63191967735C52f5de78CE2471759a9963Ce118"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1154,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "4837:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1153,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4837:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1156,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "4837:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1163,
							"mutability": "constant",
							"name": "TSFiContract",
							"nameLocation": "4907:12:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "4890:83:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1158,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "4890:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307834323433353638466132626261643332376565333665303663313638323463416438423337383139",
										"id": 1161,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4930:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x4243568Fa2bbad327ee36e06c16824cAd8B37819"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1160,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "4922:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1159,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4922:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1162,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "4922:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1169,
							"mutability": "constant",
							"name": "GreenlandContract",
							"nameLocation": "4992:17:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "4975:88:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1164,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "4975:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307864453445663745613436346337373731383033623938333841654130376345343130383962303534",
										"id": 1167,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5020:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xdE4Ef7Ea464c7771803b9838AeA07cE41089b054"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1166,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "5012:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1165,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5012:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1168,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "5012:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1175,
							"mutability": "constant",
							"name": "BuddhaghosaContract",
							"nameLocation": "5082:19:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "5065:90:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1170,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "5065:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307838343043424432304137303737344245434163346539333246666636666231663534313739393746",
										"id": 1173,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5112:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x840CBD20A70774BECAc4e932Fff6fb1f5417997F"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1172,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "5104:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1171,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5104:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1174,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "5104:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1181,
							"mutability": "constant",
							"name": "ZuoContract",
							"nameLocation": "5174:11:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "5157:82:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1176,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "5157:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307835383364314331343237333038663766393642466433453064374133463936373444384246386563",
										"id": 1179,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5196:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x583d1C1427308f7f96BFd3E0d7A3F9674D8BF8ec"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1178,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "5188:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1177,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5188:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1180,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "5188:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1187,
							"mutability": "constant",
							"name": "HegelBetContract",
							"nameLocation": "5258:16:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "5241:87:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1182,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "5241:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307835314333366141303466664332313339463664333434333664304544433766356666633644364662",
										"id": 1185,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5285:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x51C36aA04ffC2139F6d34436d0EDC7f5ffc6D6Fb"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1184,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "5277:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1183,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5277:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1186,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "5277:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1193,
							"mutability": "constant",
							"name": "HahnarchContract",
							"nameLocation": "5347:16:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "5330:87:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1188,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "5330:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307834613435384430343930396134324637396433313830353736324232616263333861623934303764",
										"id": 1191,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5374:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x4a458D04909a42F79d31805762B2abc38ab9407d"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1190,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "5366:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1189,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5366:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1192,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "5366:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1199,
							"mutability": "constant",
							"name": "RabContract",
							"nameLocation": "5436:11:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "5419:82:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1194,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "5419:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307838394538634436333036416262414238653339656544304435333536366438644332453032633031",
										"id": 1197,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5458:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x89E8cD6306AbbAB8e39eeD0D53566d8dC2E02c01"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1196,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "5450:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1195,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5450:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1198,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "5450:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1205,
							"mutability": "constant",
							"name": "LoanContract",
							"nameLocation": "5520:12:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "5503:83:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1200,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "5503:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307865453637383235654632373538384641654533396366656662343635654230413234324137343063",
										"id": 1203,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5543:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xeE67825eF27588FAeE39cfefb465eB0A242A740c"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1202,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "5535:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1201,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5535:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1204,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "5535:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1211,
							"mutability": "constant",
							"name": "FreebiesContract",
							"nameLocation": "5605:16:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "5588:87:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1206,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "5588:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307834384636323863303739333533454343344442373546306430356465393239396530383366334332",
										"id": 1209,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5632:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x48F628c079353ECC4DB75F0d05de9299e083f3C2"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1208,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "5624:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1207,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5624:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1210,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "5624:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1217,
							"mutability": "constant",
							"name": "WMContract",
							"nameLocation": "5695:10:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "5678:81:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1212,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "5678:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307841314245653164614539416637376441433733614130343539654436336234443933664336643239",
										"id": 1215,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5716:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xA1BEe1daE9Af77dAC73aA0459eD63b4D93fC6d29"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1214,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "5708:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1213,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5708:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1216,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "5708:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1223,
							"mutability": "constant",
							"name": "IRCContract",
							"nameLocation": "5778:11:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "5761:82:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1218,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "5761:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307844363466323642636637386466393139443538376236373433666346663562313535383135626436",
										"id": 1221,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5800:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xD64f26Bcf78df919D587b6743fcFf5b155815bd6"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1220,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "5792:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1219,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5792:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1222,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "5792:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1229,
							"mutability": "constant",
							"name": "NoContract",
							"nameLocation": "5862:10:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "5845:81:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1224,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "5845:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307831393432426131454137633231613037304437304334654665363442323136393432383346323365",
										"id": 1227,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5883:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x1942Ba1EA7c21a070D70C4eFe64B21694283F23e"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1226,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "5875:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1225,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5875:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1228,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "5875:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1235,
							"mutability": "constant",
							"name": "CallContract",
							"nameLocation": "5945:12:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "5928:83:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1230,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "5928:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307844344644393642413833643345364646314130426161343463333244656639346536343144393763",
										"id": 1233,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5968:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xD4FD96BA83d3E6FF1A0Baa44c32Def94e641D97c"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1232,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "5960:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1231,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5960:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1234,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "5960:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1241,
							"mutability": "constant",
							"name": "TeddyBear9Contract",
							"nameLocation": "6046:18:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "6029:89:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1236,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "6029:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307831663733374637393934383131664539393446653732393537433337346535634435443534313841",
										"id": 1239,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6075:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x1f737F7994811fE994Fe72957C374e5cD5D5418A"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1238,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "6067:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1237,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6067:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1240,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "6067:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1247,
							"mutability": "constant",
							"name": "BondContract",
							"nameLocation": "6138:12:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "6121:83:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1242,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "6121:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307832356435333936316132373739314239443862326437344642336539333763384541456164633338",
										"id": 1245,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6161:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x25d53961a27791B9D8b2d74FB3e937c8EAEadc38"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1244,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "6153:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1243,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6153:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1246,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "6153:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1253,
							"mutability": "constant",
							"name": "BailContract",
							"nameLocation": "6223:12:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "6206:83:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1248,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "6206:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307838423136313135664637313662346335323730363132326362346539373466376137324535416631",
										"id": 1251,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6246:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x8B16115fF716b4c52706122cb4e974f7a72E5Af1"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1250,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "6238:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1249,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6238:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1252,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "6238:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1259,
							"mutability": "constant",
							"name": "WritingContract",
							"nameLocation": "6308:15:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "6291:86:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1254,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "6291:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307832364435393036633443646638433946303943426439343034396639396465616138373466423062",
										"id": 1257,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6334:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x26D5906c4Cdf8C9F09CBd94049f99deaa874fB0b"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1256,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "6326:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1255,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6326:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1258,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "6326:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1265,
							"mutability": "constant",
							"name": "SukukContract",
							"nameLocation": "6396:13:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "6379:84:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1260,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "6379:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307837326639366133394143393430386235343538453535393742424332323036303535326465644634",
										"id": 1263,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6420:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x72f96a39AC9408b5458E5597BBC22060552dedF4"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1262,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "6412:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1261,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6412:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1264,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "6412:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1271,
							"mutability": "constant",
							"name": "hhFaContract",
							"nameLocation": "6569:12:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "6552:83:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1266,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "6552:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307861323865386141346436323537313537646536346135343763393042333843336335343065463732",
										"id": 1269,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6592:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xa28e8aA4d6257157de64a547c90B38C3c540eF72"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1268,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "6584:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1267,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6584:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1270,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "6584:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1277,
							"mutability": "constant",
							"name": "NoNukesContract",
							"nameLocation": "6654:15:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "6637:86:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1272,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "6637:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307831373441306164393963363063323044394233443934633330393542433166623964644546643632",
										"id": 1275,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6680:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x174A0ad99c60c20D9B3D94c3095BC1fb9ddEFd62"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1274,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "6672:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1273,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6672:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1276,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "6672:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1283,
							"mutability": "constant",
							"name": "WenTiContract",
							"nameLocation": "6742:13:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "6725:84:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1278,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "6725:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307841353337643646346331633846384334316631303034636333344330306537446234303137394363",
										"id": 1281,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6766:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xA537d6F4c1c8F8C41f1004cc34C00e7Db40179Cc"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1280,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "6758:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1279,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6758:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1282,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "6758:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1289,
							"mutability": "constant",
							"name": "TwoCentClubContract",
							"nameLocation": "6828:19:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "6811:90:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1284,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "6811:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307836323933333733424630444145323035303634313937334434396237623266373161644339316131",
										"id": 1287,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6858:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x6293373BF0DAE2050641973D49b7b2f71adC91a1"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1286,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "6850:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1285,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6850:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1288,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "6850:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1295,
							"mutability": "constant",
							"name": "BFFContract",
							"nameLocation": "6920:11:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "6903:82:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1290,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "6903:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307845333541383432656231454463613443373130423663314231353635634537646631336635393936",
										"id": 1293,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6942:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xE35A842eb1EDca4C710B6c1B1565cE7df13f5996"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1292,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "6934:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1291,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6934:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1294,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "6934:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1301,
							"mutability": "constant",
							"name": "SECURITYContract",
							"nameLocation": "7004:16:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "6987:87:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1296,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "6987:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307832323334646135396332443545444231393735393443393564626241376139394263643931323330",
										"id": 1299,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7031:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x2234da59c2D5EDB197594C95dbbA7a99Bcd91230"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1298,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "7023:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1297,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7023:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1300,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "7023:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1307,
							"mutability": "constant",
							"name": "TRSIContract",
							"nameLocation": "7096:12:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "7079:83:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1302,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "7079:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307835314137616142634361363942336330463832623362396365353130344644653365664165634536",
										"id": 1305,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7119:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x51A7aaBcCa69B3c0F82b3b9ce5104FDe3efAecE6"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1304,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "7111:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1303,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7111:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1306,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "7111:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1313,
							"mutability": "constant",
							"name": "BELContract",
							"nameLocation": "7181:11:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "7164:82:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1308,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "7164:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307834433135313832383645316238443536363946653936354546313734423842344165326630313742",
										"id": 1311,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7203:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x4C1518286E1b8D5669Fe965EF174B8B4Ae2f017B"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1310,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "7195:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1309,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7195:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1312,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "7195:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1319,
							"mutability": "constant",
							"name": "KLANContract",
							"nameLocation": "7265:12:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "7248:83:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1314,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "7248:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307843313936323437414132363744623044463231366435333835624344323365356366323545413641",
										"id": 1317,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7288:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xC196247AA267Db0DF216d5385bCD23e5cf25EA6A"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1316,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "7280:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1315,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7280:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1318,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "7280:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1325,
							"mutability": "constant",
							"name": "SMGContract",
							"nameLocation": "7350:11:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "7333:82:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1320,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "7333:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307861386538343132643942343334313233393236396342413338616439343966453438373062653334",
										"id": 1323,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7372:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xa8e8412d9B4341239269cBA38ad949fE4870be34"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1322,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "7364:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1321,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7364:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1324,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "7364:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1331,
							"mutability": "constant",
							"name": "iCEContract",
							"nameLocation": "7434:11:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "7417:82:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1326,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "7417:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307832664130373964326441413239456338393235343834463945393032316539313931664534614534",
										"id": 1329,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7456:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x2fA079d2dAA29Ec8925484F9E9021e9191fE4aE4"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1328,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "7448:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1327,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7448:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1330,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "7448:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1337,
							"mutability": "constant",
							"name": "PWAContract",
							"nameLocation": "7518:11:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "7501:82:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1332,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "7501:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307835643463623238654136313132356131664433633932373136324336463139363944443236373838",
										"id": 1335,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7540:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x5d4cb28eA61125a1fD3c927162C6F1969DD26788"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1334,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "7532:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1333,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7532:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1336,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "7532:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1343,
							"mutability": "constant",
							"name": "LITContract",
							"nameLocation": "7602:11:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "7585:82:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1338,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "7585:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307866354533436338643232423130643936376245343946453130336534393646343439433836303445",
										"id": 1341,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7624:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xf5E3Cc8d22B10d967bE49FE103e496F449C8604E"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1340,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "7616:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1339,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7616:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1342,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "7616:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1349,
							"mutability": "constant",
							"name": "RZRContract",
							"nameLocation": "7686:11:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "7669:82:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1344,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "7669:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307835306534306538353535416142366239633643464636393145313430373062364633383134324362",
										"id": 1347,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7708:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x50e40e8555AaB6b9c6CFF691E14070b6F38142Cb"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1346,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "7700:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1345,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7700:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1348,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "7700:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1355,
							"mutability": "constant",
							"name": "FLTContract",
							"nameLocation": "7770:11:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "7753:82:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1350,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "7753:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307838364630393835436436416233313936656138446365426138374239326132653232313234363333",
										"id": 1353,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7792:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x86F0985Cd6Ab3196ea8DceBa87B92a2e22124633"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1352,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "7784:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1351,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7784:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1354,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "7784:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1361,
							"mutability": "constant",
							"name": "GokuldhamContract",
							"nameLocation": "7854:17:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "7837:88:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1356,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "7837:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307839323034303146446365343946633730413244346344373044423064443930323132613937663938",
										"id": 1359,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7882:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x920401FDce49Fc70A2D4cD70DB0dD90212a97f98"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1358,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "7874:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1357,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7874:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1360,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "7874:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1367,
							"mutability": "constant",
							"name": "KPOPContract",
							"nameLocation": "7944:12:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "7927:83:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1362,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "7927:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307839383242353261353439313642383939633630303331373732636338356230343136313335313045",
										"id": 1365,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7967:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x982B52a54916B899c60031772cc85b041613510E"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1364,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "7959:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1363,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7959:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1366,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "7959:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1373,
							"mutability": "constant",
							"name": "CiAContract",
							"nameLocation": "8029:11:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "8012:82:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1368,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "8012:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307832653538393862326531303761336341663466303539376143464535443265366437334632313936",
										"id": 1371,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8051:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x2e5898b2e107a3cAf4f0597aCFE5D2e6d73F2196"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1370,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "8043:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1369,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8043:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1372,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "8043:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1379,
							"mutability": "constant",
							"name": "ACiDContract",
							"nameLocation": "8113:12:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "8096:83:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1374,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "8096:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307866386236653839623835316530336337323461616431463531373032333041363034393062383139",
										"id": 1377,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8136:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xf8b6e89b851e03c724aad1F5170230A60490b819"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1376,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "8128:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1375,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8128:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1378,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "8128:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1385,
							"mutability": "constant",
							"name": "MaltaContract",
							"nameLocation": "8198:13:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "8181:84:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1380,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "8181:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307865653632454539413335344535356446374333393230394234333034313631333639333333664637",
										"id": 1383,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8222:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xee62EE9A354E55dF7C39209B4304161369333fF7"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1382,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "8214:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1381,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8214:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1384,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "8214:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1391,
							"mutability": "constant",
							"name": "ACABContract",
							"nameLocation": "8284:12:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "8267:83:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1386,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "8267:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307832343144413236313362304130314332663630616342363336623231413845303832453266324630",
										"id": 1389,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8307:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x241DA2613b0A01C2f60acB636b21A8E082E2f2F0"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1388,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "8299:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1387,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8299:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1390,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "8299:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1397,
							"mutability": "constant",
							"name": "BillBurrContract",
							"nameLocation": "8373:16:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "8356:87:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1392,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "8356:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307846376562623962633830666236333935333733633642624446363930666346666232313761363931",
										"id": 1395,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8400:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xF7ebb9bc80fb6395373c6BbDF690fcFfb217a691"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1394,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "8392:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1393,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8392:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1396,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "8392:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1403,
							"mutability": "constant",
							"name": "BonusContract",
							"nameLocation": "8466:13:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "8449:84:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1398,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "8449:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307842384661434535384342303543353542424241396335363441353530636332343032413430623562",
										"id": 1401,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8490:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xB8FaCE58CB05C55BBBA9c564A550cc2402A40b5b"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1400,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "8482:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1399,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8482:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1402,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "8482:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1409,
							"mutability": "constant",
							"name": "LEPROSYContract",
							"nameLocation": "8557:15:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "8540:86:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1404,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "8540:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307837373539413644323833313932656632424130383239323364323842656336654266416639443638",
										"id": 1407,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8583:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x7759A6D283192ef2BA082923d28Bec6eBfAf9D68"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1406,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "8575:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1405,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8575:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1408,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "8575:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1415,
							"mutability": "constant",
							"name": "PIContract",
							"nameLocation": "8975:10:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "8958:81:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1410,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "8958:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307841323236324437373238433638393532363639336145383933443066443861333532433730373343",
										"id": 1413,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8996:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xA2262D7728C689526693aE893D0fD8a352C7073C"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1412,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "8988:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1411,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8988:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1414,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "8988:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1421,
							"mutability": "constant",
							"name": "G5Contract",
							"nameLocation": "9058:10:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "9041:81:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1416,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "9041:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307832666336333645376644463966334538643631303333313033303532303739373831613665374432",
										"id": 1419,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9079:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x2fc636E7fDF9f3E8d61033103052079781a6e7D2"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1418,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "9071:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1417,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9071:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1420,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "9071:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1427,
							"mutability": "constant",
							"name": "libAtropaMathContract",
							"nameLocation": "9145:21:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "9128:92:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1422,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "9128:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307842363830463063633831303331373933334632333466363745423641394539323334303766303544",
										"id": 1425,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9177:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xB680F0cc810317933F234f67EB6A9E923407f05D"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1424,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "9169:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1423,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9169:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1426,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "9169:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1433,
							"mutability": "constant",
							"name": "AFFECTIONContract",
							"nameLocation": "9239:17:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "9222:88:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1428,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "9222:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307832344630313534433164436535343841644631356461323039384664643842384133423831353144",
										"id": 1431,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9267:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x24F0154C1dCe548AdF15da2098Fdd8B8A3B8151D"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1430,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "9259:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1429,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9259:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1432,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "9259:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1439,
							"mutability": "constant",
							"name": "RESTRAININGORDERContract",
							"nameLocation": "9329:24:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "9312:95:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1434,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "9312:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307845663231323566356431663741336436383033384632376536383132353864313361373345373138",
										"id": 1437,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9364:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xEf2125f5d1f7A3d68038F27e681258d13a73E718"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1436,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "9356:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1435,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9356:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1438,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "9356:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1445,
							"mutability": "constant",
							"name": "WITHOUTContract",
							"nameLocation": "9426:15:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "9409:86:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1440,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "9409:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307831373332313645643637654246334536373637443836653862334666333265306436343433376246",
										"id": 1443,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9452:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x173216Ed67eBF3E6767D86e8b3Ff32e0d64437bF"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1442,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "9444:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1441,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9444:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1444,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "9444:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1451,
							"mutability": "constant",
							"name": "mariarahelContract",
							"nameLocation": "9518:18:6",
							"nodeType": "VariableDeclaration",
							"scope": 1452,
							"src": "9501:89:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1446,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "9501:7:6",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"arguments": [
									{
										"hexValue": "307844333263333966454534393339316337393532643162333062313539323162304433623432453639",
										"id": 1449,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9547:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xD32c39fEE49391c7952d1b30b15921b0D3b42E69"
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1448,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "9539:7:6",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_address_$",
										"typeString": "type(address)"
									},
									"typeName": {
										"id": 1447,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9539:7:6",
										"typeDescriptions": {}
									}
								},
								"id": 1450,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "9539:51:6",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"visibility": "internal"
						}
					],
					"src": "35:9556:6"
				},
				"id": 6
			},
			"solidity/dysnomia/00b_vmreq.sol": {
				"ast": {
					"absolutePath": "solidity/dysnomia/00b_vmreq.sol",
					"exportedSymbols": {
						"ACABContract": [
							1391
						],
						"ACiDContract": [
							1379
						],
						"AFFECTIONContract": [
							1433
						],
						"AbUrbeConditaContract": [
							1103
						],
						"AtropaContract": [
							875
						],
						"BELContract": [
							1313
						],
						"BFFContract": [
							1295
						],
						"BailContract": [
							1253
						],
						"BillBurrContract": [
							1397
						],
						"BinContract": [
							1115
						],
						"BondContract": [
							1247
						],
						"BonusContract": [
							1403
						],
						"BuckinghamContract": [
							899
						],
						"BuddhaghosaContract": [
							1175
						],
						"Bullion5Contract": [
							1013
						],
						"Bullion8Contract": [
							1019
						],
						"CROWSContract": [
							953
						],
						"CallContract": [
							1235
						],
						"CherokeeContract": [
							917
						],
						"CiAContract": [
							1373
						],
						"Context": [
							831
						],
						"DEIContract": [
							1091
						],
						"DampfContract": [
							1085
						],
						"DiContract": [
							983
						],
						"DiscoContract": [
							1073
						],
						"DreidelContract": [
							923
						],
						"ERC20": [
							651
						],
						"ERC20Burnable": [
							775
						],
						"EasternLightningContract": [
							881
						],
						"FLTContract": [
							1355
						],
						"Fa": [
							2193
						],
						"Faung": [
							2225
						],
						"FinalContract": [
							887
						],
						"FreebiesContract": [
							1211
						],
						"FrockContract": [
							1151
						],
						"G5Contract": [
							1421
						],
						"GaiContract": [
							1067
						],
						"GokuldhamContract": [
							1361
						],
						"GreenlandContract": [
							1169
						],
						"HOSTContract": [
							1079
						],
						"HahnarchContract": [
							1193
						],
						"HarContract": [
							941
						],
						"HegelBetContract": [
							1187
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							801
						],
						"INDEPENDENCEContract": [
							1001
						],
						"IRCContract": [
							1223
						],
						"KLANContract": [
							1319
						],
						"KPOPContract": [
							1367
						],
						"KaContract": [
							893
						],
						"KremlinContract": [
							1133
						],
						"LEPROSYContract": [
							1409
						],
						"LITContract": [
							1343
						],
						"LOLContract": [
							1007
						],
						"LegalContract": [
							965
						],
						"LibertyContract": [
							911
						],
						"LilliesContract": [
							1127
						],
						"LoanContract": [
							1205
						],
						"MaltaContract": [
							1385
						],
						"MantissaContract": [
							929
						],
						"MetisContract": [
							1061
						],
						"MonatsContract": [
							959
						],
						"NeptuneContract": [
							935
						],
						"NoContract": [
							1229
						],
						"NoNukesContract": [
							1277
						],
						"OjeonContract": [
							1043
						],
						"PIContract": [
							1415
						],
						"PWAContract": [
							1337
						],
						"PhDContract": [
							1121
						],
						"PoppyContract": [
							1037
						],
						"QingDaoContract": [
							1157
						],
						"RESTRAININGORDERContract": [
							1439
						],
						"RZRContract": [
							1349
						],
						"RabContract": [
							1199
						],
						"ReadingContract": [
							977
						],
						"SECURITYContract": [
							1301
						],
						"SIMContract": [
							1109
						],
						"SMGContract": [
							1325
						],
						"STAYContract": [
							995
						],
						"ScissorsContract": [
							971
						],
						"SukukContract": [
							1265
						],
						"TRSIContract": [
							1307
						],
						"TSFiContract": [
							1163
						],
						"TeddyBear9Contract": [
							1241
						],
						"TeddyBearContract": [
							1031
						],
						"ThetaContract": [
							947
						],
						"TlingitContract": [
							1097
						],
						"TreasuryBillContract": [
							1025
						],
						"TseContract": [
							1145
						],
						"TwoCentClubContract": [
							1289
						],
						"TwoContract": [
							1139
						],
						"VMREQ": [
							2154
						],
						"WITHOUTContract": [
							1445
						],
						"WMContract": [
							1217
						],
						"WenTiContract": [
							1283
						],
						"WheelContract": [
							905
						],
						"WritingContract": [
							1259
						],
						"YingContract": [
							1055
						],
						"YuContract": [
							1049
						],
						"ZuoContract": [
							1181
						],
						"atropa": [
							845
						],
						"dOWNContract": [
							989
						],
						"dai": [
							857
						],
						"dead": [
							839
						],
						"hhFaContract": [
							1271
						],
						"iCEContract": [
							1331
						],
						"libAtropaMathContract": [
							1427
						],
						"mariarahelContract": [
							1451
						],
						"trebizond": [
							851
						],
						"usdc": [
							863
						],
						"usdt": [
							869
						]
					},
					"id": 2155,
					"license": "Sharia",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1453,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1454,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2155,
							"sourceUnit": 652,
							"src": "60:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 1455,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2155,
							"sourceUnit": 776,
							"src": "116:74:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "solidity/addresses.sol",
							"file": "../addresses.sol",
							"id": 1456,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2155,
							"sourceUnit": 1452,
							"src": "191:26:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "solidity/old/faung.sol",
							"file": "../old/faung.sol",
							"id": 1457,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2155,
							"sourceUnit": 2226,
							"src": "218:26:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1458,
										"name": "ERC20",
										"nameLocations": [
											"264:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "264:5:7"
									},
									"id": 1459,
									"nodeType": "InheritanceSpecifier",
									"src": "264:5:7"
								},
								{
									"baseName": {
										"id": 1460,
										"name": "ERC20Burnable",
										"nameLocations": [
											"271:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 775,
										"src": "271:13:7"
									},
									"id": 1461,
									"nodeType": "InheritanceSpecifier",
									"src": "271:13:7"
								}
							],
							"canonicalName": "VMREQ",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2154,
							"linearizedBaseContracts": [
								2154,
								775,
								651,
								41,
								801,
								729,
								831
							],
							"name": "VMREQ",
							"nameLocation": "255:5:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "d3dc2a0f",
									"id": 1464,
									"mutability": "constant",
									"name": "MotzkinPrime",
									"nameLocation": "314:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 2154,
									"src": "291:53:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 1462,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "291:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"value": {
										"hexValue": "393533343637393534313134333633",
										"id": 1463,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "329:15:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_953467954114363_by_1",
											"typeString": "int_const 953467954114363"
										},
										"value": "953467954114363"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1467,
									"mutability": "mutable",
									"name": "Mu",
									"nameLocation": "365:2:7",
									"nodeType": "VariableDeclaration",
									"scope": 2154,
									"src": "350:17:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Faung_$2225_storage",
										"typeString": "struct Faung"
									},
									"typeName": {
										"id": 1466,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1465,
											"name": "Faung",
											"nameLocations": [
												"350:5:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2225,
											"src": "350:5:7"
										},
										"referencedDeclaration": 2225,
										"src": "350:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Faung_$2225_storage_ptr",
											"typeString": "struct Faung"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1828,
										"nodeType": "Block",
										"src": "427:1780:7",
										"statements": [
											{
												"expression": {
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1474,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "437:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "440:3:7",
															"memberName": "Rod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2199,
															"src": "437:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1478,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "444:4:7",
														"memberName": "Base",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2158,
														"src": "437:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "363035383431303636343331343334",
														"id": 1479,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "451:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_605841066431434_by_1",
															"typeString": "int_const 605841066431434"
														},
														"value": "605841066431434"
													},
													"src": "437:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1481,
												"nodeType": "ExpressionStatement",
												"src": "437:29:7"
											},
											{
												"expression": {
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1482,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "476:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1485,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "479:3:7",
															"memberName": "Rod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2199,
															"src": "476:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1486,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "483:6:7",
														"memberName": "Secret",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2160,
														"src": "476:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "383234393933373233323233333339",
														"id": 1487,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "492:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_824993723223339_by_1",
															"typeString": "int_const 824993723223339"
														},
														"value": "824993723223339"
													},
													"src": "476:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1489,
												"nodeType": "ExpressionStatement",
												"src": "476:31:7"
											},
											{
												"expression": {
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1490,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "517:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "520:3:7",
															"memberName": "Rod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2199,
															"src": "517:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1494,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "524:6:7",
														"memberName": "Signal",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2162,
														"src": "517:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "353433383731393630363433383432",
														"id": 1495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "533:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_543871960643842_by_1",
															"typeString": "int_const 543871960643842"
														},
														"value": "543871960643842"
													},
													"src": "517:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1497,
												"nodeType": "ExpressionStatement",
												"src": "517:31:7"
											},
											{
												"expression": {
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1498,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "558:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1501,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "561:3:7",
															"memberName": "Rod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2199,
															"src": "558:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1502,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "565:7:7",
														"memberName": "Channel",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2164,
														"src": "558:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "353537333333353936373630363336",
														"id": 1503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "575:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_557333596760636_by_1",
															"typeString": "int_const 557333596760636"
														},
														"value": "557333596760636"
													},
													"src": "558:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1505,
												"nodeType": "ExpressionStatement",
												"src": "558:32:7"
											},
											{
												"expression": {
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1506,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "600:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1509,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "603:3:7",
															"memberName": "Rod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2199,
															"src": "600:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1510,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "607:4:7",
														"memberName": "Pole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2166,
														"src": "600:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "614:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "600:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1513,
												"nodeType": "ExpressionStatement",
												"src": "600:15:7"
											},
											{
												"expression": {
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1514,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "625:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1517,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "628:3:7",
															"memberName": "Rod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2199,
															"src": "625:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1518,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "632:8:7",
														"memberName": "Identity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2168,
														"src": "625:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "333030303432323836393236323132",
														"id": 1519,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "643:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_300042286926212_by_1",
															"typeString": "int_const 300042286926212"
														},
														"value": "300042286926212"
													},
													"src": "625:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1521,
												"nodeType": "ExpressionStatement",
												"src": "625:33:7"
											},
											{
												"expression": {
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1522,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "668:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1525,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "671:3:7",
															"memberName": "Rod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2199,
															"src": "668:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1526,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "675:10:7",
														"memberName": "Foundation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2170,
														"src": "668:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "383034363931343430353336363835",
														"id": 1527,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "688:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_804691440536685_by_1",
															"typeString": "int_const 804691440536685"
														},
														"value": "804691440536685"
													},
													"src": "668:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1529,
												"nodeType": "ExpressionStatement",
												"src": "668:35:7"
											},
											{
												"expression": {
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1530,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "713:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1533,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "716:3:7",
															"memberName": "Rod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2199,
															"src": "713:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1534,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "720:7:7",
														"memberName": "Element",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2172,
														"src": "713:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32323233303936333538393530373337",
														"id": 1535,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "730:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2223096358950737_by_1",
															"typeString": "int_const 2223096358950737"
														},
														"value": "2223096358950737"
													},
													"src": "713:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1537,
												"nodeType": "ExpressionStatement",
												"src": "713:33:7"
											},
											{
												"expression": {
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1538,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "756:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1541,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "759:3:7",
															"memberName": "Rod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2199,
															"src": "756:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1542,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "763:6:7",
														"memberName": "Dynamo",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2174,
														"src": "756:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3734333231343534313235323638",
														"id": 1543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "772:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_74321454125268_by_1",
															"typeString": "int_const 74321454125268"
														},
														"value": "74321454125268"
													},
													"src": "756:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1545,
												"nodeType": "ExpressionStatement",
												"src": "756:30:7"
											},
											{
												"expression": {
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1546,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "796:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1549,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "799:3:7",
															"memberName": "Rod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2199,
															"src": "796:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1550,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "803:8:7",
														"memberName": "Manifold",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2176,
														"src": "796:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "363938373536333333313639393434",
														"id": 1551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "814:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_698756333169944_by_1",
															"typeString": "int_const 698756333169944"
														},
														"value": "698756333169944"
													},
													"src": "796:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1553,
												"nodeType": "ExpressionStatement",
												"src": "796:33:7"
											},
											{
												"expression": {
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1554,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "839:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1557,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "842:3:7",
															"memberName": "Rod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2199,
															"src": "839:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1558,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "846:4:7",
														"memberName": "Ring",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2178,
														"src": "839:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31373535343535383133393234333739",
														"id": 1559,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "853:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1755455813924379_by_1",
															"typeString": "int_const 1755455813924379"
														},
														"value": "1755455813924379"
													},
													"src": "839:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1561,
												"nodeType": "ExpressionStatement",
												"src": "839:30:7"
											},
											{
												"expression": {
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1562,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "879:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1565,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "882:3:7",
															"memberName": "Rod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2199,
															"src": "879:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1566,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "886:4:7",
														"memberName": "Barn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2180,
														"src": "879:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "383434323230363132393437333535",
														"id": 1567,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "893:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_844220612947355_by_1",
															"typeString": "int_const 844220612947355"
														},
														"value": "844220612947355"
													},
													"src": "879:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1569,
												"nodeType": "ExpressionStatement",
												"src": "879:29:7"
											},
											{
												"expression": {
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1570,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "918:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "921:3:7",
															"memberName": "Rod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2199,
															"src": "918:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1574,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "925:10:7",
														"memberName": "Coordinate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2182,
														"src": "918:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "393236373338333836363538373736",
														"id": 1575,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "938:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_926738386658776_by_1",
															"typeString": "int_const 926738386658776"
														},
														"value": "926738386658776"
													},
													"src": "918:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1577,
												"nodeType": "ExpressionStatement",
												"src": "918:35:7"
											},
											{
												"expression": {
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1578,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "963:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1581,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "966:3:7",
															"memberName": "Rod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2199,
															"src": "963:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1582,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "970:3:7",
														"memberName": "Tau",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2184,
														"src": "963:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1583,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "976:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "963:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1585,
												"nodeType": "ExpressionStatement",
												"src": "963:14:7"
											},
											{
												"expression": {
													"id": 1592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1586,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "987:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1589,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "990:3:7",
															"memberName": "Rod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2199,
															"src": "987:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1590,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "994:3:7",
														"memberName": "Eta",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2186,
														"src": "987:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3338383133303339303339393631",
														"id": 1591,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1000:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_38813039039961_by_1",
															"typeString": "int_const 38813039039961"
														},
														"value": "38813039039961"
													},
													"src": "987:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1593,
												"nodeType": "ExpressionStatement",
												"src": "987:27:7"
											},
											{
												"expression": {
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1594,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "1024:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1597,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1027:3:7",
															"memberName": "Rod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2199,
															"src": "1024:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1598,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1031:5:7",
														"memberName": "Kappa",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2188,
														"src": "1024:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "333435393234333936383931383533",
														"id": 1599,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1039:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_345924396891853_by_1",
															"typeString": "int_const 345924396891853"
														},
														"value": "345924396891853"
													},
													"src": "1024:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1601,
												"nodeType": "ExpressionStatement",
												"src": "1024:30:7"
											},
											{
												"expression": {
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1602,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "1064:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1605,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1067:3:7",
															"memberName": "Rod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2199,
															"src": "1064:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1606,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1071:5:7",
														"memberName": "Alpha",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2190,
														"src": "1064:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "333136343038353933363031343736",
														"id": 1607,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1079:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_316408593601476_by_1",
															"typeString": "int_const 316408593601476"
														},
														"value": "316408593601476"
													},
													"src": "1064:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1609,
												"nodeType": "ExpressionStatement",
												"src": "1064:30:7"
											},
											{
												"expression": {
													"id": 1616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1610,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "1104:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1613,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1107:3:7",
															"memberName": "Rod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2199,
															"src": "1104:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1614,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1111:2:7",
														"memberName": "Nu",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2192,
														"src": "1104:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1615,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1116:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1104:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1617,
												"nodeType": "ExpressionStatement",
												"src": "1104:13:7"
											},
											{
												"expression": {
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1618,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "1128:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1621,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1131:4:7",
															"memberName": "Cone",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2202,
															"src": "1128:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1622,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1136:4:7",
														"memberName": "Base",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2158,
														"src": "1128:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "363035383431303636343331343334",
														"id": 1623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1143:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_605841066431434_by_1",
															"typeString": "int_const 605841066431434"
														},
														"value": "605841066431434"
													},
													"src": "1128:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1625,
												"nodeType": "ExpressionStatement",
												"src": "1128:30:7"
											},
											{
												"expression": {
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1626,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "1168:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1629,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1171:4:7",
															"memberName": "Cone",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2202,
															"src": "1168:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1630,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1176:6:7",
														"memberName": "Secret",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2160,
														"src": "1168:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "373036313930303434393635363933",
														"id": 1631,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1185:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_706190044965693_by_1",
															"typeString": "int_const 706190044965693"
														},
														"value": "706190044965693"
													},
													"src": "1168:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1633,
												"nodeType": "ExpressionStatement",
												"src": "1168:32:7"
											},
											{
												"expression": {
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1634,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "1210:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1637,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1213:4:7",
															"memberName": "Cone",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2202,
															"src": "1210:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1638,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1218:6:7",
														"memberName": "Signal",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2162,
														"src": "1210:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313837373538313935313230323634",
														"id": 1639,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1227:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_187758195120264_by_1",
															"typeString": "int_const 187758195120264"
														},
														"value": "187758195120264"
													},
													"src": "1210:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1641,
												"nodeType": "ExpressionStatement",
												"src": "1210:32:7"
											},
											{
												"expression": {
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1642,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "1252:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1645,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1255:4:7",
															"memberName": "Cone",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2202,
															"src": "1252:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1646,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1260:7:7",
														"memberName": "Channel",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2164,
														"src": "1252:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "353136323333333634303030383439",
														"id": 1647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1270:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_516233364000849_by_1",
															"typeString": "int_const 516233364000849"
														},
														"value": "516233364000849"
													},
													"src": "1252:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1649,
												"nodeType": "ExpressionStatement",
												"src": "1252:33:7"
											},
											{
												"expression": {
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1650,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "1295:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1653,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1298:4:7",
															"memberName": "Cone",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2202,
															"src": "1295:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1654,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1303:4:7",
														"memberName": "Pole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2166,
														"src": "1295:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1310:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1295:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1657,
												"nodeType": "ExpressionStatement",
												"src": "1295:16:7"
											},
											{
												"expression": {
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1658,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "1321:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1661,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1324:4:7",
															"memberName": "Cone",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2202,
															"src": "1321:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1662,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1329:8:7",
														"memberName": "Identity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2168,
														"src": "1321:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "333030303432323836393236323132",
														"id": 1663,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1340:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_300042286926212_by_1",
															"typeString": "int_const 300042286926212"
														},
														"value": "300042286926212"
													},
													"src": "1321:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1665,
												"nodeType": "ExpressionStatement",
												"src": "1321:34:7"
											},
											{
												"expression": {
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1666,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "1365:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1669,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1368:4:7",
															"memberName": "Cone",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2202,
															"src": "1365:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1670,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1373:10:7",
														"memberName": "Foundation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2170,
														"src": "1365:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "383034363931343430353336363835",
														"id": 1671,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1386:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_804691440536685_by_1",
															"typeString": "int_const 804691440536685"
														},
														"value": "804691440536685"
													},
													"src": "1365:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1673,
												"nodeType": "ExpressionStatement",
												"src": "1365:36:7"
											},
											{
												"expression": {
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1674,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "1411:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1677,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1414:4:7",
															"memberName": "Cone",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2202,
															"src": "1411:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1678,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1419:7:7",
														"memberName": "Element",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2172,
														"src": "1411:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32323233303936333538393530373337",
														"id": 1679,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1429:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2223096358950737_by_1",
															"typeString": "int_const 2223096358950737"
														},
														"value": "2223096358950737"
													},
													"src": "1411:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1681,
												"nodeType": "ExpressionStatement",
												"src": "1411:34:7"
											},
											{
												"expression": {
													"id": 1688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1682,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "1455:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1685,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1458:4:7",
															"memberName": "Cone",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2202,
															"src": "1455:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1686,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1463:6:7",
														"memberName": "Dynamo",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2174,
														"src": "1455:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31353731383237333933323636323831",
														"id": 1687,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1472:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1571827393266281_by_1",
															"typeString": "int_const 1571827393266281"
														},
														"value": "1571827393266281"
													},
													"src": "1455:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1689,
												"nodeType": "ExpressionStatement",
												"src": "1455:33:7"
											},
											{
												"expression": {
													"id": 1696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1690,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "1498:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1693,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1501:4:7",
															"memberName": "Cone",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2202,
															"src": "1498:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1694,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1506:8:7",
														"memberName": "Manifold",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2176,
														"src": "1498:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "363938373536333333313639393434",
														"id": 1695,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1517:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_698756333169944_by_1",
															"typeString": "int_const 698756333169944"
														},
														"value": "698756333169944"
													},
													"src": "1498:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1697,
												"nodeType": "ExpressionStatement",
												"src": "1498:34:7"
											},
											{
												"expression": {
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1698,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "1542:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1701,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1545:4:7",
															"memberName": "Cone",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2202,
															"src": "1542:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1702,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1550:4:7",
														"memberName": "Ring",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2178,
														"src": "1542:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31373535343535383133393234333739",
														"id": 1703,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1557:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1755455813924379_by_1",
															"typeString": "int_const 1755455813924379"
														},
														"value": "1755455813924379"
													},
													"src": "1542:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1705,
												"nodeType": "ExpressionStatement",
												"src": "1542:31:7"
											},
											{
												"expression": {
													"id": 1712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1706,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "1583:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1709,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1586:4:7",
															"memberName": "Cone",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2202,
															"src": "1583:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1710,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1591:4:7",
														"memberName": "Barn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2180,
														"src": "1583:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "383434323230363132393437333535",
														"id": 1711,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1598:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_844220612947355_by_1",
															"typeString": "int_const 844220612947355"
														},
														"value": "844220612947355"
													},
													"src": "1583:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1713,
												"nodeType": "ExpressionStatement",
												"src": "1583:30:7"
											},
											{
												"expression": {
													"id": 1720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1714,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "1623:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1717,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1626:4:7",
															"memberName": "Cone",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2202,
															"src": "1623:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1718,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1631:10:7",
														"memberName": "Coordinate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2182,
														"src": "1623:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "393236373338333836363538373736",
														"id": 1719,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1644:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_926738386658776_by_1",
															"typeString": "int_const 926738386658776"
														},
														"value": "926738386658776"
													},
													"src": "1623:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1721,
												"nodeType": "ExpressionStatement",
												"src": "1623:36:7"
											},
											{
												"expression": {
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1722,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "1669:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1725,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1672:4:7",
															"memberName": "Cone",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2202,
															"src": "1669:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1726,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1677:3:7",
														"memberName": "Tau",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2184,
														"src": "1669:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313730383236363739343531313430",
														"id": 1727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1683:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_170826679451140_by_1",
															"typeString": "int_const 170826679451140"
														},
														"value": "170826679451140"
													},
													"src": "1669:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1729,
												"nodeType": "ExpressionStatement",
												"src": "1669:29:7"
											},
											{
												"expression": {
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1730,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "1708:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1733,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1711:4:7",
															"memberName": "Cone",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2202,
															"src": "1708:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1734,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1716:3:7",
														"memberName": "Eta",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2186,
														"src": "1708:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "343330373137393534303039313134",
														"id": 1735,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1722:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_430717954009114_by_1",
															"typeString": "int_const 430717954009114"
														},
														"value": "430717954009114"
													},
													"src": "1708:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1737,
												"nodeType": "ExpressionStatement",
												"src": "1708:29:7"
											},
											{
												"expression": {
													"id": 1744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1738,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "1747:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1741,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1750:4:7",
															"memberName": "Cone",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2202,
															"src": "1747:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1742,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1755:5:7",
														"memberName": "Kappa",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2188,
														"src": "1747:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "343932303938313032363331383634",
														"id": 1743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1763:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_492098102631864_by_1",
															"typeString": "int_const 492098102631864"
														},
														"value": "492098102631864"
													},
													"src": "1747:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1745,
												"nodeType": "ExpressionStatement",
												"src": "1747:31:7"
											},
											{
												"expression": {
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1746,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "1788:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1749,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1791:4:7",
															"memberName": "Cone",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2202,
															"src": "1788:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1750,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1796:5:7",
														"memberName": "Alpha",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2190,
														"src": "1788:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313434323132343737313032383239",
														"id": 1751,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1804:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_144212477102829_by_1",
															"typeString": "int_const 144212477102829"
														},
														"value": "144212477102829"
													},
													"src": "1788:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1753,
												"nodeType": "ExpressionStatement",
												"src": "1788:31:7"
											},
											{
												"expression": {
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1754,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "1829:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1757,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1832:4:7",
															"memberName": "Cone",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2202,
															"src": "1829:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1758,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1837:2:7",
														"memberName": "Nu",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2192,
														"src": "1829:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1759,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1842:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1829:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1761,
												"nodeType": "ExpressionStatement",
												"src": "1829:14:7"
											},
											{
												"expression": {
													"id": 1766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1762,
															"name": "Mu",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "1854:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Faung_$2225_storage",
																"typeString": "struct Faung storage ref"
															}
														},
														"id": 1764,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1857:3:7",
														"memberName": "Phi",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2204,
														"src": "1854:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1765,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1863:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1854:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1767,
												"nodeType": "ExpressionStatement",
												"src": "1854:10:7"
											},
											{
												"expression": {
													"id": 1772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1768,
															"name": "Mu",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "1874:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Faung_$2225_storage",
																"typeString": "struct Faung storage ref"
															}
														},
														"id": 1770,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1877:3:7",
														"memberName": "Eta",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2206,
														"src": "1874:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "373131383833313938393633343432",
														"id": 1771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1883:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_711883198963442_by_1",
															"typeString": "int_const 711883198963442"
														},
														"value": "711883198963442"
													},
													"src": "1874:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1773,
												"nodeType": "ExpressionStatement",
												"src": "1874:24:7"
											},
											{
												"expression": {
													"id": 1778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1774,
															"name": "Mu",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "1908:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Faung_$2225_storage",
																"typeString": "struct Faung storage ref"
															}
														},
														"id": 1776,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1911:2:7",
														"memberName": "Xi",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2208,
														"src": "1908:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "333134323637363733313736363333",
														"id": 1777,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1916:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_314267673176633_by_1",
															"typeString": "int_const 314267673176633"
														},
														"value": "314267673176633"
													},
													"src": "1908:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1779,
												"nodeType": "ExpressionStatement",
												"src": "1908:23:7"
											},
											{
												"expression": {
													"id": 1784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1780,
															"name": "Mu",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "1941:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Faung_$2225_storage",
																"typeString": "struct Faung storage ref"
															}
														},
														"id": 1782,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1944:5:7",
														"memberName": "Sigma",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2210,
														"src": "1941:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31313837393334383634313336363537",
														"id": 1783,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1952:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1187934864136657_by_1",
															"typeString": "int_const 1187934864136657"
														},
														"value": "1187934864136657"
													},
													"src": "1941:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1785,
												"nodeType": "ExpressionStatement",
												"src": "1941:27:7"
											},
											{
												"expression": {
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1786,
															"name": "Mu",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "1978:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Faung_$2225_storage",
																"typeString": "struct Faung storage ref"
															}
														},
														"id": 1788,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1981:3:7",
														"memberName": "Rho",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2212,
														"src": "1978:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "393836323531313939383332343330",
														"id": 1789,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1987:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_986251199832430_by_1",
															"typeString": "int_const 986251199832430"
														},
														"value": "986251199832430"
													},
													"src": "1978:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1791,
												"nodeType": "ExpressionStatement",
												"src": "1978:24:7"
											},
											{
												"expression": {
													"id": 1796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1792,
															"name": "Mu",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "2012:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Faung_$2225_storage",
																"typeString": "struct Faung storage ref"
															}
														},
														"id": 1794,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2015:7:7",
														"memberName": "Upsilon",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2214,
														"src": "2012:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313530313837353935353939323830",
														"id": 1795,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2025:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_150187595599280_by_1",
															"typeString": "int_const 150187595599280"
														},
														"value": "150187595599280"
													},
													"src": "2012:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1797,
												"nodeType": "ExpressionStatement",
												"src": "2012:28:7"
											},
											{
												"expression": {
													"id": 1802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1798,
															"name": "Mu",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "2050:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Faung_$2225_storage",
																"typeString": "struct Faung storage ref"
															}
														},
														"id": 1800,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2053:3:7",
														"memberName": "Ohm",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2216,
														"src": "2050:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3435373335363236383734323934",
														"id": 1801,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2059:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_45735626874294_by_1",
															"typeString": "int_const 45735626874294"
														},
														"value": "45735626874294"
													},
													"src": "2050:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1803,
												"nodeType": "ExpressionStatement",
												"src": "2050:23:7"
											},
											{
												"expression": {
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1804,
															"name": "Mu",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "2083:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Faung_$2225_storage",
																"typeString": "struct Faung storage ref"
															}
														},
														"id": 1806,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2086:2:7",
														"memberName": "Pi",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2218,
														"src": "2083:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313434323132343737313032383239",
														"id": 1807,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2091:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_144212477102829_by_1",
															"typeString": "int_const 144212477102829"
														},
														"value": "144212477102829"
													},
													"src": "2083:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1809,
												"nodeType": "ExpressionStatement",
												"src": "2083:23:7"
											},
											{
												"expression": {
													"id": 1814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1810,
															"name": "Mu",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "2116:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Faung_$2225_storage",
																"typeString": "struct Faung storage ref"
															}
														},
														"id": 1812,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2119:5:7",
														"memberName": "Omega",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2222,
														"src": "2116:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "343932303938313032363331383634",
														"id": 1813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2127:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_492098102631864_by_1",
															"typeString": "int_const 492098102631864"
														},
														"value": "492098102631864"
													},
													"src": "2116:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1815,
												"nodeType": "ExpressionStatement",
												"src": "2116:26:7"
											},
											{
												"expression": {
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1816,
															"name": "Mu",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "2152:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Faung_$2225_storage",
																"typeString": "struct Faung storage ref"
															}
														},
														"id": 1818,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2155:7:7",
														"memberName": "Omicron",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2220,
														"src": "2152:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "323130363034383434333137383237",
														"id": 1819,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2165:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_210604844317827_by_1",
															"typeString": "int_const 210604844317827"
														},
														"value": "210604844317827"
													},
													"src": "2152:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1821,
												"nodeType": "ExpressionStatement",
												"src": "2152:28:7"
											},
											{
												"expression": {
													"id": 1826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1822,
															"name": "Mu",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "2190:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Faung_$2225_storage",
																"typeString": "struct Faung storage ref"
															}
														},
														"id": 1824,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2193:3:7",
														"memberName": "Chi",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2224,
														"src": "2190:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1825,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2199:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2190:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1827,
												"nodeType": "ExpressionStatement",
												"src": "2190:10:7"
											}
										]
									},
									"id": 1829,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "564d20524e47",
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "unicodeString",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "394:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_43ceb710d027c9b3e315d67e1eab69bcf85b41546df6c09d42ea115376f46ceb",
														"typeString": "literal_string \"VM RNG\""
													},
													"value": "VM RNG"
												},
												{
													"hexValue": "564d524e47",
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "unicodeString",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "411:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ceb3dd512ea32776f397d3671fc7d5e3308c8f205ae880f1bc28fd8c8967560e",
														"typeString": "literal_string \"VMRNG\""
													},
													"value": "VMRNG"
												}
											],
											"id": 1472,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1469,
												"name": "ERC20",
												"nameLocations": [
													"388:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "388:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "388:38:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "385:2:7"
									},
									"returnParameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "427:0:7"
									},
									"scope": 2154,
									"src": "374:1833:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1837,
										"nodeType": "Block",
										"src": "2263:26:7",
										"statements": [
											{
												"expression": {
													"id": 1835,
													"name": "Mu",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1467,
													"src": "2280:2:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Faung_$2225_storage",
														"typeString": "struct Faung storage ref"
													}
												},
												"functionReturnParameters": 1834,
												"id": 1836,
												"nodeType": "Return",
												"src": "2273:9:7"
											}
										]
									},
									"functionSelector": "1686f265",
									"id": 1838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "View",
									"nameLocation": "2222:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2226:2:7"
									},
									"returnParameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1838,
												"src": "2249:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Faung_$2225_memory_ptr",
													"typeString": "struct Faung"
												},
												"typeName": {
													"id": 1832,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1831,
														"name": "Faung",
														"nameLocations": [
															"2249:5:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2225,
														"src": "2249:5:7"
													},
													"referencedDeclaration": 2225,
													"src": "2249:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Faung_$2225_storage_ptr",
														"typeString": "struct Faung"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2248:14:7"
									},
									"scope": 2154,
									"src": "2213:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1863,
										"nodeType": "Block",
										"src": "2366:96:7",
										"statements": [
											{
												"expression": {
													"id": 1858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1848,
															"name": "Rod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1841,
															"src": "2376:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage_ptr",
																"typeString": "struct Fa storage pointer"
															}
														},
														"id": 1850,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2380:5:7",
														"memberName": "Alpha",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2190,
														"src": "2376:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1852,
																"name": "Sigma",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1843,
																"src": "2397:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															{
																"expression": {
																	"id": 1853,
																	"name": "Rod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1841,
																	"src": "2404:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Fa_$2193_storage_ptr",
																		"typeString": "struct Fa storage pointer"
																	}
																},
																"id": 1854,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2408:7:7",
																"memberName": "Element",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2172,
																"src": "2404:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															{
																"expression": {
																	"id": 1855,
																	"name": "Rod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1841,
																	"src": "2417:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Fa_$2193_storage_ptr",
																		"typeString": "struct Fa storage pointer"
																	}
																},
																"id": 1856,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2421:7:7",
																"memberName": "Channel",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2164,
																"src": "2417:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															],
															"id": 1851,
															"name": "modExp64",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2140,
															"src": "2388:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_uint64_$_t_uint64_$returns$_t_uint64_$",
																"typeString": "function (uint64,uint64,uint64) returns (uint64)"
															}
														},
														"id": 1857,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2388:41:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "2376:53:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1859,
												"nodeType": "ExpressionStatement",
												"src": "2376:53:7"
											},
											{
												"expression": {
													"expression": {
														"id": 1860,
														"name": "Rod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1841,
														"src": "2446:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Fa_$2193_storage_ptr",
															"typeString": "struct Fa storage pointer"
														}
													},
													"id": 1861,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2450:5:7",
													"memberName": "Alpha",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2190,
													"src": "2446:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 1847,
												"id": 1862,
												"nodeType": "Return",
												"src": "2439:16:7"
											}
										]
									},
									"id": 1864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Torque",
									"nameLocation": "2304:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "Rod",
												"nameLocation": "2322:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "2311:14:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Fa_$2193_storage_ptr",
													"typeString": "struct Fa"
												},
												"typeName": {
													"id": 1840,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1839,
														"name": "Fa",
														"nameLocations": [
															"2311:2:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2193,
														"src": "2311:2:7"
													},
													"referencedDeclaration": 2193,
													"src": "2311:2:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Fa_$2193_storage_ptr",
														"typeString": "struct Fa"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "Sigma",
												"nameLocation": "2334:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "2327:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1842,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2327:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2310:30:7"
									},
									"returnParameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "2358:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1845,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2358:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2357:8:7"
									},
									"scope": 2154,
									"src": "2295:167:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1879,
										"nodeType": "Block",
										"src": "2542:44:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1875,
															"name": "Rod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1867,
															"src": "2566:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage_ptr",
																"typeString": "struct Fa storage pointer"
															}
														},
														{
															"id": 1876,
															"name": "Upsilon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1869,
															"src": "2571:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Fa_$2193_storage_ptr",
																"typeString": "struct Fa storage pointer"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 1874,
														"name": "Torque",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "2559:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Fa_$2193_storage_ptr_$_t_uint64_$returns$_t_uint64_$",
															"typeString": "function (struct Fa storage pointer,uint64) returns (uint64)"
														}
													},
													"id": 1877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2559:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 1873,
												"id": 1878,
												"nodeType": "Return",
												"src": "2552:27:7"
											}
										]
									},
									"id": 1880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Amplify",
									"nameLocation": "2477:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "Rod",
												"nameLocation": "2496:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "2485:14:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Fa_$2193_storage_ptr",
													"typeString": "struct Fa"
												},
												"typeName": {
													"id": 1866,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1865,
														"name": "Fa",
														"nameLocations": [
															"2485:2:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2193,
														"src": "2485:2:7"
													},
													"referencedDeclaration": 2193,
													"src": "2485:2:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Fa_$2193_storage_ptr",
														"typeString": "struct Fa"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "Upsilon",
												"nameLocation": "2508:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "2501:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1868,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2501:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2484:32:7"
									},
									"returnParameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "2534:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1871,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2534:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2533:8:7"
									},
									"scope": 2154,
									"src": "2468:118:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1895,
										"nodeType": "Block",
										"src": "2662:40:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1891,
															"name": "Rod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1883,
															"src": "2686:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage_ptr",
																"typeString": "struct Fa storage pointer"
															}
														},
														{
															"id": 1892,
															"name": "Ohm",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1885,
															"src": "2691:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Fa_$2193_storage_ptr",
																"typeString": "struct Fa storage pointer"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 1890,
														"name": "Torque",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "2679:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Fa_$2193_storage_ptr_$_t_uint64_$returns$_t_uint64_$",
															"typeString": "function (struct Fa storage pointer,uint64) returns (uint64)"
														}
													},
													"id": 1893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2679:16:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 1889,
												"id": 1894,
												"nodeType": "Return",
												"src": "2672:23:7"
											}
										]
									},
									"id": 1896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Sustain",
									"nameLocation": "2601:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "Rod",
												"nameLocation": "2620:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "2609:14:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Fa_$2193_storage_ptr",
													"typeString": "struct Fa"
												},
												"typeName": {
													"id": 1882,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1881,
														"name": "Fa",
														"nameLocations": [
															"2609:2:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2193,
														"src": "2609:2:7"
													},
													"referencedDeclaration": 2193,
													"src": "2609:2:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Fa_$2193_storage_ptr",
														"typeString": "struct Fa"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "Ohm",
												"nameLocation": "2632:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "2625:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1884,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2625:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:28:7"
									},
									"returnParameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "2654:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1887,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2654:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2653:8:7"
									},
									"scope": 2154,
									"src": "2592:110:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1940,
										"nodeType": "Block",
										"src": "2773:161:7",
										"statements": [
											{
												"expression": {
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1906,
															"name": "Rod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1899,
															"src": "2783:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage_ptr",
																"typeString": "struct Fa storage pointer"
															}
														},
														"id": 1908,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2787:3:7",
														"memberName": "Eta",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2186,
														"src": "2783:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1910,
																"name": "Pi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1901,
																"src": "2802:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															{
																"expression": {
																	"id": 1911,
																	"name": "Rod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1899,
																	"src": "2806:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Fa_$2193_storage_ptr",
																		"typeString": "struct Fa storage pointer"
																	}
																},
																"id": 1912,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2810:7:7",
																"memberName": "Channel",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2164,
																"src": "2806:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															{
																"id": 1913,
																"name": "Theta",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1903,
																"src": "2819:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															],
															"id": 1909,
															"name": "modExp64",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2140,
															"src": "2793:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_uint64_$_t_uint64_$returns$_t_uint64_$",
																"typeString": "function (uint64,uint64,uint64) returns (uint64)"
															}
														},
														"id": 1914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2793:32:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "2783:42:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1916,
												"nodeType": "ExpressionStatement",
												"src": "2783:42:7"
											},
											{
												"expression": {
													"id": 1926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1917,
															"name": "Rod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1899,
															"src": "2835:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage_ptr",
																"typeString": "struct Fa storage pointer"
															}
														},
														"id": 1919,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2839:5:7",
														"memberName": "Kappa",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2188,
														"src": "2835:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1921,
																"name": "Pi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1901,
																"src": "2856:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															{
																"id": 1922,
																"name": "Theta",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1903,
																"src": "2860:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															{
																"expression": {
																	"id": 1923,
																	"name": "Rod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1899,
																	"src": "2867:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Fa_$2193_storage_ptr",
																		"typeString": "struct Fa storage pointer"
																	}
																},
																"id": 1924,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2871:7:7",
																"memberName": "Channel",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2164,
																"src": "2867:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															],
															"id": 1920,
															"name": "modExp64",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2140,
															"src": "2847:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_uint64_$_t_uint64_$returns$_t_uint64_$",
																"typeString": "function (uint64,uint64,uint64) returns (uint64)"
															}
														},
														"id": 1925,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2847:32:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "2835:44:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1927,
												"nodeType": "ExpressionStatement",
												"src": "2835:44:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																"id": 1932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1929,
																		"name": "Rod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1899,
																		"src": "2896:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Fa_$2193_storage_ptr",
																			"typeString": "struct Fa storage pointer"
																		}
																	},
																	"id": 1930,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2900:3:7",
																	"memberName": "Eta",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2186,
																	"src": "2896:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2907:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2896:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																"id": 1936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1933,
																		"name": "Rod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1899,
																		"src": "2912:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Fa_$2193_storage_ptr",
																			"typeString": "struct Fa storage pointer"
																		}
																	},
																	"id": 1934,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2916:5:7",
																	"memberName": "Kappa",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2188,
																	"src": "2912:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2925:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2912:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2896:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1928,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "2889:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2889:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1939,
												"nodeType": "ExpressionStatement",
												"src": "2889:38:7"
											}
										]
									},
									"id": 1941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "React",
									"nameLocation": "2717:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "Rod",
												"nameLocation": "2734:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "2723:14:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Fa_$2193_storage_ptr",
													"typeString": "struct Fa"
												},
												"typeName": {
													"id": 1898,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1897,
														"name": "Fa",
														"nameLocations": [
															"2723:2:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2193,
														"src": "2723:2:7"
													},
													"referencedDeclaration": 2193,
													"src": "2723:2:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Fa_$2193_storage_ptr",
														"typeString": "struct Fa"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "Pi",
												"nameLocation": "2746:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "2739:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1900,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2739:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "Theta",
												"nameLocation": "2757:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "2750:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1902,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2750:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2722:41:7"
									},
									"returnParameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2773:0:7"
									},
									"scope": 2154,
									"src": "2708:226:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2031,
										"nodeType": "Block",
										"src": "2981:409:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1947,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "2999:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1948,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3002:4:7",
															"memberName": "Cone",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2202,
															"src": "2999:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														{
															"expression": {
																"id": 1949,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "3008:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1950,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3011:7:7",
															"memberName": "Upsilon",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2214,
															"src": "3008:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 1946,
														"name": "Amplify",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1880,
														"src": "2991:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Fa_$2193_storage_ptr_$_t_uint64_$returns$_t_uint64_$",
															"typeString": "function (struct Fa storage pointer,uint64) returns (uint64)"
														}
													},
													"id": 1951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2991:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1952,
												"nodeType": "ExpressionStatement",
												"src": "2991:28:7"
											},
											{
												"expression": {
													"id": 1959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1953,
															"name": "Mu",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "3029:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Faung_$2225_storage",
																"typeString": "struct Faung storage ref"
															}
														},
														"id": 1955,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3032:3:7",
														"memberName": "Ohm",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2216,
														"src": "3029:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 1956,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "3038:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1957,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3041:4:7",
															"memberName": "Cone",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2202,
															"src": "3038:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1958,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3046:5:7",
														"memberName": "Alpha",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2190,
														"src": "3038:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "3029:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1960,
												"nodeType": "ExpressionStatement",
												"src": "3029:22:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1962,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "3069:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1963,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3072:4:7",
															"memberName": "Cone",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2202,
															"src": "3069:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														{
															"expression": {
																"id": 1964,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "3078:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1965,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3081:3:7",
															"memberName": "Ohm",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2216,
															"src": "3078:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 1961,
														"name": "Sustain",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1896,
														"src": "3061:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Fa_$2193_storage_ptr_$_t_uint64_$returns$_t_uint64_$",
															"typeString": "function (struct Fa storage pointer,uint64) returns (uint64)"
														}
													},
													"id": 1966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3061:24:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1967,
												"nodeType": "ExpressionStatement",
												"src": "3061:24:7"
											},
											{
												"expression": {
													"id": 1974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1968,
															"name": "Mu",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "3095:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Faung_$2225_storage",
																"typeString": "struct Faung storage ref"
															}
														},
														"id": 1970,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3098:2:7",
														"memberName": "Pi",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2218,
														"src": "3095:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 1971,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "3103:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1972,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3106:4:7",
															"memberName": "Cone",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2202,
															"src": "3103:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1973,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3111:5:7",
														"memberName": "Alpha",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2190,
														"src": "3103:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "3095:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1975,
												"nodeType": "ExpressionStatement",
												"src": "3095:21:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1977,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "3132:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1978,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3135:4:7",
															"memberName": "Cone",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2202,
															"src": "3132:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														{
															"expression": {
																"id": 1979,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "3141:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1980,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3144:2:7",
															"memberName": "Pi",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2218,
															"src": "3141:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1981,
																	"name": "Mu",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1467,
																	"src": "3148:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Faung_$2225_storage",
																		"typeString": "struct Faung storage ref"
																	}
																},
																"id": 1982,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3151:4:7",
																"memberName": "Cone",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2202,
																"src": "3148:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Fa_$2193_storage",
																	"typeString": "struct Fa storage ref"
																}
															},
															"id": 1983,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3156:6:7",
															"memberName": "Dynamo",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2174,
															"src": "3148:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 1976,
														"name": "React",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1941,
														"src": "3126:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Fa_$2193_storage_ptr_$_t_uint64_$_t_uint64_$returns$__$",
															"typeString": "function (struct Fa storage pointer,uint64,uint64)"
														}
													},
													"id": 1984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3126:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1985,
												"nodeType": "ExpressionStatement",
												"src": "3126:37:7"
											},
											{
												"expression": {
													"id": 1992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1986,
															"name": "Mu",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "3173:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Faung_$2225_storage",
																"typeString": "struct Faung storage ref"
															}
														},
														"id": 1988,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3176:7:7",
														"memberName": "Omicron",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2220,
														"src": "3173:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 1989,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "3186:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1990,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3189:4:7",
															"memberName": "Cone",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2202,
															"src": "3186:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														"id": 1991,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3194:5:7",
														"memberName": "Kappa",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2188,
														"src": "3186:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "3173:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1993,
												"nodeType": "ExpressionStatement",
												"src": "3173:26:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1995,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "3215:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1996,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3218:3:7",
															"memberName": "Rod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2199,
															"src": "3215:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															}
														},
														{
															"expression": {
																"id": 1997,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "3223:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 1998,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3226:2:7",
															"memberName": "Pi",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2218,
															"src": "3223:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1999,
																	"name": "Mu",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1467,
																	"src": "3230:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Faung_$2225_storage",
																		"typeString": "struct Faung storage ref"
																	}
																},
																"id": 2000,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3233:3:7",
																"memberName": "Rod",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2199,
																"src": "3230:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Fa_$2193_storage",
																	"typeString": "struct Fa storage ref"
																}
															},
															"id": 2001,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3237:6:7",
															"memberName": "Dynamo",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2174,
															"src": "3230:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Fa_$2193_storage",
																"typeString": "struct Fa storage ref"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 1994,
														"name": "React",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1941,
														"src": "3209:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Fa_$2193_storage_ptr_$_t_uint64_$_t_uint64_$returns$__$",
															"typeString": "function (struct Fa storage pointer,uint64,uint64)"
														}
													},
													"id": 2002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3209:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2003,
												"nodeType": "ExpressionStatement",
												"src": "3209:35:7"
											},
											{
												"expression": {
													"id": 2013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2004,
															"name": "Mu",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "3254:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Faung_$2225_storage",
																"typeString": "struct Faung storage ref"
															}
														},
														"id": 2006,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3257:5:7",
														"memberName": "Omega",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2222,
														"src": "3254:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 2012,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2007,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "3265:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 2008,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3268:5:7",
															"memberName": "Omega",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2222,
															"src": "3265:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "^",
														"rightExpression": {
															"expression": {
																"expression": {
																	"id": 2009,
																	"name": "Mu",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1467,
																	"src": "3276:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Faung_$2225_storage",
																		"typeString": "struct Faung storage ref"
																	}
																},
																"id": 2010,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3279:3:7",
																"memberName": "Rod",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2199,
																"src": "3276:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Fa_$2193_storage",
																	"typeString": "struct Fa storage ref"
																}
															},
															"id": 2011,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3283:5:7",
															"memberName": "Kappa",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2188,
															"src": "3276:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "3265:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "3254:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 2014,
												"nodeType": "ExpressionStatement",
												"src": "3254:34:7"
											},
											{
												"expression": {
													"id": 2026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2015,
															"name": "Mu",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "3307:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Faung_$2225_storage",
																"typeString": "struct Faung storage ref"
															}
														},
														"id": 2017,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3310:7:7",
														"memberName": "Upsilon",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2214,
														"src": "3307:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 2025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2018,
																	"name": "Mu",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1467,
																	"src": "3320:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Faung_$2225_storage",
																		"typeString": "struct Faung storage ref"
																	}
																},
																"id": 2019,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3323:7:7",
																"memberName": "Upsilon",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2214,
																"src": "3320:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"expression": {
																	"id": 2020,
																	"name": "Mu",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1467,
																	"src": "3333:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Faung_$2225_storage",
																		"typeString": "struct Faung storage ref"
																	}
																},
																"id": 2021,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3336:3:7",
																"memberName": "Ohm",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2216,
																"src": "3333:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "3320:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "^",
														"rightExpression": {
															"expression": {
																"id": 2023,
																"name": "Mu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "3342:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Faung_$2225_storage",
																	"typeString": "struct Faung storage ref"
																}
															},
															"id": 2024,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3345:2:7",
															"memberName": "Pi",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2218,
															"src": "3342:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "3320:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "3307:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 2027,
												"nodeType": "ExpressionStatement",
												"src": "3307:40:7"
											},
											{
												"expression": {
													"expression": {
														"id": 2028,
														"name": "Mu",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1467,
														"src": "3373:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Faung_$2225_storage",
															"typeString": "struct Faung storage ref"
														}
													},
													"id": 2029,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3376:7:7",
													"memberName": "Upsilon",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2214,
													"src": "3373:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 1945,
												"id": 2030,
												"nodeType": "Return",
												"src": "3366:17:7"
											}
										]
									},
									"functionSelector": "604a6fa9",
									"id": 2032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Random",
									"nameLocation": "2949:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2955:2:7"
									},
									"returnParameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "2973:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1943,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2973:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2972:8:7"
									},
									"scope": 2154,
									"src": "2940:450:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2100,
										"nodeType": "Block",
										"src": "3466:331:7",
										"statements": [
											{
												"expression": {
													"id": 2043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2041,
														"name": "hash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2039,
														"src": "3484:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2042,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3491:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3484:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2044,
												"nodeType": "ExpressionStatement",
												"src": "3484:8:7"
											},
											{
												"assignments": [
													2046
												],
												"declarations": [
													{
														"constant": false,
														"id": 2046,
														"mutability": "mutable",
														"name": "_a",
														"nameLocation": "3510:2:7",
														"nodeType": "VariableDeclaration",
														"scope": 2100,
														"src": "3502:10:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 2045,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "3502:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2051,
												"initialValue": {
													"arguments": [
														{
															"id": 2049,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2034,
															"src": "3523:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2048,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3515:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 2047,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "3515:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 2050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3515:10:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3502:23:7"
											},
											{
												"assignments": [
													2053
												],
												"declarations": [
													{
														"constant": false,
														"id": 2053,
														"mutability": "mutable",
														"name": "_b",
														"nameLocation": "3543:2:7",
														"nodeType": "VariableDeclaration",
														"scope": 2100,
														"src": "3535:10:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 2052,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "3535:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2060,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2056,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2036,
																"src": "3556:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2055,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3548:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint160_$",
																"typeString": "type(uint160)"
															},
															"typeName": {
																"id": 2054,
																"name": "uint160",
																"nodeType": "ElementaryTypeName",
																"src": "3548:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 2057,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3548:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3135",
														"id": 2058,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3561:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "3548:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3535:28:7"
											},
											{
												"id": 2081,
												"nodeType": "UncheckedBlock",
												"src": "3573:139:7",
												"statements": [
													{
														"body": {
															"id": 2079,
															"nodeType": "Block",
															"src": "3614:88:7",
															"statements": [
																{
																	"expression": {
																		"id": 2071,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2064,
																			"name": "hash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2039,
																			"src": "3632:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 2070,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						},
																						"id": 2067,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2065,
																							"name": "_a",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2046,
																							"src": "3640:2:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint160",
																								"typeString": "uint160"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "**",
																						"rightExpression": {
																							"id": 2066,
																							"name": "_b",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2053,
																							"src": "3644:2:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint160",
																								"typeString": "uint160"
																							}
																						},
																						"src": "3640:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					}
																				],
																				"id": 2068,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3639:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "%",
																			"rightExpression": {
																				"id": 2069,
																				"name": "MotzkinPrime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1464,
																				"src": "3648:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint64",
																					"typeString": "uint64"
																				}
																			},
																			"src": "3639:21:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"src": "3632:28:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2072,
																	"nodeType": "ExpressionStatement",
																	"src": "3632:28:7"
																},
																{
																	"expression": {
																		"id": 2077,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2073,
																			"name": "_b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2053,
																			"src": "3678:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 2076,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2074,
																				"name": "_b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2053,
																				"src": "3683:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2075,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3686:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "3683:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"src": "3678:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	"id": 2078,
																	"nodeType": "ExpressionStatement",
																	"src": "3678:9:7"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2061,
																"name": "hash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2039,
																"src": "3603:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2062,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3611:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3603:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2080,
														"nodeType": "WhileStatement",
														"src": "3597:105:7"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2087,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2034,
																			"src": "3751:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2086,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3743:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2085,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "3743:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3743:10:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3735:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2083,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3735:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3735:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2094,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2036,
																			"src": "3772:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3764:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2092,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "3764:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3764:10:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2091,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3756:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2090,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3756:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3756:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2097,
															"name": "MotzkinPrime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "3777:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 2082,
														"name": "modExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2153,
														"src": "3728:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) returns (uint256)"
														}
													},
													"id": 2098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3728:62:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2040,
												"id": 2099,
												"nodeType": "Return",
												"src": "3721:69:7"
											}
										]
									},
									"functionSelector": "fa6bcfec",
									"id": 2101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hashWith",
									"nameLocation": "3405:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3422:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "3414:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3433:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "3425:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3425:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3413:22:7"
									},
									"returnParameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3460:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "3452:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:14:7"
									},
									"scope": 2154,
									"src": "3396:401:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2139,
										"nodeType": "Block",
										"src": "3884:164:7",
										"statements": [
											{
												"assignments": [
													2113
												],
												"declarations": [
													{
														"constant": false,
														"id": 2113,
														"mutability": "mutable",
														"name": "B",
														"nameLocation": "3902:1:7",
														"nodeType": "VariableDeclaration",
														"scope": 2139,
														"src": "3894:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2112,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3894:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2115,
												"initialValue": {
													"id": 2114,
													"name": "_b",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2103,
													"src": "3906:2:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3894:14:7"
											},
											{
												"assignments": [
													2117
												],
												"declarations": [
													{
														"constant": false,
														"id": 2117,
														"mutability": "mutable",
														"name": "E",
														"nameLocation": "3926:1:7",
														"nodeType": "VariableDeclaration",
														"scope": 2139,
														"src": "3918:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2116,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3918:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2119,
												"initialValue": {
													"id": 2118,
													"name": "_e",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2105,
													"src": "3930:2:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3918:14:7"
											},
											{
												"assignments": [
													2121
												],
												"declarations": [
													{
														"constant": false,
														"id": 2121,
														"mutability": "mutable",
														"name": "M",
														"nameLocation": "3950:1:7",
														"nodeType": "VariableDeclaration",
														"scope": 2139,
														"src": "3942:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2120,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3942:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2123,
												"initialValue": {
													"id": 2122,
													"name": "_m",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2107,
													"src": "3954:2:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3942:14:7"
											},
											{
												"assignments": [
													2125
												],
												"declarations": [
													{
														"constant": false,
														"id": 2125,
														"mutability": "mutable",
														"name": "R",
														"nameLocation": "3973:1:7",
														"nodeType": "VariableDeclaration",
														"scope": 2139,
														"src": "3966:8:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 2124,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "3966:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2136,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2129,
																		"name": "B",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2113,
																		"src": "3991:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2130,
																		"name": "E",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2117,
																		"src": "3994:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2131,
																		"name": "M",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2121,
																		"src": "3997:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2128,
																	"name": "modExp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2153,
																	"src": "3984:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) returns (uint256)"
																	}
																},
																"id": 2132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3984:15:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"hexValue": "3138343436373434303733373039353531363135",
																"id": 2133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4002:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18446744073709551615_by_1",
																	"typeString": "int_const 18446744073709551615"
																},
																"value": "18446744073709551615"
															},
															"src": "3984:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3977:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 2126,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "3977:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 2135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3977:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3966:57:7"
											},
											{
												"expression": {
													"id": 2137,
													"name": "R",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2125,
													"src": "4040:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 2111,
												"id": 2138,
												"nodeType": "Return",
												"src": "4033:8:7"
											}
										]
									},
									"functionSelector": "53df6e35",
									"id": 2140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp64",
									"nameLocation": "3812:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "_b",
												"nameLocation": "3828:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2140,
												"src": "3821:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2102,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3821:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "_e",
												"nameLocation": "3839:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2140,
												"src": "3832:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2104,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3832:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "_m",
												"nameLocation": "3850:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2140,
												"src": "3843:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2106,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3843:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3820:33:7"
									},
									"returnParameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3876:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2140,
												"src": "3869:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2109,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3869:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3868:15:7"
									},
									"scope": 2154,
									"src": "3803:245:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2152,
										"nodeType": "Block",
										"src": "4138:788:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4157:763:7",
													"nodeType": "YulBlock",
													"src": "4157:763:7",
													"statements": [
														{
															"nativeSrc": "4206:26:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4206:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4227:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4227:4:7",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4221:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4221:5:7"
																},
																"nativeSrc": "4221:11:7",
																"nodeType": "YulFunctionCall",
																"src": "4221:11:7"
															},
															"variables": [
																{
																	"name": "pointer",
																	"nativeSrc": "4210:7:7",
																	"nodeType": "YulTypedName",
																	"src": "4210:7:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pointer",
																		"nativeSrc": "4330:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "4330:7:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4339:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4339:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4323:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4323:6:7"
																},
																"nativeSrc": "4323:21:7",
																"nodeType": "YulFunctionCall",
																"src": "4323:21:7"
															},
															"nativeSrc": "4323:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "4323:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pointer",
																				"nativeSrc": "4368:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4368:7:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4377:4:7",
																				"nodeType": "YulLiteral",
																				"src": "4377:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4364:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4364:3:7"
																		},
																		"nativeSrc": "4364:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4364:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4384:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4384:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4357:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4357:6:7"
																},
																"nativeSrc": "4357:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4357:32:7"
															},
															"nativeSrc": "4357:32:7",
															"nodeType": "YulExpressionStatement",
															"src": "4357:32:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pointer",
																				"nativeSrc": "4413:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4413:7:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4422:4:7",
																				"nodeType": "YulLiteral",
																				"src": "4422:4:7",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4409:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4409:3:7"
																		},
																		"nativeSrc": "4409:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4409:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4429:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4429:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4402:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4402:6:7"
																},
																"nativeSrc": "4402:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4402:32:7"
															},
															"nativeSrc": "4402:32:7",
															"nodeType": "YulExpressionStatement",
															"src": "4402:32:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pointer",
																				"nativeSrc": "4518:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4518:7:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4527:4:7",
																				"nodeType": "YulLiteral",
																				"src": "4527:4:7",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4514:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4514:3:7"
																		},
																		"nativeSrc": "4514:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4514:18:7"
																	},
																	{
																		"name": "_b",
																		"nativeSrc": "4534:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "4534:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4507:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4507:6:7"
																},
																"nativeSrc": "4507:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4507:30:7"
															},
															"nativeSrc": "4507:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "4507:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pointer",
																				"nativeSrc": "4561:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4561:7:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4570:4:7",
																				"nodeType": "YulLiteral",
																				"src": "4570:4:7",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4557:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4557:3:7"
																		},
																		"nativeSrc": "4557:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4557:18:7"
																	},
																	{
																		"name": "_e",
																		"nativeSrc": "4577:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "4577:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4550:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4550:6:7"
																},
																"nativeSrc": "4550:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4550:30:7"
															},
															"nativeSrc": "4550:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "4550:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pointer",
																				"nativeSrc": "4604:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4604:7:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4613:4:7",
																				"nodeType": "YulLiteral",
																				"src": "4613:4:7",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4600:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4600:3:7"
																		},
																		"nativeSrc": "4600:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4600:18:7"
																	},
																	{
																		"name": "_m",
																		"nativeSrc": "4620:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "4620:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4593:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4593:6:7"
																},
																"nativeSrc": "4593:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4593:30:7"
															},
															"nativeSrc": "4593:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "4593:30:7"
														},
														{
															"nativeSrc": "4669:24:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4669:24:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4688:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4688:4:7",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4682:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4682:5:7"
																},
																"nativeSrc": "4682:11:7",
																"nodeType": "YulFunctionCall",
																"src": "4682:11:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4673:5:7",
																	"nodeType": "YulTypedName",
																	"src": "4673:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4830:44:7",
																"nodeType": "YulBlock",
																"src": "4830:44:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4855:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4855:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4858:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4858:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4848:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4848:6:7"
																			},
																			"nativeSrc": "4848:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4848:12:7"
																		},
																		"nativeSrc": "4848:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4848:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4788:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4788:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4784:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4784:3:7"
																				},
																				"nativeSrc": "4784:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4784:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4792:4:7",
																				"nodeType": "YulLiteral",
																				"src": "4792:4:7",
																				"type": "",
																				"value": "0x05"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4798:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4798:1:7",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "pointer",
																				"nativeSrc": "4801:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4801:7:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4810:4:7",
																				"nodeType": "YulLiteral",
																				"src": "4810:4:7",
																				"type": "",
																				"value": "0xc0"
																			},
																			{
																				"name": "value",
																				"nativeSrc": "4816:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4816:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4823:4:7",
																				"nodeType": "YulLiteral",
																				"src": "4823:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "call",
																			"nativeSrc": "4779:4:7",
																			"nodeType": "YulIdentifier",
																			"src": "4779:4:7"
																		},
																		"nativeSrc": "4779:49:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4779:49:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4772:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4772:6:7"
																},
																"nativeSrc": "4772:57:7",
																"nodeType": "YulFunctionCall",
																"src": "4772:57:7"
															},
															"nativeSrc": "4769:105:7",
															"nodeType": "YulIf",
															"src": "4769:105:7"
														},
														{
															"nativeSrc": "4888:22:7",
															"nodeType": "YulAssignment",
															"src": "4888:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4904:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4904:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4898:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4898:5:7"
																},
																"nativeSrc": "4898:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4898:12:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4888:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4888:6:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2142,
														"isOffset": false,
														"isSlot": false,
														"src": "4534:2:7",
														"valueSize": 1
													},
													{
														"declaration": 2144,
														"isOffset": false,
														"isSlot": false,
														"src": "4577:2:7",
														"valueSize": 1
													},
													{
														"declaration": 2146,
														"isOffset": false,
														"isSlot": false,
														"src": "4620:2:7",
														"valueSize": 1
													},
													{
														"declaration": 2149,
														"isOffset": false,
														"isSlot": false,
														"src": "4888:6:7",
														"valueSize": 1
													}
												],
												"id": 2151,
												"nodeType": "InlineAssembly",
												"src": "4148:772:7"
											}
										]
									},
									"functionSelector": "3148f14f",
									"id": 2153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "4063:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "_b",
												"nameLocation": "4078:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "4070:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4070:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "_e",
												"nameLocation": "4090:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "4082:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4082:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2146,
												"mutability": "mutable",
												"name": "_m",
												"nameLocation": "4102:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "4094:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4094:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:36:7"
									},
									"returnParameters": {
										"id": 2150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2149,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4130:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "4122:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4122:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4121:16:7"
									},
									"scope": 2154,
									"src": "4054:872:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2155,
							"src": "246:4682:7",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "35:4893:7"
				},
				"id": 7
			},
			"solidity/old/fa.sol": {
				"ast": {
					"absolutePath": "solidity/old/fa.sol",
					"exportedSymbols": {
						"Fa": [
							2193
						]
					},
					"id": 2194,
					"license": "Sharia",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2156,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:8"
						},
						{
							"canonicalName": "Fa",
							"id": 2193,
							"members": [
								{
									"constant": false,
									"id": 2158,
									"mutability": "mutable",
									"name": "Base",
									"nameLocation": "88:4:8",
									"nodeType": "VariableDeclaration",
									"scope": 2193,
									"src": "81:11:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2157,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "81:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2160,
									"mutability": "mutable",
									"name": "Secret",
									"nameLocation": "109:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 2193,
									"src": "102:13:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2159,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "102:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2162,
									"mutability": "mutable",
									"name": "Signal",
									"nameLocation": "132:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 2193,
									"src": "125:13:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2161,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "125:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2164,
									"mutability": "mutable",
									"name": "Channel",
									"nameLocation": "155:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 2193,
									"src": "148:14:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2163,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "148:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2166,
									"mutability": "mutable",
									"name": "Pole",
									"nameLocation": "179:4:8",
									"nodeType": "VariableDeclaration",
									"scope": 2193,
									"src": "172:11:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2165,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "172:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2168,
									"mutability": "mutable",
									"name": "Identity",
									"nameLocation": "200:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 2193,
									"src": "193:15:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2167,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "193:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2170,
									"mutability": "mutable",
									"name": "Foundation",
									"nameLocation": "225:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 2193,
									"src": "218:17:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2169,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "218:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2172,
									"mutability": "mutable",
									"name": "Element",
									"nameLocation": "252:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 2193,
									"src": "245:14:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2171,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "245:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2174,
									"mutability": "mutable",
									"name": "Dynamo",
									"nameLocation": "276:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 2193,
									"src": "269:13:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2173,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "269:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2176,
									"mutability": "mutable",
									"name": "Manifold",
									"nameLocation": "299:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 2193,
									"src": "292:15:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2175,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "292:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2178,
									"mutability": "mutable",
									"name": "Ring",
									"nameLocation": "324:4:8",
									"nodeType": "VariableDeclaration",
									"scope": 2193,
									"src": "317:11:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2177,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "317:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2180,
									"mutability": "mutable",
									"name": "Barn",
									"nameLocation": "345:4:8",
									"nodeType": "VariableDeclaration",
									"scope": 2193,
									"src": "338:11:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2179,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "338:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2182,
									"mutability": "mutable",
									"name": "Coordinate",
									"nameLocation": "366:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 2193,
									"src": "359:17:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2181,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "359:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2184,
									"mutability": "mutable",
									"name": "Tau",
									"nameLocation": "394:3:8",
									"nodeType": "VariableDeclaration",
									"scope": 2193,
									"src": "387:10:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2183,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "387:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2186,
									"mutability": "mutable",
									"name": "Eta",
									"nameLocation": "414:3:8",
									"nodeType": "VariableDeclaration",
									"scope": 2193,
									"src": "407:10:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2185,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "407:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2188,
									"mutability": "mutable",
									"name": "Kappa",
									"nameLocation": "434:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 2193,
									"src": "427:12:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2187,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "427:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2190,
									"mutability": "mutable",
									"name": "Alpha",
									"nameLocation": "523:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 2193,
									"src": "516:12:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2189,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "516:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2192,
									"mutability": "mutable",
									"name": "Nu",
									"nameLocation": "545:2:8",
									"nodeType": "VariableDeclaration",
									"scope": 2193,
									"src": "539:8:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2191,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "539:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Fa",
							"nameLocation": "68:2:8",
							"nodeType": "StructDefinition",
							"scope": 2194,
							"src": "61:497:8",
							"visibility": "public"
						}
					],
					"src": "35:524:8"
				},
				"id": 8
			},
			"solidity/old/faung.sol": {
				"ast": {
					"absolutePath": "solidity/old/faung.sol",
					"exportedSymbols": {
						"Fa": [
							2193
						],
						"Faung": [
							2225
						]
					},
					"id": 2226,
					"license": "Sharia",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2195,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:9"
						},
						{
							"absolutePath": "solidity/old/fa.sol",
							"file": "./fa.sol",
							"id": 2196,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2226,
							"sourceUnit": 2194,
							"src": "60:18:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"canonicalName": "Faung",
							"id": 2225,
							"members": [
								{
									"constant": false,
									"id": 2199,
									"mutability": "mutable",
									"name": "Rod",
									"nameLocation": "102:3:9",
									"nodeType": "VariableDeclaration",
									"scope": 2225,
									"src": "99:6:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Fa_$2193_storage_ptr",
										"typeString": "struct Fa"
									},
									"typeName": {
										"id": 2198,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2197,
											"name": "Fa",
											"nameLocations": [
												"99:2:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2193,
											"src": "99:2:9"
										},
										"referencedDeclaration": 2193,
										"src": "99:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Fa_$2193_storage_ptr",
											"typeString": "struct Fa"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2202,
									"mutability": "mutable",
									"name": "Cone",
									"nameLocation": "114:4:9",
									"nodeType": "VariableDeclaration",
									"scope": 2225,
									"src": "111:7:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Fa_$2193_storage_ptr",
										"typeString": "struct Fa"
									},
									"typeName": {
										"id": 2201,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2200,
											"name": "Fa",
											"nameLocations": [
												"111:2:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2193,
											"src": "111:2:9"
										},
										"referencedDeclaration": 2193,
										"src": "111:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Fa_$2193_storage_ptr",
											"typeString": "struct Fa"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2204,
									"mutability": "mutable",
									"name": "Phi",
									"nameLocation": "132:3:9",
									"nodeType": "VariableDeclaration",
									"scope": 2225,
									"src": "125:10:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2203,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "125:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2206,
									"mutability": "mutable",
									"name": "Eta",
									"nameLocation": "148:3:9",
									"nodeType": "VariableDeclaration",
									"scope": 2225,
									"src": "141:10:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2205,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "141:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2208,
									"mutability": "mutable",
									"name": "Xi",
									"nameLocation": "164:2:9",
									"nodeType": "VariableDeclaration",
									"scope": 2225,
									"src": "157:9:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2207,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "157:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2210,
									"mutability": "mutable",
									"name": "Sigma",
									"nameLocation": "179:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 2225,
									"src": "172:12:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2209,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "172:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2212,
									"mutability": "mutable",
									"name": "Rho",
									"nameLocation": "197:3:9",
									"nodeType": "VariableDeclaration",
									"scope": 2225,
									"src": "190:10:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2211,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "190:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2214,
									"mutability": "mutable",
									"name": "Upsilon",
									"nameLocation": "213:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 2225,
									"src": "206:14:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2213,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "206:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2216,
									"mutability": "mutable",
									"name": "Ohm",
									"nameLocation": "233:3:9",
									"nodeType": "VariableDeclaration",
									"scope": 2225,
									"src": "226:10:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2215,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "226:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2218,
									"mutability": "mutable",
									"name": "Pi",
									"nameLocation": "249:2:9",
									"nodeType": "VariableDeclaration",
									"scope": 2225,
									"src": "242:9:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2217,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "242:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2220,
									"mutability": "mutable",
									"name": "Omicron",
									"nameLocation": "264:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 2225,
									"src": "257:14:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2219,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "257:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2222,
									"mutability": "mutable",
									"name": "Omega",
									"nameLocation": "284:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 2225,
									"src": "277:12:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2221,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "277:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2224,
									"mutability": "mutable",
									"name": "Chi",
									"nameLocation": "302:3:9",
									"nodeType": "VariableDeclaration",
									"scope": 2225,
									"src": "296:9:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2223,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "296:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Faung",
							"nameLocation": "87:5:9",
							"nodeType": "StructDefinition",
							"scope": 2226,
							"src": "80:228:9",
							"visibility": "public"
						}
					],
					"src": "35:273:9"
				},
				"id": 9
			}
		}
	}
}