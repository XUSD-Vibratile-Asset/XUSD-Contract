{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Claim",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "weiAmount",
						"type": "uint256"
					}
				],
				"name": "DividendWithdrawn",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "weiAmount",
						"type": "uint256"
					}
				],
				"name": "DividendsDistributed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "value",
						"type": "bool"
					}
				],
				"name": "ExcludeFromDividends",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "LP_Token",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_owner",
						"type": "address"
					}
				],
				"name": "accumulativeDividendOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "subtractedValue",
						"type": "uint256"
					}
				],
				"name": "decreaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "distributeLPDividends",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_owner",
						"type": "address"
					}
				],
				"name": "dividendOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "value",
						"type": "bool"
					}
				],
				"name": "excludeFromDividends",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "excludedFromDividends",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "getAccount",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "addedValue",
						"type": "uint256"
					}
				],
				"name": "increaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "lastClaimTimes",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "account",
						"type": "address"
					}
				],
				"name": "processAccount",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "newBalance",
						"type": "uint256"
					}
				],
				"name": "setBalance",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalDividendsDistributed",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalDividendsWithdrawn",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					}
				],
				"name": "trackerForceSend",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					}
				],
				"name": "trackerRescueETH20Tokens",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					}
				],
				"name": "updateLP_Token",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawDividend",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_owner",
						"type": "address"
					}
				],
				"name": "withdrawableDividendOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_owner",
						"type": "address"
					}
				],
				"name": "withdrawnDividendOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"events": {
				"Approval(address,address,uint256)": {
					"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
				},
				"DividendWithdrawn(address,uint256)": {
					"details": "This event MUST emit when an address withdraws their dividend.",
					"params": {
						"to": "The address which withdraws ether from this contract.",
						"weiAmount": "The amount of withdrawn ether in wei."
					}
				},
				"DividendsDistributed(address,uint256)": {
					"details": "This event MUST emit when ether is distributed to token holders.",
					"params": {
						"from": "The address which sends ether to this contract.",
						"weiAmount": "The amount of distributed ether in wei."
					}
				},
				"Transfer(address,address,uint256)": {
					"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
				}
			},
			"kind": "dev",
			"methods": {
				"accumulativeDividendOf(address)": {
					"details": "accumulativeDividendOf(_owner) = withdrawableDividendOf(_owner) + withdrawnDividendOf(_owner) = (magnifiedDividendPerShare * balanceOf(_owner) + magnifiedDividendCorrections[_owner]) / magnitude",
					"params": {
						"_owner": "The address of a token holder."
					},
					"returns": {
						"_0": "The amount of dividend in wei that `_owner` has earned in total."
					}
				},
				"allowance(address,address)": {
					"details": "See {IERC20-allowance}."
				},
				"approve(address,uint256)": {
					"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
				},
				"balanceOf(address)": {
					"details": "See {IERC20-balanceOf}."
				},
				"decimals()": {
					"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
				},
				"decreaseAllowance(address,uint256)": {
					"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
				},
				"dividendOf(address)": {
					"params": {
						"_owner": "The address of a token holder."
					},
					"returns": {
						"_0": "The amount of dividend in wei that `_owner` can withdraw."
					}
				},
				"increaseAllowance(address,uint256)": {
					"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
				},
				"name()": {
					"details": "Returns the name of the token."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"symbol()": {
					"details": "Returns the symbol of the token, usually a shorter version of the name."
				},
				"totalSupply()": {
					"details": "See {IERC20-totalSupply}."
				},
				"transfer(address,uint256)": {
					"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
				},
				"transferFrom(address,address,uint256)": {
					"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"withdrawDividend()": {
					"details": "It emits a `DividendWithdrawn` event if the amount of withdrawn ether is greater than 0."
				},
				"withdrawableDividendOf(address)": {
					"params": {
						"_owner": "The address of a token holder."
					},
					"returns": {
						"_0": "The amount of dividend in wei that `_owner` can withdraw."
					}
				},
				"withdrawnDividendOf(address)": {
					"params": {
						"_owner": "The address of a token holder."
					},
					"returns": {
						"_0": "The amount of dividend in wei that `_owner` has withdrawn."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"accumulativeDividendOf(address)": {
					"notice": "View the amount of dividend in wei that an address has earned in total."
				},
				"dividendOf(address)": {
					"notice": "View the amount of dividend in wei that an address can withdraw."
				},
				"withdrawDividend()": {
					"notice": "Withdraws the ether distributed to the sender."
				},
				"withdrawableDividendOf(address)": {
					"notice": "View the amount of dividend in wei that an address can withdraw."
				},
				"withdrawnDividendOf(address)": {
					"notice": "View the amount of dividend in wei that an address has withdrawn."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"dividend-paying-token-with-buy-sell-fee/contracts/VIRAL.sol": "VIRALDividendTracker"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 100
		},
		"remappings": []
	},
	"sources": {
		"dividend-paying-token-with-buy-sell-fee/contracts/VIRAL.sol": {
			"keccak256": "0x9efc26b59a959dabb3ad07a47e29d9c7ff82646361ec089254b6933fbb25dc1c",
			"license": "MIT",
			"urls": [
				"bzz-raw://1319876ae2e3cdd0de8c71be68ee6d5f1577de19adc2947b86a041024292bfce",
				"dweb:/ipfs/Qmexy4Fbbr2jjBbVycK3FSuDN8BgQSruzUWXXTrXwxw3vR"
			]
		},
		"dividend-paying-token-with-buy-sell-fee/contracts/interfaces/Context.sol": {
			"keccak256": "0x4b5382885bab52e981c9651f02700159c86a448b32bc935bfc7be4324f2f9802",
			"license": "MIT",
			"urls": [
				"bzz-raw://88058c54fd2191ad6dedf1bbb73394d629673fcdb83aaf75881dbcc6337843f3",
				"dweb:/ipfs/QmR5Qr14JySBQ45jBcBbLGjvAhYqrtCroT3hip4XV1Knnv"
			]
		},
		"dividend-paying-token-with-buy-sell-fee/contracts/interfaces/DividendPayingToken.sol": {
			"keccak256": "0x4fbad3f5ca15e25cfddcef2beefccc98a34ae7ff98ebe804dbeac53f5ca1ff5b",
			"license": "MIT",
			"urls": [
				"bzz-raw://3d8edcb8aa89472f4dd7921ddfdcef6712fd02ab4d87f078b1675243612f49db",
				"dweb:/ipfs/QmRnXvUEUFfsv8Jw4WN4PK48HNTt6hRtP568PZsykEUQvi"
			]
		},
		"dividend-paying-token-with-buy-sell-fee/contracts/interfaces/DividendPayingTokenInterface.sol": {
			"keccak256": "0xdf22d65301608ce0ec9085eaa972c4d891625c3c45af5743d5f6a3c90a84dd6a",
			"license": "MIT",
			"urls": [
				"bzz-raw://a229dc06b352355de6ea25c5d2a6e4e8219b7fe0137d77fcf34490e57613bcc2",
				"dweb:/ipfs/QmPHu6JJFyJ8jBbhpdmR6gaX5MxLDnPF8syqxbwgxL9y2K"
			]
		},
		"dividend-paying-token-with-buy-sell-fee/contracts/interfaces/ERC20.sol": {
			"keccak256": "0x1bf73ed65054a63594fd14b491857286337fa89b6e753de2c8ec201e486c1177",
			"license": "MIT",
			"urls": [
				"bzz-raw://165a31d49fff20c09d8b693799dc5b861a32ae38e540b4b00825388eb93ccab3",
				"dweb:/ipfs/QmdH7aLn9oYVqKNmDPsaM1y77V9HiPqvPdWyxrkqN6xWPL"
			]
		},
		"dividend-paying-token-with-buy-sell-fee/contracts/interfaces/IDex.sol": {
			"keccak256": "0xb4735aba5fe22b1d60731a1136e9cd72c30d73bd2299599a93f17956e78fa407",
			"license": "MIT",
			"urls": [
				"bzz-raw://c05c3faa040402dec172f88792a11f5652d3e1c3d19e3c50e57b3595c066841a",
				"dweb:/ipfs/QmQvXcWGNeUQc9y3Tz7n7A7GYD56BULXWJ4ATLgHNGJeW2"
			]
		},
		"dividend-paying-token-with-buy-sell-fee/contracts/interfaces/IERC20.sol": {
			"keccak256": "0xd400b6eacdc1b45ae6b861a335a14dcce441be2815b30821251884de9f5c24d5",
			"license": "MIT",
			"urls": [
				"bzz-raw://bdb7625b50f95689b5cab3ce91e1bb09e5119ec782463202a8574920b68ba40a",
				"dweb:/ipfs/QmbcEzMbhWympzAo8TKdZKdfxWBpBzrkFGBDqfyhy3weCH"
			]
		},
		"dividend-paying-token-with-buy-sell-fee/contracts/interfaces/Ownable.sol": {
			"keccak256": "0x04f02506115df51f69823c1ea5defb2209684bc37f176ab7f7b035394f72e82f",
			"license": "MIT License",
			"urls": [
				"bzz-raw://5b157c58c7be4910a741e24fffdbf2ece5f87301f3abad2bec2beeac5dc0535a",
				"dweb:/ipfs/QmUKpkrBpRthEYGHKiCEhmisvpJbWeN7z5apkKcCYKZHTe"
			]
		},
		"dividend-paying-token-with-buy-sell-fee/contracts/interfaces/SafeMath.sol": {
			"keccak256": "0xa6e23313a20c30de93eb6638573ec6e98ac8643797024fedf601e107e36d716c",
			"license": "MIT",
			"urls": [
				"bzz-raw://41e689c6789f0e142eeede17d9c6788aa6c0a6c72ab104ce96e1087047ac2b05",
				"dweb:/ipfs/Qmbv3HddwKKFBFdFdsfCsUKRYfNMQ7Fvhy91vkVbjrjD7t"
			]
		}
	},
	"version": 1
}